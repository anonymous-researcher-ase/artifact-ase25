[
  {
    "id": 1,
    "code": "```python\ndef read_csv_file(file_path):\n    with open(file_path, mode='r', encoding='utf-8') as file:\n        headers = file.readline().strip().split(',')\n        data = [dict(zip(headers, line.strip().split(','))) for line in file]\n    return data\n```",
    "summary": "Reads a CSV file and returns a list of dictionaries, where each dictionary represents a row with column headers as keys."
  },
  {
    "id": 2,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except IOError:\n        return \"Error reading file.\"\n```",
    "summary": "Counts the number of lines in a specified file, handling file not found and read errors."
  },
  {
    "id": 3,
    "code": "```python\ndef count_words_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(len(line.split()) for line in file)\n```",
    "summary": "Counts and returns the total number of words in a text file specified by the given file path."
  },
  {
    "id": 4,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        print(f\"The file {file_path} does not exist.\")\n        return 0\n```",
    "summary": "Counts and returns the number of lines in a specified file, handling file not found errors gracefully."
  },
  {
    "id": 5,
    "code": "```python\ndef read_csv_to_dict(file_path):\n    with open(file_path, mode='r', encoding='utf-8') as file:\n        lines = file.readlines()\n        keys = lines[0].strip().split(',')\n        data_list = [dict(zip(keys, line.strip().split(','))) for line in lines[1:]]\n    return data_list\n```",
    "summary": "Reads a CSV file and returns a list of dictionaries where each dictionary represents a row with column names as keys."
  },
  {
    "id": 6,
    "code": "```python\ndef count_lines_in_file(file_path):\n    \"\"\"Counts the number of lines in a text file.\"\"\"\n    line_count = 0\n    with open(file_path, 'r') as file:\n        for _ in file:\n            line_count += 1\n    return line_count\n```",
    "summary": "Counts the number of lines in a text file specified by the file path."
  },
  {
    "id": 7,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a given text file."
  },
  {
    "id": 8,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "This function counts and returns the number of lines in a specified file."
  },
  {
    "id": 9,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 10,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except IOError:\n        return \"Error reading file.\"\n```",
    "summary": "This function counts the number of lines in a specified file and handles file not found and read errors."
  },
  {
    "id": 11,
    "code": "```python\ndef count_words_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        text = file.read()\n    words = text.split()\n    return len(words)\n```",
    "summary": "Counts and returns the total number of words in a given text file."
  },
  {
    "id": 12,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a given text file."
  },
  {
    "id": 13,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        print(f\"The file at {file_path} was not found.\")\n        return 0\n    except IOError:\n        print(f\"An error occurred while reading the file at {file_path}.\")\n        return 0\n```",
    "summary": "Counts the number of lines in a given file, handling file not found and IO errors."
  },
  {
    "id": 14,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 15,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except IOError:\n        return \"Error reading file.\"\n```",
    "summary": "Counts the number of lines in a given file, handling file not found and read errors."
  },
  {
    "id": 16,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except IOError:\n        return \"Error reading file.\"\n```",
    "summary": "Counts the number of lines in a specified file, handling file not found and read errors."
  },
  {
    "id": 17,
    "code": "```python\ndef count_lines_in_file(file_path):\n    \"\"\"Counts the number of lines in a given file.\"\"\"\n    line_count = 0\n    try:\n        with open(file_path, 'r') as file:\n            for _ in file:\n                line_count += 1\n    except FileNotFoundError:\n        return f\"Error: The file {file_path} does not exist.\"\n    except IOError:\n        return f\"Error: An I/O error occurred while accessing the file {file_path}.\"\n    return line_count\n```",
    "summary": "Counts the number of lines in a specified file, handling potential file access errors."
  },
  {
    "id": 18,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for line in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except Exception as e:\n        return f\"An error occurred: {e}\"\n```",
    "summary": "Counts the number of lines in a specified file and handles file-related exceptions."
  },
  {
    "id": 19,
    "code": "```python\ndef read_lines_with_prefix(file_path, prefix):\n    with open(file_path, 'r') as file:\n        return [line for line in file if line.startswith(prefix)]\n```",
    "summary": "Reads lines from a file that start with a specified prefix and returns them as a list."
  },
  {
    "id": 20,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            line_count = sum(1 for _ in file)\n        return line_count\n    except FileNotFoundError:\n        return \"File not found.\"\n    except IOError:\n        return \"Error reading file.\"\n```",
    "summary": "Counts the number of lines in a file and handles file not found or read errors."
  },
  {
    "id": 21,
    "code": "def count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for line in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except Exception as e:\n        return f\"An error occurred: {e}\"",
    "summary": "Counts and returns the number of lines in a specified file, handling file not found and other exceptions."
  },
  {
    "id": 22,
    "code": "```python\ndef count_words_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        contents = file.read()\n    words = contents.split()\n    return len(words)\n```",
    "summary": "This function reads a file and returns the total count of words in it."
  },
  {
    "id": 23,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts the number of lines in a specified text file."
  },
  {
    "id": 24,
    "code": "```python\ndef count_lines_in_file(file_path):\n    \"\"\"Counts the number of lines in a text file.\"\"\"\n    with open(file_path, 'r') as file:\n        line_count = sum(1 for _ in file)\n    return line_count\n```",
    "summary": "Counts the number of lines in a text file specified by the given file path."
  },
  {
    "id": 25,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "This function counts and returns the number of lines in a specified text file."
  },
  {
    "id": 26,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 27,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in the specified file."
  },
  {
    "id": 28,
    "code": "```python\ndef read_lines_with_keyword(file_path, keyword):\n    with open(file_path, 'r') as file:\n        return [line.strip() for line in file if keyword in line]\n```",
    "summary": "Reads a file and returns lines containing a specified keyword."
  },
  {
    "id": 29,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 30,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts the number of lines in a given text file."
  },
  {
    "id": 31,
    "code": "```python\ndef count_lines_in_file(file_path):\n    \"\"\"Counts the number of lines in a file.\"\"\"\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts the number of lines in a specified file and returns the count."
  },
  {
    "id": 32,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for line in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 33,
    "code": "def count_words_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        text = file.read()\n    return len(text.split())",
    "summary": "Counts and returns the number of words in a specified text file."
  },
  {
    "id": 34,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except IOError:\n        return \"An error occurred while reading the file.\"\n```",
    "summary": "This function counts the number of lines in a given file, handling file not found and IO errors gracefully."
  },
  {
    "id": 35,
    "code": "```python\ndef count_word_occurrences(file_path, word):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        text = file.read()\n    return text.lower().split().count(word.lower())\n```",
    "summary": "Counts the occurrences of a specified word in a text file, ignoring case differences."
  },
  {
    "id": 36,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for line in file)\n```",
    "summary": "Counts and returns the number of lines in a given text file."
  },
  {
    "id": 37,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except Exception as e:\n        return f\"An error occurred: {e}\"\n```",
    "summary": "Counts the number of lines in a given file, handling file not found and other exceptions."
  },
  {
    "id": 38,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts the number of lines in a specified text file."
  },
  {
    "id": 39,
    "code": "```python\ndef count_word_occurrences(file_path, word):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        text = file.read()\n    return text.lower().split().count(word.lower())\n```",
    "summary": "Counts the occurrences of a specific word in a text file, ignoring case."
  },
  {
    "id": 40,
    "code": "```python\ndef count_words_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        content = file.read()\n    words = content.split()\n    return len(words)\n```",
    "summary": "Counts and returns the number of words in a given text file."
  },
  {
    "id": 41,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts the number of lines in a specified text file."
  },
  {
    "id": 42,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 43,
    "code": "```python\ndef count_words_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        text = file.read()\n    words = text.split()\n    return len(words)\n```",
    "summary": "Counts and returns the number of words in a text file given its file path."
  },
  {
    "id": 44,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 45,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            line_count = sum(1 for _ in file)\n        return line_count\n    except FileNotFoundError:\n        return \"File not found.\"\n```",
    "summary": "Counts and returns the number of lines in a specified file, or an error message if the file is not found."
  },
  {
    "id": 46,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 47,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 48,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for line in file)\n```",
    "summary": "Counts and returns the number of lines in the specified file."
  },
  {
    "id": 49,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts the number of lines in a specified text file."
  },
  {
    "id": 50,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts the number of lines in a specified text file."
  },
  {
    "id": 51,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return 0\n```",
    "summary": "Counts the number of lines in a file, returning 0 if the file is not found."
  },
  {
    "id": 52,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 53,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in the specified file."
  },
  {
    "id": 54,
    "code": "```python\ndef read_csv_file(file_path):\n    with open(file_path, mode='r', encoding='utf-8') as file:\n        headers = file.readline().strip().split(',')\n        data = [dict(zip(headers, line.strip().split(','))) for line in file]\n    return data\n```",
    "summary": "Reads a CSV file and returns a list of dictionaries representing the rows, using the first row as headers."
  },
  {
    "id": 55,
    "code": "```python\ndef count_words_in_file(file_path):\n    with open(file_path, 'r') as file:\n        text = file.read()\n    words = text.split()\n    return len(words)\n```",
    "summary": "This function reads a file and returns the total number of words contained in it."
  },
  {
    "id": 56,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in the given file."
  },
  {
    "id": 57,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for line in file)\n```",
    "summary": "This function counts and returns the number of lines in a specified text file."
  },
  {
    "id": 58,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except Exception as e:\n        return f\"An error occurred: {e}\"\n```",
    "summary": "Counts the number of lines in a file, returning an error message if the file is not found or another exception occurs."
  },
  {
    "id": 59,
    "code": "```python\ndef read_csv_to_dict(file_path):\n    with open(file_path, mode='r', encoding='utf-8') as file:\n        lines = file.readlines()\n        header = lines[0].strip().split(',')\n        data = [dict(zip(header, line.strip().split(','))) for line in lines[1:]]\n    return data\n```",
    "summary": "Reads a CSV file and returns its content as a list of dictionaries, using the header row as keys."
  },
  {
    "id": 60,
    "code": "def count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for line in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except Exception as e:\n        return f\"An error occurred: {e}\"",
    "summary": "Counts the number of lines in a specified file, handling file not found and other exceptions."
  },
  {
    "id": 61,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts the number of lines in a specified file."
  },
  {
    "id": 62,
    "code": "```python\ndef count_words_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        text = file.read()\n    words = text.split()\n    return len(words)\n```",
    "summary": "This function reads a file and returns the number of words it contains."
  },
  {
    "id": 63,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 64,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 65,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 66,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a given file."
  },
  {
    "id": 67,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except IOError:\n        return \"Error reading file.\"\n```",
    "summary": "Counts the number of lines in a specified file, handling file not found and read errors."
  },
  {
    "id": 68,
    "code": "def count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except IOError:\n        return \"Error reading file.\"",
    "summary": "Counts the number of lines in a file and handles file not found and read errors."
  },
  {
    "id": 69,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r', encoding='utf-8') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except IOError:\n        return \"Error reading file.\"\n```",
    "summary": "This function counts the number of lines in a specified file, handling file not found and read errors."
  },
  {
    "id": 70,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for line in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except IOError:\n        return \"An error occurred while reading the file.\"\n```",
    "summary": "Counts and returns the number of lines in a given file, handling file not found and IO errors."
  },
  {
    "id": 71,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for line in file)\n```",
    "summary": "Counts the number of lines in a specified text file and returns the total count."
  },
  {
    "id": 72,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 73,
    "code": "```python\ndef count_words_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        text = file.read()\n    words = text.split()\n    return len(words)\n```",
    "summary": "Counts and returns the number of words in a given text file."
  },
  {
    "id": 74,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for line in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 75,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts the number of lines in a given file specified by the file path."
  },
  {
    "id": 76,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 77,
    "code": "```python\ndef count_words_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        text = file.read()\n    words = text.split()\n    return len(words)\n```",
    "summary": "Counts and returns the number of words in a specified text file."
  },
  {
    "id": 78,
    "code": "```python\ndef count_words_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        text = file.read()\n    words = text.split()\n    return len(words)\n```",
    "summary": "Counts and returns the total number of words in a specified text file."
  },
  {
    "id": 79,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in the specified file."
  },
  {
    "id": 80,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except IOError:\n        return \"An error occurred reading the file.\"\n```",
    "summary": "Counts and returns the number of lines in a specified file, handling file not found and IO errors."
  },
  {
    "id": 81,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a given file."
  },
  {
    "id": 82,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts the number of lines in a given text file."
  },
  {
    "id": 83,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts the number of lines in a specified text file and returns the total."
  },
  {
    "id": 84,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in the specified file."
  },
  {
    "id": 85,
    "code": "```python\ndef count_word_occurrences(file_path, word):\n    with open(file_path, 'r') as file:\n        content = file.read()\n    return content.lower().split().count(word.lower())\n```",
    "summary": "Counts occurrences of a specific word in a text file, ignoring case."
  },
  {
    "id": 86,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "This function counts the number of lines in a specified text file."
  },
  {
    "id": 87,
    "code": "```python\ndef count_words_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        text = file.read()\n        words = text.split()\n        return len(words)\n```",
    "summary": "Counts and returns the number of words in a text file."
  },
  {
    "id": 88,
    "code": "def read_csv_as_dict(filepath):\n    with open(filepath, mode='r', encoding='utf-8') as file:\n        header = file.readline().strip().split(',')\n        return [dict(zip(header, line.strip().split(','))) for line in file]",
    "summary": "Reads a CSV file and returns a list of dictionaries where each dictionary represents a row with column headers as keys."
  },
  {
    "id": 89,
    "code": "```python\ndef count_words_in_file(file_path):\n    try:\n        with open(file_path, 'r', encoding='utf-8') as file:\n            text = file.read()\n        words = text.split()\n        return len(words)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except Exception as e:\n        return str(e)\n```",
    "summary": "Counts the number of words in a file specified by the file path."
  },
  {
    "id": 90,
    "code": "def count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        print(f\"The file {file_path} was not found.\")\n        return -1\n    except IOError:\n        print(f\"An error occurred while reading the file {file_path}.\")\n        return -1",
    "summary": "Counts and returns the number of lines in a specified file, handling file not found and IO errors."
  },
  {
    "id": 91,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 92,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 93,
    "code": "def count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)",
    "summary": "Counts and returns the number of lines in a given file."
  },
  {
    "id": 94,
    "code": "```python\ndef read_csv_to_dict(file_path):\n    data = []\n    with open(file_path, mode='r', encoding='utf-8') as file:\n        headers = file.readline().strip().split(',')\n        for line in file:\n            values = line.strip().split(',')\n            record = dict(zip(headers, values))\n            data.append(record)\n    return data\n```",
    "summary": "Reads a CSV file and returns its contents as a list of dictionaries, using the first row as headers."
  },
  {
    "id": 95,
    "code": "def count_words_in_file(file_path):\n    try:\n        with open(file_path, 'r', encoding='utf-8') as file:\n            text = file.read()\n            words = text.split()\n            return len(words)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except Exception as e:\n        return f\"An error occurred: {e}\"",
    "summary": "Counts and returns the number of words in a specified text file."
  },
  {
    "id": 96,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except IOError:\n        return \"Error reading file.\"\n```",
    "summary": "Counts the number of lines in a file, handling file not found and read errors."
  },
  {
    "id": 97,
    "code": "```python\ndef count_words_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(len(line.split()) for line in file)\n```",
    "summary": "Counts and returns the total number of words in a text file."
  },
  {
    "id": 98,
    "code": "```python\ndef read_csv_to_dict(filepath):\n    with open(filepath, mode='r', encoding='utf-8') as file:\n        lines = file.readlines()\n    headers = lines[0].strip().split(',')\n    data_list = [dict(zip(headers, line.strip().split(','))) for line in lines[1:]]\n    return data_list\n```",
    "summary": "Reads a CSV file and returns a list of dictionaries, where each dictionary represents a row with headers as keys."
  },
  {
    "id": 99,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "This function counts and returns the number of lines in a specified text file."
  },
  {
    "id": 100,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 101,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 102,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except IOError:\n        return \"An error occurred while reading the file.\"\n```",
    "summary": "This function counts the number of lines in a specified text file, handling file not found and IO errors."
  },
  {
    "id": 103,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 104,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        print(f\"Error: The file at {file_path} was not found.\")\n        return 0\n    except IOError:\n        print(f\"Error: Could not read the file at {file_path}.\")\n        return 0\n```",
    "summary": "Counts and returns the number of lines in a specified file, handling file not found and read errors."
  },
  {
    "id": 105,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n```",
    "summary": "Counts the number of lines in a specified text file, returning an error message if the file does not exist."
  },
  {
    "id": 106,
    "code": "```python\ndef read_lines_with_prefix(file_path, prefix):\n    with open(file_path, 'r') as file:\n        return [line.strip() for line in file if line.startswith(prefix)]\n```",
    "summary": "Reads and returns lines from a file that start with a specified prefix."
  },
  {
    "id": 107,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 108,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in the specified file."
  },
  {
    "id": 109,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 110,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except IOError:\n        return \"Error reading file.\"\n```",
    "summary": "Counts the number of lines in a specified file and handles file not found or read errors."
  },
  {
    "id": 111,
    "code": "```python\ndef count_lines_in_file(file_path):\n    \"\"\"Counts the number of lines in a file.\"\"\"\n    try:\n        with open(file_path, 'r', encoding='utf-8') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return -1\n```",
    "summary": "Counts the number of lines in a specified file, returning -1 if the file is not found."
  },
  {
    "id": 112,
    "code": "```python\ndef count_lines_in_file(file_path):\n    \"\"\"Counts the number of lines in a given text file.\"\"\"\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "This function counts and returns the number of lines in a specified text file."
  },
  {
    "id": 113,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 114,
    "code": "```python\ndef write_numbers_to_file(filename, numbers):\n    \"\"\"Writes a list of numbers to a file, one number per line.\"\"\"\n    with open(filename, 'w') as file:\n        for number in numbers:\n            file.write(f\"{number}\\n\")\n```",
    "summary": "Writes a list of numbers to a file, each on a new line."
  },
  {
    "id": 115,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for line in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 116,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 117,
    "code": "```python\ndef count_words_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        text = file.read()\n    words = text.split()\n    return len(words)\n```",
    "summary": "Counts and returns the number of words in a specified text file."
  },
  {
    "id": 118,
    "code": "```python\ndef count_words_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            text = file.read()\n        words = text.split()\n        return len(words)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except Exception as e:\n        return f\"An error occurred: {e}\"\n```",
    "summary": "This function counts the number of words in a specified text file and handles file not found and general exceptions."
  },
  {
    "id": 119,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 120,
    "code": "def count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 121,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "This function counts and returns the number of lines in a specified file."
  },
  {
    "id": 122,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 123,
    "code": "```python\ndef read_lines_with_prefix(file_path, prefix):\n    with open(file_path, 'r') as file:\n        return [line for line in file if line.startswith(prefix)]\n```",
    "summary": "Reads a file and returns a list of lines that start with a specified prefix."
  },
  {
    "id": 124,
    "code": "def count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except IOError:\n        return \"Error reading file.\"",
    "summary": "Counts the number of lines in a file and handles file not found or read errors."
  },
  {
    "id": 125,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts the number of lines in a text file specified by the given file path."
  },
  {
    "id": 126,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "This function counts and returns the number of lines in a specified text file."
  },
  {
    "id": 127,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a given text file."
  },
  {
    "id": 128,
    "code": "```python\ndef count_lines_in_file(file_path):\n    \"\"\"Counts the number of lines in a given file.\"\"\"\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts the number of lines in a specified file."
  },
  {
    "id": 129,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts the number of lines in a specified file and returns the count."
  },
  {
    "id": 130,
    "code": "```python\ndef read_csv_to_dict(file_path):\n    with open(file_path, mode='r', encoding='utf-8') as file:\n        headers = file.readline().strip().split(',')\n        data = [dict(zip(headers, line.strip().split(','))) for line in file]\n    return data\n```",
    "summary": "Reads a CSV file and returns its contents as a list of dictionaries, using the first row as headers."
  },
  {
    "id": 131,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 132,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 133,
    "code": "```python\ndef count_words_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(len(line.split()) for line in file)\n```",
    "summary": "Counts the total number of words in a file specified by the given file path."
  },
  {
    "id": 134,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 135,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a given file."
  },
  {
    "id": 136,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "This function counts the number of lines in a specified text file."
  },
  {
    "id": 137,
    "code": "def count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r', encoding='utf-8') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except IOError:\n        return \"Error reading file.\"",
    "summary": "Counts the number of lines in a text file and handles file reading errors."
  },
  {
    "id": 138,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 139,
    "code": "```python\ndef read_csv_to_dict(file_path):\n    import csv\n    with open(file_path, mode='r', newline='', encoding='utf-8') as file:\n        reader = csv.DictReader(file)\n        return [row for row in reader]\n```",
    "summary": "Reads a CSV file and returns its contents as a list of dictionaries, where each dictionary represents a row."
  },
  {
    "id": 140,
    "code": "```python\ndef count_words_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        text = file.read()\n    words = text.split()\n    return len(words)\n```",
    "summary": "Counts the number of words in a given text file."
  },
  {
    "id": 141,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 142,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for line in file)\n```",
    "summary": "Counts the number of lines in a specified text file."
  },
  {
    "id": 143,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 144,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except IOError:\n        return \"Error reading the file.\"\n```",
    "summary": "Counts and returns the number of lines in a specified file, handling file not found and read errors."
  },
  {
    "id": 145,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for line in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except IOError:\n        return \"An error occurred while reading the file.\"\n```",
    "summary": "Counts and returns the number of lines in a file, handling file not found and read errors."
  },
  {
    "id": 146,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 147,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 148,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 149,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 150,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 151,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 152,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for line in file)\n```",
    "summary": "Counts the number of lines in a specified text file and returns the total count."
  },
  {
    "id": 153,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts the number of lines in a file specified by the given file path."
  },
  {
    "id": 154,
    "code": "```python\ndef count_lines_in_file(file_path):\n    \"\"\"Returns the number of lines in the specified file.\"\"\"\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a given file."
  },
  {
    "id": 155,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 156,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a given file."
  },
  {
    "id": 157,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 158,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a given file."
  },
  {
    "id": 159,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a given file."
  },
  {
    "id": 160,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in the specified file."
  },
  {
    "id": 161,
    "code": "```python\ndef count_words_in_file(file_path):\n    with open(file_path, 'r') as file:\n        content = file.read()\n        words = content.split()\n        return len(words)\n```",
    "summary": "Counts and returns the number of words in a given text file."
  },
  {
    "id": 162,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 163,
    "code": "```python\ndef count_words_in_file(file_path):\n    with open(file_path, 'r') as file:\n        content = file.read()\n    words = content.split()\n    return len(words)\n```",
    "summary": "Counts and returns the number of words in a specified text file."
  },
  {
    "id": 164,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        line_count = sum(1 for _ in file)\n    return line_count\n```",
    "summary": "Counts the number of lines in a specified text file and returns this count."
  },
  {
    "id": 165,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in the specified file."
  },
  {
    "id": 166,
    "code": "```python\ndef read_last_n_lines(file_path, n):\n    with open(file_path, 'rb') as file:\n        file.seek(0, 2)\n        end = file.tell()\n        lines = []\n        line = b''\n        while end > 0 and len(lines) < n:\n            file.seek(end - 1)\n            char = file.read(1)\n            if char == b'\\n' and line:\n                lines.append(line[::-1].decode('utf-8'))\n                line = b''\n            elif char != b'\\n':\n                line += char\n            end -= 1\n        if line:\n            lines.append(line[::-1].decode('utf-8'))\n    return lines[::-1]\n```",
    "summary": "Reads the last n lines from a file by traversing it in reverse order."
  },
  {
    "id": 167,
    "code": "```python\ndef count_words_in_file(file_path):\n    word_count = 0\n    try:\n        with open(file_path, 'r', encoding='utf-8') as file:\n            for line in file:\n                words = line.split()\n                word_count += len(words)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except IOError:\n        return \"Error reading file.\"\n    return word_count\n```",
    "summary": "Counts the total number of words in a file, handling file not found and read errors."
  },
  {
    "id": 168,
    "code": "def count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except IOError:\n        return \"Error reading file.\"",
    "summary": "Counts the number of lines in a specified file and handles file not found or read errors."
  },
  {
    "id": 169,
    "code": "def count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)",
    "summary": "Counts the number of lines in a specified file."
  },
  {
    "id": 170,
    "code": "def count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 171,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except IOError:\n        return \"Error reading file.\"\n```",
    "summary": "Counts the number of lines in a specified file, handling file not found and read errors."
  },
  {
    "id": 172,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts the number of lines in a specified text file."
  },
  {
    "id": 173,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except IOError:\n        return \"Error reading file.\"\n```",
    "summary": "Counts the number of lines in a file, returning an error message if the file cannot be accessed."
  },
  {
    "id": 174,
    "code": "```python\ndef count_words_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        text = file.read()\n        words = text.split()\n        return len(words)\n```",
    "summary": "Counts and returns the number of words in a specified text file."
  },
  {
    "id": 175,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 176,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a given file."
  },
  {
    "id": 177,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except Exception as e:\n        return f\"An error occurred: {e}\"\n```",
    "summary": "Counts the number of lines in a given file, handling file not found and other errors."
  },
  {
    "id": 178,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 179,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except IOError:\n        return \"Error opening file.\"\n```",
    "summary": "Counts the number of lines in a file and handles file not found or opening errors."
  },
  {
    "id": 180,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts the number of lines in a specified file and returns the total."
  },
  {
    "id": 181,
    "code": "def count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)",
    "summary": "This function counts and returns the number of lines in a specified file."
  },
  {
    "id": 182,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for line in file)\n    except FileNotFoundError:\n        return \"File not found\"\n    except IOError:\n        return \"Error reading file\"\n```",
    "summary": "Counts the number of lines in a file, returning an error message if the file cannot be accessed."
  },
  {
    "id": 183,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return -1\n```",
    "summary": "This function counts the number of lines in a given file and returns -1 if the file is not found."
  },
  {
    "id": 184,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 185,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for line in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n```",
    "summary": "Counts the number of lines in a specified file, returning an error message if the file is not found."
  },
  {
    "id": 186,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return 0\n```",
    "summary": "Counts and returns the number of lines in a specified file, or returns 0 if the file is not found."
  },
  {
    "id": 187,
    "code": "```python\ndef count_words_in_file(file_path):\n    \"\"\"\n    Counts the number of words in a given text file.\n\n    :param file_path: The path to the text file.\n    :return: The word count as an integer.\n    \"\"\"\n    with open(file_path, 'r', encoding='utf-8') as file:\n        text = file.read()\n        words = text.split()\n        return len(words)\n```",
    "summary": "Counts the number of words in a given text file and returns the word count as an integer."
  },
  {
    "id": 188,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 189,
    "code": "```python\ndef remove_empty_lines(input_file_path, output_file_path):\n    with open(input_file_path, 'r') as infile, open(output_file_path, 'w') as outfile:\n        for line in infile:\n            if line.strip():\n                outfile.write(line)\n```",
    "summary": "Removes empty lines from a file and writes the result to a new file."
  },
  {
    "id": 190,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except IOError:\n        return \"Error reading file.\"\n```",
    "summary": "Counts and returns the number of lines in a specified file, handling file not found and read errors."
  },
  {
    "id": 191,
    "code": "```python\ndef count_lines_in_file(file_path):\n    \"\"\"\n    Counts the number of lines in a given file.\n\n    :param file_path: The path to the file to be processed.\n    :return: The number of lines in the file.\n    \"\"\"\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts the number of lines in a specified file and returns the total."
  },
  {
    "id": 192,
    "code": "```python\ndef count_words_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        text = file.read()\n    words = text.split()\n    return len(words)\n```",
    "summary": "Counts and returns the number of words in a specified text file."
  },
  {
    "id": 193,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 194,
    "code": "```python\ndef count_words_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        text = file.read()\n    words = text.split()\n    return len(words)\n```",
    "summary": "This function reads a text file and returns the total count of words in the file."
  },
  {
    "id": 195,
    "code": "```python\ndef count_words_in_file(file_path):\n    with open(file_path, 'r') as file:\n        text = file.read()\n    words = text.split()\n    return len(words)\n```",
    "summary": "Counts and returns the number of words in a specified text file."
  },
  {
    "id": 196,
    "code": "```python\ndef count_lines_in_file(file_path):\n    \"\"\"Counts the number of lines in a given file.\"\"\"\n    try:\n        with open(file_path, 'r', encoding='utf-8') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        raise ValueError(f\"The file at {file_path} does not exist.\")\n```",
    "summary": "Counts the number of lines in a specified file, raising an error if the file is not found."
  },
  {
    "id": 197,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except IOError:\n        return \"Error reading file.\"\n```",
    "summary": "Counts the number of lines in a file, handling file not found and read errors."
  },
  {
    "id": 198,
    "code": "def count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except IOError:\n        return \"An error occurred while reading the file.\"",
    "summary": "Counts the number of lines in a file and handles file not found and IO errors."
  },
  {
    "id": 199,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 200,
    "code": "```python\ndef read_lines_with_prefix(file_path, prefix):\n    with open(file_path, 'r') as file:\n        return [line.strip() for line in file if line.startswith(prefix)]\n```",
    "summary": "Reads a file and returns a list of lines that start with a specified prefix."
  },
  {
    "id": 201,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 202,
    "code": "```python\ndef count_lines_in_file(filename):\n    with open(filename, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a given text file."
  },
  {
    "id": 203,
    "code": "```python\ndef read_csv_column(file_path, column_name):\n    with open(file_path, 'r') as file:\n        lines = file.readlines()\n        headers = lines[0].strip().split(',')\n        try:\n            column_index = headers.index(column_name)\n        except ValueError:\n            raise ValueError(f\"Column '{column_name}' not found in the file.\")\n        \n        return [line.strip().split(',')[column_index] for line in lines[1:]]\n```",
    "summary": "This function reads a specific column from a CSV file given its file path and column name."
  },
  {
    "id": 204,
    "code": "```python\ndef count_words_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(len(line.split()) for line in file)\n```",
    "summary": "Counts and returns the total number of words in a text file."
  },
  {
    "id": 205,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts the number of lines in a specified text file."
  },
  {
    "id": 206,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts the number of lines in a specified text file."
  },
  {
    "id": 207,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except IOError:\n        return \"Error reading file.\"\n```",
    "summary": "Counts the number of lines in a specified file and handles file not found or read errors."
  },
  {
    "id": 208,
    "code": "```python\ndef count_lines_in_file(file_path):\n    \"\"\"Count the number of lines in a file.\"\"\"\n    try:\n        with open(file_path, 'r', encoding='utf-8') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except IOError:\n        return \"Error reading file.\"\n```",
    "summary": "Counts the number of lines in a specified file, handling file not found and read errors."
  },
  {
    "id": 209,
    "code": "def count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for line in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except IOError:\n        return \"Error reading file.\"",
    "summary": "Counts the number of lines in a specified file and handles file access errors."
  },
  {
    "id": 210,
    "code": "```python\ndef count_words_in_file(file_path):\n    with open(file_path, 'r') as file:\n        text = file.read()\n    words = text.split()\n    return len(words)\n```",
    "summary": "This function counts and returns the number of words in a given text file."
  },
  {
    "id": 211,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except IOError:\n        return \"Error reading file.\"\n```",
    "summary": "Counts and returns the number of lines in a given file, handling file not found and read errors."
  },
  {
    "id": 212,
    "code": "```python\ndef read_and_uppercase_file(file_path):\n    with open(file_path, 'r') as file:\n        return file.read().upper()\n```",
    "summary": "This function reads the content of a file and returns it as an uppercase string."
  },
  {
    "id": 213,
    "code": "```python\ndef count_words_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        content = file.read()\n    words = content.split()\n    return len(words)\n```",
    "summary": "Counts and returns the number of words in a specified text file."
  },
  {
    "id": 214,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 215,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 216,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 217,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a given text file."
  },
  {
    "id": 218,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 219,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n```",
    "summary": "Counts the number of lines in a specified file, returning an error message if the file is not found."
  },
  {
    "id": 220,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 221,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 222,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 223,
    "code": "```python\ndef replace_word_in_file(file_path, target_word, replacement_word):\n    with open(file_path, 'r') as file:\n        content = file.read()\n    updated_content = content.replace(target_word, replacement_word)\n    with open(file_path, 'w') as file:\n        file.write(updated_content)\n```",
    "summary": "Replaces all occurrences of a target word with a replacement word in a specified file."
  },
  {
    "id": 224,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 225,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts the number of lines in a specified text file."
  },
  {
    "id": 226,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 227,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r', encoding='utf-8') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except IOError:\n        return \"Error reading file.\"\n```",
    "summary": "This function counts the number of lines in a specified file, handling file not found and IO errors."
  },
  {
    "id": 228,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "This function counts and returns the number of lines in a given text file."
  },
  {
    "id": 229,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return 0\n```",
    "summary": "Counts the number of lines in a file, returning zero if the file is not found."
  },
  {
    "id": 230,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 231,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "This function counts and returns the number of lines in a specified text file."
  },
  {
    "id": 232,
    "code": "```python\ndef read_csv_to_dict(file_path):\n    with open(file_path, mode='r', encoding='utf-8') as file:\n        lines = file.readlines()\n    headers = lines[0].strip().split(',')\n    data = [dict(zip(headers, line.strip().split(','))) for line in lines[1:]]\n    return data\n```",
    "summary": "Reads a CSV file and returns its contents as a list of dictionaries using the first row as keys."
  },
  {
    "id": 233,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 234,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        line_count = sum(1 for _ in file)\n    return line_count\n```",
    "summary": "Counts and returns the number of lines in a given file."
  },
  {
    "id": 235,
    "code": "```python\ndef count_words_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        text = file.read()\n    words = text.split()\n    return len(words)\n```",
    "summary": "Counts and returns the number of words in a specified file."
  },
  {
    "id": 236,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 237,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts the number of lines in a text file specified by the file path."
  },
  {
    "id": 238,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return 0\n```",
    "summary": "Counts the number of lines in a file, returning 0 if the file does not exist."
  },
  {
    "id": 239,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 240,
    "code": "```python\ndef count_words_in_file(file_path):\n    \"\"\"Count the number of words in a given text file.\"\"\"\n    word_count = 0\n    with open(file_path, 'r', encoding='utf-8') as file:\n        for line in file:\n            words = line.split()\n            word_count += len(words)\n    return word_count\n```",
    "summary": "Counts and returns the number of words in a specified text file."
  },
  {
    "id": 241,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts the number of lines in a specified text file."
  },
  {
    "id": 242,
    "code": "```python\ndef count_words_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        text = file.read()\n    words = text.split()\n    return len(words)\n```",
    "summary": "Counts and returns the number of words in a given text file."
  },
  {
    "id": 243,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return 0\n```",
    "summary": "This function counts the number of lines in a given file and returns zero if the file is not found."
  },
  {
    "id": 244,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return -1\n```",
    "summary": "Counts the number of lines in a specified file, returning -1 if the file does not exist."
  },
  {
    "id": 245,
    "code": "```python\ndef count_lines_in_file(file_path):\n    \"\"\"Counts the number of lines in a file.\"\"\"\n    line_count = 0\n    with open(file_path, 'r', encoding='utf-8') as file:\n        for _ in file:\n            line_count += 1\n    return line_count\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 246,
    "code": "```python\ndef count_lines_in_file(file_path):\n    line_count = 0\n    with open(file_path, 'r', encoding='utf-8') as file:\n        for line in file:\n            line_count += 1\n    return line_count\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 247,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "This function counts and returns the number of lines in a specified text file."
  },
  {
    "id": 248,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 249,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 250,
    "code": "def count_lines_in_file(file_path):\n    \"\"\"Counts the number of lines in a file.\"\"\"\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except Exception as e:\n        return f\"An error occurred: {e}\"",
    "summary": "Counts the number of lines in a specified file, handling file not found and other exceptions."
  },
  {
    "id": 251,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a given file."
  },
  {
    "id": 252,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for line in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 253,
    "code": "```python\ndef count_words_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        text = file.read()\n    words = text.split()\n    return len(words)\n```",
    "summary": "Counts the number of words in a text file specified by the file path."
  },
  {
    "id": 254,
    "code": "def count_lines_in_file(file_path):\n    \"\"\"Counts the number of lines in a given text file.\"\"\"\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for line in file)",
    "summary": "Counts the number of lines in a specified text file."
  },
  {
    "id": 255,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts the number of lines in a specified file."
  },
  {
    "id": 256,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in the specified text file."
  },
  {
    "id": 257,
    "code": "```python\ndef extract_emails_from_file(filename):\n    with open(filename, 'r') as file:\n        lines = file.readlines()\n\n    emails = []\n    for line in lines:\n        line = line.strip()\n        if '@' in line and '.' in line:\n            emails.append(line)\n\n    return emails\n```",
    "summary": "Extracts and returns a list of email addresses from a given text file, assuming each line contains one email."
  },
  {
    "id": 258,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 259,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for line in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 260,
    "code": "```python\ndef append_line_to_file(file_path, line):\n    with open(file_path, 'a') as file:\n        file.write(line + '\\n')\n```",
    "summary": "Appends a new line to an existing file specified by the given file path."
  },
  {
    "id": 261,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 262,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in the specified file."
  },
  {
    "id": 263,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 264,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in the specified file."
  },
  {
    "id": 265,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        line_count = sum(1 for _ in file)\n    return line_count\n```",
    "summary": "Counts the number of lines in a given text file and returns the count."
  },
  {
    "id": 266,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 267,
    "code": "```python\ndef count_words_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        content = file.read()\n    words = content.split()\n    return len(words)\n```",
    "summary": "This function counts and returns the number of words in a specified text file."
  },
  {
    "id": 268,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 269,
    "code": "```python\ndef count_lines_in_file(filepath):\n    line_count = 0\n    with open(filepath, 'r', encoding='utf-8') as file:\n        for _ in file:\n            line_count += 1\n    return line_count\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 270,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 271,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for line in file)\n```",
    "summary": "This function counts and returns the number of lines in a specified text file."
  },
  {
    "id": 272,
    "code": "```python\ndef count_lines_in_file(filepath):\n    with open(filepath, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a given text file."
  },
  {
    "id": 273,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts the number of lines in a given text file and returns the total count."
  },
  {
    "id": 274,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a given file."
  },
  {
    "id": 275,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        count = sum(1 for _ in file)\n    return count\n```",
    "summary": "Counts and returns the number of lines in a given text file."
  },
  {
    "id": 276,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 277,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "This function counts the number of lines in a specified text file."
  },
  {
    "id": 278,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in the specified file."
  },
  {
    "id": 279,
    "code": "```python\ndef read_csv_to_dict(file_path):\n    with open(file_path, mode='r', encoding='utf-8') as file:\n        lines = file.readlines()\n        headers = lines[0].strip().split(',')\n        data = [dict(zip(headers, line.strip().split(','))) for line in lines[1:]]\n    return data\n```",
    "summary": "Reads a CSV file and returns its contents as a list of dictionaries where each dictionary represents a row."
  },
  {
    "id": 280,
    "code": "```python\ndef append_line_to_file(file_path, line):\n    with open(file_path, 'a') as file:\n        file.write(line + '\\n')\n```",
    "summary": "Appends a line to the end of a specified file, adding a newline character."
  },
  {
    "id": 281,
    "code": "```python\ndef count_words_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(len(line.split()) for line in file)\n```",
    "summary": "Counts and returns the total number of words in a specified text file."
  },
  {
    "id": 282,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 283,
    "code": "```python\ndef count_words_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        text = file.read()\n    words = text.split()\n    return len(words)\n```",
    "summary": "Counts and returns the number of words in a text file specified by the file path."
  },
  {
    "id": 284,
    "code": "```python\ndef read_csv_to_dict(file_path):\n    with open(file_path, mode='r', encoding='utf-8') as file:\n        lines = file.readlines()\n    headers = lines[0].strip().split(',')\n    data = [dict(zip(headers, line.strip().split(','))) for line in lines[1:]]\n    return data\n```",
    "summary": "Reads a CSV file and returns a list of dictionaries, each representing a row with headers as keys."
  },
  {
    "id": 285,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 286,
    "code": "```python\ndef count_words_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        text = file.read()\n    return len(text.split())\n```",
    "summary": "Counts and returns the number of words in a text file specified by the file path."
  },
  {
    "id": 287,
    "code": "```python\ndef read_csv_to_dict(file_path):\n    with open(file_path, mode='r', encoding='utf-8') as file:\n        keys = file.readline().strip().split(',')\n        return [dict(zip(keys, line.strip().split(','))) for line in file]\n```",
    "summary": "Reads a CSV file and returns a list of dictionaries, where each dictionary represents a row with column headers as keys."
  },
  {
    "id": 288,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a given text file."
  },
  {
    "id": 289,
    "code": "```python\ndef count_lines_in_file(file_path):\n    \"\"\"Counts the number of lines in a given text file.\"\"\"\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts the number of lines in a specified text file."
  },
  {
    "id": 290,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "This function counts and returns the number of lines in a specified file."
  },
  {
    "id": 291,
    "code": "```python\ndef count_lines_in_file(file_path):\n    \"\"\"Counts the number of lines in the specified file.\"\"\"\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a given text file."
  },
  {
    "id": 292,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return -1\n```",
    "summary": "Counts the number of lines in a file specified by `file_path`, returning -1 if the file is not found."
  },
  {
    "id": 293,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        print(f\"Error: The file at {file_path} was not found.\")\n    except IOError:\n        print(f\"Error: An error occurred while reading the file at {file_path}.\")\n```",
    "summary": "Counts and returns the number of lines in a specified file, handling file not found and read errors gracefully."
  },
  {
    "id": 294,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 295,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 296,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r', encoding='utf-8') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        print(\"The specified file was not found.\")\n        return -1\n    except IOError:\n        print(\"An error occurred while reading the file.\")\n        return -1\n```",
    "summary": "Counts the number of lines in a specified file, handling potential file not found or read errors."
  },
  {
    "id": 297,
    "code": "```python\ndef count_words_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        text = file.read()\n    words = text.split()\n    return len(words)\n```",
    "summary": "Counts and returns the number of words in a specified text file."
  },
  {
    "id": 298,
    "code": "```python\ndef count_words_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        text = file.read()\n    words = text.split()\n    return len(words)\n```",
    "summary": "Counts and returns the number of words in a text file specified by the file path."
  },
  {
    "id": 299,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a given text file."
  },
  {
    "id": 300,
    "code": "```python\ndef count_words_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        text = file.read()\n    words = text.split()\n    return len(words)\n```",
    "summary": "Counts and returns the number of words in a specified text file."
  },
  {
    "id": 301,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a given text file."
  },
  {
    "id": 302,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 303,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 304,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in the specified file."
  },
  {
    "id": 305,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except IOError:\n        return \"Error reading file.\"\n```",
    "summary": "Counts the number of lines in a specified file, handling file not found and read errors."
  },
  {
    "id": 306,
    "code": "```python\ndef count_lines_in_file(file_path):\n    \"\"\"Counts the number of lines in a given text file.\"\"\"\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts the number of lines in a specified text file using a file path."
  },
  {
    "id": 307,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 308,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except IOError:\n        return \"Error reading file.\"\n```",
    "summary": "This function counts the number of lines in a specified text file, handling file not found and read errors."
  },
  {
    "id": 309,
    "code": "```python\ndef count_words_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        text = file.read()\n    words = text.split()\n    return len(words)\n```",
    "summary": "Counts the number of words in a text file specified by the given file path."
  },
  {
    "id": 310,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except IOError:\n        return \"Error reading file.\"\n```",
    "summary": "Counts the number of lines in a file and handles file not found or read errors."
  },
  {
    "id": 311,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n```",
    "summary": "Counts the number of lines in a file, returning an error message if the file is not found."
  },
  {
    "id": 312,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts the number of lines in a given text file."
  },
  {
    "id": 313,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except IOError:\n        return \"Error reading file.\"\n```",
    "summary": "Counts the number of lines in a specified file and handles file not found and read errors."
  },
  {
    "id": 314,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except IOError:\n        return \"Error reading file.\"\n```",
    "summary": "Counts and returns the number of lines in a specified file, handling file not found and read errors."
  },
  {
    "id": 315,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 316,
    "code": "def count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except IOError:\n        return \"Error reading file.\"",
    "summary": "Counts the number of lines in a specified file and handles file not found or read errors."
  },
  {
    "id": 317,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a given text file."
  },
  {
    "id": 318,
    "code": "```python\ndef read_csv_to_dict(file_path):\n    import csv\n    with open(file_path, mode='r', newline='') as file:\n        reader = csv.DictReader(file)\n        return [row for row in reader]\n```",
    "summary": "Reads a CSV file and returns its contents as a list of dictionaries, where each dictionary represents a row."
  },
  {
    "id": 319,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 320,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            line_count = sum(1 for _ in file)\n        return line_count\n    except FileNotFoundError:\n        return \"File not found.\"\n    except IOError:\n        return \"Error reading file.\"\n```",
    "summary": "Counts and returns the number of lines in a specified file, handling file not found and read errors."
  },
  {
    "id": 321,
    "code": "def count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except IOError:\n        return \"Error reading file.\"",
    "summary": "Counts and returns the number of lines in a specified file, handling file not found and read errors."
  },
  {
    "id": 322,
    "code": "```python\ndef read_csv_to_dict(file_path):\n    with open(file_path, mode='r', encoding='utf-8') as file:\n        lines = file.readlines()\n        headers = lines[0].strip().split(',')\n        data = [dict(zip(headers, line.strip().split(','))) for line in lines[1:]]\n    return data\n```",
    "summary": "Reads a CSV file and returns its content as a list of dictionaries, using the first row as headers."
  },
  {
    "id": 323,
    "code": "def count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)",
    "summary": "Counts and returns the number of lines in the specified file."
  },
  {
    "id": 324,
    "code": "def count_words_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        content = file.read()\n    words = content.split()\n    return len(words)",
    "summary": "Counts and returns the number of words in a specified text file."
  },
  {
    "id": 325,
    "code": "```python\ndef read_lines_with_keyword(file_path, keyword):\n    with open(file_path, 'r') as file:\n        return [line.strip() for line in file if keyword in line]\n```",
    "summary": "Reads a file and returns a list of lines containing a specified keyword."
  },
  {
    "id": 326,
    "code": "```python\ndef count_words_in_file(file_path):\n    try:\n        with open(file_path, 'r', encoding='utf-8') as file:\n            text = file.read()\n        words = text.split()\n        return len(words)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except IOError:\n        return \"Error reading file.\"\n```",
    "summary": "Counts the number of words in a given text file and handles file not found and read errors."
  },
  {
    "id": 327,
    "code": "```python\ndef count_words_in_file(file_path):\n    try:\n        with open(file_path, 'r', encoding='utf-8') as file:\n            text = file.read()\n            words = text.split()\n            return len(words)\n    except FileNotFoundError:\n        return \"File not found.\"\n```",
    "summary": "Counts the number of words in a file specified by the file path, returning an error message if the file is not found."
  },
  {
    "id": 328,
    "code": "```python\ndef read_lines_with_keyword(file_path, keyword):\n    with open(file_path, 'r') as file:\n        return [line.strip() for line in file if keyword in line]\n```",
    "summary": "Reads a file and returns a list of lines containing a specific keyword."
  },
  {
    "id": 329,
    "code": "```python\ndef count_words_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        text = file.read()\n    words = text.split()\n    return len(words)\n```",
    "summary": "Counts and returns the total number of words in a text file."
  },
  {
    "id": 330,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 331,
    "code": "```python\ndef read_csv_to_dict(file_path):\n    with open(file_path, mode='r', encoding='utf-8') as file:\n        headers = file.readline().strip().split(',')\n        data = [dict(zip(headers, line.strip().split(','))) for line in file]\n    return data\n```",
    "summary": "Reads a CSV file and returns its contents as a list of dictionaries, using the first row as headers."
  },
  {
    "id": 332,
    "code": "```python\ndef count_words_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        text = file.read()\n    words = text.split()\n    return len(words)\n```",
    "summary": "Counts the number of words in a given text file."
  },
  {
    "id": 333,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        print(f\"Error: The file at {file_path} was not found.\")\n        return None\n    except IOError:\n        print(f\"Error: Could not read the file at {file_path}.\")\n        return None\n```",
    "summary": "Counts the number of lines in a specified file, handling file not found and read errors."
  },
  {
    "id": 334,
    "code": "def count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return -1\n    except IOError:\n        return -1",
    "summary": "Counts the number of lines in a file and returns -1 if the file cannot be accessed."
  },
  {
    "id": 335,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r', encoding='utf-8') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except IOError:\n        return \"Error reading file.\"\n```",
    "summary": "Counts the number of lines in a file and handles file not found or read errors."
  },
  {
    "id": 336,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except IOError:\n        return \"Error reading file.\"\n```",
    "summary": "This function counts the number of lines in a given file and handles file not found and read errors."
  },
  {
    "id": 337,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        print(f\"Error: The file at {file_path} does not exist.\")\n        return 0\n```",
    "summary": "Counts the number of lines in a given file and handles the case where the file does not exist."
  },
  {
    "id": 338,
    "code": "```python\ndef read_text_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return file.read()\n```",
    "summary": "Reads and returns the entire content of a text file specified by the file path."
  },
  {
    "id": 339,
    "code": "```python\ndef read_file_lines_reverse(file_path):\n    \"\"\"Reads a file and returns its lines in reverse order.\"\"\"\n    with open(file_path, 'r') as file:\n        lines = file.readlines()\n    return lines[::-1]\n```",
    "summary": "Reads a file and returns its lines in reverse order."
  },
  {
    "id": 340,
    "code": "def count_lines_in_file(file_path):\n    \"\"\"Returns the number of lines in the specified text file.\"\"\"\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)",
    "summary": "Counts and returns the number of lines in a given text file."
  },
  {
    "id": 341,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts the number of lines in a specified text file."
  },
  {
    "id": 342,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 343,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 344,
    "code": "```python\ndef write_lines_to_file(file_path, lines):\n    with open(file_path, 'w') as file:\n        for line in lines:\n            file.write(f\"{line}\\n\")\n```",
    "summary": "Writes a list of strings to a file, each on a new line."
  },
  {
    "id": 345,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 346,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts the number of lines in a text file specified by the file path."
  },
  {
    "id": 347,
    "code": "def count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)",
    "summary": "Counts and returns the number of lines in a given file."
  },
  {
    "id": 348,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 349,
    "code": "def count_lines_in_file(filepath):\n    try:\n        with open(filepath, 'r') as file:\n            return sum(1 for line in file)\n    except FileNotFoundError:\n        return 0",
    "summary": "Counts the number of lines in a file, returning zero if the file does not exist."
  },
  {
    "id": 350,
    "code": "def count_words_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        text = file.read()\n    return len(text.split())",
    "summary": "Counts and returns the number of words in a specified text file."
  },
  {
    "id": 351,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r', encoding='utf-8') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except IOError:\n        return \"Error reading file.\"\n```",
    "summary": "Counts the number of lines in a text file, handling file not found and read errors."
  },
  {
    "id": 352,
    "code": "def count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for line in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except IOError:\n        return \"Error reading file.\"",
    "summary": "Counts the number of lines in a file, returning an error message if the file cannot be accessed."
  },
  {
    "id": 353,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts the number of lines in a specified text file and returns the total count."
  },
  {
    "id": 354,
    "code": "```python\ndef count_lines_in_file(file_path):\n    \"\"\"Counts the number of lines in a given file.\"\"\"\n    with open(file_path, 'r') as file:\n        return sum(1 for line in file)\n```",
    "summary": "Counts the number of lines in a specified text file."
  },
  {
    "id": 355,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r', encoding='utf-8') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except IOError:\n        return \"Error reading file.\"\n```",
    "summary": "Counts and returns the number of lines in a specified text file, handling file not found and read errors."
  },
  {
    "id": 356,
    "code": "```python\ndef count_lines_in_file(file_path):\n    \"\"\"Counts the number of lines in a given file.\"\"\"\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts the number of lines in a specified file."
  },
  {
    "id": 357,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a given text file."
  },
  {
    "id": 358,
    "code": "```python\ndef count_lines_in_file(file_path):\n    \"\"\"Counts the number of lines in a file.\"\"\"\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts the number of lines in a specified text file."
  },
  {
    "id": 359,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts the number of lines in a specified text file."
  },
  {
    "id": 360,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "This function counts and returns the number of lines in a specified text file."
  },
  {
    "id": 361,
    "code": "```python\ndef count_lines_in_file(file_path):\n    \"\"\"Returns the number of lines in the specified file.\"\"\"\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "This function counts and returns the number of lines in a given file."
  },
  {
    "id": 362,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a given text file."
  },
  {
    "id": 363,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts the number of lines in a specified text file and returns the total count."
  },
  {
    "id": 364,
    "code": "```python\ndef count_lines_in_file(file_path):\n    \"\"\"Counts the number of non-empty lines in a given text file.\"\"\"\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for line in file if line.strip())\n```",
    "summary": "Counts the number of non-empty lines in a given text file."
  },
  {
    "id": 365,
    "code": "```python\ndef read_non_empty_lines(file_path):\n    with open(file_path, 'r') as file:\n        return [line.strip() for line in file if line.strip()]\n```",
    "summary": "Reads a file and returns a list of non-empty lines, stripping any surrounding whitespace."
  },
  {
    "id": 366,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 367,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 368,
    "code": "```python\ndef read_csv_as_dict(file_path):\n    with open(file_path, mode='r', encoding='utf-8') as file:\n        headers = file.readline().strip().split(',')\n        data = [dict(zip(headers, line.strip().split(','))) for line in file]\n    return data\n```",
    "summary": "Reads a CSV file and returns its contents as a list of dictionaries, using the first row as headers."
  },
  {
    "id": 369,
    "code": "```python\ndef count_words_in_file(file_path):\n    try:\n        with open(file_path, 'r', encoding='utf-8') as file:\n            content = file.read()\n        words = content.split()\n        return len(words)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except Exception as e:\n        return f\"An error occurred: {e}\"\n```",
    "summary": "Counts the number of words in a file specified by the given file path."
  },
  {
    "id": 370,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 371,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a given file."
  },
  {
    "id": 372,
    "code": "```python\ndef count_words_in_file(file_path):\n    with open(file_path, 'r') as file:\n        text = file.read()\n        words = text.split()\n        return len(words)\n```",
    "summary": "Counts and returns the number of words in a given text file."
  },
  {
    "id": 373,
    "code": "```python\ndef count_words_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        content = file.read()\n    return len(content.split())\n```",
    "summary": "Counts the number of words in a file specified by the given file path."
  },
  {
    "id": 374,
    "code": "```python\ndef count_lines_in_file(file_path):\n    \"\"\"Counts the number of lines in a given text file.\"\"\"\n    line_count = 0\n    with open(file_path, 'r') as file:\n        for _ in file:\n            line_count += 1\n    return line_count\n```",
    "summary": "Counts the number of lines in a specified text file and returns the count."
  },
  {
    "id": 375,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 376,
    "code": "```python\ndef count_words_in_file(file_path):\n    with open(file_path, 'r') as file:\n        content = file.read()\n    words = content.split()\n    return len(words)\n```",
    "summary": "Counts and returns the number of words in a specified text file."
  },
  {
    "id": 377,
    "code": "```python\ndef count_lines_in_file(file_path):\n    \"\"\"Returns the number of lines in the specified file.\"\"\"\n    with open(file_path, 'r') as file:\n        line_count = sum(1 for _ in file)\n    return line_count\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 378,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for line in file)\n```",
    "summary": "Counts the number of lines in a specified file and returns the total."
  },
  {
    "id": 379,
    "code": "```python\ndef count_words_in_file(file_path):\n    with open(file_path, 'r') as file:\n        content = file.read()\n    words = content.split()\n    return len(words)\n```",
    "summary": "Counts and returns the number of words in a given text file."
  },
  {
    "id": 380,
    "code": "```python\ndef count_words_in_file(file_path):\n    with open(file_path, 'r') as file:\n        text = file.read()\n    return len(text.split())\n```",
    "summary": "Counts and returns the number of words in a text file specified by the given file path."
  },
  {
    "id": 381,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return -1\n```",
    "summary": "Counts and returns the number of lines in a file, or -1 if the file is not found."
  },
  {
    "id": 382,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r', encoding='utf-8') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except IOError:\n        return \"Error reading file.\"\n```",
    "summary": "Counts the number of lines in a specified file and handles file not found or read errors."
  },
  {
    "id": 383,
    "code": "def count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except IOError:\n        return \"Error reading file.\"",
    "summary": "Counts the number of lines in a file and handles file not found or read errors."
  },
  {
    "id": 384,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        print(f\"Error: The file {file_path} was not found.\")\n        return None\n```",
    "summary": "Counts and returns the number of lines in a specified file, handling file not found errors."
  },
  {
    "id": 385,
    "code": "```python\ndef count_lines_in_file(filepath):\n    with open(filepath, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a given file."
  },
  {
    "id": 386,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "This function counts and returns the number of lines in a specified file."
  },
  {
    "id": 387,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 388,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts the number of lines in a specified file and returns the total count."
  },
  {
    "id": 389,
    "code": "```python\ndef read_csv_to_dict(file_path):\n    with open(file_path, mode='r', encoding='utf-8') as file:\n        lines = file.readlines()\n    keys = lines[0].strip().split(',')\n    result = [dict(zip(keys, line.strip().split(','))) for line in lines[1:]]\n    return result\n```",
    "summary": "Reads a CSV file and returns its content as a list of dictionaries, using the first row as keys."
  },
  {
    "id": 390,
    "code": "```python\ndef count_lines_in_file(file_path):\n    \"\"\"\n    Counts the number of lines in a given text file.\n\n    :param file_path: Path to the text file.\n    :return: Integer count of lines in the file.\n    \"\"\"\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts the number of lines in a specified text file and returns the total count."
  },
  {
    "id": 391,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in the specified file."
  },
  {
    "id": 392,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except IOError:\n        return \"Error reading file.\"\n```",
    "summary": "Counts and returns the number of lines in a specified file, handling file not found and IO errors."
  },
  {
    "id": 393,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except IOError:\n        return \"Error reading file.\"\n```",
    "summary": "Counts the number of lines in a specified file, handling file not found and read errors."
  },
  {
    "id": 394,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 395,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in the specified text file."
  },
  {
    "id": 396,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 397,
    "code": "```python\ndef count_lines_in_file(file_path):\n    \"\"\"Counts the number of lines in a given text file.\"\"\"\n    try:\n        with open(file_path, 'r', encoding='utf-8') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except IOError:\n        return \"Error reading file.\"\n```",
    "summary": "Counts the number of lines in a specified text file and handles file not found or read errors."
  },
  {
    "id": 398,
    "code": "```python\ndef count_words_in_file(filename):\n    with open(filename, 'r', encoding='utf-8') as file:\n        text = file.read()\n    return len(text.split())\n```",
    "summary": "This function counts and returns the number of words in a given text file."
  },
  {
    "id": 399,
    "code": "```python\ndef read_lines_reverse(file_path):\n    with open(file_path, 'r') as file:\n        lines = file.readlines()\n    return [line.strip() for line in reversed(lines)]\n```",
    "summary": "Reads a file and returns its lines in reverse order, with whitespace stripped from each line."
  },
  {
    "id": 400,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for line in file)\n```",
    "summary": "Counts the number of lines in a specified file and returns the count."
  },
  {
    "id": 401,
    "code": "```python\ndef count_words_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        text = file.read()\n    words = text.split()\n    return len(words)\n```",
    "summary": "Counts and returns the number of words in a text file specified by the file path."
  },
  {
    "id": 402,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts the number of lines in a specified file."
  },
  {
    "id": 403,
    "code": "```python\ndef count_lines_in_file(file_path):\n    \"\"\"Counts and returns the number of lines in a given file.\"\"\"\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 404,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for line in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 405,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 406,
    "code": "```python\ndef remove_blank_lines(input_file, output_file):\n    with open(input_file, 'r') as infile, open(output_file, 'w') as outfile:\n        for line in infile:\n            if line.strip():\n                outfile.write(line)\n```",
    "summary": "This function reads a file and writes its non-blank lines to a new file, effectively removing any blank lines."
  },
  {
    "id": 407,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in the specified file."
  },
  {
    "id": 408,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 409,
    "code": "```python\ndef count_words_in_file(file_path):\n    with open(file_path, 'r') as file:\n        text = file.read()\n    return len(text.split())\n```",
    "summary": "Counts the number of words in a text file specified by the given file path."
  },
  {
    "id": 410,
    "code": "```python\ndef read_csv_to_dict(file_path):\n    import csv\n    result = []\n    with open(file_path, mode='r', newline='', encoding='utf-8') as file:\n        reader = csv.DictReader(file)\n        for row in reader:\n            result.append(dict(row))\n    return result\n```",
    "summary": "Reads a CSV file and returns its content as a list of dictionaries, where each dictionary represents a row."
  },
  {
    "id": 411,
    "code": "```python\ndef count_words_in_file(file_path):\n    try:\n        with open(file_path, 'r', encoding='utf-8') as file:\n            text = file.read()\n        return len(text.split())\n    except FileNotFoundError:\n        return \"File not found.\"\n    except Exception as e:\n        return f\"An error occurred: {e}\"\n```",
    "summary": "Reads a file and returns the count of words, handling file not found and other exceptions."
  },
  {
    "id": 412,
    "code": "```python\ndef read_csv_to_dict(file_path):\n    with open(file_path, 'r') as file:\n        lines = file.readlines()\n        keys = lines[0].strip().split(',')\n        data_list = [dict(zip(keys, line.strip().split(','))) for line in lines[1:]]\n    return data_list\n```",
    "summary": "Reads a CSV file and returns a list of dictionaries, where each dictionary represents a row with column headers as keys."
  },
  {
    "id": 413,
    "code": "```python\ndef read_csv_as_dict(file_path):\n    with open(file_path, mode='r', encoding='utf-8') as file:\n        lines = file.readlines()\n        header = lines[0].strip().split(',')\n        return [\n            {header[i]: value for i, value in enumerate(line.strip().split(','))}\n            for line in lines[1:]\n        ]\n```",
    "summary": "Reads a CSV file and returns its contents as a list of dictionaries, using the first row as keys."
  },
  {
    "id": 414,
    "code": "```python\ndef count_lines_in_file(file_path):\n    \"\"\"Counts the number of lines in a given text file.\"\"\"\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 415,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a given file."
  },
  {
    "id": 416,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except IOError:\n        return \"Error reading file.\"\n```",
    "summary": "Counts the number of lines in a file and handles file not found or read errors."
  },
  {
    "id": 417,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a given text file."
  },
  {
    "id": 418,
    "code": "```python\ndef count_words_in_file(file_path):\n    with open(file_path, 'r') as file:\n        content = file.read()\n    words = content.split()\n    return len(words)\n```",
    "summary": "Counts and returns the total number of words in a specified text file."
  },
  {
    "id": 419,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in the specified text file."
  },
  {
    "id": 420,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 421,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for line in file)\n```",
    "summary": "This function counts the total number of lines in a specified file."
  },
  {
    "id": 422,
    "code": "```python\ndef count_lines_in_file(file_path):\n    \"\"\"Counts the number of lines in a file.\"\"\"\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts the number of lines in a specified file."
  },
  {
    "id": 423,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 424,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for line in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 425,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a file specified by the given file path."
  },
  {
    "id": 426,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 427,
    "code": "```python\ndef replace_text_in_file(file_path, old_text, new_text):\n    with open(file_path, 'r') as file:\n        content = file.read()\n    content = content.replace(old_text, new_text)\n    with open(file_path, 'w') as file:\n        file.write(content)\n```",
    "summary": "Replaces all occurrences of a specified text in a file with new text."
  },
  {
    "id": 428,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in the specified text file."
  },
  {
    "id": 429,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 430,
    "code": "```python\ndef count_word_occurrences(file_path, word):\n    count = 0\n    with open(file_path, 'r', encoding='utf-8') as file:\n        for line in file:\n            count += line.lower().split().count(word.lower())\n    return count\n```",
    "summary": "Counts the occurrences of a specified word in a text file, case-insensitively."
  },
  {
    "id": 431,
    "code": "```python\ndef count_words_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        text = file.read()\n        words = text.split()\n        return len(words)\n```",
    "summary": "Counts the number of words in a text file specified by the file path."
  },
  {
    "id": 432,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "This function counts and returns the number of lines in a specified text file."
  },
  {
    "id": 433,
    "code": "def count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return 0\n    except Exception as e:\n        raise e",
    "summary": "This function returns the number of lines in a specified file, handling file not found errors gracefully."
  },
  {
    "id": 434,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a given text file."
  },
  {
    "id": 435,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the total number of lines in a specified file."
  },
  {
    "id": 436,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 437,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"Error: File not found.\"\n    except IOError:\n        return \"Error: Could not read file.\"\n```",
    "summary": "Counts and returns the number of lines in a specified file, handling file not found and read errors."
  },
  {
    "id": 438,
    "code": "```python\ndef count_lines_with_word(filename, word):\n    count = 0\n    with open(filename, 'r') as file:\n        for line in file:\n            if word in line:\n                count += 1\n    return count\n```",
    "summary": "Counts how many lines in a file contain a specified word."
  },
  {
    "id": 439,
    "code": "```python\ndef count_lines_in_file(filename):\n    \"\"\"Counts the number of lines in a given text file.\"\"\"\n    with open(filename, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 440,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 441,
    "code": "```python\ndef count_lines_in_file(filename):\n    \"\"\"Count the number of lines in a given file.\"\"\"\n    try:\n        with open(filename, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except IOError:\n        return \"Error reading file.\"\n```",
    "summary": "Counts the number of lines in a specified file, handling file not found and read errors."
  },
  {
    "id": 442,
    "code": "```python\ndef count_words_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        text = file.read()\n        words = text.split()\n        return len(words)\n```",
    "summary": "Counts and returns the number of words in a specified text file."
  },
  {
    "id": 443,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a given file."
  },
  {
    "id": 444,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 445,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        print(f\"Error: The file at {file_path} was not found.\")\n        return -1\n```",
    "summary": "Counts the number of lines in a file and handles the case where the file is not found."
  },
  {
    "id": 446,
    "code": "```python\ndef read_csv_to_dict(file_path):\n    with open(file_path, 'r') as file:\n        headers = file.readline().strip().split(',')\n        data = [dict(zip(headers, line.strip().split(','))) for line in file]\n    return data\n```",
    "summary": "Reads a CSV file and returns a list of dictionaries, mapping each row to the headers as keys."
  },
  {
    "id": 447,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 448,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 449,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts the number of lines in a specified file."
  },
  {
    "id": 450,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except Exception as e:\n        return str(e)\n```",
    "summary": "Counts the number of lines in a file, returning the count or an error message if the file is not found."
  },
  {
    "id": 451,
    "code": "```python\ndef count_words_in_file(file_path):\n    with open(file_path, 'r') as file:\n        text = file.read()\n    words = text.split()\n    return len(words)\n```",
    "summary": "Counts and returns the number of words in a specified text file."
  },
  {
    "id": 452,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts the number of lines in a given text file."
  },
  {
    "id": 453,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts the number of lines in a specified text file."
  },
  {
    "id": 454,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 455,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "This function counts and returns the number of lines in a specified text file."
  },
  {
    "id": 456,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "This function counts and returns the number of lines in a specified text file."
  },
  {
    "id": 457,
    "code": "```python\ndef count_word_occurrences(file_path, word):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        content = file.read().lower()\n    return content.split().count(word.lower())\n```",
    "summary": "Counts the occurrences of a specified word in a text file, ignoring case."
  },
  {
    "id": 458,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 459,
    "code": "```python\ndef count_word_occurrences(file_path, word):\n    count = 0\n    with open(file_path, 'r', encoding='utf-8') as file:\n        for line in file:\n            count += line.lower().split().count(word.lower())\n    return count\n```",
    "summary": "Counts the occurrences of a specified word in a text file, ignoring case."
  },
  {
    "id": 460,
    "code": "```python\ndef count_word_occurrences(file_path, word):\n    with open(file_path, 'r') as file:\n        content = file.read()\n    return content.lower().split().count(word.lower())\n```",
    "summary": "Counts the occurrences of a specific word in a text file, ignoring case differences."
  },
  {
    "id": 461,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except IOError:\n        return \"Error reading file.\"\n```",
    "summary": "Counts the number of lines in a specified file and handles potential file access errors."
  },
  {
    "id": 462,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 463,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts the number of lines in a given text file."
  },
  {
    "id": 464,
    "code": "```python\ndef read_lines_with_prefix(file_path, prefix):\n    with open(file_path, 'r') as file:\n        return [line.strip() for line in file if line.startswith(prefix)]\n```",
    "summary": "Reads a file and returns lines that start with a specified prefix."
  },
  {
    "id": 465,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except IOError:\n        return \"Error reading file.\"\n```",
    "summary": "Counts the number of lines in a specified file, handling file not found and read errors."
  },
  {
    "id": 466,
    "code": "```python\ndef count_lines_in_file(file_path):\n    \"\"\"Counts the number of lines in a file.\"\"\"\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts the number of lines in a specified file."
  },
  {
    "id": 467,
    "code": "```python\ndef reverse_file_lines(input_file_path, output_file_path):\n    with open(input_file_path, 'r') as file:\n        lines = file.readlines()\n    with open(output_file_path, 'w') as file:\n        for line in reversed(lines):\n            file.write(line)\n```",
    "summary": "This function reads lines from an input file, reverses their order, and writes them to an output file."
  },
  {
    "id": 468,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 469,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        print(f\"File not found: {file_path}\")\n        return 0\n    except IOError:\n        print(f\"Error reading file: {file_path}\")\n        return 0\n```",
    "summary": "Counts the number of lines in a specified file, handling file not found and read errors."
  },
  {
    "id": 470,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 471,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n```",
    "summary": "Counts the number of lines in a specified file, returning an error message if the file does not exist."
  },
  {
    "id": 472,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 473,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 474,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for line in file)\n```",
    "summary": "Counts the number of lines in a specified text file."
  },
  {
    "id": 475,
    "code": "```python\ndef append_line_to_file(file_path, line):\n    \"\"\"Appends a single line to the end of a file.\"\"\"\n    with open(file_path, 'a') as file:\n        file.write(line + '\\n')\n```",
    "summary": "Appends a given line to the end of a specified file."
  },
  {
    "id": 476,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 477,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in the specified file."
  },
  {
    "id": 478,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 479,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a given file."
  },
  {
    "id": 480,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except IOError:\n        return \"Error reading file.\"\n```",
    "summary": "Counts the number of lines in a specified file and handles file not found or read errors."
  },
  {
    "id": 481,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 482,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 483,
    "code": "```python\ndef count_lines_in_file(filepath):\n    with open(filepath, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts the number of lines in a specified file."
  },
  {
    "id": 484,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a given text file."
  },
  {
    "id": 485,
    "code": "```python\ndef read_lines_from_file(file_path):\n    with open(file_path, 'r') as file:\n        return file.readlines()\n```",
    "summary": "Reads and returns all lines from a specified file as a list."
  },
  {
    "id": 486,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 487,
    "code": "```python\ndef read_csv_to_dict(file_path):\n    with open(file_path, mode='r', encoding='utf-8') as file:\n        lines = file.readlines()\n        header = lines[0].strip().split(',')\n        data_list = [dict(zip(header, line.strip().split(','))) for line in lines[1:]]\n    return data_list\n```",
    "summary": "Reads a CSV file and returns its contents as a list of dictionaries, using the first row as keys."
  },
  {
    "id": 488,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts the number of lines in a given file and returns the total count."
  },
  {
    "id": 489,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a given text file."
  },
  {
    "id": 490,
    "code": "```python\ndef count_lines_in_file(file_path):\n    \"\"\"\n    Counts the number of lines in a file.\n\n    Args:\n        file_path (str): The path to the file.\n\n    Returns:\n        int: The number of lines in the file.\n    \"\"\"\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts the number of lines in a file specified by its path."
  },
  {
    "id": 491,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return 0\n```",
    "summary": "Counts and returns the number of lines in a specified file, returning 0 if the file does not exist."
  },
  {
    "id": 492,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 493,
    "code": "```python\ndef read_csv_file(file_path):\n    with open(file_path, mode='r', encoding='utf-8') as file:\n        header = file.readline().strip().split(',')\n        data = [dict(zip(header, line.strip().split(','))) for line in file]\n    return data\n```",
    "summary": "Reads a CSV file and returns a list of dictionaries, where each dictionary represents a row with header keys."
  },
  {
    "id": 494,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts the number of lines in a specified file and returns the total count."
  },
  {
    "id": 495,
    "code": "```python\ndef count_words_in_file(file_path):\n    word_count = 0\n    with open(file_path, 'r', encoding='utf-8') as file:\n        for line in file:\n            words = line.split()\n            word_count += len(words)\n    return word_count\n```",
    "summary": "Counts the total number of words in a text file specified by the given file path."
  },
  {
    "id": 496,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for line in file)\n```",
    "summary": "Counts the number of lines in a specified text file."
  },
  {
    "id": 497,
    "code": "```python\ndef read_lines_with_keyword(file_path, keyword):\n    with open(file_path, 'r') as file:\n        return [line.strip() for line in file if keyword in line]\n```",
    "summary": "Reads a file and returns a list of lines containing a specified keyword."
  },
  {
    "id": 498,
    "code": "```python\ndef count_lines_in_file(file_path):\n    \"\"\"Counts the number of lines in a given text file.\"\"\"\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts the number of lines in a specified text file."
  },
  {
    "id": 499,
    "code": "```python\ndef append_line_to_file(file_path, line):\n    with open(file_path, 'a') as file:\n        file.write(line + '\\n')\n```",
    "summary": "Appends a new line to the end of a specified file."
  },
  {
    "id": 500,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a given text file."
  },
  {
    "id": 501,
    "code": "```python\ndef read_lines_with_prefix(file_path, prefix):\n    with open(file_path, 'r') as file:\n        return [line.strip() for line in file if line.startswith(prefix)]\n```",
    "summary": "Reads a file and returns a list of lines that start with a specified prefix."
  },
  {
    "id": 502,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 503,
    "code": "```python\ndef read_csv_to_dict(filename):\n    with open(filename, mode='r', encoding='utf-8') as file:\n        lines = file.readlines()\n    header = lines[0].strip().split(',')\n    return [dict(zip(header, line.strip().split(','))) for line in lines[1:]]\n```",
    "summary": "This function reads a CSV file and converts its content into a list of dictionaries, using the first line as the keys."
  },
  {
    "id": 504,
    "code": "```python\ndef read_csv_to_dict(file_path):\n    with open(file_path, mode='r', encoding='utf-8') as file:\n        headers = file.readline().strip().split(',')\n        data = [dict(zip(headers, line.strip().split(','))) for line in file]\n    return data\n```",
    "summary": "Reads a CSV file and returns its contents as a list of dictionaries, using the first row as headers."
  },
  {
    "id": 505,
    "code": "```python\ndef read_first_n_lines(file_path, n):\n    with open(file_path, 'r') as file:\n        return [next(file) for _ in range(n)]\n```",
    "summary": "Reads and returns the first n lines from the specified file."
  },
  {
    "id": 506,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 507,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 508,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except IOError:\n        return \"Error reading file.\"\n```",
    "summary": "Counts the number of lines in a file and handles file not found or read errors."
  },
  {
    "id": 509,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except IOError:\n        return \"An error occurred while reading the file.\"\n```",
    "summary": "Counts the number of lines in a given file, handling file not found and I/O errors."
  },
  {
    "id": 510,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 511,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts the number of lines in a specified text file."
  },
  {
    "id": 512,
    "code": "def count_words_in_file(filename):\n    try:\n        with open(filename, 'r') as file:\n            text = file.read()\n            words = text.split()\n            return len(words)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except IOError:\n        return \"Error reading file.\"",
    "summary": "Counts the number of words in a given file, handling file not found and read errors."
  },
  {
    "id": 513,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 514,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 515,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except IOError:\n        return \"Error reading file.\"\n```",
    "summary": "Counts the number of lines in a specified file and handles file not found or read errors."
  },
  {
    "id": 516,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts the number of lines in a specified file."
  },
  {
    "id": 517,
    "code": "```python\ndef count_words_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        content = file.read()\n        words = content.split()\n        return len(words)\n```",
    "summary": "Counts and returns the number of words in a given text file."
  },
  {
    "id": 518,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 519,
    "code": "```python\ndef count_lines_in_file(file_path):\n    \"\"\"Counts the number of lines in a given text file.\"\"\"\n    line_count = 0\n    with open(file_path, 'r') as file:\n        for _ in file:\n            line_count += 1\n    return line_count\n```",
    "summary": "Counts the number of lines in a specified text file and returns the count."
  },
  {
    "id": 520,
    "code": "```python\ndef read_lines_from_file(file_path):\n    \"\"\"Reads and returns all lines from a specified file as a list.\"\"\"\n    with open(file_path, 'r') as file:\n        lines = file.readlines()\n    return lines\n```",
    "summary": "Reads and returns all lines from a specified file as a list."
  },
  {
    "id": 521,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        line_count = sum(1 for _ in file)\n    return line_count\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 522,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in the specified file."
  },
  {
    "id": 523,
    "code": "```python\ndef count_lines_in_file(file_path):\n    \"\"\"Counts the number of lines in a given file.\"\"\"\n    with open(file_path, 'r') as file:\n        return sum(1 for line in file)\n```",
    "summary": "Counts the number of lines in a specified file."
  },
  {
    "id": 524,
    "code": "```python\ndef count_words_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        text = file.read()\n    words = text.split()\n    return len(words)\n```",
    "summary": "Counts the number of words in a text file specified by the file path."
  },
  {
    "id": 525,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for line in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 526,
    "code": "```python\ndef read_csv_to_dict(file_path):\n    with open(file_path, mode='r', encoding='utf-8') as file:\n        lines = file.readlines()\n    headers = lines[0].strip().split(',')\n    data_list = []\n    for line in lines[1:]:\n        values = line.strip().split(',')\n        data_dict = dict(zip(headers, values))\n        data_list.append(data_dict)\n    return data_list\n```",
    "summary": "Reads a CSV file and returns a list of dictionaries where each dictionary represents a row with headers as keys."
  },
  {
    "id": 527,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for line in file)\n```",
    "summary": "This function counts and returns the total number of lines in a specified text file."
  },
  {
    "id": 528,
    "code": "```python\ndef count_words_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        text = file.read()\n    words = text.split()\n    return len(words)\n```",
    "summary": "This function reads a text file and returns the total number of words in it."
  },
  {
    "id": 529,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a given file."
  },
  {
    "id": 530,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 531,
    "code": "```python\ndef append_line_to_file(file_path, line):\n    \"\"\"Appends a line of text to a file, creating the file if it doesn't exist.\"\"\"\n    with open(file_path, 'a') as file:\n        file.write(line + '\\n')\n```",
    "summary": "Appends a line of text to a specified file, creating the file if it does not exist."
  },
  {
    "id": 532,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 533,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 534,
    "code": "```python\ndef count_words_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        text = file.read()\n    return len(text.split())\n```",
    "summary": "Counts and returns the number of words in a file specified by the given file path."
  },
  {
    "id": 535,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        line_count = sum(1 for _ in file)\n    return line_count\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 536,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 537,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except IOError:\n        return \"Error reading file.\"\n```",
    "summary": "Counts the number of lines in a file and handles file not found or reading errors."
  },
  {
    "id": 538,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 539,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 540,
    "code": "```python\ndef count_lines_in_file(file_path):\n    \"\"\"Counts the number of lines in a text file.\"\"\"\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 541,
    "code": "```python\ndef count_words_in_file(file_path):\n    try:\n        with open(file_path, 'r', encoding='utf-8') as file:\n            return sum(len(line.split()) for line in file)\n    except FileNotFoundError:\n        print(f\"Error: The file at {file_path} was not found.\")\n        return 0\n```",
    "summary": "Counts the total number of words in a specified text file, returning 0 if the file is not found."
  },
  {
    "id": 542,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts the number of lines in a specified text file."
  },
  {
    "id": 543,
    "code": "```python\ndef count_words_in_file(file_path):\n    with open(file_path, 'r') as file:\n        text = file.read()\n    words = text.split()\n    return len(words)\n```",
    "summary": "Counts and returns the number of words in a specified text file."
  },
  {
    "id": 544,
    "code": "```python\ndef count_lines_in_file(file_path):\n    \"\"\"Counts the number of lines in a given file.\"\"\"\n    with open(file_path, 'r') as file:\n        return sum(1 for line in file)\n```",
    "summary": "This function counts and returns the number of lines in a specified file."
  },
  {
    "id": 545,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a given file."
  },
  {
    "id": 546,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 547,
    "code": "```python\ndef count_lines_in_file(file_path):\n    \"\"\"Counts the number of lines in a specified file.\"\"\"\n    line_count = 0\n    with open(file_path, 'r') as file:\n        for _ in file:\n            line_count += 1\n    return line_count\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 548,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 549,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 550,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts the number of lines in a given text file and returns the total."
  },
  {
    "id": 551,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 552,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 553,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 554,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 555,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts the number of lines in a specified text file."
  },
  {
    "id": 556,
    "code": "```python\ndef count_word_occurrences(file_path, word):\n    count = 0\n    with open(file_path, 'r', encoding='utf-8') as file:\n        for line in file:\n            count += line.lower().split().count(word.lower())\n    return count\n```",
    "summary": "Counts the occurrences of a specified word in a text file, ignoring case."
  },
  {
    "id": 557,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 558,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in the specified file."
  },
  {
    "id": 559,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except IOError:\n        return \"Error reading file.\"\n```",
    "summary": "Counts the number of lines in a specified file, handling file not found and IO errors."
  },
  {
    "id": 560,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a given file."
  },
  {
    "id": 561,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the total number of lines in a given file."
  },
  {
    "id": 562,
    "code": "```python\ndef count_lines_in_file(file_path):\n    \"\"\"Counts the number of lines in a given file.\"\"\"\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts the number of lines in the specified file."
  },
  {
    "id": 563,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 564,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in the specified file."
  },
  {
    "id": 565,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts the number of lines in a specified text file."
  },
  {
    "id": 566,
    "code": "```python\ndef read_file_lines(file_path):\n    try:\n        with open(file_path, 'r', encoding='utf-8') as file:\n            return file.readlines()\n    except FileNotFoundError:\n        return None\n```",
    "summary": "Reads all lines from a specified file and returns them as a list, or returns None if the file is not found."
  },
  {
    "id": 567,
    "code": "```python\ndef read_first_line(file_path):\n    \"\"\"Reads the first line of a file and returns it.\"\"\"\n    with open(file_path, 'r') as file:\n        return file.readline().rstrip('\\n')\n```",
    "summary": "Reads and returns the first line from a specified file, excluding the newline character."
  },
  {
    "id": 568,
    "code": "```python\ndef read_lines_with_keyword(file_path, keyword):\n    with open(file_path, 'r') as file:\n        return [line.strip() for line in file if keyword in line]\n```",
    "summary": "Reads a file and returns a list of lines containing a specified keyword."
  },
  {
    "id": 569,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 570,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 571,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except Exception as e:\n        return f\"An error occurred: {e}\"\n```",
    "summary": "This function counts the number of lines in a file specified by the file path and handles file not found and other exceptions."
  },
  {
    "id": 572,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a given text file."
  },
  {
    "id": 573,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        line_count = sum(1 for _ in file)\n    return line_count\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 574,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 575,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 576,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except IOError:\n        return \"Error reading file.\"\n```",
    "summary": "This function counts the number of lines in a file, handling file not found and read errors."
  },
  {
    "id": 577,
    "code": "```python\ndef count_lines_in_file(file_path):\n    \"\"\"\n    Counts the number of lines in a given file.\n\n    :param file_path: str - The path to the file to be read.\n    :return: int - The number of lines in the file.\n    \"\"\"\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 578,
    "code": "def count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 579,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 580,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "This function counts and returns the number of lines in a given text file."
  },
  {
    "id": 581,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts the number of lines in a given text file."
  },
  {
    "id": 582,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts the number of lines in a text file specified by the file path."
  },
  {
    "id": 583,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 584,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in the specified file."
  },
  {
    "id": 585,
    "code": "```python\ndef read_csv_as_dict(file_path):\n    \"\"\"\n    Reads a CSV file and returns its content as a list of dictionaries,\n    where each dictionary represents a row with column headers as keys.\n    \"\"\"\n    import csv\n\n    with open(file_path, mode='r', newline='') as file:\n        csv_reader = csv.DictReader(file)\n        return [row for row in csv_reader]\n```",
    "summary": "Reads a CSV file and returns its rows as a list of dictionaries, using headers as keys."
  },
  {
    "id": 586,
    "code": "```python\ndef count_words_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        text = file.read()\n    words = text.split()\n    return len(words)\n```",
    "summary": "Counts and returns the number of words in a given text file."
  },
  {
    "id": 587,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Returns the total number of lines in a specified text file."
  },
  {
    "id": 588,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a file specified by the given file path."
  },
  {
    "id": 589,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except IOError:\n        return \"Error reading file.\"\n```",
    "summary": "Counts the number of lines in a file specified by `file_path`, returning an error message if the file cannot be accessed."
  },
  {
    "id": 590,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 591,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 592,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "This function returns the count of lines in a specified text file."
  },
  {
    "id": 593,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 594,
    "code": "```python\ndef count_words_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        text = file.read()\n    return len(text.split())\n```",
    "summary": "Counts and returns the number of words in a specified text file."
  },
  {
    "id": 595,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for line in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except Exception as e:\n        return str(e)\n```",
    "summary": "Counts and returns the number of lines in a given file, handling file not found and other exceptions."
  },
  {
    "id": 596,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in the specified file."
  },
  {
    "id": 597,
    "code": "```python\ndef count_words_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        text = file.read()\n        words = text.split()\n        return len(words)\n```",
    "summary": "This function reads a file and returns the total number of words contained in it."
  },
  {
    "id": 598,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 599,
    "code": "```python\ndef count_words_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        text = file.read()\n    words = text.split()\n    return len(words)\n```",
    "summary": "Reads a file and returns the number of words it contains."
  },
  {
    "id": 600,
    "code": "```python\ndef count_lines_in_file(file_path):\n    \"\"\"Counts the number of lines in a file.\"\"\"\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts the number of lines in a given file."
  },
  {
    "id": 601,
    "code": "```python\ndef read_lines_with_keyword(filepath, keyword):\n    with open(filepath, 'r') as file:\n        return [line.strip() for line in file if keyword in line]\n```",
    "summary": "Reads a file and returns a list of lines containing a specified keyword."
  },
  {
    "id": 602,
    "code": "```python\ndef read_lines_from_file(file_path):\n    with open(file_path, 'r') as file:\n        return file.readlines()\n```",
    "summary": "Reads all lines from a file and returns them as a list of strings."
  },
  {
    "id": 603,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts the number of lines in a specified text file and returns the count."
  },
  {
    "id": 604,
    "code": "```python\ndef count_words_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        text = file.read()\n    words = text.split()\n    return len(words)\n```",
    "summary": "Counts and returns the number of words in a specified text file."
  },
  {
    "id": 605,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 606,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 607,
    "code": "```python\ndef count_lines_with_keyword(file_path, keyword):\n    with open(file_path, 'r') as file:\n        return sum(1 for line in file if keyword in line)\n```",
    "summary": "Counts the number of lines containing a specific keyword in a given file."
  },
  {
    "id": 608,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 609,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 610,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return 0\n```",
    "summary": "Counts and returns the number of lines in a specified file, returning 0 if the file does not exist."
  },
  {
    "id": 611,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in the specified file."
  },
  {
    "id": 612,
    "code": "```python\ndef read_first_n_lines(file_path, n):\n    \"\"\"Reads the first n lines of a file.\"\"\"\n    lines = []\n    with open(file_path, 'r') as file:\n        for _ in range(n):\n            line = file.readline()\n            if not line:\n                break\n            lines.append(line.rstrip('\\n'))\n    return lines\n```",
    "summary": "Reads and returns the first n lines from a specified file."
  },
  {
    "id": 613,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "This function counts the number of lines in a specified file."
  },
  {
    "id": 614,
    "code": "```python\ndef read_csv_to_dict(file_path):\n    import csv\n    result = []\n    with open(file_path, mode='r', newline='', encoding='utf-8') as file:\n        csv_reader = csv.DictReader(file)\n        for row in csv_reader:\n            result.append(dict(row))\n    return result\n```",
    "summary": "Reads a CSV file and returns its contents as a list of dictionaries, where each dictionary represents a row."
  },
  {
    "id": 615,
    "code": "```python\ndef count_lines_in_file(file_path):\n    \"\"\"Count the number of lines in a text file.\"\"\"\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts the number of lines in a text file specified by the file path."
  },
  {
    "id": 616,
    "code": "```python\ndef count_word_occurrences(file_path, word):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        text = file.read().lower()\n    return text.split().count(word.lower())\n```",
    "summary": "Counts the occurrences of a specific word in a text file, ignoring case."
  },
  {
    "id": 617,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 618,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except IOError:\n        return \"Error reading file.\"\n```",
    "summary": "Counts the number of lines in a given text file, handling file not found and IO errors."
  },
  {
    "id": 619,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except IOError:\n        return \"Error reading file.\"\n```",
    "summary": "Counts the number of lines in a given file, handling file not found and read errors."
  },
  {
    "id": 620,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except IOError:\n        return \"Error reading file.\"\n```",
    "summary": "Counts the number of lines in a specified file, returning an error message if the file cannot be accessed."
  },
  {
    "id": 621,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 622,
    "code": "```python\ndef extract_lines_with_keyword(file_path, keyword):\n    with open(file_path, 'r') as file:\n        return [line for line in file if keyword in line]\n```",
    "summary": "Reads a file and returns a list of lines containing a specified keyword."
  },
  {
    "id": 623,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 624,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 625,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the total number of lines in a specified file."
  },
  {
    "id": 626,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for line in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 627,
    "code": "```python\ndef read_lines_from_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return [line.strip() for line in file.readlines()]\n    except FileNotFoundError:\n        return []\n```",
    "summary": "Reads all lines from a file, stripping whitespace, and returns them as a list; returns an empty list if the file is not found."
  },
  {
    "id": 628,
    "code": "```python\ndef count_words_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        text = file.read()\n    words = text.split()\n    return len(words)\n```",
    "summary": "Counts the number of words in a text file specified by the given file path."
  },
  {
    "id": 629,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 630,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in the specified file."
  },
  {
    "id": 631,
    "code": "def read_csv_as_dict(file_path):\n    with open(file_path, mode='r', encoding='utf-8') as file:\n        header = file.readline().strip().split(',')\n        return [dict(zip(header, line.strip().split(','))) for line in file]",
    "summary": "Reads a CSV file and returns its contents as a list of dictionaries, using the first row as keys."
  },
  {
    "id": 632,
    "code": "```python\ndef read_csv_to_dict(file_path):\n    with open(file_path, 'r', encoding='utf-8') as f:\n        lines = f.readlines()\n        header = lines[0].strip().split(',')\n        return [dict(zip(header, line.strip().split(','))) for line in lines[1:]]\n```",
    "summary": "Reads a CSV file and returns a list of dictionaries where each dictionary represents a row with column headers as keys."
  },
  {
    "id": 633,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 634,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except IOError:\n        return \"Error reading the file.\"\n```",
    "summary": "Counts the number of lines in a file and handles file not found or read errors."
  },
  {
    "id": 635,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 636,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 637,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 638,
    "code": "```python\ndef read_csv_as_dict(file_path):\n    with open(file_path, mode='r', encoding='utf-8') as file:\n        lines = file.readlines()\n    headers = lines[0].strip().split(',')\n    data = [\n        dict(zip(headers, line.strip().split(',')))\n        for line in lines[1:]\n    ]\n    return data\n```",
    "summary": "Reads a CSV file and returns its content as a list of dictionaries, where each dictionary represents a row."
  },
  {
    "id": 639,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 640,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 641,
    "code": "```python\ndef replace_word_in_file(file_path, target_word, replacement_word):\n    with open(file_path, 'r') as file:\n        content = file.read()\n\n    updated_content = content.replace(target_word, replacement_word)\n\n    with open(file_path, 'w') as file:\n        file.write(updated_content)\n```",
    "summary": "Replaces all occurrences of a target word with a replacement word in a specified file."
  },
  {
    "id": 642,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for line in file)\n```",
    "summary": "Counts the number of lines in a text file specified by the given file path."
  },
  {
    "id": 643,
    "code": "```python\ndef count_word_occurrences(file_path, word):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        text = file.read()\n    return text.lower().split().count(word.lower())\n```",
    "summary": "Counts occurrences of a specific word in a text file, ignoring case."
  },
  {
    "id": 644,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            line_count = sum(1 for _ in file)\n        return line_count\n    except FileNotFoundError:\n        return \"File not found.\"\n    except IOError:\n        return \"Error opening file.\"\n```",
    "summary": "This function counts and returns the number of lines in a specified file, handling file not found and I/O errors."
  },
  {
    "id": 645,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except IOError:\n        return \"Error reading file.\"\n```",
    "summary": "Counts the number of lines in a given file, handling file not found and read errors."
  },
  {
    "id": 646,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 647,
    "code": "```python\ndef count_lines_in_file(file_path):\n    \"\"\"Counts the number of lines in a given text file.\"\"\"\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts the number of lines in a specified text file."
  },
  {
    "id": 648,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "This function counts and returns the number of lines in a specified text file."
  },
  {
    "id": 649,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a given file."
  },
  {
    "id": 650,
    "code": "def count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except IOError:\n        return \"Error reading file.\"",
    "summary": "Counts and returns the number of lines in a file, handling file not found and read errors."
  },
  {
    "id": 651,
    "code": "```python\ndef count_words_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        text = file.read()\n    words = text.split()\n    return len(words)\n```",
    "summary": "Counts and returns the number of words in a specified text file."
  },
  {
    "id": 652,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 653,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 654,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts the number of lines in a given text file."
  },
  {
    "id": 655,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a text file specified by the file path."
  },
  {
    "id": 656,
    "code": "```python\ndef replace_in_file(file_path, target_word, replacement_word):\n    with open(file_path, 'r') as file:\n        content = file.read()\n    new_content = content.replace(target_word, replacement_word)\n    with open(file_path, 'w') as file:\n        file.write(new_content)\n```",
    "summary": "This function replaces all occurrences of a target word with a replacement word in a specified file."
  },
  {
    "id": 657,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 658,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        print(\"File not found.\")\n        return -1\n```",
    "summary": "Counts the number of lines in a specified file, returning -1 if the file is not found."
  },
  {
    "id": 659,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except IOError:\n        return \"An error occurred while reading the file.\"\n```",
    "summary": "Counts the number of lines in a specified file, handling potential file access errors."
  },
  {
    "id": 660,
    "code": "```python\ndef count_words_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        content = file.read()\n    words = content.split()\n    return len(words)\n```",
    "summary": "Counts and returns the number of words in a specified text file."
  },
  {
    "id": 661,
    "code": "```python\ndef count_words_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        text = file.read()\n    words = text.split()\n    return len(words)\n```",
    "summary": "Counts and returns the number of words in a specified text file."
  },
  {
    "id": 662,
    "code": "```python\ndef read_csv_as_dicts(file_path):\n    with open(file_path, mode='r', encoding='utf-8') as file:\n        lines = file.readlines()\n    headers = lines[0].strip().split(',')\n    return [dict(zip(headers, line.strip().split(','))) for line in lines[1:]]\n```",
    "summary": "Reads a CSV file and returns a list of dictionaries, using the first row as headers."
  },
  {
    "id": 663,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 664,
    "code": "```python\ndef count_lines_in_file(file_path):\n    line_count = 0\n    with open(file_path, 'r') as file:\n        for line in file:\n            line_count += 1\n    return line_count\n```",
    "summary": "Counts the number of lines in a given text file and returns the total count."
  },
  {
    "id": 665,
    "code": "```python\ndef append_line_to_file(file_path, line):\n    with open(file_path, 'a') as file:\n        file.write(line + '\\n')\n```",
    "summary": "Appends a line of text to the end of a specified file, followed by a newline character."
  },
  {
    "id": 666,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 667,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 668,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts the number of lines in a specified text file."
  },
  {
    "id": 669,
    "code": "```python\ndef count_words_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        text = file.read()\n    words = text.split()\n    return len(words)\n```",
    "summary": "This function counts the number of words in a given text file."
  },
  {
    "id": 670,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except IOError:\n        return None\n```",
    "summary": "Counts and returns the number of lines in a specified file, or returns None if the file cannot be accessed."
  },
  {
    "id": 671,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 672,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        print(\"The specified file was not found.\")\n        return 0\n```",
    "summary": "Counts and returns the number of lines in a file, handling file not found errors gracefully."
  },
  {
    "id": 673,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for line in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 674,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "This function counts the number of lines in a file specified by the given file path."
  },
  {
    "id": 675,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "This function counts and returns the number of lines in a file specified by the given file path."
  },
  {
    "id": 676,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "This function counts and returns the number of lines in a specified text file."
  },
  {
    "id": 677,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except IOError:\n        return \"Error reading file.\"\n```",
    "summary": "Counts the number of lines in a specified file, handling file not found and IOError exceptions."
  },
  {
    "id": 678,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a given text file."
  },
  {
    "id": 679,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 680,
    "code": "```python\ndef count_words_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        text = file.read()\n    words = text.split()\n    return len(words)\n```",
    "summary": "Counts and returns the number of words in a given text file."
  },
  {
    "id": 681,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 682,
    "code": "```python\ndef count_words_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        text = file.read()\n    words = text.split()\n    return len(words)\n```",
    "summary": "Counts the number of words in a specified text file and returns the count."
  },
  {
    "id": 683,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a given text file."
  },
  {
    "id": 684,
    "code": "```python\ndef count_words_in_file(file_path):\n    try:\n        with open(file_path, 'r', encoding='utf-8') as file:\n            text = file.read()\n        words = text.split()\n        return len(words)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except Exception as e:\n        return f\"An error occurred: {e}\"\n```",
    "summary": "This function counts the number of words in a file specified by the given file path."
  },
  {
    "id": 685,
    "code": "```python\ndef count_lines_in_file(filepath):\n    \"\"\"Counts the number of lines in a text file.\"\"\"\n    try:\n        with open(filepath, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except Exception as e:\n        return f\"An error occurred: {e}\"\n```",
    "summary": "Counts the number of lines in a specified text file, handling file not found and other exceptions."
  },
  {
    "id": 686,
    "code": "```python\ndef count_words_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        text = file.read()\n    return len(text.split())\n```",
    "summary": "Counts and returns the number of words in a specified text file."
  },
  {
    "id": 687,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 688,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in the specified file."
  },
  {
    "id": 689,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 690,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts the number of lines in a specified file."
  },
  {
    "id": 691,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts the number of lines in a file specified by the given file path."
  },
  {
    "id": 692,
    "code": "```python\ndef count_lines_in_file(file_path):\n    \"\"\"Counts the number of lines in a specified text file.\"\"\"\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts the number of lines in a specified text file."
  },
  {
    "id": 693,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "This function counts and returns the number of lines in a specified text file."
  },
  {
    "id": 694,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        line_count = sum(1 for _ in file)\n    return line_count\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 695,
    "code": "```python\ndef extract_lines_with_keyword(file_path, keyword):\n    with open(file_path, 'r') as file:\n        matching_lines = [line.strip() for line in file if keyword in line]\n    return matching_lines\n```",
    "summary": "Extracts and returns lines from a file that contain a specified keyword."
  },
  {
    "id": 696,
    "code": "```python\ndef read_csv_to_dict(file_path):\n    with open(file_path, 'r') as file:\n        headers = file.readline().strip().split(',')\n        data = []\n        for line in file:\n            values = line.strip().split(',')\n            entry = dict(zip(headers, values))\n            data.append(entry)\n    return data\n```",
    "summary": "Reads a CSV file and converts its rows into a list of dictionaries using the first row as headers."
  },
  {
    "id": 697,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 698,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts the number of lines in a specified text file."
  },
  {
    "id": 699,
    "code": "```python\ndef write_lines_to_file(file_path, lines):\n    with open(file_path, 'w') as file:\n        for line in lines:\n            file.write(f\"{line}\\n\")\n```",
    "summary": "Writes a list of strings to a file, each string on a new line."
  },
  {
    "id": 700,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts the number of lines in a given text file."
  },
  {
    "id": 701,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        line_count = sum(1 for _ in file)\n    return line_count\n```",
    "summary": "This function counts the number of lines in a text file specified by the file path."
  },
  {
    "id": 702,
    "code": "```python\ndef count_lines_in_file(file_path):\n    \"\"\"Counts the number of lines in a file.\"\"\"\n    line_count = 0\n    with open(file_path, 'r', encoding='utf-8') as file:\n        for _ in file:\n            line_count += 1\n    return line_count\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 703,
    "code": "```python\ndef count_lines_in_file(file_path):\n    \"\"\"Counts the number of lines in a given file.\"\"\"\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 704,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts the number of lines in a specified text file."
  },
  {
    "id": 705,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 706,
    "code": "def count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 707,
    "code": "def read_lines_with_prefix(file_path, prefix):\n    with open(file_path, 'r') as file:\n        return [line.strip() for line in file if line.startswith(prefix)]",
    "summary": "Reads a file and returns a list of lines that start with a given prefix."
  },
  {
    "id": 708,
    "code": "def count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)",
    "summary": "Counts and returns the number of lines in a text file specified by the file path."
  },
  {
    "id": 709,
    "code": "def count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except Exception as e:\n        return f\"An error occurred: {e}\"",
    "summary": "Counts the number of lines in a file and handles file not found or other exceptions."
  },
  {
    "id": 710,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 711,
    "code": "```python\ndef count_words_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        text = file.read()\n        words = text.split()\n        return len(words)\n```",
    "summary": "Counts and returns the number of words in a text file given its file path."
  },
  {
    "id": 712,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except IOError:\n        return \"Error reading file.\"\n```",
    "summary": "Counts the number of lines in a given file, handling file not found and read errors."
  },
  {
    "id": 713,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 714,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for line in file)\n```",
    "summary": "This function counts and returns the number of lines in a specified file."
  },
  {
    "id": 715,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except IOError:\n        return \"Error reading file.\"\n```",
    "summary": "Counts the number of lines in a specified file, handling file not found and I/O errors."
  },
  {
    "id": 716,
    "code": "```python\ndef count_words_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        content = file.read()\n    words = content.split()\n    return len(words)\n```",
    "summary": "Counts and returns the number of words in a text file specified by its file path."
  },
  {
    "id": 717,
    "code": "```python\ndef count_words_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        text = file.read()\n    words = text.split()\n    return len(words)\n```",
    "summary": "Counts and returns the number of words in a given text file."
  },
  {
    "id": 718,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except IOError:\n        return \"Error reading file.\"\n```",
    "summary": "Counts the number of lines in a specified file and handles file not found or read errors."
  },
  {
    "id": 719,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except IOError:\n        return \"Error reading file.\"\n```",
    "summary": "Counts the number of lines in a specified file, returning an error message if the file cannot be found or read."
  },
  {
    "id": 720,
    "code": "```python\ndef extract_lines_with_keyword(file_path, keyword):\n    lines_with_keyword = []\n    with open(file_path, 'r', encoding='utf-8') as file:\n        for line in file:\n            if keyword in line:\n                lines_with_keyword.append(line.strip())\n    return lines_with_keyword\n```",
    "summary": "Extracts and returns lines containing a specified keyword from a file."
  },
  {
    "id": 721,
    "code": "```python\ndef count_lines_in_file(file_path):\n    \"\"\"Returns the number of lines in the specified file.\"\"\"\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 722,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a given file."
  },
  {
    "id": 723,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "This function counts and returns the number of lines in a given text file."
  },
  {
    "id": 724,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a given file."
  },
  {
    "id": 725,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for line in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 726,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"Error: File not found.\"\n    except IOError:\n        return \"Error: An I/O error occurred.\"\n```",
    "summary": "This function counts the number of lines in a specified file, handling file not found and I/O errors."
  },
  {
    "id": 727,
    "code": "```python\ndef count_lines_in_file(file_path):\n    \"\"\"Counts the number of lines in a given file.\"\"\"\n    try:\n        with open(file_path, 'r', encoding='utf-8') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except IOError:\n        return \"Error reading file.\"\n```",
    "summary": "Counts the number of lines in a specified file and handles potential file errors."
  },
  {
    "id": 728,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 729,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 730,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for line in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 731,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "This function counts and returns the number of lines in a specified text file."
  },
  {
    "id": 732,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts the number of lines in a specified text file."
  },
  {
    "id": 733,
    "code": "```python\ndef count_words_in_file(file_path):\n    try:\n        with open(file_path, 'r', encoding='utf-8') as file:\n            text = file.read()\n        words = text.split()\n        return len(words)\n    except FileNotFoundError:\n        return \"File not found.\"\n```",
    "summary": "Counts and returns the number of words in a specified text file, handling file not found errors."
  },
  {
    "id": 734,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 735,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in the specified file."
  },
  {
    "id": 736,
    "code": "```python\ndef read_csv_to_dict(file_path):\n    with open(file_path, mode='r', encoding='utf-8') as file:\n        lines = file.readlines()\n        headers = lines[0].strip().split(',')\n        data = [dict(zip(headers, line.strip().split(','))) for line in lines[1:]]\n    return data\n```",
    "summary": "Reads a CSV file and returns its contents as a list of dictionaries, using the first line as headers."
  },
  {
    "id": 737,
    "code": "```python\ndef count_lines_in_file(filepath):\n    with open(filepath, 'r') as file:\n        return sum(1 for line in file)\n```",
    "summary": "Counts and returns the number of lines in the specified file."
  },
  {
    "id": 738,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts the number of lines in a specified file."
  },
  {
    "id": 739,
    "code": "```python\ndef count_lines_in_file(file_path):\n    \"\"\"Counts the number of lines in a given text file.\"\"\"\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts the number of lines in a given text file."
  },
  {
    "id": 740,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            line_count = sum(1 for _ in file)\n        return line_count\n    except FileNotFoundError:\n        return \"File not found.\"\n    except Exception as e:\n        return f\"An error occurred: {e}\"\n```",
    "summary": "Counts the number of lines in a specified file, handling file not found and other exceptions."
  },
  {
    "id": 741,
    "code": "```python\ndef count_lines_in_file(file_path):\n    \"\"\"Counts the number of lines in a file.\"\"\"\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts the number of lines in a file located at the specified file path."
  },
  {
    "id": 742,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 743,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the total number of lines in a specified file."
  },
  {
    "id": 744,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Reads a file and returns the total number of lines in it."
  },
  {
    "id": 745,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts the number of lines in a given text file."
  },
  {
    "id": 746,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts the number of lines in a specified text file."
  },
  {
    "id": 747,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return 0\n```",
    "summary": "Counts and returns the number of lines in a specified file, returning 0 if the file does not exist."
  },
  {
    "id": 748,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 749,
    "code": "```python\ndef count_words_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        text = file.read()\n    words = text.split()\n    return len(words)\n```",
    "summary": "Counts and returns the number of words in a given text file."
  },
  {
    "id": 750,
    "code": "```python\ndef read_file_lines(filepath):\n    with open(filepath, 'r') as file:\n        lines = file.readlines()\n    return [line.strip() for line in lines]\n```",
    "summary": "Reads a file and returns a list of its lines with trailing whitespace removed."
  },
  {
    "id": 751,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 752,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 753,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for line in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 754,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 755,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in the specified file."
  },
  {
    "id": 756,
    "code": "```python\ndef count_lines_in_file(filepath):\n    \"\"\"Counts the number of lines in a file.\"\"\"\n    with open(filepath, 'r') as file:\n        return sum(1 for line in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 757,
    "code": "```python\ndef count_lines_in_file(file_path):\n    \"\"\"Counts the number of lines in a given file.\"\"\"\n    line_count = 0\n    with open(file_path, 'r') as file:\n        for _ in file:\n            line_count += 1\n    return line_count\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 758,
    "code": "```python\ndef read_csv_to_dict(file_path):\n    \"\"\"Reads a CSV file and returns a list of dictionaries, each representing a row.\"\"\"\n    import csv\n    with open(file_path, mode='r', newline='', encoding='utf-8') as file:\n        reader = csv.DictReader(file)\n        return [row for row in reader]\n```",
    "summary": "Reads a CSV file into a list of dictionaries, with each dictionary representing a row."
  },
  {
    "id": 759,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except Exception as e:\n        return f\"An error occurred: {e}\"\n```",
    "summary": "Counts and returns the number of lines in a specified file, handling file not found and other exceptions."
  },
  {
    "id": 760,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 761,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 762,
    "code": "```python\ndef read_csv_to_dict(filename):\n    with open(filename, mode='r', encoding='utf-8') as file:\n        lines = file.readlines()\n    header = lines[0].strip().split(',')\n    data = [dict(zip(header, line.strip().split(','))) for line in lines[1:]]\n    return data\n```",
    "summary": "Reads a CSV file and returns a list of dictionaries using the first row as keys."
  },
  {
    "id": 763,
    "code": "```python\ndef count_lines_in_file(file_path):\n    \"\"\"Returns the number of lines in a given file.\"\"\"\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 764,
    "code": "def read_lines_with_keyword(file_path, keyword):\n    results = []\n    with open(file_path, 'r') as file:\n        for line in file:\n            if keyword in line:\n                results.append(line.strip())\n    return results",
    "summary": "Reads a file and returns lines containing a specified keyword."
  },
  {
    "id": 765,
    "code": "def count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)",
    "summary": "Counts the number of lines in a given text file specified by `file_path`."
  },
  {
    "id": 766,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 767,
    "code": "```python\ndef count_word_occurrences(file_path, target_word):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        content = file.read()\n    words = content.split()\n    return words.count(target_word)\n```",
    "summary": "This function counts the occurrences of a specific word in a given text file."
  },
  {
    "id": 768,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 769,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a given file."
  },
  {
    "id": 770,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a given text file."
  },
  {
    "id": 771,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the total number of lines in a specified file."
  },
  {
    "id": 772,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except IOError:\n        return \"Error reading file.\"\n```",
    "summary": "Counts the number of lines in a file and handles file not found or read errors."
  },
  {
    "id": 773,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 774,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 775,
    "code": "```python\ndef count_lines_in_file(filepath):\n    with open(filepath, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 776,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for line in file)\n    except FileNotFoundError:\n        return 0\n```",
    "summary": "Counts and returns the number of lines in a specified file, returning 0 if the file is not found."
  },
  {
    "id": 777,
    "code": "```python\ndef read_csv_file_to_dict(filepath):\n    \"\"\"\n    Reads a CSV file and returns its content as a list of dictionaries.\n\n    Each dictionary represents a row with keys as column headers.\n    \"\"\"\n    import csv\n\n    with open(filepath, mode='r', newline='', encoding='utf-8') as file:\n        reader = csv.DictReader(file)\n        return [row for row in reader]\n```",
    "summary": "Reads a CSV file and returns its contents as a list of dictionaries using column headers as keys."
  },
  {
    "id": 778,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 779,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a given file."
  },
  {
    "id": 780,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 781,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 782,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in the specified file."
  },
  {
    "id": 783,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 784,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 785,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for line in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 786,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 787,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts the number of lines in a file specified by the given file path."
  },
  {
    "id": 788,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except IOError:\n        return \"Error reading file.\"\n```",
    "summary": "Counts the number of lines in a specified file, handling file not found and read errors gracefully."
  },
  {
    "id": 789,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        line_count = sum(1 for _ in file)\n    return line_count\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 790,
    "code": "```python\ndef read_csv_file_to_dict(file_path):\n    import csv\n    with open(file_path, mode='r', newline='', encoding='utf-8') as file:\n        csv_reader = csv.DictReader(file)\n        data_list = [row for row in csv_reader]\n    return data_list\n```",
    "summary": "Reads a CSV file and returns its contents as a list of dictionaries, with keys derived from the CSV header."
  },
  {
    "id": 791,
    "code": "```python\ndef count_lines_in_file(file_path):\n    \"\"\"Counts the number of lines in the specified file.\"\"\"\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a given text file."
  },
  {
    "id": 792,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts the number of lines in a specified text file."
  },
  {
    "id": 793,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts the number of lines in a file and returns the count."
  },
  {
    "id": 794,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            line_count = sum(1 for _ in file)\n        return line_count\n    except FileNotFoundError:\n        return \"File not found.\"\n```",
    "summary": "This function counts and returns the number of lines in a specified file, or returns an error message if the file is not found."
  },
  {
    "id": 795,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except IOError:\n        return \"Error reading file.\"\n```",
    "summary": "Counts the number of lines in a specified text file and handles file-related exceptions."
  },
  {
    "id": 796,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r', encoding='utf-8') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except Exception as e:\n        return f\"An error occurred: {e}\"\n```",
    "summary": "Counts and returns the number of lines in the specified file, handling file not found and other exceptions."
  },
  {
    "id": 797,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 798,
    "code": "```python\ndef read_lines_from_file(file_path):\n    \"\"\"Reads all lines from a file and returns them as a list of strings.\"\"\"\n    with open(file_path, 'r') as file:\n        lines = file.readlines()\n    return lines\n```",
    "summary": "Reads all lines from a specified file and returns them as a list of strings."
  },
  {
    "id": 799,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 800,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found\"\n    except IOError:\n        return \"Error reading file\"\n```",
    "summary": "Counts the number of lines in a specified file, returning an error message if the file cannot be read."
  },
  {
    "id": 801,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts the number of lines in a file specified by the given file path."
  },
  {
    "id": 802,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 803,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 804,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for line in file)\n```",
    "summary": "Counts the number of lines in a specified text file and returns the count."
  },
  {
    "id": 805,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 806,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n```",
    "summary": "This function counts the number of lines in a specified file, returning an error message if the file is not found."
  },
  {
    "id": 807,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 808,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 809,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r', encoding='utf-8') as file:\n            return sum(1 for line in file)\n    except FileNotFoundError:\n        return -1\n```",
    "summary": "Counts the number of lines in a file, returning -1 if the file is not found."
  },
  {
    "id": 810,
    "code": "def count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except IOError:\n        return \"An error occurred while reading the file.\"",
    "summary": "Counts the number of lines in a specified file, handling file not found and IO errors."
  },
  {
    "id": 811,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for line in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 812,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 813,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts the number of lines in a file specified by the given file path."
  },
  {
    "id": 814,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 815,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 816,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n```",
    "summary": "Counts the number of lines in a specified file and handles file not found errors."
  },
  {
    "id": 817,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a given file."
  },
  {
    "id": 818,
    "code": "```python\ndef count_words_in_file(file_path):\n    with open(file_path, 'r') as file:\n        text = file.read()\n    words = text.split()\n    return len(words)\n```",
    "summary": "Counts and returns the number of words in a specified text file."
  },
  {
    "id": 819,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 820,
    "code": "```python\ndef remove_lines_with_keyword(file_path, keyword):\n    with open(file_path, 'r') as file:\n        lines = file.readlines()\n    with open(file_path, 'w') as file:\n        for line in lines:\n            if keyword not in line:\n                file.write(line)\n```",
    "summary": "Removes all lines containing a specified keyword from a file."
  },
  {
    "id": 821,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return None\n```",
    "summary": "Counts and returns the number of lines in a given file, or returns None if the file is not found."
  },
  {
    "id": 822,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 823,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except IOError:\n        return \"Error reading file.\"\n```",
    "summary": "Counts the number of lines in a specified file and handles file not found or read errors."
  },
  {
    "id": 824,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts the number of lines in a given text file."
  },
  {
    "id": 825,
    "code": "```python\ndef read_first_n_lines(file_path, n):\n    with open(file_path, 'r') as file:\n        return [file.readline().rstrip() for _ in range(n)]\n```",
    "summary": "Reads and returns the first n lines from a specified file, stripping trailing newlines."
  },
  {
    "id": 826,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 827,
    "code": "```python\ndef count_lines_in_file(filename):\n    with open(filename, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in the specified file."
  },
  {
    "id": 828,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            line_count = sum(1 for _ in file)\n        return line_count\n    except FileNotFoundError:\n        return \"File not found.\"\n    except Exception as e:\n        return str(e)\n```",
    "summary": "Counts and returns the number of lines in a specified file, handling file not found and other exceptions."
  },
  {
    "id": 829,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 830,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for line in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 831,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 832,
    "code": "```python\ndef count_words_in_file(file_path):\n    word_count = 0\n    with open(file_path, 'r', encoding='utf-8') as file:\n        for line in file:\n            word_count += len(line.split())\n    return word_count\n```",
    "summary": "Counts and returns the total number of words in a specified text file."
  },
  {
    "id": 833,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except IOError:\n        return \"Error reading file.\"\n```",
    "summary": "Counts the number of lines in a specified file, returning an error message if the file is not found or unreadable."
  },
  {
    "id": 834,
    "code": "```python\ndef count_words_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        text = file.read()\n    words = text.split()\n    return len(words)\n```",
    "summary": "Counts and returns the number of words in a specified text file."
  },
  {
    "id": 835,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n```",
    "summary": "Counts the number of lines in a given text file, returning an error message if the file is not found."
  },
  {
    "id": 836,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for line in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 837,
    "code": "```python\ndef count_lines_in_file(file_path):\n    \"\"\"Counts the number of lines in a text file.\"\"\"\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts the number of lines in a specified text file."
  },
  {
    "id": 838,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 839,
    "code": "```python\ndef read_first_n_lines(file_path, n):\n    with open(file_path, 'r') as file:\n        return [next(file) for _ in range(n)]\n```",
    "summary": "Reads and returns the first n lines from a specified file."
  },
  {
    "id": 840,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts the number of lines in a file specified by the given file path."
  },
  {
    "id": 841,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 842,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts the number of lines in a file specified by the given file path."
  },
  {
    "id": 843,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 844,
    "code": "```python\ndef read_csv_file(file_path):\n    with open(file_path, mode='r', encoding='utf-8') as file:\n        headers = file.readline().strip().split(',')\n        data = [dict(zip(headers, line.strip().split(','))) for line in file]\n    return data\n```",
    "summary": "Reads a CSV file and returns a list of dictionaries where each dictionary represents a row with header-value pairs."
  },
  {
    "id": 845,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a given file."
  },
  {
    "id": 846,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 847,
    "code": "```python\ndef count_lines_in_file(filename):\n    \"\"\"Counts the number of lines in a file.\"\"\"\n    with open(filename, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts the number of lines in a given file."
  },
  {
    "id": 848,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in the specified file."
  },
  {
    "id": 849,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except IOError:\n        return \"Error reading file.\"\n```",
    "summary": "Counts the number of lines in a file and handles file not found or read errors gracefully."
  },
  {
    "id": 850,
    "code": "```python\ndef count_word_occurrences(file_path, target_word):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        content = file.read()\n    words = content.split()\n    return words.count(target_word)\n```",
    "summary": "Counts the occurrences of a specific word in a text file."
  },
  {
    "id": 851,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 852,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in the specified file."
  },
  {
    "id": 853,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a given text file."
  },
  {
    "id": 854,
    "code": "```python\ndef count_words_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        text = file.read()\n    words = text.split()\n    return len(words)\n```",
    "summary": "This function counts and returns the number of words in a specified text file."
  },
  {
    "id": 855,
    "code": "```python\ndef read_file_lines(filepath):\n    with open(filepath, 'r') as file:\n        return file.readlines()\n```",
    "summary": "Reads and returns all lines from a specified file as a list of strings."
  },
  {
    "id": 856,
    "code": "def count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)",
    "summary": "Counts the number of lines in a specified file and returns the total."
  },
  {
    "id": 857,
    "code": "```python\ndef read_file_lines_reversed(file_path):\n    with open(file_path, 'r') as file:\n        lines = file.readlines()\n    return [line.strip() for line in reversed(lines)]\n```",
    "summary": "Reads all lines from a file and returns them in reversed order, with whitespace stripped."
  },
  {
    "id": 858,
    "code": "```python\ndef count_lines_in_file(file_path):\n    \"\"\"Counts the number of lines in a given text file.\"\"\"\n    line_count = 0\n    with open(file_path, 'r', encoding='utf-8') as file:\n        for _ in file:\n            line_count += 1\n    return line_count\n```",
    "summary": "Counts the number of lines in a specified text file."
  },
  {
    "id": 859,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        raise FileNotFoundError(f\"The file at {file_path} does not exist.\")\n    except IOError:\n        raise IOError(f\"An error occurred while reading the file at {file_path}.\")\n```",
    "summary": "Counts the number of lines in a file specified by the file path, raising an error if the file cannot be accessed."
  },
  {
    "id": 860,
    "code": "```python\ndef count_words_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(len(line.split()) for line in file)\n```",
    "summary": "Counts the total number of words in a file specified by the given file path."
  },
  {
    "id": 861,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "This function counts and returns the number of lines in a specified file."
  },
  {
    "id": 862,
    "code": "```python\ndef count_lines_in_file(file_path):\n    \"\"\"Counts the number of lines in a given file.\"\"\"\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts the number of lines in a specified file."
  },
  {
    "id": 863,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 864,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "This function counts and returns the number of lines in a specified text file."
  },
  {
    "id": 865,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 866,
    "code": "```python\ndef count_words_in_file(file_path):\n    with open(file_path, 'r') as file:\n        text = file.read()\n    words = text.split()\n    return len(words)\n```",
    "summary": "Counts and returns the number of words in a given text file."
  },
  {
    "id": 867,
    "code": "```python\ndef count_lines_in_file(file_path):\n    line_count = 0\n    with open(file_path, 'r') as file:\n        for _ in file:\n            line_count += 1\n    return line_count\n```",
    "summary": "Counts the number of lines in a specified file and returns the total count."
  },
  {
    "id": 868,
    "code": "```python\ndef count_words_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        text = file.read()\n    words = text.split()\n    return len(words)\n```",
    "summary": "Counts and returns the number of words in a specified text file."
  },
  {
    "id": 869,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r', encoding='utf-8') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found\"\n    except IOError:\n        return \"Error reading file\"\n```",
    "summary": "Counts the number of lines in a given file and handles file-related exceptions."
  },
  {
    "id": 870,
    "code": "```python\ndef read_csv_file(file_path):\n    with open(file_path, mode='r', encoding='utf-8') as file:\n        header = file.readline().strip().split(',')\n        data = []\n        for line in file:\n            values = line.strip().split(',')\n            data.append(dict(zip(header, values)))\n    return data\n```",
    "summary": "Reads a CSV file and returns its contents as a list of dictionaries, using the first line as header keys."
  },
  {
    "id": 871,
    "code": "```python\ndef write_lines_to_file(file_path, lines):\n    with open(file_path, 'w') as file:\n        for line in lines:\n            file.write(line + '\\n')\n```",
    "summary": "Writes a list of strings to a file, each followed by a newline character."
  },
  {
    "id": 872,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for line in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 873,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 874,
    "code": "```python\ndef read_lines_from_file(file_path):\n    \"\"\"Reads all lines from a file and returns them as a list.\"\"\"\n    with open(file_path, 'r') as file:\n        lines = file.readlines()\n    return [line.strip() for line in lines]\n```",
    "summary": "Reads all lines from a specified file and returns them as a list of stripped strings."
  },
  {
    "id": 875,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts the number of lines in a specified text file and returns the total count."
  },
  {
    "id": 876,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for line in file)\n```",
    "summary": "Counts and returns the number of lines in the specified text file."
  },
  {
    "id": 877,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 878,
    "code": "```python\ndef count_words_in_file(file_path):\n    with open(file_path, 'r') as file:\n        content = file.read()\n    words = content.split()\n    return len(words)\n```",
    "summary": "Counts and returns the number of words in the specified text file."
  },
  {
    "id": 879,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r', encoding='utf-8') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found\"\n    except IOError:\n        return \"Error reading file\"\n```",
    "summary": "Counts the number of lines in a file and handles file not found or read errors."
  },
  {
    "id": 880,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except IOError:\n        return \"Error reading file.\"\n```",
    "summary": "Counts the number of lines in a file and handles file not found or read errors."
  },
  {
    "id": 881,
    "code": "```python\ndef read_csv_to_dict(file_path):\n    with open(file_path, mode='r', encoding='utf-8') as file:\n        lines = file.readlines()\n\n    headers = lines[0].strip().split(',')\n    data = [dict(zip(headers, line.strip().split(','))) for line in lines[1:]]\n    return data\n```",
    "summary": "Reads a CSV file and returns its content as a list of dictionaries, using the first row as headers."
  },
  {
    "id": 882,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 883,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for line in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 884,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 885,
    "code": "def count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return None",
    "summary": "Counts the number of lines in a file, returning None if the file is not found."
  },
  {
    "id": 886,
    "code": "```python\ndef count_words_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(len(line.split()) for line in file)\n```",
    "summary": "Counts and returns the total number of words in a given text file."
  },
  {
    "id": 887,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 888,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for line in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 889,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 890,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in the specified file."
  },
  {
    "id": 891,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 892,
    "code": "```python\ndef count_lines_in_file(filepath):\n    with open(filepath, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in the specified file."
  },
  {
    "id": 893,
    "code": "```python\ndef read_lines_from_file(file_path):\n    with open(file_path, 'r') as file:\n        lines = file.readlines()\n    return [line.strip() for line in lines]\n```",
    "summary": "Reads all lines from a file and returns them as a list of stripped strings."
  },
  {
    "id": 894,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a given text file."
  },
  {
    "id": 895,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r', encoding='utf-8') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        print(\"File not found.\")\n    except IOError:\n        print(\"Error opening file.\")\n```",
    "summary": "Counts the number of lines in a specified text file, handling file not found and I/O errors."
  },
  {
    "id": 896,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a given file."
  },
  {
    "id": 897,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 898,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return -1\n```",
    "summary": "This function counts the number of lines in a file, returning -1 if the file is not found."
  },
  {
    "id": 899,
    "code": "```python\ndef count_lines_in_file(file_path):\n    \"\"\"Counts the number of lines in a given text file.\"\"\"\n    line_count = 0\n    with open(file_path, 'r', encoding='utf-8') as file:\n        for _ in file:\n            line_count += 1\n    return line_count\n```",
    "summary": "Counts the number of lines in a text file specified by the file path."
  },
  {
    "id": 900,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a given text file."
  },
  {
    "id": 901,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "This function counts and returns the number of lines in a specified text file."
  },
  {
    "id": 902,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 903,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except IOError:\n        return \"Error reading file.\"\n```",
    "summary": "Counts the number of lines in a specified file and handles file not found and read errors."
  },
  {
    "id": 904,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 905,
    "code": "```python\ndef read_csv_to_dict(file_path):\n    with open(file_path, mode='r', encoding='utf-8') as file:\n        lines = file.readlines()\n    headers = lines[0].strip().split(',')\n    return [dict(zip(headers, line.strip().split(','))) for line in lines[1:]]\n```",
    "summary": "Reads a CSV file and returns its contents as a list of dictionaries, using the first row as headers."
  },
  {
    "id": 906,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in the specified file."
  },
  {
    "id": 907,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in the specified file."
  },
  {
    "id": 908,
    "code": "```python\ndef count_words_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        text = file.read()\n    words = text.split()\n    return len(words)\n```",
    "summary": "Counts and returns the number of words in a specified text file."
  },
  {
    "id": 909,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 910,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts the number of lines in a specified text file."
  },
  {
    "id": 911,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts the number of lines in a specified text file and returns the count."
  },
  {
    "id": 912,
    "code": "```python\ndef count_lines_in_file(file_path):\n    \"\"\"Counts the number of lines in a given file.\"\"\"\n    with open(file_path, 'r') as file:\n        return sum(1 for line in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 913,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        line_count = sum(1 for _ in file)\n    return line_count\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 914,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except IOError:\n        return \"Error reading file.\"\n```",
    "summary": "Counts and returns the number of lines in a specified file, handling file not found and read errors."
  },
  {
    "id": 915,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts the number of lines in a given text file."
  },
  {
    "id": 916,
    "code": "def count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except IOError:\n        return \"Error reading file.\"",
    "summary": "Counts and returns the number of lines in a specified file, handling file not found and read errors."
  },
  {
    "id": 917,
    "code": "```python\ndef reverse_file_lines(input_file_path, output_file_path):\n    with open(input_file_path, 'r') as infile:\n        lines = infile.readlines()\n    with open(output_file_path, 'w') as outfile:\n        for line in reversed(lines):\n            outfile.write(line)\n```",
    "summary": "This function reads a file and writes its lines in reverse order to a new file."
  },
  {
    "id": 918,
    "code": "```python\ndef count_words_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(len(line.split()) for line in file)\n```",
    "summary": "Counts and returns the total number of words in a specified text file."
  },
  {
    "id": 919,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a given text file."
  },
  {
    "id": 920,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for line in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 921,
    "code": "```python\ndef count_words_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        text = file.read()\n    words = text.split()\n    return len(words)\n```",
    "summary": "Counts and returns the number of words in a text file."
  },
  {
    "id": 922,
    "code": "```python\ndef count_lines_in_file(file_path):\n    count = 0\n    with open(file_path, 'r') as file:\n        for _ in file:\n            count += 1\n    return count\n```",
    "summary": "Counts and returns the number of lines in the specified file."
  },
  {
    "id": 923,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 924,
    "code": "```python\ndef count_words_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        text = file.read()\n    words = text.split()\n    return len(words)\n```",
    "summary": "Counts and returns the number of words in a text file specified by the given file path."
  },
  {
    "id": 925,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in the specified file."
  },
  {
    "id": 926,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 927,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 928,
    "code": "```python\ndef count_lines_in_file(file_path):\n    \"\"\"Counts the number of lines in a given text file.\"\"\"\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the total number of lines in a specified text file."
  },
  {
    "id": 929,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 930,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 931,
    "code": "```python\ndef count_lines_in_file(file_path):\n    line_count = 0\n    try:\n        with open(file_path, 'r') as file:\n            for line in file:\n                line_count += 1\n    except FileNotFoundError:\n        return f\"Error: The file at {file_path} was not found.\"\n    except Exception as e:\n        return f\"An error occurred: {e}\"\n    return line_count\n```",
    "summary": "This function counts the number of lines in a specified file, handling potential file not found errors."
  },
  {
    "id": 932,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 933,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 934,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "This function counts and returns the number of lines in a specified text file."
  },
  {
    "id": 935,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "This function counts and returns the number of lines in a given text file."
  },
  {
    "id": 936,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in the specified file."
  },
  {
    "id": 937,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r', encoding='utf-8') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except IOError:\n        return \"Error reading file.\"\n```",
    "summary": "Counts the number of lines in a file and handles file not found or read errors."
  },
  {
    "id": 938,
    "code": "```python\ndef read_csv_to_dict(file_path):\n    with open(file_path, mode='r', encoding='utf-8') as file:\n        lines = file.readlines()\n        header = lines[0].strip().split(',')\n        data = [dict(zip(header, line.strip().split(','))) for line in lines[1:]]\n    return data\n```",
    "summary": "Reads a CSV file and returns a list of dictionaries where each dictionary represents a row with column headers as keys."
  },
  {
    "id": 939,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "This function counts and returns the number of lines in a specified file."
  },
  {
    "id": 940,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a given file."
  },
  {
    "id": 941,
    "code": "```python\ndef count_lines_in_file(file_path):\n    \"\"\"Counts the number of lines in a specified file.\"\"\"\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        print(f\"The file at {file_path} was not found.\")\n        return 0\n```",
    "summary": "Counts and returns the number of lines in a specified file, handling file not found errors gracefully."
  },
  {
    "id": 942,
    "code": "```python\ndef count_words_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        text = file.read()\n    words = text.split()\n    return len(words)\n```",
    "summary": "Counts and returns the number of words in a file specified by the file path."
  },
  {
    "id": 943,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts the number of lines in a file specified by the file path."
  },
  {
    "id": 944,
    "code": "```python\ndef read_lines_with_prefix(file_path, prefix):\n    with open(file_path, 'r') as file:\n        return [line.strip() for line in file if line.startswith(prefix)]\n```",
    "summary": "This function reads a file and returns a list of lines that start with a specified prefix."
  },
  {
    "id": 945,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 946,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the total number of lines in a specified file."
  },
  {
    "id": 947,
    "code": "```python\ndef count_occurrences_in_file(file_path, word):\n    count = 0\n    with open(file_path, 'r', encoding='utf-8') as file:\n        for line in file:\n            count += line.lower().split().count(word.lower())\n    return count\n```",
    "summary": "Counts the occurrences of a specific word in a text file, ignoring case differences."
  },
  {
    "id": 948,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a given file."
  },
  {
    "id": 949,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts the number of lines in a given text file."
  },
  {
    "id": 950,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            line_count = sum(1 for _ in file)\n        return line_count\n    except FileNotFoundError:\n        return \"File not found.\"\n    except IOError:\n        return \"Error reading file.\"\n```",
    "summary": "This function counts the number of lines in a given file and handles file not found and read errors."
  },
  {
    "id": 951,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 952,
    "code": "```python\ndef count_lines_in_file(file_path):\n    \"\"\"\n    Counts and returns the number of lines in a given text file.\n    \n    :param file_path: Path to the file to be processed.\n    :return: Integer count of lines in the file.\n    \"\"\"\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 953,
    "code": "```python\ndef read_csv_to_dict(file_path):\n    with open(file_path, 'r') as file:\n        headers = file.readline().strip().split(',')\n        data_list = []\n        for line in file:\n            values = line.strip().split(',')\n            data_list.append(dict(zip(headers, values)))\n    return data_list\n```",
    "summary": "Reads a CSV file and returns a list of dictionaries, where each dictionary represents a row with column headers as keys."
  },
  {
    "id": 954,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 955,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in the specified file."
  },
  {
    "id": 956,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in the specified file."
  },
  {
    "id": 957,
    "code": "```python\ndef count_words_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        text = file.read()\n    words = text.split()\n    return len(words)\n```",
    "summary": "Reads a text file and returns the total count of words in the file."
  },
  {
    "id": 958,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for line in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 959,
    "code": "```python\ndef count_lines_in_file(filename):\n    with open(filename, 'r') as file:\n        return sum(1 for line in file)\n```",
    "summary": "Counts the number of lines in a specified text file and returns the total count."
  },
  {
    "id": 960,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for line in file)\n```",
    "summary": "This function reads a file and returns the total number of lines it contains."
  },
  {
    "id": 961,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "This function counts and returns the number of lines in a specified text file."
  },
  {
    "id": 962,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts the number of lines in a specified file and returns the total."
  },
  {
    "id": 963,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        line_count = sum(1 for _ in file)\n    return line_count\n```",
    "summary": "Counts and returns the number of lines in a given text file."
  },
  {
    "id": 964,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 965,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 966,
    "code": "```python\ndef count_lines_in_file(file_path):\n    \"\"\"Counts the number of lines in a given text file.\"\"\"\n    try:\n        with open(file_path, 'r', encoding='utf-8') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return -1\n```",
    "summary": "Counts and returns the number of lines in a specified text file, returning -1 if the file is not found."
  },
  {
    "id": 967,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the total number of lines in a specified text file."
  },
  {
    "id": 968,
    "code": "```python\ndef read_csv_to_dict(file_path):\n    import csv\n    data = []\n    with open(file_path, mode='r', newline='', encoding='utf-8') as file:\n        reader = csv.DictReader(file)\n        for row in reader:\n            data.append(row)\n    return data\n```",
    "summary": "Reads a CSV file and returns its contents as a list of dictionaries, where each dictionary represents a row."
  },
  {
    "id": 969,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 970,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        print(\"The file was not found.\")\n        return -1\n    except Exception as e:\n        print(f\"An error occurred: {e}\")\n        return -1\n```",
    "summary": "Counts and returns the number of lines in a specified file, handling exceptions for file not found and other errors."
  },
  {
    "id": 971,
    "code": "```python\ndef count_lines_in_file(file_path):\n    \"\"\"Counts the number of lines in a given text file.\"\"\"\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts the number of lines in a specified text file."
  },
  {
    "id": 972,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 973,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "This function counts and returns the number of lines in a given text file."
  },
  {
    "id": 974,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for line in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except IOError:\n        return \"Error reading file.\"\n```",
    "summary": "Counts and returns the number of lines in a specified file, handling file not found and read errors."
  },
  {
    "id": 975,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 976,
    "code": "```python\ndef count_lines_in_file(file_path):\n    \"\"\"Counts the number of lines in a file.\"\"\"\n    with open(file_path, 'r') as file:\n        line_count = sum(1 for _ in file)\n    return line_count\n```",
    "summary": "This function counts and returns the number of lines in a specified file."
  },
  {
    "id": 977,
    "code": "```python\ndef count_words_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        text = file.read()\n    return len(text.split())\n```",
    "summary": "This function reads a text file and returns the total number of words in it."
  },
  {
    "id": 978,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        print(f\"The file at {file_path} was not found.\")\n        return 0\n    except IOError:\n        print(\"An error occurred while reading the file.\")\n        return 0\n```",
    "summary": "Counts the number of lines in a given file, handling file not found and IO errors gracefully."
  },
  {
    "id": 979,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 980,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts the number of lines in a text file specified by the file path."
  },
  {
    "id": 981,
    "code": "```python\ndef count_words_in_file(filename):\n    try:\n        with open(filename, 'r', encoding='utf-8') as file:\n            content = file.read()\n            words = content.split()\n            return len(words)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except IOError:\n        return \"Error reading file.\"\n```",
    "summary": "The function counts and returns the number of words in a specified text file, handling errors for file access issues."
  },
  {
    "id": 982,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except Exception as e:\n        return f\"An error occurred: {e}\"\n```",
    "summary": "Counts the number of lines in a file and handles file not found and other exceptions."
  },
  {
    "id": 983,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 984,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the total number of lines in a specified text file."
  },
  {
    "id": 985,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 986,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts the number of lines in a specified file."
  },
  {
    "id": 987,
    "code": "```python\ndef count_lines_in_file(file_path):\n    \"\"\"Counts the number of lines in a file.\"\"\"\n    line_count = 0\n    with open(file_path, 'r', encoding='utf-8') as file:\n        for _ in file:\n            line_count += 1\n    return line_count\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 988,
    "code": "```python\ndef read_lines_reverse(file_path):\n    with open(file_path, 'r') as file:\n        lines = file.readlines()\n    return [line.strip() for line in reversed(lines)]\n```",
    "summary": "Reads a file and returns its lines in reverse order without newlines."
  },
  {
    "id": 989,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for line in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 990,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in the specified file."
  },
  {
    "id": 991,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except IOError:\n        return \"Error reading file.\"\n```",
    "summary": "Counts the number of lines in a specified file, returning an error message if the file cannot be accessed."
  },
  {
    "id": 992,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except Exception as e:\n        return f\"An error occurred: {e}\"\n```",
    "summary": "Counts the number of lines in a specified file, handling file not found and other exceptions."
  },
  {
    "id": 993,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a given file."
  },
  {
    "id": 994,
    "code": "```python\ndef count_lines_in_file(file_path):\n    \"\"\"Counts the number of lines in a given file.\"\"\"\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts the number of lines in a specified file."
  },
  {
    "id": 995,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 996,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a given file."
  },
  {
    "id": 997,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for line in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except IOError:\n        return \"Error reading file.\"\n```",
    "summary": "Counts the number of lines in a specified file, handling file not found and read errors."
  },
  {
    "id": 998,
    "code": "```python\ndef read_csv_to_dict(file_path):\n    with open(file_path, 'r') as file:\n        lines = file.readlines()\n    header = lines[0].strip().split(',')\n    data_list = [dict(zip(header, line.strip().split(','))) for line in lines[1:]]\n    return data_list\n```",
    "summary": "Reads a CSV file and returns its contents as a list of dictionaries, using the header row as keys."
  },
  {
    "id": 999,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except IOError:\n        return \"Error reading file.\"\n```",
    "summary": "Counts and returns the number of lines in a specified file, handling file not found and read errors."
  },
  {
    "id": 1000,
    "code": "```python\ndef append_line_to_file(file_path, line):\n    with open(file_path, 'a') as file:\n        file.write(line + '\\n')\n```",
    "summary": "Appends a new line to the end of a specified file."
  },
  {
    "id": 1001,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts the number of lines in a specified text file."
  },
  {
    "id": 1002,
    "code": "```python\ndef count_words_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        text = file.read()\n    words = text.split()\n    return len(words)\n```",
    "summary": "This function counts and returns the number of words in a given text file."
  },
  {
    "id": 1003,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "This function counts and returns the number of lines in a specified text file."
  },
  {
    "id": 1004,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for line in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 1005,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except IOError:\n        return \"Error reading file.\"\n```",
    "summary": "Counts the number of lines in a given file, handling file not found and read errors."
  },
  {
    "id": 1006,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 1007,
    "code": "```python\ndef count_lines_in_file(file_path):\n    \"\"\"\n    Counts the number of lines in a specified text file.\n\n    Args:\n        file_path (str): The path to the text file.\n\n    Returns:\n        int: The number of lines in the file.\n    \"\"\"\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "This function counts and returns the number of lines in a specified text file."
  },
  {
    "id": 1008,
    "code": "```python\ndef count_words_in_file(filepath):\n    with open(filepath, 'r', encoding='utf-8') as file:\n        text = file.read()\n    words = text.split()\n    return len(words)\n```",
    "summary": "This function counts and returns the number of words in a specified text file."
  },
  {
    "id": 1009,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts the number of lines in a specified text file and returns the total count."
  },
  {
    "id": 1010,
    "code": "```python\ndef read_file_lines(file_path):\n    \"\"\"Reads all lines from a file and returns them as a list.\"\"\"\n    with open(file_path, 'r') as file:\n        lines = file.readlines()\n    return lines\n```",
    "summary": "Reads all lines from a file and returns them as a list."
  },
  {
    "id": 1011,
    "code": "def read_lines_containing_keyword(file_path, keyword):\n    with open(file_path, 'r') as file:\n        return [line.strip() for line in file if keyword in line]",
    "summary": "Reads a file and returns a list of lines containing a specified keyword."
  },
  {
    "id": 1012,
    "code": "def count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 1013,
    "code": "def count_words_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        text = file.read()\n    words = text.split()\n    return len(words)",
    "summary": "Counts and returns the number of words in a specified text file."
  },
  {
    "id": 1014,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 1015,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except IOError:\n        return \"Error reading file.\"\n```",
    "summary": "This function counts the number of lines in a file and handles errors if the file is not found or cannot be read."
  },
  {
    "id": 1016,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        line_count = sum(1 for _ in file)\n    return line_count\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 1017,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a given file."
  },
  {
    "id": 1018,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a given file."
  },
  {
    "id": 1019,
    "code": "```python\ndef read_lines_from_file(file_path):\n    with open(file_path, 'r') as file:\n        return file.readlines()\n```",
    "summary": "Reads all lines from a specified file and returns them as a list of strings."
  },
  {
    "id": 1020,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "This function counts and returns the number of lines in a specified text file."
  },
  {
    "id": 1021,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 1022,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 1023,
    "code": "```python\ndef count_words_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        text = file.read()\n    words = text.split()\n    return len(words)\n```",
    "summary": "Counts and returns the number of words in a specified text file."
  },
  {
    "id": 1024,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts the number of lines in a specified text file."
  },
  {
    "id": 1025,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts the number of lines in a text file specified by the file path."
  },
  {
    "id": 1026,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r', encoding='utf-8') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        print(f\"Error: The file at {file_path} was not found.\")\n        return 0\n    except IOError:\n        print(f\"Error: An I/O error occurred while reading {file_path}.\")\n        return 0\n```",
    "summary": "Counts the number of lines in a specified file, handling file not found and I/O errors gracefully."
  },
  {
    "id": 1027,
    "code": "```python\ndef count_words_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        content = file.read()\n    words = content.split()\n    return len(words)\n```",
    "summary": "Counts the number of words in a specified text file."
  },
  {
    "id": 1028,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a given text file."
  },
  {
    "id": 1029,
    "code": "```python\ndef count_lines_in_file(file_path):\n    \"\"\"Counts the number of lines in a given text file.\"\"\"\n    line_count = 0\n    with open(file_path, 'r') as file:\n        for line in file:\n            line_count += 1\n    return line_count\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 1030,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts the number of lines in a specified file."
  },
  {
    "id": 1031,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 1032,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 1033,
    "code": "```python\ndef count_words_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        text = file.read()\n    words = text.split()\n    return len(words)\n```",
    "summary": "Counts and returns the number of words in a specified text file."
  },
  {
    "id": 1034,
    "code": "```python\ndef count_words_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        text = file.read()\n    return len(text.split())\n```",
    "summary": "Counts and returns the number of words in a specified text file."
  },
  {
    "id": 1035,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 1036,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts the number of lines in a specified text file."
  },
  {
    "id": 1037,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 1038,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        raise ValueError(f\"The file at {file_path} does not exist.\")\n```",
    "summary": "Counts the number of lines in a file and raises an error if the file does not exist."
  },
  {
    "id": 1039,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in the specified file."
  },
  {
    "id": 1040,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 1041,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts the number of lines in a specified text file."
  },
  {
    "id": 1042,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for line in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 1043,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 1044,
    "code": "```python\ndef read_file_lines_reverse(file_path):\n    with open(file_path, 'r') as file:\n        lines = file.readlines()\n    return lines[::-1]\n```",
    "summary": "This function reads a file and returns its lines in reverse order."
  },
  {
    "id": 1045,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except IOError:\n        return \"Error reading file.\"\n```",
    "summary": "Counts the number of lines in a file and handles file not found or read errors."
  },
  {
    "id": 1046,
    "code": "```python\ndef count_words_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        text = file.read()\n    words = text.split()\n    return len(words)\n```",
    "summary": "Counts the number of words in a text file specified by the given file path."
  },
  {
    "id": 1047,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for line in file)\n```",
    "summary": "Counts and returns the number of lines in a given file."
  },
  {
    "id": 1048,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in the specified file."
  },
  {
    "id": 1049,
    "code": "```python\ndef extract_lines_with_keyword(file_path, keyword):\n    with open(file_path, 'r') as file:\n        return [line.strip() for line in file if keyword in line]\n```",
    "summary": "Extracts and returns lines containing a specified keyword from a given file."
  },
  {
    "id": 1050,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 1051,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for line in file)\n```",
    "summary": "This function counts the number of lines in a specified text file."
  },
  {
    "id": 1052,
    "code": "def reverse_lines_in_file(input_file_path, output_file_path):\n    with open(input_file_path, 'r') as input_file:\n        lines = input_file.readlines()\n    with open(output_file_path, 'w') as output_file:\n        for line in reversed(lines):\n            output_file.write(line)",
    "summary": "This function reads lines from an input file, reverses their order, and writes them to an output file."
  },
  {
    "id": 1053,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "This function counts and returns the number of lines in a specified text file."
  },
  {
    "id": 1054,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts the number of lines in a specified text file and returns the total."
  },
  {
    "id": 1055,
    "code": "```python\ndef read_csv_to_dict(file_path):\n    with open(file_path, mode='r', encoding='utf-8') as file:\n        header = file.readline().strip().split(',')\n        return [dict(zip(header, line.strip().split(','))) for line in file]\n```",
    "summary": "Reads a CSV file into a list of dictionaries where each dictionary represents a row keyed by column headers."
  },
  {
    "id": 1056,
    "code": "```python\ndef count_words_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        text = file.read()\n    words = text.split()\n    return len(words)\n```",
    "summary": "This function counts and returns the number of words in a given text file."
  },
  {
    "id": 1057,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in the specified file."
  },
  {
    "id": 1058,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts the number of lines in a specified text file and returns the count."
  },
  {
    "id": 1059,
    "code": "```python\ndef read_csv_to_dict(file_path):\n    with open(file_path, mode='r', encoding='utf-8') as file:\n        lines = file.readlines()\n        headers = lines[0].strip().split(',')\n        data = [dict(zip(headers, line.strip().split(','))) for line in lines[1:]]\n    return data\n```",
    "summary": "Reads a CSV file and returns its contents as a list of dictionaries, using the first row as keys."
  },
  {
    "id": 1060,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        print(\"The file was not found.\")\n        return -1\n    except IOError:\n        print(\"An error occurred while reading the file.\")\n        return -1\n```",
    "summary": "Counts and returns the number of lines in a specified file, handling file not found and I/O errors."
  },
  {
    "id": 1061,
    "code": "```python\ndef count_word_occurrences(file_path, word):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        text = file.read()\n    return text.lower().split().count(word.lower())\n```",
    "summary": "Counts occurrences of a specific word in a file, ignoring case."
  },
  {
    "id": 1062,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 1063,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in the specified file."
  },
  {
    "id": 1064,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r', encoding='utf-8') as file:\n            line_count = sum(1 for _ in file)\n        return line_count\n    except FileNotFoundError:\n        return \"Error: File not found.\"\n    except IOError:\n        return \"Error: An I/O error occurred.\"\n```",
    "summary": "Counts the number of lines in a file and handles file not found and I/O errors."
  },
  {
    "id": 1065,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 1066,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 1067,
    "code": "```python\ndef read_lines_with_prefix(file_path, prefix):\n    with open(file_path, 'r') as file:\n        return [line.strip() for line in file if line.startswith(prefix)]\n```",
    "summary": "Reads a file and returns a list of lines that start with the specified prefix."
  },
  {
    "id": 1068,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "This function counts the number of lines in a given text file."
  },
  {
    "id": 1069,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts the number of lines in a specified file and returns the total count."
  },
  {
    "id": 1070,
    "code": "def count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for line in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except IOError:\n        return \"Error opening file.\"",
    "summary": "Counts and returns the number of lines in a specified text file, handling file not found and I/O errors."
  },
  {
    "id": 1071,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 1072,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts the number of lines in a specified text file."
  },
  {
    "id": 1073,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 1074,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except IOError:\n        return \"Error reading file.\"\n```",
    "summary": "Counts the number of lines in a file, returning an error message if the file cannot be found or read."
  },
  {
    "id": 1075,
    "code": "```python\ndef count_lines_in_file(file_path):\n    \"\"\"Counts the number of lines in a given file.\"\"\"\n    line_count = 0\n    with open(file_path, 'r') as file:\n        for _ in file:\n            line_count += 1\n    return line_count\n```",
    "summary": "Counts the number of lines in a specified file."
  },
  {
    "id": 1076,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts the number of lines in a given text file and returns the total."
  },
  {
    "id": 1077,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in the specified file."
  },
  {
    "id": 1078,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 1079,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 1080,
    "code": "```python\ndef count_lines_in_file(file_path):\n    \"\"\"Counts the number of lines in a file.\"\"\"\n    line_count = 0\n    with open(file_path, 'r') as file:\n        for _ in file:\n            line_count += 1\n    return line_count\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 1081,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except IOError:\n        return \"Error reading file.\"\n```",
    "summary": "This function counts the number of lines in a given file, handling file not found and read errors."
  },
  {
    "id": 1082,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 1083,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 1084,
    "code": "```python\ndef count_lines_in_file(file_path):\n    line_count = 0\n    with open(file_path, 'r', encoding='utf-8') as file:\n        for _ in file:\n            line_count += 1\n    return line_count\n```",
    "summary": "Counts and returns the number of lines in the specified text file."
  },
  {
    "id": 1085,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "This function counts the number of lines in a specified text file."
  },
  {
    "id": 1086,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts the number of lines in a given file."
  },
  {
    "id": 1087,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 1088,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"Error: File not found.\"\n    except IOError:\n        return \"Error: An I/O error occurred.\"\n```",
    "summary": "Counts and returns the number of lines in a specified file, handling file not found and I/O errors."
  },
  {
    "id": 1089,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 1090,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 1091,
    "code": "```python\ndef count_words_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        content = file.read()\n    words = content.split()\n    return len(words)\n```",
    "summary": "Counts and returns the total number of words in a specified text file."
  },
  {
    "id": 1092,
    "code": "```python\ndef count_lines_with_keyword(file_path, keyword):\n    with open(file_path, 'r') as file:\n        return sum(1 for line in file if keyword in line)\n```",
    "summary": "Counts the number of lines in a file that contain a specified keyword."
  },
  {
    "id": 1093,
    "code": "```python\ndef count_lines_in_file(file_path):\n    \"\"\"Count the number of lines in a given text file.\"\"\"\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for line in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 1094,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 1095,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 1096,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a given file."
  },
  {
    "id": 1097,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a given text file."
  },
  {
    "id": 1098,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            line_count = sum(1 for _ in file)\n        return line_count\n    except FileNotFoundError:\n        return f\"Error: The file at {file_path} was not found.\"\n    except IOError:\n        return f\"Error: An IOError occurred while accessing the file at {file_path}.\"\n```",
    "summary": "Counts the number of lines in a file, returning an error message if the file is not found or cannot be accessed."
  },
  {
    "id": 1099,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except IOError:\n        return \"Error reading file.\"\n```",
    "summary": "Counts the number of lines in a specified file, handling file not found and read errors."
  },
  {
    "id": 1100,
    "code": "```python\ndef count_words_in_file(file_path):\n    with open(file_path, 'r') as file:\n        text = file.read()\n    words = text.split()\n    return len(words)\n```",
    "summary": "Counts the number of words in a text file specified by the given file path."
  },
  {
    "id": 1101,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in the specified file."
  },
  {
    "id": 1102,
    "code": "```python\ndef read_csv_to_dict(file_path):\n    with open(file_path, mode='r', encoding='utf-8') as file:\n        lines = file.readlines()\n    keys = lines[0].strip().split(',')\n    result = [dict(zip(keys, line.strip().split(','))) for line in lines[1:]]\n    return result\n```",
    "summary": "Reads a CSV file into a list of dictionaries, using the first row as keys."
  },
  {
    "id": 1103,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 1104,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 1105,
    "code": "```python\ndef count_lines_in_file(file_path):\n    \"\"\"Counts the number of lines in a text file.\"\"\"\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts the number of lines in a text file specified by the given file path."
  },
  {
    "id": 1106,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for line in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 1107,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 1108,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 1109,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except IOError:\n        return \"Error reading file.\"\n```",
    "summary": "Counts the number of lines in a file, handling file not found and read errors."
  },
  {
    "id": 1110,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r', encoding='utf-8') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except IOError:\n        return \"Error reading the file.\"\n```",
    "summary": "Counts the number of lines in a file and handles file not found or read errors."
  },
  {
    "id": 1111,
    "code": "```python\ndef read_csv_to_dict(file_path):\n    with open(file_path, mode='r', encoding='utf-8') as file:\n        lines = file.readlines()\n        \n    headers = lines[0].strip().split(',')\n    data = []\n    \n    for line in lines[1:]:\n        values = line.strip().split(',')\n        entry = {headers[i]: values[i] for i in range(len(headers))}\n        data.append(entry)\n    \n    return data\n```",
    "summary": "Reads a CSV file and returns its contents as a list of dictionaries, with keys from the header row."
  },
  {
    "id": 1112,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 1113,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except Exception as e:\n        return f\"An error occurred: {str(e)}\"\n```",
    "summary": "Counts the number of lines in a given file, returning an error message if the file is not found or another error occurs."
  },
  {
    "id": 1114,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 1115,
    "code": "```python\ndef count_words_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        text = file.read()\n    words = text.split()\n    return len(words)\n```",
    "summary": "Counts and returns the number of words in a given text file."
  },
  {
    "id": 1116,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 1117,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 1118,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in the specified file."
  },
  {
    "id": 1119,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 1120,
    "code": "```python\ndef count_word_occurrences(file_path, target_word):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        text = file.read()\n    return text.lower().split().count(target_word.lower())\n```",
    "summary": "Counts the occurrences of a specified word in a text file, ignoring case."
  },
  {
    "id": 1121,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 1122,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 1123,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return -1\n```",
    "summary": "Counts the number of lines in a file, returning -1 if the file is not found."
  },
  {
    "id": 1124,
    "code": "```python\ndef count_lines_in_file(filepath):\n    with open(filepath, 'r', encoding='utf-8') as file:\n        return sum(1 for line in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 1125,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except IOError:\n        return \"Error reading file.\"\n```",
    "summary": "Counts the number of lines in a specified file and handles file not found or IO errors."
  },
  {
    "id": 1126,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 1127,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n```",
    "summary": "Counts the number of lines in a file and handles file not found errors."
  },
  {
    "id": 1128,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a given file."
  },
  {
    "id": 1129,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 1130,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 1131,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 1132,
    "code": "```python\ndef count_lines_in_file(file_path):\n    \"\"\"Count the number of lines in a given file.\"\"\"\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for line in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except Exception as e:\n        return f\"An error occurred: {e}\"\n```",
    "summary": "Counts the number of lines in a specified file, handling file not found and other exceptions."
  },
  {
    "id": 1133,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 1134,
    "code": "```python\ndef count_words_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        content = file.read()\n    words = content.split()\n    return len(words)\n```",
    "summary": "Counts and returns the number of words in a specified text file."
  },
  {
    "id": 1135,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 1136,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except (FileNotFoundError, IOError):\n        return -1\n```",
    "summary": "Counts the number of lines in a file, returning -1 if the file cannot be read."
  },
  {
    "id": 1137,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 1138,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a given text file."
  },
  {
    "id": 1139,
    "code": "```python\ndef count_lines_in_file(file_path):\n    \"\"\"Counts the number of lines in a specified file.\"\"\"\n    try:\n        with open(file_path, 'r', encoding='utf-8') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except IOError:\n        return \"Error reading file.\"\n```",
    "summary": "Counts the number of lines in a specified text file and handles file not found and read errors."
  },
  {
    "id": 1140,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return -1\n```",
    "summary": "Counts and returns the number of lines in a specified file, or returns -1 if the file is not found."
  },
  {
    "id": 1141,
    "code": "```python\ndef count_words_in_file(file_path):\n    \"\"\"Counts the number of words in a given text file.\"\"\"\n    word_count = 0\n    with open(file_path, 'r', encoding='utf-8') as file:\n        for line in file:\n            words = line.split()\n            word_count += len(words)\n    return word_count\n```",
    "summary": "Counts the number of words in a given text file."
  },
  {
    "id": 1142,
    "code": "```python\ndef read_lines_from_file(file_path):\n    with open(file_path, 'r') as file:\n        return file.readlines()\n```",
    "summary": "Reads all lines from a specified file and returns them as a list of strings."
  },
  {
    "id": 1143,
    "code": "```python\ndef count_lines_in_file(file_path):\n    \"\"\"Counts the number of lines in a given text file.\"\"\"\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts the number of lines in a specified text file."
  },
  {
    "id": 1144,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts the number of lines in a text file specified by the file path."
  },
  {
    "id": 1145,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 1146,
    "code": "```python\ndef read_first_n_lines(file_path, n):\n    with open(file_path, 'r') as file:\n        return [next(file).strip() for _ in range(n)]\n```",
    "summary": "Reads and returns the first n lines from a specified file as a list of strings."
  },
  {
    "id": 1147,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in the specified file."
  },
  {
    "id": 1148,
    "code": "```python\ndef count_lines_in_file(file_path):\n    \"\"\"Count the number of lines in a text file.\"\"\"\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except IOError:\n        return \"Error reading file.\"\n```",
    "summary": "This function counts the number of lines in a specified text file, handling file not found and IO errors."
  },
  {
    "id": 1149,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            line_count = sum(1 for _ in file)\n        return line_count\n    except FileNotFoundError:\n        return \"File not found.\"\n    except Exception as e:\n        return f\"An error occurred: {e}\"\n```",
    "summary": "Counts and returns the number of lines in a file, handling file not found and other exceptions."
  },
  {
    "id": 1150,
    "code": "```python\ndef count_word_occurrences(file_path, word):\n    with open(file_path, 'r') as file:\n        text = file.read()\n    return text.lower().split().count(word.lower())\n```",
    "summary": "Counts the occurrences of a specific word in a text file, ignoring case sensitivity."
  },
  {
    "id": 1151,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 1152,
    "code": "```python\ndef count_words_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        text = file.read()\n    return len(text.split())\n```",
    "summary": "This function counts and returns the number of words in a specified text file."
  },
  {
    "id": 1153,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 1154,
    "code": "```python\ndef count_lines_in_file(file_path):\n    \"\"\"Counts the number of lines in a given text file.\"\"\"\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts the number of lines in a specified text file."
  },
  {
    "id": 1155,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 1156,
    "code": "```python\ndef count_lines_in_file(file_path):\n    \"\"\"Count the number of lines in a given file.\"\"\"\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 1157,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except IOError:\n        return \"Error reading file.\"\n```",
    "summary": "Counts and returns the number of lines in a specified file, handling file not found and read errors."
  },
  {
    "id": 1158,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r', encoding='utf-8') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except IOError:\n        return \"Error reading file.\"\n```",
    "summary": "Counts the number of lines in a specified file, returning an error message if the file cannot be accessed."
  },
  {
    "id": 1159,
    "code": "```python\ndef count_lines_in_file(file_path):\n    \"\"\"Count the number of lines in a file.\"\"\"\n    line_count = 0\n    try:\n        with open(file_path, 'r', encoding='utf-8') as file:\n            for _ in file:\n                line_count += 1\n    except FileNotFoundError:\n        print(f\"File not found: {file_path}\")\n    except IOError:\n        print(f\"An error occurred while reading the file: {file_path}\")\n    return line_count\n```",
    "summary": "This function counts and returns the number of lines in a specified file, handling potential file not found or read errors."
  },
  {
    "id": 1160,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a given file."
  },
  {
    "id": 1161,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 1162,
    "code": "```python\ndef count_lines_in_file(filename):\n    try:\n        with open(filename, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return f\"Error: The file '{filename}' was not found.\"\n    except IOError:\n        return \"Error: An I/O error occurred.\"\n```",
    "summary": "Counts the number of lines in a specified file, handling file not found and I/O errors."
  },
  {
    "id": 1163,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in the specified file."
  },
  {
    "id": 1164,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a given text file."
  },
  {
    "id": 1165,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a given file."
  },
  {
    "id": 1166,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for line in file)\n```",
    "summary": "This function counts and returns the number of lines in a specified file."
  },
  {
    "id": 1167,
    "code": "```python\ndef count_words_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        text = file.read()\n    words = text.split()\n    return len(words)\n```",
    "summary": "Counts and returns the number of words in a given text file."
  },
  {
    "id": 1168,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a given file."
  },
  {
    "id": 1169,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return 0\n```",
    "summary": "Counts and returns the number of lines in a specified file, or returns 0 if the file is not found."
  },
  {
    "id": 1170,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts the number of lines in a specified text file."
  },
  {
    "id": 1171,
    "code": "```python\ndef count_lines_in_file(file_path):\n    \"\"\"Counts the number of lines in a specified file.\"\"\"\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts the number of lines in a specified file."
  },
  {
    "id": 1172,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "This function counts and returns the number of lines in a specified file."
  },
  {
    "id": 1173,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r', encoding='utf-8') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except IOError:\n        return \"Error reading file.\"\n```",
    "summary": "Counts and returns the number of lines in a specified file, handling file not found and read errors."
  },
  {
    "id": 1174,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 1175,
    "code": "```python\ndef count_words_in_file(file_path):\n    try:\n        with open(file_path, 'r', encoding='utf-8') as file:\n            content = file.read()\n            words = content.split()\n            return len(words)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except Exception as e:\n        return f\"An error occurred: {e}\"\n```",
    "summary": "This function counts the number of words in a specified text file, handling file not found and other exceptions."
  },
  {
    "id": 1176,
    "code": "```python\ndef count_lines_in_file(file_path):\n    \"\"\"Counts the number of lines in a given file.\"\"\"\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for line in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 1177,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for line in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 1178,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 1179,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r', encoding='utf-8') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except IOError:\n        return \"Error reading file.\"\n```",
    "summary": "Counts the number of lines in a file, returning an error message if the file is not found or cannot be read."
  },
  {
    "id": 1180,
    "code": "```python\ndef write_lines_to_file(file_path, lines):\n    \"\"\"Writes a list of lines to a specified file.\"\"\"\n    with open(file_path, 'w') as file:\n        for line in lines:\n            file.write(f\"{line}\\n\")\n```",
    "summary": "Writes a list of lines to a specified file, each followed by a newline."
  },
  {
    "id": 1181,
    "code": "```python\ndef count_lines_in_file(file_path):\n    count = 0\n    with open(file_path, 'r') as file:\n        for _ in file:\n            count += 1\n    return count\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 1182,
    "code": "```python\ndef count_lines_in_file(file_path):\n    line_count = 0\n    with open(file_path, 'r') as file:\n        for line in file:\n            line_count += 1\n    return line_count\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 1183,
    "code": "```python\ndef count_words_in_file(file_path):\n    word_count = 0\n    try:\n        with open(file_path, 'r', encoding='utf-8') as file:\n            for line in file:\n                words = line.split()\n                word_count += len(words)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except IOError:\n        return \"Error reading file.\"\n    return word_count\n```",
    "summary": "Counts and returns the number of words in a specified text file, handling file not found and read errors."
  },
  {
    "id": 1184,
    "code": "```python\ndef read_csv_to_dict(file_path):\n    with open(file_path, 'r') as file:\n        keys = file.readline().strip().split(',')\n        data = [dict(zip(keys, line.strip().split(','))) for line in file]\n    return data\n```",
    "summary": "Reads a CSV file and returns a list of dictionaries, each representing a row with column names as keys."
  },
  {
    "id": 1185,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 1186,
    "code": "def count_words_in_file(file_path):\n    with open(file_path, 'r') as file:\n        contents = file.read()\n    words = contents.split()\n    return len(words)",
    "summary": "Counts and returns the number of words in a specified text file."
  },
  {
    "id": 1187,
    "code": "```python\ndef count_words_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        text = file.read()\n        words = text.split()\n        return len(words)\n```",
    "summary": "Counts the number of words in a text file specified by the file path."
  },
  {
    "id": 1188,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r', encoding='utf-8') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except IOError:\n        return \"Error reading file.\"\n```",
    "summary": "Counts the number of lines in a specified file, handling file not found and read errors gracefully."
  },
  {
    "id": 1189,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return -1\n```",
    "summary": "Counts the number of lines in a file and returns -1 if the file is not found."
  },
  {
    "id": 1190,
    "code": "```python\ndef count_lines_in_file(file_path):\n    \"\"\"Counts the number of lines in a given text file.\"\"\"\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts the number of lines in a specified text file."
  },
  {
    "id": 1191,
    "code": "def count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except IOError:\n        return \"Error reading file.\"",
    "summary": "Counts the number of lines in a given file, handling file not found and read errors."
  },
  {
    "id": 1192,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return -1\n```",
    "summary": "Counts the number of lines in a file, returning -1 if the file is not found."
  },
  {
    "id": 1193,
    "code": "```python\ndef read_first_n_lines(file_path, n):\n    with open(file_path, 'r') as file:\n        lines = [file.readline().rstrip('\\n') for _ in range(n)]\n    return lines\n```",
    "summary": "Reads and returns the first n lines from a specified file, excluding newline characters."
  },
  {
    "id": 1194,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 1195,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 1196,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 1197,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a given text file."
  },
  {
    "id": 1198,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts the number of lines in a given text file."
  },
  {
    "id": 1199,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except IOError:\n        return \"Error reading file.\"\n```",
    "summary": "Counts and returns the number of lines in a given file, handling file not found and IO errors."
  },
  {
    "id": 1200,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts the number of lines in a specified file and returns the total count."
  },
  {
    "id": 1201,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 1202,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as f:\n        return sum(1 for _ in f)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 1203,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 1204,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return -1\n```",
    "summary": "Counts the number of lines in a given file and returns -1 if the file is not found."
  },
  {
    "id": 1205,
    "code": "```python\ndef read_csv_to_dict(file_path):\n    with open(file_path, mode='r', encoding='utf-8') as file:\n        headers = file.readline().strip().split(',')\n        data_list = []\n        for line in file:\n            values = line.strip().split(',')\n            record = dict(zip(headers, values))\n            data_list.append(record)\n    return data_list\n```",
    "summary": "Reads a CSV file and returns a list of dictionaries, each representing a row with headers as keys."
  },
  {
    "id": 1206,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 1207,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a given text file."
  },
  {
    "id": 1208,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts the number of lines in a specified file and returns the count."
  },
  {
    "id": 1209,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts the number of lines in a given text file."
  },
  {
    "id": 1210,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 1211,
    "code": "```python\ndef read_csv_to_dict(file_path):\n    result = []\n    with open(file_path, mode='r', encoding='utf-8') as file:\n        header = file.readline().strip().split(',')\n        for line in file:\n            values = line.strip().split(',')\n            record = dict(zip(header, values))\n            result.append(record)\n    return result\n```",
    "summary": "Reads a CSV file and returns a list of dictionaries, each representing a row with column headers as keys."
  },
  {
    "id": 1212,
    "code": "```python\ndef count_lines_in_file(file_path):\n    \"\"\"Counts the number of lines in a specified text file.\"\"\"\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts the number of lines in a specified text file."
  },
  {
    "id": 1213,
    "code": "def count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)",
    "summary": "Counts and returns the number of lines in a given file."
  },
  {
    "id": 1214,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except IOError:\n        return \"Error reading file.\"\n```",
    "summary": "Counts and returns the number of lines in a specified file, handling file not found and read errors."
  },
  {
    "id": 1215,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 1216,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a given file."
  },
  {
    "id": 1217,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 1218,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except IOError:\n        return \"Error reading file.\"\n```",
    "summary": "Counts the number of lines in a given file, handling file not found and read errors."
  },
  {
    "id": 1219,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "This function counts and returns the number of lines in a given text file."
  },
  {
    "id": 1220,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 1221,
    "code": "```python\ndef count_words_in_file(file_path):\n    try:\n        with open(file_path, 'r', encoding='utf-8') as file:\n            text = file.read()\n            word_count = len(text.split())\n        return word_count\n    except FileNotFoundError:\n        return \"File not found.\"\n    except Exception as e:\n        return str(e)\n```",
    "summary": "Counts and returns the number of words in a specified text file, handling file not found and other exceptions."
  },
  {
    "id": 1222,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 1223,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except IOError:\n        return \"Error reading file.\"\n```",
    "summary": "This function counts and returns the number of lines in a specified file, handling file not found and read errors."
  },
  {
    "id": 1224,
    "code": "```python\ndef count_lines_in_file(file_path):\n    \"\"\"Counts the number of lines in a given text file.\"\"\"\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts the number of lines in a specified text file."
  },
  {
    "id": 1225,
    "code": "def count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except IOError:\n        return \"Error reading file.\"",
    "summary": "Counts the number of lines in a file and handles file not found and read errors."
  },
  {
    "id": 1226,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a given file."
  },
  {
    "id": 1227,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts the number of lines in a specified text file and returns the total."
  },
  {
    "id": 1228,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts the number of lines in a specified text file."
  },
  {
    "id": 1229,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "This function counts and returns the number of lines in a specified text file."
  },
  {
    "id": 1230,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return -1\n```",
    "summary": "Counts the number of lines in a file and returns -1 if the file is not found."
  },
  {
    "id": 1231,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 1232,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "This function counts and returns the number of lines in a specified file."
  },
  {
    "id": 1233,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts the number of lines in a given file."
  },
  {
    "id": 1234,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in the specified file."
  },
  {
    "id": 1235,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 1236,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts the number of lines in a specified text file."
  },
  {
    "id": 1237,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 1238,
    "code": "```python\ndef count_word_occurrences(file_path, word):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        content = file.read()\n    return content.lower().split().count(word.lower())\n```",
    "summary": "This function counts the occurrences of a specific word in a text file, ignoring case."
  },
  {
    "id": 1239,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 1240,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r', encoding='utf-8') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except IOError:\n        return \"Error reading file.\"\n```",
    "summary": "Counts the number of lines in a specified file, handling file not found and reading errors."
  },
  {
    "id": 1241,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts the number of lines in a specified file and returns the total count."
  },
  {
    "id": 1242,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts the number of lines in a specified file."
  },
  {
    "id": 1243,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 1244,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 1245,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        raise ValueError(\"The specified file does not exist.\")\n```",
    "summary": "Counts the number of lines in a given file, raising an error if the file is not found."
  },
  {
    "id": 1246,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a given text file."
  },
  {
    "id": 1247,
    "code": "```python\ndef count_lines_in_file(file_path):\n    \"\"\"\n    Counts the number of lines in the specified file.\n\n    :param file_path: Path to the file to be read.\n    :return: Integer count of lines in the file.\n    \"\"\"\n    line_count = 0\n    with open(file_path, 'r') as file:\n        for _ in file:\n            line_count += 1\n    return line_count\n```",
    "summary": "Counts and returns the number of lines in the specified file."
  },
  {
    "id": 1248,
    "code": "```python\ndef count_words_in_file(file_path):\n    word_count = 0\n    with open(file_path, 'r', encoding='utf-8') as file:\n        for line in file:\n            words = line.split()\n            word_count += len(words)\n    return word_count\n```",
    "summary": "This function reads a text file and returns the total number of words contained within it."
  },
  {
    "id": 1249,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts the number of lines in a specified text file."
  },
  {
    "id": 1250,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 1251,
    "code": "```python\ndef count_lines_in_file(filepath):\n    \"\"\"Counts the number of lines in a file.\"\"\"\n    with open(filepath, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts the number of lines in a specified file and returns the total count."
  },
  {
    "id": 1252,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a given text file."
  },
  {
    "id": 1253,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 1254,
    "code": "```python\ndef count_words_in_file(file_path):\n    word_count = 0\n    with open(file_path, 'r', encoding='utf-8') as file:\n        for line in file:\n            words = line.split()\n            word_count += len(words)\n    return word_count\n```",
    "summary": "Counts and returns the total number of words in a given text file."
  },
  {
    "id": 1255,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except IOError:\n        return \"An error occurred while reading the file.\"\n```",
    "summary": "Counts and returns the number of lines in a specified file, handling file not found and read errors."
  },
  {
    "id": 1256,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "This function counts and returns the number of lines in a text file."
  },
  {
    "id": 1257,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r', encoding='utf-8') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except IOError:\n        return \"Error reading file.\"\n```",
    "summary": "Counts and returns the number of lines in a specified text file, handling potential file errors."
  },
  {
    "id": 1258,
    "code": "```\ndef count_words_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        text = file.read()\n    words = text.split()\n    return len(words)\n```",
    "summary": "Counts and returns the number of words in a specified text file."
  },
  {
    "id": 1259,
    "code": "```python\ndef count_lines_in_file(filename):\n    with open(filename, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a given text file."
  },
  {
    "id": 1260,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 1261,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 1262,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "This function counts and returns the number of lines in a specified file."
  },
  {
    "id": 1263,
    "code": "```python\ndef count_words_in_file(file_path):\n    with open(file_path, 'r') as file:\n        text = file.read()\n    words = text.split()\n    return len(words)\n```",
    "summary": "Counts and returns the number of words in a specified file."
  },
  {
    "id": 1264,
    "code": "```python\ndef count_lines_in_file(file_path):\n    \"\"\"Counts the number of lines in a given file.\"\"\"\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts the number of lines in a specified file."
  },
  {
    "id": 1265,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for line in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 1266,
    "code": "```python\ndef count_lines_in_file(file_path):\n    \"\"\"Counts the number of lines in a specified file.\"\"\"\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts the number of lines in a specified file."
  },
  {
    "id": 1267,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 1268,
    "code": "```python\ndef write_lines_to_file(file_path, lines):\n    with open(file_path, 'w') as file:\n        for line in lines:\n            file.write(f\"{line}\\n\")\n```",
    "summary": "Writes a list of strings to a specified file, each on a new line."
  },
  {
    "id": 1269,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 1270,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except IOError:\n        return \"Error reading file.\"\n```",
    "summary": "This function counts the number of lines in a specified file, handling file not found and read errors."
  },
  {
    "id": 1271,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 1272,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except Exception as e:\n        return f\"An error occurred: {e}\"\n```",
    "summary": "This function counts the number of lines in a specified file and handles potential errors, returning an error message if the file is not found or another exception occurs."
  },
  {
    "id": 1273,
    "code": "```python\ndef read_csv_as_dict(file_path):\n    result = []\n    with open(file_path, mode='r', encoding='utf-8') as file:\n        headers = file.readline().strip().split(',')\n        for line in file:\n            values = line.strip().split(',')\n            if len(values) == len(headers):\n                result.append(dict(zip(headers, values)))\n    return result\n```",
    "summary": "Reads a CSV file and returns its contents as a list of dictionaries, using the first line for keys."
  },
  {
    "id": 1274,
    "code": "```python\ndef count_lines_in_file(file_path):\n    \"\"\"Counts the number of lines in a text file.\"\"\"\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for line in file)\n```",
    "summary": "Counts the number of lines in a specified text file."
  },
  {
    "id": 1275,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except IOError:\n        return \"Error reading file.\"\n```",
    "summary": "Counts and returns the number of lines in a specified file, handling file not found and read errors."
  },
  {
    "id": 1276,
    "code": "```python\ndef read_first_n_lines(file_path, n):\n    with open(file_path, 'r') as file:\n        return [file.readline().strip() for _ in range(n)]\n```",
    "summary": "Reads and returns the first n lines from a specified file, stripping any trailing newlines."
  },
  {
    "id": 1277,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a given text file."
  },
  {
    "id": 1278,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 1279,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a file specified by the given file path."
  },
  {
    "id": 1280,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for line in file)\n```",
    "summary": "Counts and returns the number of lines in a given text file."
  },
  {
    "id": 1281,
    "code": "```python\ndef count_lines_in_file(file_path):\n    \"\"\"Counts the number of lines in a given file.\"\"\"\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts the number of lines in a specified text file."
  },
  {
    "id": 1282,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts the number of lines in a specified text file and returns the total."
  },
  {
    "id": 1283,
    "code": "```python\ndef read_csv_as_dicts(file_path):\n    with open(file_path, mode='r', encoding='utf-8') as file:\n        lines = file.readlines()\n        keys = lines[0].strip().split(',')\n        return [dict(zip(keys, line.strip().split(','))) for line in lines[1:]]\n```",
    "summary": "Reads a CSV file and returns its content as a list of dictionaries, using the first line as keys."
  },
  {
    "id": 1284,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 1285,
    "code": "```python\ndef count_words_in_file(file_path):\n    try:\n        with open(file_path, 'r', encoding='utf-8') as file:\n            text = file.read()\n            words = text.split()\n            return len(words)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except Exception as e:\n        return f\"An error occurred: {e}\"\n```",
    "summary": "This function counts and returns the number of words in a specified text file, handling file not found and other exceptions."
  },
  {
    "id": 1286,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 1287,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            line_count = sum(1 for _ in file)\n        return line_count\n    except FileNotFoundError:\n        return \"File not found.\"\n```",
    "summary": "Counts the number of lines in a specified file, returning the count or an error message if the file is not found."
  },
  {
    "id": 1288,
    "code": "```python\ndef count_words_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        text = file.read()\n        words = text.split()\n        return len(words)\n```",
    "summary": "Counts and returns the number of words in the specified text file."
  },
  {
    "id": 1289,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 1290,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except IOError:\n        return \"Error reading file.\"\n```",
    "summary": "This function counts and returns the number of lines in a specified text file, handling file not found and read errors."
  },
  {
    "id": 1291,
    "code": "```python\ndef count_words_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        content = file.read()\n    words = content.split()\n    return len(words)\n```",
    "summary": "Counts and returns the number of words in a text file specified by the file path."
  },
  {
    "id": 1292,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 1293,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r', encoding='utf-8') as file:\n            return sum(1 for _ in file)\n    except (FileNotFoundError, IOError):\n        return -1\n```",
    "summary": "Counts the number of lines in a file and returns -1 if the file is not found or an error occurs."
  },
  {
    "id": 1294,
    "code": "```python\ndef count_lines_in_file(file_path):\n    \"\"\"Counts the number of lines in a given file.\"\"\"\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"Error: File not found.\"\n```",
    "summary": "Counts the number of lines in a specified file, returning an error message if the file is not found."
  },
  {
    "id": 1295,
    "code": "```python\ndef count_words_in_file(file_path):\n    \"\"\"Counts the total number of words in a given text file.\"\"\"\n    try:\n        with open(file_path, 'r') as file:\n            content = file.read()\n        words = content.split()\n        return len(words)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except IOError:\n        return \"Error reading file.\"\n```",
    "summary": "Counts and returns the total number of words in a specified text file."
  },
  {
    "id": 1296,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "This function counts and returns the number of lines in a specified text file."
  },
  {
    "id": 1297,
    "code": "```python\ndef count_lines_in_file(file_path):\n    \"\"\"Counts the number of lines in a file.\"\"\"\n    with open(file_path, 'r') as file:\n        return sum(1 for line in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 1298,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "This function counts and returns the number of lines in a specified text file."
  },
  {
    "id": 1299,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 1300,
    "code": "```python\ndef count_word_occurrences(file_path, word):\n    \"\"\"\n    Counts the number of times a specific word appears in a text file.\n\n    :param file_path: Path to the text file to be processed.\n    :param word: The word to count occurrences of.\n    :return: The count of occurrences of the specified word.\n    \"\"\"\n    count = 0\n    with open(file_path, 'r', encoding='utf-8') as file:\n        for line in file:\n            count += line.lower().split().count(word.lower())\n    return count\n```",
    "summary": "Counts the occurrences of a specified word in a text file, treating it case-insensitively."
  },
  {
    "id": 1301,
    "code": "```python\ndef count_words_in_file(file_path):\n    word_count = 0\n    with open(file_path, 'r', encoding='utf-8') as file:\n        for line in file:\n            words = line.split()\n            word_count += len(words)\n    return word_count\n```",
    "summary": "Counts and returns the total number of words in a specified text file."
  },
  {
    "id": 1302,
    "code": "```python\ndef count_lines_containing_word(file_path, word):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for line in file if word in line)\n```",
    "summary": "Counts the number of lines containing a specific word in a given text file."
  },
  {
    "id": 1303,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in the specified file."
  },
  {
    "id": 1304,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 1305,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 1306,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in the specified file."
  },
  {
    "id": 1307,
    "code": "```python\ndef count_lines_in_file(filepath):\n    with open(filepath, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a given file."
  },
  {
    "id": 1308,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 1309,
    "code": "```python\ndef count_words_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        word_count = 0\n        for line in file:\n            words = line.split()\n            word_count += len(words)\n    return word_count\n```",
    "summary": "Counts the total number of words in a text file specified by the file path."
  },
  {
    "id": 1310,
    "code": "```python\ndef extract_lines_with_keyword(file_path, keyword):\n    with open(file_path, 'r') as file:\n        return [line for line in file if keyword in line]\n```",
    "summary": "Reads a file and returns a list of lines containing a specified keyword."
  },
  {
    "id": 1311,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 1312,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for line in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 1313,
    "code": "```python\ndef count_lines_in_file(filepath):\n    try:\n        with open(filepath, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except IOError:\n        return \"Error reading file.\"\n```",
    "summary": "This function counts the number of lines in a specified text file and handles file access errors."
  },
  {
    "id": 1314,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 1315,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 1316,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in the specified text file."
  },
  {
    "id": 1317,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 1318,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except IOError:\n        return \"Error reading file.\"\n```",
    "summary": "Counts and returns the number of lines in a specified text file, handling file not found and read errors."
  },
  {
    "id": 1319,
    "code": "```python\ndef count_lines_in_file(file_path):\n    \"\"\"\n    Counts the number of lines in a given file.\n\n    :param file_path: Path to the file to be processed.\n    :return: Number of lines in the file.\n    \"\"\"\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 1320,
    "code": "```python\ndef count_words_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        content = file.read()\n    words = content.split()\n    return len(words)\n```",
    "summary": "Counts and returns the number of words in a specified text file."
  },
  {
    "id": 1321,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except IOError:\n        return \"Error reading file.\"\n```",
    "summary": "The function counts the number of lines in a specified file and handles file not found and read errors."
  },
  {
    "id": 1322,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "This function counts and returns the number of lines in a specified file."
  },
  {
    "id": 1323,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 1324,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 1325,
    "code": "```python\ndef count_lines_in_file(file_path):\n    \"\"\"Counts the number of lines in a given file.\"\"\"\n    line_count = 0\n    with open(file_path, 'r') as file:\n        for line in file:\n            line_count += 1\n    return line_count\n```",
    "summary": "Counts the number of lines in a specified file."
  },
  {
    "id": 1326,
    "code": "```python\ndef read_lines_reverse(filepath):\n    with open(filepath, 'r') as file:\n        lines = file.readlines()\n    return [line.strip() for line in reversed(lines)]\n```",
    "summary": "Reads a file and returns its lines in reverse order without newline characters."
  },
  {
    "id": 1327,
    "code": "```python\ndef read_csv_to_dict(file_path):\n    with open(file_path, mode='r', encoding='utf-8') as file:\n        lines = file.readlines()\n        headers = lines[0].strip().split(',')\n        data = [dict(zip(headers, line.strip().split(','))) for line in lines[1:]]\n    return data\n```",
    "summary": "Reads a CSV file and returns its contents as a list of dictionaries, using the first row as headers."
  },
  {
    "id": 1328,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts the number of lines in a file specified by the given file path."
  },
  {
    "id": 1329,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "This function counts and returns the number of lines in a specified text file."
  },
  {
    "id": 1330,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a given file."
  },
  {
    "id": 1331,
    "code": "```python\ndef read_csv_to_dict(file_path):\n    with open(file_path, mode='r', encoding='utf-8') as file:\n        lines = file.readlines()\n    headers = lines[0].strip().split(',')\n    data = [dict(zip(headers, line.strip().split(','))) for line in lines[1:]]\n    return data\n```",
    "summary": "Reads a CSV file and returns its contents as a list of dictionaries, where each dictionary represents a row with headers as keys."
  },
  {
    "id": 1332,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except IOError:\n        return \"Error reading file.\"\n```",
    "summary": "Counts the number of lines in a file and handles file not found or read errors."
  },
  {
    "id": 1333,
    "code": "```python\ndef count_words_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        text = file.read()\n    words = text.split()\n    return len(words)\n```",
    "summary": "Counts and returns the number of words in a given text file."
  },
  {
    "id": 1334,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except IOError:\n        return \"Error reading file.\"\n```",
    "summary": "Counts the number of lines in a file and handles file access errors."
  },
  {
    "id": 1335,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 1336,
    "code": "```python\ndef count_words_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        text = file.read()\n    words = text.split()\n    return len(words)\n```",
    "summary": "Counts and returns the number of words in a given text file."
  },
  {
    "id": 1337,
    "code": "```python\ndef read_file_lines(filepath):\n    \"\"\"Reads a file and returns its contents as a list of lines.\"\"\"\n    with open(filepath, 'r') as file:\n        lines = file.readlines()\n    return lines\n```",
    "summary": "Reads a file and returns its contents as a list of lines."
  },
  {
    "id": 1338,
    "code": "```python\ndef read_csv_file(file_path):\n    with open(file_path, mode='r', encoding='utf-8') as file:\n        header = file.readline().strip().split(',')\n        data = []\n        for line in file:\n            values = line.strip().split(',')\n            record = dict(zip(header, values))\n            data.append(record)\n    return data\n```",
    "summary": "Reads a CSV file and returns its contents as a list of dictionaries, using the first row as header keys."
  },
  {
    "id": 1339,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 1340,
    "code": "```python\ndef read_csv_as_dict(file_path):\n    with open(file_path, mode='r', encoding='utf-8') as file:\n        lines = file.readlines()\n        keys = lines[0].strip().split(',')\n        return [dict(zip(keys, line.strip().split(','))) for line in lines[1:]]\n```",
    "summary": "Reads a CSV file and returns a list of dictionaries, each representing a row with column headers as keys."
  },
  {
    "id": 1341,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a given file."
  },
  {
    "id": 1342,
    "code": "```python\ndef count_lines_in_file(file_path):\n    \"\"\"Counts the number of lines in a given file.\"\"\"\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 1343,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return None\n```",
    "summary": "Counts the number of lines in a given file and returns None if the file is not found."
  },
  {
    "id": 1344,
    "code": "```python\ndef append_to_file(file_path, text):\n    with open(file_path, 'a') as file:\n        file.write(text + '\\n')\n```",
    "summary": "Appends a line of text to a specified file, creating a new line."
  },
  {
    "id": 1345,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except Exception as e:\n        return f\"An error occurred: {e}\"\n```",
    "summary": "This function counts the number of lines in a specified file, handling file not found and other exceptions."
  },
  {
    "id": 1346,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 1347,
    "code": "```python\ndef count_lines_in_file(file_path):\n    \"\"\"Counts the number of lines in a given file.\"\"\"\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts the number of lines in a specified file and returns the total."
  },
  {
    "id": 1348,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 1349,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for line in file)\n```",
    "summary": "This function counts and returns the number of lines in a specified text file."
  },
  {
    "id": 1350,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 1351,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "This function counts and returns the number of lines in a specified text file."
  },
  {
    "id": 1352,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 1353,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found\"\n    except IOError:\n        return \"Error reading file\"\n```",
    "summary": "Counts the number of lines in a specified file and handles potential file errors."
  },
  {
    "id": 1354,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r', encoding='utf-8') as file:\n            return sum(1 for line in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except IOError:\n        return \"An error occurred while reading the file.\"\n```",
    "summary": "Counts and returns the number of lines in a specified file, handling file not found and general I/O errors."
  },
  {
    "id": 1355,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        print(f\"File not found: {file_path}\")\n        return 0\n    except IOError:\n        print(f\"Error reading file: {file_path}\")\n        return 0\n```",
    "summary": "Counts the number of lines in a specified text file, handling file not found and read errors."
  },
  {
    "id": 1356,
    "code": "```python\ndef find_line_in_file(file_path, search_term):\n    with open(file_path, 'r') as file:\n        for line_number, line in enumerate(file, start=1):\n            if search_term in line:\n                return line_number, line.strip()\n    return None, None\n```",
    "summary": "Searches for a term in a file and returns the line number and content if found."
  },
  {
    "id": 1357,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a given file."
  },
  {
    "id": 1358,
    "code": "```python\ndef read_csv_to_dict(file_path):\n    import csv\n    data = []\n    with open(file_path, mode='r', newline='') as file:\n        csv_reader = csv.DictReader(file)\n        for row in csv_reader:\n            data.append(row)\n    return data\n```",
    "summary": "Reads a CSV file and returns a list of dictionaries, where each dictionary represents a row with column headers as keys."
  },
  {
    "id": 1359,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r', encoding='utf-8') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except Exception as e:\n        return f\"An error occurred: {e}\"\n```",
    "summary": "Counts the number of lines in a text file and handles file not found or other exceptions."
  },
  {
    "id": 1360,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 1361,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 1362,
    "code": "```python\ndef count_words_in_file(file_path):\n    with open(file_path, 'r') as file:\n        text = file.read()\n    words = text.split()\n    return len(words)\n```",
    "summary": "Counts and returns the number of words in a given text file."
  },
  {
    "id": 1363,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 1364,
    "code": "```python\ndef read_and_count_lines(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Reads a file and returns the total number of lines in it."
  },
  {
    "id": 1365,
    "code": "```python\ndef count_words_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(len(line.split()) for line in file)\n```",
    "summary": "Counts and returns the total number of words in a specified text file."
  },
  {
    "id": 1366,
    "code": "```python\ndef count_lines_in_file(file_path):\n    \"\"\"Counts the number of lines in a specified file.\"\"\"\n    line_count = 0\n    with open(file_path, 'r') as file:\n        for line in file:\n            line_count += 1\n    return line_count\n```",
    "summary": "Counts the number of lines in a specified file and returns the count."
  },
  {
    "id": 1367,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for line in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 1368,
    "code": "```python\ndef count_lines_in_file(filepath):\n    with open(filepath, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 1369,
    "code": "```python\ndef read_csv_to_dict(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        header = file.readline().strip().split(',')\n        data_list = []\n        for line in file:\n            values = line.strip().split(',')\n            record = dict(zip(header, values))\n            data_list.append(record)\n    return data_list\n```",
    "summary": "Reads a CSV file and returns its contents as a list of dictionaries, using the first row as keys."
  },
  {
    "id": 1370,
    "code": "```python\ndef count_lines_in_file(filepath):\n    \"\"\"Count the number of lines in a file.\"\"\"\n    line_count = 0\n    with open(filepath, 'r', encoding='utf-8') as file:\n        for _ in file:\n            line_count += 1\n    return line_count\n```",
    "summary": "Counts and returns the number of lines in the specified text file."
  },
  {
    "id": 1371,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for line in file)\n```",
    "summary": "Counts the number of lines in a given text file."
  },
  {
    "id": 1372,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 1373,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for line in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 1374,
    "code": "```python\ndef count_lines_in_file(file_path):\n    \"\"\"Counts the number of lines in a specified file.\"\"\"\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for line in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except IOError:\n        return \"Error reading file.\"\n```",
    "summary": "Counts the number of lines in a specified file, handling file not found and read errors."
  },
  {
    "id": 1375,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 1376,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 1377,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "This function counts and returns the number of lines in a specified file."
  },
  {
    "id": 1378,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a given file."
  },
  {
    "id": 1379,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 1380,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 1381,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        line_count = sum(1 for _ in file)\n    return line_count\n```",
    "summary": "Counts the number of lines in a specified text file and returns the count."
  },
  {
    "id": 1382,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        line_count = sum(1 for _ in file)\n    return line_count\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 1383,
    "code": "```python\ndef count_lines_in_file(file_path):\n    count = 0\n    with open(file_path, 'r') as file:\n        for _ in file:\n            count += 1\n    return count\n```",
    "summary": "Counts the number of lines in a given file and returns the count."
  },
  {
    "id": 1384,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a given text file."
  },
  {
    "id": 1385,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except Exception as e:\n        return f\"An error occurred: {e}\"\n```",
    "summary": "This function counts the number of lines in a specified file, returning an error message if the file is not found or another error occurs."
  },
  {
    "id": 1386,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a given file."
  },
  {
    "id": 1387,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 1388,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 1389,
    "code": "```python\ndef count_lines_in_file(file_path):\n    \"\"\"Counts the number of lines in a given text file.\"\"\"\n    line_count = 0\n    with open(file_path, 'r', encoding='utf-8') as file:\n        for _ in file:\n            line_count += 1\n    return line_count\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 1390,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 1391,
    "code": "```python\ndef reverse_file_content(input_file_path, output_file_path):\n    with open(input_file_path, 'r') as infile:\n        content = infile.readlines()\n    with open(output_file_path, 'w') as outfile:\n        for line in reversed(content):\n            outfile.write(line)\n```",
    "summary": "This function reads a file, reverses the order of its lines, and writes the result to a new file."
  },
  {
    "id": 1392,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for line in file)\n    except FileNotFoundError:\n        return -1\n```",
    "summary": "Counts and returns the number of lines in a file, or -1 if the file is not found."
  },
  {
    "id": 1393,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in the specified text file."
  },
  {
    "id": 1394,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts the number of lines in a specified text file."
  },
  {
    "id": 1395,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except IOError:\n        return \"Error reading file.\"\n```",
    "summary": "Counts the number of lines in a file and handles file not found and reading errors."
  },
  {
    "id": 1396,
    "code": "def count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)",
    "summary": "Counts and returns the number of lines in a given file."
  },
  {
    "id": 1397,
    "code": "def count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return -1",
    "summary": "Counts the number of lines in a file, returning -1 if the file is not found."
  },
  {
    "id": 1398,
    "code": "def count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)",
    "summary": "Counts the number of lines in a specified file."
  },
  {
    "id": 1399,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in the specified file."
  },
  {
    "id": 1400,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for line in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except IOError:\n        return \"Error reading file.\"\n```",
    "summary": "This function counts the number of lines in a specified file, handling file not found and read errors."
  },
  {
    "id": 1401,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except IOError:\n        return \"Error reading file.\"\n```",
    "summary": "Counts and returns the number of lines in a specified file, handling file not found and read errors."
  },
  {
    "id": 1402,
    "code": "def count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 1403,
    "code": "```python\ndef count_lines_in_file(file_path):\n    \"\"\"Counts the number of lines in a given file.\"\"\"\n    line_count = 0\n    with open(file_path, 'r') as file:\n        for _ in file:\n            line_count += 1\n    return line_count\n```",
    "summary": "Counts the number of lines in a specified file and returns the total count."
  },
  {
    "id": 1404,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "This function counts and returns the number of lines in a given text file."
  },
  {
    "id": 1405,
    "code": "```python\ndef count_word_occurrences(file_path, word):\n    \"\"\"\n    Counts how many times a specific word appears in a text file.\n    \n    :param file_path: Path to the text file.\n    :param word: Word to count occurrences of.\n    :return: The count of word occurrences.\n    \"\"\"\n    count = 0\n    with open(file_path, 'r', encoding='utf-8') as file:\n        for line in file:\n            count += line.lower().split().count(word.lower())\n    return count\n```",
    "summary": "Counts the number of occurrences of a specified word in a text file."
  },
  {
    "id": 1406,
    "code": "```python\ndef count_words_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(len(line.split()) for line in file)\n```",
    "summary": "Counts and returns the total number of words in a file specified by file_path."
  },
  {
    "id": 1407,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except IOError:\n        return -1\n```",
    "summary": "Counts the number of lines in a file and returns -1 if the file cannot be opened."
  },
  {
    "id": 1408,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in the specified file."
  },
  {
    "id": 1409,
    "code": "def replace_in_file(file_path, search_text, replace_text):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        content = file.read()\n    content = content.replace(search_text, replace_text)\n    with open(file_path, 'w', encoding='utf-8') as file:\n        file.write(content)",
    "summary": "This function replaces occurrences of a specified text in a file with another text."
  },
  {
    "id": 1410,
    "code": "```python\ndef extract_lines_with_keyword(file_path, keyword):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return [line.strip() for line in file if keyword in line]\n```",
    "summary": "This function reads a file and returns a list of lines containing a specific keyword."
  },
  {
    "id": 1411,
    "code": "```python\ndef extract_lines_with_keyword(file_path, keyword):\n    with open(file_path, 'r') as file:\n        return [line.strip() for line in file if keyword in line]\n```",
    "summary": "Extracts and returns lines containing a specific keyword from a file."
  },
  {
    "id": 1412,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 1413,
    "code": "```python\ndef count_words_in_file(file_path):\n    word_count = 0\n    with open(file_path, 'r', encoding='utf-8') as file:\n        for line in file:\n            words = line.split()\n            word_count += len(words)\n    return word_count\n```",
    "summary": "Counts the total number of words in a text file specified by the file path."
  },
  {
    "id": 1414,
    "code": "```python\ndef extract_lines_with_keyword(file_path, keyword):\n    with open(file_path, 'r') as file:\n        return [line.strip() for line in file if keyword in line]\n```",
    "summary": "This function reads a file and returns a list of lines containing a specified keyword."
  },
  {
    "id": 1415,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for line in file)\n```",
    "summary": "Counts and returns the number of lines in the specified file."
  },
  {
    "id": 1416,
    "code": "```python\ndef count_words_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        text = file.read()\n    return len(text.split())\n```",
    "summary": "Counts and returns the number of words in a specified text file."
  },
  {
    "id": 1417,
    "code": "```python\ndef read_lines_containing_keyword(file_path, keyword):\n    with open(file_path, 'r') as file:\n        return [line for line in file if keyword in line]\n```",
    "summary": "Reads a file and returns a list of lines containing a specified keyword."
  },
  {
    "id": 1418,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a given text file."
  },
  {
    "id": 1419,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 1420,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts the number of lines in a given text file."
  },
  {
    "id": 1421,
    "code": "```python\ndef count_lines_in_file(file_path):\n    \"\"\"Counts the number of lines in a given file.\"\"\"\n    with open(file_path, 'r') as file:\n        line_count = sum(1 for _ in file)\n    return line_count\n```",
    "summary": "This function counts and returns the number of lines in a specified text file."
  },
  {
    "id": 1422,
    "code": "```python\ndef count_lines_in_file(file_path):\n    \"\"\"Returns the number of lines in a specified text file.\"\"\"\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 1423,
    "code": "```python\ndef count_lines_in_file(file_path):\n    \"\"\"Counts the number of lines in a given file.\"\"\"\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for line in file)\n    except (IOError, FileNotFoundError):\n        return 0\n```",
    "summary": "Counts the number of lines in a specified file, returning 0 if the file cannot be accessed."
  },
  {
    "id": 1424,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except (IOError, FileNotFoundError):\n        return 0\n```",
    "summary": "Counts and returns the number of lines in a specified file, returning 0 if the file cannot be opened."
  },
  {
    "id": 1425,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 1426,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 1427,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a given text file."
  },
  {
    "id": 1428,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except IOError:\n        return \"Error reading file.\"\n```",
    "summary": "Counts and returns the number of lines in a specified file, handling file not found and read errors."
  },
  {
    "id": 1429,
    "code": "```python\ndef count_words_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        text = file.read()\n    words = text.split()\n    return len(words)\n```",
    "summary": "Counts and returns the number of words in a given text file."
  },
  {
    "id": 1430,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except IOError:\n        return \"Error reading file.\"\n```",
    "summary": "Counts the number of lines in a specified text file and handles file not found or read errors."
  },
  {
    "id": 1431,
    "code": "```python\ndef read_first_n_lines(file_path, n):\n    \"\"\"Reads the first n lines of a file and returns them as a list.\"\"\"\n    lines = []\n    with open(file_path, 'r') as file:\n        for i, line in enumerate(file):\n            if i < n:\n                lines.append(line.strip())\n            else:\n                break\n    return lines\n```",
    "summary": "Reads the first n lines from a file and returns them as a list."
  },
  {
    "id": 1432,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 1433,
    "code": "```python\ndef read_lines_reverse(filename):\n    with open(filename, 'r') as file:\n        lines = file.readlines()\n    return [line.strip() for line in reversed(lines)]\n```",
    "summary": "Reads a file and returns its lines in reverse order, stripping any trailing whitespace."
  },
  {
    "id": 1434,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 1435,
    "code": "```python\ndef read_csv_to_dict(file_path):\n    with open(file_path, mode='r', encoding='utf-8') as file:\n        lines = file.readlines()\n        headers = lines[0].strip().split(',')\n        return [dict(zip(headers, line.strip().split(','))) for line in lines[1:]]\n```",
    "summary": "Reads a CSV file and returns its contents as a list of dictionaries where each dictionary represents a row."
  },
  {
    "id": 1436,
    "code": "```python\ndef count_word_occurrences(file_path, word):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        text = file.read()\n    return text.lower().split().count(word.lower())\n```",
    "summary": "Counts occurrences of a specified word in a text file, ignoring case."
  },
  {
    "id": 1437,
    "code": "```python\ndef reverse_file_lines(input_file_path, output_file_path):\n    with open(input_file_path, 'r') as infile:\n        lines = infile.readlines()\n    with open(output_file_path, 'w') as outfile:\n        for line in reversed(lines):\n            outfile.write(line)\n```",
    "summary": "This function reads all lines from a file, reverses their order, and writes them to a new file."
  },
  {
    "id": 1438,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r', encoding='utf-8') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return -1\n```",
    "summary": "Counts the number of lines in a specified file, returning -1 if the file is not found."
  },
  {
    "id": 1439,
    "code": "def count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except IOError:\n        return \"Error reading file.\"",
    "summary": "This function counts the number of lines in a given file and handles file not found and read errors."
  },
  {
    "id": 1440,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts the number of lines in a specified text file."
  },
  {
    "id": 1441,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except IOError:\n        return \"Error opening file.\"\n```",
    "summary": "Counts the number of lines in a specified text file, handling file not found and I/O errors."
  },
  {
    "id": 1442,
    "code": "```python\ndef count_words_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        text = file.read()\n    return len(text.split())\n```",
    "summary": "Counts and returns the total number of words in a given text file."
  },
  {
    "id": 1443,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 1444,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a given file."
  },
  {
    "id": 1445,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 1446,
    "code": "```python\ndef count_lines_in_file(file_path):\n    \"\"\"Counts the number of lines in a given file.\"\"\"\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "This function counts and returns the number of lines in a specified file."
  },
  {
    "id": 1447,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a given file."
  },
  {
    "id": 1448,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts the number of lines in a specified file and returns the total count."
  },
  {
    "id": 1449,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 1450,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 1451,
    "code": "```python\ndef count_lines_in_file(file_path):\n    \"\"\"Counts the number of lines in a given file.\"\"\"\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts the number of lines in a specified file."
  },
  {
    "id": 1452,
    "code": "```python\ndef count_words_in_file(file_path):\n    with open(file_path, 'r') as file:\n        text = file.read()\n        words = text.split()\n    return len(words)\n```",
    "summary": "This function reads a file and returns the total number of words in it."
  },
  {
    "id": 1453,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        print(f\"The file {file_path} does not exist.\")\n        return None\n    except IOError:\n        print(f\"An error occurred while reading the file {file_path}.\")\n        return None\n```",
    "summary": "Counts the number of lines in a specified file, handling errors for file not found and I/O issues."
  },
  {
    "id": 1454,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        line_count = sum(1 for _ in file)\n    return line_count\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 1455,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts the total number of lines in a given file."
  },
  {
    "id": 1456,
    "code": "def count_lines_in_file(file_path):\n    \"\"\"Count the number of lines in a text file.\"\"\"\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return 0\n    except IOError:\n        return 0",
    "summary": "Counts and returns the number of lines in a specified text file, handling file not found and IO errors."
  },
  {
    "id": 1457,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a given text file."
  },
  {
    "id": 1458,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return 0\n```",
    "summary": "Counts the number of lines in a file specified by the given file path, returning 0 if the file does not exist."
  },
  {
    "id": 1459,
    "code": "```python\ndef read_file_lines(filepath):\n    with open(filepath, 'r', encoding='utf-8') as file:\n        return file.readlines()\n```",
    "summary": "Reads all lines from a file and returns them as a list of strings."
  },
  {
    "id": 1460,
    "code": "```python\ndef read_reverse_file(file_path):\n    with open(file_path, 'r') as file:\n        lines = file.readlines()\n    return [line.strip()[::-1] for line in lines]\n```",
    "summary": "Reads a file and returns a list of its lines reversed in order."
  },
  {
    "id": 1461,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in the specified file."
  },
  {
    "id": 1462,
    "code": "```python\ndef replace_in_file(file_path, target_string, replacement_string):\n    with open(file_path, 'r') as file:\n        content = file.read()\n    new_content = content.replace(target_string, replacement_string)\n    with open(file_path, 'w') as file:\n        file.write(new_content)\n```",
    "summary": "Replaces all occurrences of a target string with a replacement string in a specified file."
  },
  {
    "id": 1463,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 1464,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 1465,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except IOError:\n        return \"Error reading file.\"\n```",
    "summary": "Counts the number of lines in a file, handling file not found and read errors gracefully."
  },
  {
    "id": 1466,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "This function counts and returns the number of lines in a given file."
  },
  {
    "id": 1467,
    "code": "def count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except IOError:\n        return \"Error reading file.\"",
    "summary": "Counts and returns the number of lines in a specified file, handling file not found and read errors."
  },
  {
    "id": 1468,
    "code": "def count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 1469,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 1470,
    "code": "def count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r', encoding='utf-8') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return -1",
    "summary": "Counts the number of lines in a file and returns -1 if the file is not found."
  },
  {
    "id": 1471,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except IOError:\n        return \"Error opening file.\"\n```",
    "summary": "This function counts the number of lines in a specified file and handles file not found or opening errors."
  },
  {
    "id": 1472,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 1473,
    "code": "```python\ndef count_words_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        text = file.read()\n    words = text.split()\n    return len(words)\n```",
    "summary": "Counts and returns the number of words in a specified text file."
  },
  {
    "id": 1474,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 1475,
    "code": "```python\ndef read_first_n_lines(file_path, n):\n    try:\n        with open(file_path, 'r') as file:\n            lines = [next(file) for _ in range(n)]\n        return lines\n    except (IOError, StopIteration) as e:\n        return str(e)\n```",
    "summary": "Reads and returns the first n lines from a specified file, handling file I/O errors gracefully."
  },
  {
    "id": 1476,
    "code": "```python\ndef count_words_in_file(file_path):\n    \"\"\"\n    Counts the number of words in a given text file.\n\n    :param file_path: Path to the text file.\n    :return: The total count of words in the file.\n    \"\"\"\n    word_count = 0\n    with open(file_path, 'r', encoding='utf-8') as file:\n        for line in file:\n            words = line.split()\n            word_count += len(words)\n    return word_count\n```",
    "summary": "Counts the number of words in a specified text file."
  },
  {
    "id": 1477,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a given text file."
  },
  {
    "id": 1478,
    "code": "```python\ndef read_file_lines(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return file.readlines()\n```",
    "summary": "Reads and returns all lines from a file as a list of strings."
  },
  {
    "id": 1479,
    "code": "```python\ndef count_lines_in_file(file_path):\n    \"\"\"Counts the number of lines in the specified file.\"\"\"\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts the number of lines in a specified text file."
  },
  {
    "id": 1480,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 1481,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 1482,
    "code": "```python\ndef count_words_in_file(file_path):\n    try:\n        with open(file_path, 'r', encoding='utf-8') as file:\n            text = file.read()\n        return len(text.split())\n    except FileNotFoundError:\n        return \"File not found.\"\n    except Exception as e:\n        return f\"An error occurred: {e}\"\n```",
    "summary": "This function counts and returns the number of words in a file specified by its file path."
  },
  {
    "id": 1483,
    "code": "```python\ndef read_file_lines(file_path):\n    \"\"\"Reads a file and returns its content as a list of lines.\"\"\"\n    with open(file_path, 'r') as file:\n        lines = file.readlines()\n    return [line.strip() for line in lines]\n```",
    "summary": "Reads a file and returns its content as a list of lines without newline characters."
  },
  {
    "id": 1484,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts the number of lines in a specified file."
  },
  {
    "id": 1485,
    "code": "```python\ndef read_csv_to_dict(file_path):\n    with open(file_path, mode='r', encoding='utf-8') as file:\n        lines = file.readlines()\n        headers = lines[0].strip().split(',')\n        data_list = []\n        for line in lines[1:]:\n            values = line.strip().split(',')\n            data_list.append(dict(zip(headers, values)))\n    return data_list\n```",
    "summary": "Reads a CSV file and returns a list of dictionaries where each dictionary represents a row, using the first row as headers."
  },
  {
    "id": 1486,
    "code": "```python\ndef count_lines_in_file(file_path):\n    \"\"\"Counts the number of lines in a given file.\"\"\"\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts the number of lines in a specified file."
  },
  {
    "id": 1487,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "This function counts and returns the number of lines in a specified text file."
  },
  {
    "id": 1488,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for line in file)\n```",
    "summary": "Counts and returns the number of lines in the specified file."
  },
  {
    "id": 1489,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 1490,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r', encoding='utf-8') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return 0\n```",
    "summary": "Counts the number of lines in a specified text file, returning 0 if the file is not found."
  },
  {
    "id": 1491,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r') as file:\n            return sum(1 for line in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except IOError:\n        return \"Error reading file.\"\n```",
    "summary": "Counts and returns the number of lines in a file, handling file not found and read errors."
  },
  {
    "id": 1492,
    "code": "```python\ndef read_lines_with_keyword(file_path, keyword):\n    with open(file_path, 'r') as file:\n        return [line.strip() for line in file if keyword in line]\n```",
    "summary": "Reads and returns lines containing a specified keyword from a file."
  },
  {
    "id": 1493,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified text file."
  },
  {
    "id": 1494,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in the specified file."
  },
  {
    "id": 1495,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a specified file."
  },
  {
    "id": 1496,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in the specified file."
  },
  {
    "id": 1497,
    "code": "```python\ndef count_lines_in_file(file_path):\n    try:\n        with open(file_path, 'r', encoding='utf-8') as file:\n            return sum(1 for _ in file)\n    except FileNotFoundError:\n        return \"File not found.\"\n    except IOError:\n        return \"Error reading file.\"\n```",
    "summary": "Counts the number of lines in a specified file and handles file not found or read errors."
  },
  {
    "id": 1498,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "Counts and returns the number of lines in a given text file."
  },
  {
    "id": 1499,
    "code": "```python\ndef count_words_in_file(file_path):\n    word_count = 0\n    with open(file_path, 'r', encoding='utf-8') as file:\n        for line in file:\n            words = line.split()\n            word_count += len(words)\n    return word_count\n```",
    "summary": "Counts the total number of words in a text file specified by the file path."
  },
  {
    "id": 1500,
    "code": "```python\ndef count_lines_in_file(file_path):\n    with open(file_path, 'r', encoding='utf-8') as file:\n        return sum(1 for _ in file)\n```",
    "summary": "This function counts and returns the number of lines in a given text file."
  }
]