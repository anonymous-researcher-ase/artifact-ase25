[
  {
    "task": "Write a function that checks if two strings are equal, ignoring case sensitivity.",
    "code": "```javascript\nfunction areStringsEqualIgnoreCase(str1, str2) {\n    return str1.toLowerCase() === str2.toLowerCase();\n}\n```"
  },
  {
    "task": "Create a program that determines if a number is greater than 10.",
    "code": "```javascript\nfunction isGreaterThanTen(number) {\n    return number > 10;\n}\n\n// Example usage:\nconst number = 12;\nconsole.log(isGreaterThanTen(number)); // Output: true\n```"
  },
  {
    "task": "Implement a feature that compares the current date to a given date and returns if it is in the future.",
    "code": "```javascript\nfunction isFutureDate(givenDate) {\n    const currentDate = new Date();\n    return new Date(givenDate) > currentDate;\n}\n```"
  },
  {
    "task": "Design a system that checks if a user's age is less than 18 and restricts access if true.",
    "code": "```javascript\nfunction checkAccess(age) {\n    if (age < 18) {\n        return \"Access Restricted\";\n    } else {\n        return \"Access Granted\";\n    }\n}\n```"
  },
  {
    "task": "Build an algorithm that finds the maximum of three given integers.",
    "code": "```javascript\nfunction findMaximum(a, b, c) {\n    let max = a;\n    if (b > max) max = b;\n    if (c > max) max = c;\n    return max;\n}\n\n// Example usage:\nconsole.log(findMaximum(5, 10, 3));  // Outputs: 10\n```"
  },
  {
    "task": "Write a function that verifies if two arrays contain the same elements in the same order.",
    "code": "```javascript\nfunction arraysAreEqual(arr1, arr2) {\n    if (arr1.length !== arr2.length) {\n        return false;\n    }\n    for (let i = 0; i < arr1.length; i++) {\n        if (arr1[i] !== arr2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n```"
  },
  {
    "task": "Create a script that checks if a product's price is within a specified range.",
    "code": "```javascript\nfunction isPriceWithinRange(price, minPrice, maxPrice) {\n    return price >= minPrice && price <= maxPrice;\n}\n\n// Example usage:\nconst productPrice = 50;\nconst minRange = 30;\nconst maxRange = 60;\n\nconsole.log(isPriceWithinRange(productPrice, minRange, maxRange)); // Outputs: true\n```"
  },
  {
    "task": "Develop a tool that compares two versions of a software application and determines which is newer.",
    "code": "```javascript\nfunction compareVersions(version1, version2) {\n    const v1Parts = version1.split('.').map(Number);\n    const v2Parts = version2.split('.').map(Number);\n    const maxLength = Math.max(v1Parts.length, v2Parts.length);\n\n    for (let i = 0; i < maxLength; i++) {\n        const v1Part = v1Parts[i] || 0;\n        const v2Part = v2Parts[i] || 0;\n\n        if (v1Part > v2Part) {\n            return 1;\n        }\n        if (v1Part < v2Part) {\n            return -1;\n        }\n    }\n    return 0;\n}\n\n// Example usage\nconst versionA = \"1.2.3\";\nconst versionB = \"1.2.4\";\nconst comparisonResult = compareVersions(versionA, versionB);\n\nif (comparisonResult > 0) {\n    console.log(`${versionA} is newer than ${versionB}`);\n} else if (comparisonResult < 0) {\n    console.log(`${versionB} is newer than ${versionA}`);\n} else {\n    console.log(`${versionA} and ${versionB} are the same version`);\n}\n```"
  },
  {
    "task": "Implement a test to see if a given year is a leap year.",
    "code": "```javascript\nfunction isLeapYear(year) {\n    if ((year % 4 === 0 && year % 100 !== 0) || (year % 400 === 0)) {\n        return true;\n    }\n    return false;\n}\n```"
  },
  {
    "task": "Design a feature that tells if a student\u2019s grade is passing or failing based on a threshold.",
    "code": "```javascript\nfunction isPassingGrade(grade, threshold) {\n    return grade >= threshold ? \"Passing\" : \"Failing\";\n}\n\n// Example usage:\nlet grade = 75;\nlet threshold = 60;\nconsole.log(isPassingGrade(grade, threshold)); // Output: \"Passing\"\n```"
  },
  {
    "task": "Write a function to compare two file sizes and return the larger one.",
    "code": "```javascript\nfunction largerFileSize(size1, size2) {\n    return size1 > size2 ? size1 : size2;\n}\n```"
  },
  {
    "task": "Build a program that checks if the temperature is below freezing point.",
    "code": "```javascript\nfunction isBelowFreezing(temperature) {\n    return temperature < 0;\n}\n\nconst temperature = -5; // Example temperature\nconsole.log(isBelowFreezing(temperature)); // Output: true\n```"
  },
  {
    "task": "Create a logic that determines if a number is within the Fibonacci sequence.",
    "code": "```javascript\nfunction isInFibonacci(num) {\n    if (num < 0) return false;\n    let a = 0, b = 1;\n    while (b < num) {\n        let temp = b;\n        b = a + b;\n        a = temp;\n    }\n    return b === num || num === 0;\n}\n```"
  },
  {
    "task": "Develop a function that checks if a given word is a palindrome.",
    "code": "```javascript\nfunction isPalindrome(word) {\n    const len = word.length;\n    for (let i = 0; i < Math.floor(len / 2); i++) {\n        if (word[i] !== word[len - 1 - i]) {\n            return false;\n        }\n    }\n    return true;\n}\n```"
  },
  {
    "task": "Write a script to see if a password meets a minimum length requirement.",
    "code": "```javascript\nfunction isPasswordValid(password, minLength) {\n    return password.length >= minLength;\n}\n\nconst password = \"examplePassword\";\nconst minLength = 8;\nconsole.log(isPasswordValid(password, minLength)); // Output: true or false\n```"
  },
  {
    "task": "Implement a system that decides if a point is inside a circle based on its coordinates.",
    "code": "```javascript\nfunction isPointInsideCircle(x, y, circleCenterX, circleCenterY, radius) {\n    const dx = x - circleCenterX;\n    const dy = y - circleCenterY;\n    const distanceSquared = dx * dx + dy * dy;\n    return distanceSquared < radius * radius;\n}\n\n// Example usage:\nconst result = isPointInsideCircle(1, 1, 0, 0, 5);\nconsole.log(result); // true or false\n```"
  },
  {
    "task": "Design a program that checks if a shopping cart total exceeds a certain budget.",
    "code": "```javascript\nfunction isOverBudget(cartTotal, budget) {\n    return cartTotal > budget;\n}\n\nconst cartTotal = 150.00;\nconst budget = 100.00;\nconst result = isOverBudget(cartTotal, budget);\n\nconsole.log(result); // true if cartTotal exceeds budget, false otherwise\n```"
  },
  {
    "task": "Create a function that compares two players' scores and returns the winner.",
    "code": "```javascript\nfunction determineWinner(score1, score2) {\n    if (score1 > score2) {\n        return \"Player 1 wins\";\n    } else if (score2 > score1) {\n        return \"Player 2 wins\";\n    } else {\n        return \"It's a tie\";\n    }\n}\n```"
  },
  {
    "task": "Write a program to determine if one string is a substring of another.",
    "code": "```javascript\nfunction isSubstring(str, subStr) {\n    return str.includes(subStr);\n}\n\n// Example usage:\nconst string1 = \"hello world\";\nconst string2 = \"world\";\nconst result = isSubstring(string1, string2);\nconsole.log(result); // true\n```"
  },
  {
    "task": "Build a utility that checks if a number is a prime number.",
    "code": "```javascript\nfunction isPrime(number) {\n    if (number <= 1) return false;\n    if (number <= 3) return true;\n    \n    if (number % 2 === 0 || number % 3 === 0) return false;\n    \n    for (let i = 5; i * i <= number; i += 6) {\n        if (number % i === 0 || number % (i + 2) === 0) return false;\n    }\n    \n    return true;\n}\n```"
  },
  {
    "task": "Write a function that checks if a given number is a perfect square.",
    "code": "```javascript\nfunction isPerfectSquare(num) {\n  if (num < 0) return false;\n  const sqrt = Math.sqrt(num);\n  return sqrt === Math.floor(sqrt);\n}\n```"
  },
  {
    "task": "Create a system that determines if a person is eligible for a senior citizen discount based on their age.",
    "code": "```javascript\nfunction isEligibleForSeniorDiscount(age) {\n    const seniorAge = 65;\n    return age >= seniorAge;\n}\n\n// Example usage:\nconst age = 70;\nif (isEligibleForSeniorDiscount(age)) {\n    console.log(\"Eligible for senior citizen discount.\");\n} else {\n    console.log(\"Not eligible for senior citizen discount.\");\n}\n```"
  },
  {
    "task": "Develop a feature to check if a date falls on a weekend.",
    "code": "```javascript\nfunction isWeekend(date) {\n  const day = date.getDay();\n  return day === 0 || day === 6;\n}\n\n// Example usage:\nconst date = new Date('2023-10-14'); // Saturday\nconsole.log(isWeekend(date)); // true\n```"
  },
  {
    "task": "Design a program that sees if a given email address is in the correct format.",
    "code": "```javascript\nfunction isValidEmail(email) {\n    const emailPattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    return emailPattern.test(email);\n}\n\n// Example usage:\nconst email = \"example@example.com\";\nconsole.log(isValidEmail(email)); // true or false based on the format\n```"
  },
  {
    "task": "Implement a test to check if a rectangle's area is larger than a triangle's area.",
    "code": "```javascript\nfunction isRectangleAreaLarger(rectangleWidth, rectangleHeight, triangleBase, triangleHeight) {\n    const rectangleArea = rectangleWidth * rectangleHeight;\n    const triangleArea = 0.5 * triangleBase * triangleHeight;\n    return rectangleArea > triangleArea;\n}\n\n// Example usage:\nconst rectangleWidth = 10;\nconst rectangleHeight = 5;\nconst triangleBase = 8;\nconst triangleHeight = 6;\nconsole.log(isRectangleAreaLarger(rectangleWidth, rectangleHeight, triangleBase, triangleHeight));\n```"
  },
  {
    "task": "Write a function that verifies if two rectangles overlap each other.",
    "code": "```javascript\nfunction doRectanglesOverlap(rect1, rect2) {\n    return !(rect1.x2 <= rect2.x1 || rect1.x1 >= rect2.x2 || rect1.y2 <= rect2.y1 || rect1.y1 >= rect2.y2);\n}\n```"
  },
  {
    "task": "Create a script to compare two strings lexicographically.",
    "code": "```javascript\nfunction compareStrings(str1, str2) {\n    if (str1 < str2) {\n        return -1;\n    } else if (str1 > str2) {\n        return 1;\n    } else {\n        return 0;\n    }\n}\n\nconsole.log(compareStrings(\"apple\", \"banana\")); // Example usage\nconsole.log(compareStrings(\"grape\", \"grape\"));\nconsole.log(compareStrings(\"orange\", \"apple\"));\n```"
  },
  {
    "task": "Build a program that checks if a list of numbers is in ascending order.",
    "code": "```javascript\nfunction isAscending(numbers) {\n    for (let i = 0; i < numbers.length - 1; i++) {\n        if (numbers[i] > numbers[i + 1]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n// Example usage:\nconst numbers = [1, 2, 3, 4, 5];\nconsole.log(isAscending(numbers)); // Output: true\n```"
  },
  {
    "task": "Design a system to compare the heights of two buildings.",
    "code": "```javascript\nfunction compareBuildingHeights(height1, height2) {\n    if (height1 > height2) {\n        return \"Building 1 is taller than Building 2.\";\n    } else if (height1 < height2) {\n        return \"Building 1 is shorter than Building 2.\";\n    } else {\n        return \"Both buildings are of the same height.\";\n    }\n}\n\n// Example usage:\nconst building1Height = 150; // Example height in meters\nconst building2Height = 145; // Example height in meters\n\nconsole.log(compareBuildingHeights(building1Height, building2Height));\n```"
  },
  {
    "task": "Write a feature that determines if a given time is before noon.",
    "code": "```javascript\nfunction isBeforeNoon(time) {\n    const [hours, minutes] = time.split(':').map(Number);\n    return hours < 12;\n}\n\n// Example usage:\nconsole.log(isBeforeNoon(\"11:30\")); // true\nconsole.log(isBeforeNoon(\"12:00\")); // false\n```"
  },
  {
    "task": "Implement a function to check if a given number is a power of two.",
    "code": "```javascript\nfunction isPowerOfTwo(n) {\n    if (n <= 0) return false;\n    return (n & (n - 1)) === 0;\n}\n```"
  },
  {
    "task": "Create a program that determines if a word is longer than another word.",
    "code": "```javascript\nfunction isLonger(word1, word2) {\n    return word1.length > word2.length;\n}\n\n// Example usage:\nconst wordA = \"apple\";\nconst wordB = \"banana\";\nconsole.log(isLonger(wordA, wordB)); // Output: false\n```"
  },
  {
    "task": "Develop a function to compare the lengths of two lists and return the longer one.",
    "code": "```javascript\nfunction longerList(list1, list2) {\n    return list1.length > list2.length ? list1 : list2;\n}\n```"
  },
  {
    "task": "Write a script to see if a user's input matches a pre-defined secret code.",
    "code": "```javascript\nconst secretCode = \"secret123\";\nconst userInput = prompt(\"Enter the secret code:\");\n\nif (userInput === secretCode) {\n    console.log(\"Access granted.\");\n} else {\n    console.log(\"Access denied.\");\n}\n```"
  },
  {
    "task": "Build a utility that checks if a given year is in the 21st century.",
    "code": "```javascript\nfunction is21stCentury(year) {\n    return year >= 2001 && year <= 2100;\n}\n```"
  },
  {
    "task": "Create a logic that determines if a book's publication year is after 2000.",
    "code": "```javascript\nfunction isPublishedAfter2000(publicationYear) {\n    return publicationYear > 2000;\n}\n\n// Example usage:\nconst bookPublicationYear = 2005;\nconsole.log(isPublishedAfter2000(bookPublicationYear)); // true\n```"
  },
  {
    "task": "Design a feature to see if a number is divisible by both 3 and 5.",
    "code": "```javascript\nfunction isDivisibleBy3And5(number) {\n    return number % 3 === 0 && number % 5 === 0;\n}\n```"
  },
  {
    "task": "Implement a system that checks if a student's GPA is above a certain threshold.",
    "code": "```javascript\nfunction isGpaAboveThreshold(gpa, threshold) {\n    return gpa > threshold;\n}\n\n// Example usage:\nconst studentGpa = 3.5;\nconst threshold = 3.0;\nconsole.log(isGpaAboveThreshold(studentGpa, threshold)); // Output: true\n```"
  },
  {
    "task": "Write a function to determine if a given angle is acute, right, or obtuse.",
    "code": "```javascript\nfunction classifyAngle(angle) {\n    if (angle > 0 && angle < 90) {\n        return 'acute';\n    } else if (angle === 90) {\n        return 'right';\n    } else if (angle > 90 && angle < 180) {\n        return 'obtuse';\n    } else {\n        return 'invalid';\n    }\n}\n```"
  },
  {
    "task": "Develop a program that compares the lengths of two strings and returns the shorter one.",
    "code": "```javascript\nfunction getShorterString(str1, str2) {\n    return str1.length < str2.length ? str1 : str2;\n}\n\n// Example usage:\nconst shorter = getShorterString(\"hello\", \"world!\");\nconsole.log(shorter);\n```"
  },
  {
    "task": "Create a script to verify if a username is unique within a list.",
    "code": "```javascript\nfunction isUsernameUnique(username, userList) {\n    return !userList.includes(username);\n}\n\n// Example usage\nconst usernames = ['alice', 'bob', 'charlie'];\nconst newUsername = 'dave';\n\nconsole.log(isUsernameUnique(newUsername, usernames)); // true\n```"
  },
  {
    "task": "Build a tool that checks if a job applicant meets all the listed qualifications.",
    "code": "```javascript\nfunction meetsQualifications(applicant, qualifications) {\n    for (let qualification in qualifications) {\n        if (!applicant[qualification] || applicant[qualification] < qualifications[qualification]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n// Example usage:\nconst applicant = {\n    experience: 5, // years\n    educationLevel: 4, // 1 to 5 scale\n    skills: 3 // 1 to 5 scale\n};\n\nconst qualifications = {\n    experience: 3,\n    educationLevel: 4,\n    skills: 2\n};\n\nconsole.log(meetsQualifications(applicant, qualifications)); // true\n```"
  },
  {
    "task": "Write a feature to see if a vehicle's speed exceeds the speed limit.",
    "code": "```javascript\nfunction isSpeeding(vehicleSpeed, speedLimit) {\n    return vehicleSpeed > speedLimit;\n}\n```"
  },
  {
    "task": "Design a system that determines whether a given point is above or below the x-axis.",
    "code": "```javascript\nfunction pointPosition(x, y) {\n    if (y > 0) {\n        return \"above the x-axis\";\n    } else if (y < 0) {\n        return \"below the x-axis\";\n    } else {\n        return \"on the x-axis\";\n    }\n}\n\n// Example usage\nconsole.log(pointPosition(3, 4)); // Output: \"above the x-axis\"\nconsole.log(pointPosition(-2, -5)); // Output: \"below the x-axis\"\nconsole.log(pointPosition(0, 0)); // Output: \"on the x-axis\"\n```"
  },
  {
    "task": "Create a function that checks if a given word appears in a sentence.",
    "code": "```javascript\nfunction isWordInSentence(word, sentence) {\n    return sentence.includes(word);\n}\n```"
  },
  {
    "task": "Implement a program that identifies whether a given number is negative or positive.",
    "code": "```javascript\nfunction identifyNumber(num) {\n    if (num > 0) {\n        return \"positive\";\n    } else if (num < 0) {\n        return \"negative\";\n    } else {\n        return \"zero\";\n    }\n}\n\n// Example usage\nconsole.log(identifyNumber(10)); // Output: positive\nconsole.log(identifyNumber(-5)); // Output: negative\nconsole.log(identifyNumber(0));  // Output: zero\n```"
  },
  {
    "task": "Write a script to see if the sum of two numbers is greater than 100.",
    "code": "```javascript\nlet num1 = 45;\nlet num2 = 60;\nlet sum = num1 + num2;\nlet isGreaterThan100 = sum > 100;\nconsole.log(isGreaterThan100);\n```"
  },
  {
    "task": "Build a utility that checks if a file exists in a specified directory.",
    "code": "```javascript\nconst fs = require('fs');\nconst path = require('path');\n\nfunction fileExists(directory, fileName) {\n    const filePath = path.join(directory, fileName);\n    return fs.existsSync(filePath);\n}\n\n// Example usage\nconst directory = './some_directory';\nconst fileName = 'example.txt';\nconsole.log(fileExists(directory, fileName)); // true if file exists, false otherwise\n```"
  },
  {
    "task": "Develop a system to compare the weights of two different objects.",
    "code": "```javascript\nfunction compareWeights(weight1, weight2) {\n    if (weight1 > weight2) {\n        return \"The first object is heavier.\";\n    } else if (weight1 < weight2) {\n        return \"The second object is heavier.\";\n    } else {\n        return \"Both objects have the same weight.\";\n    }\n}\n\n// Example usage:\nconst weightA = 5.5; // weight of first object\nconst weightB = 7.2; // weight of second object\n\nconsole.log(compareWeights(weightA, weightB));\n```"
  },
  {
    "task": "Create a logic to determine if a number falls within a defined range.",
    "code": "```javascript\nfunction isNumberInRange(number, lowerBound, upperBound) {\n    return number >= lowerBound && number <= upperBound;\n}\n```"
  },
  {
    "task": "Design a program that checks if an employee worked overtime based on hours worked.",
    "code": "```javascript\nfunction checkOvertime(hoursWorked) {\n    const regularHours = 40;\n    if (hoursWorked > regularHours) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n// Example usage:\nlet hours = 45;\nconsole.log(checkOvertime(hours)); // Output: true\n```"
  },
  {
    "task": "Write a function to compare two dates and determine which is earlier.",
    "code": "```javascript\nfunction compareDates(date1, date2) {\n    if (date1 < date2) {\n        return \"Date1 is earlier\";\n    } else if (date1 > date2) {\n        return \"Date2 is earlier\";\n    } else {\n        return \"Both dates are the same\";\n    }\n}\n\n// Example usage:\nlet date1 = new Date('2023-01-01');\nlet date2 = new Date('2023-01-02');\nconsole.log(compareDates(date1, date2));\n```"
  },
  {
    "task": "Create a script that verifies if a given word starts with a vowel.",
    "code": "```javascript\nfunction startsWithVowel(word) {\n  return /^[aeiouAEIOU]/.test(word);\n}\n\n// Example usage:\nconsole.log(startsWithVowel(\"apple\")); // true\nconsole.log(startsWithVowel(\"banana\")); // false\n```"
  },
  {
    "task": "Build a utility that checks if a number is even or odd.",
    "code": "```javascript\nfunction isEven(number) {\n    return number % 2 === 0;\n}\n\nfunction isOdd(number) {\n    return number % 2 !== 0;\n}\n\n// Example usage:\nconsole.log(isEven(4)); // true\nconsole.log(isOdd(4));  // false\nconsole.log(isEven(5)); // false\nconsole.log(isOdd(5));  // true\n```"
  },
  {
    "task": "Implement a system that determines if a string contains only numeric characters.",
    "code": "```javascript\nfunction isNumericString(str) {\n    return /^[0-9]+$/.test(str);\n}\n```"
  },
  {
    "task": "Write a function to see if a given character is a vowel or consonant.",
    "code": "```javascript\nfunction checkVowelOrConsonant(char) {\n    if (typeof char !== 'string' || char.length !== 1) {\n        return \"Invalid input\";\n    }\n    const vowels = 'aeiouAEIOU';\n    if (vowels.indexOf(char) !== -1) {\n        return \"Vowel\";\n    } else {\n        return \"Consonant\";\n    }\n}\n```"
  },
  {
    "task": "Create a program that checks if a point lies within a specified rectangle.",
    "code": "```javascript\nfunction isPointInsideRectangle(point, rect) {\n    const [px, py] = point;\n    const [rx, ry, rw, rh] = rect;\n    \n    return px >= rx && px <= rx + rw && py >= ry && py <= ry + rh;\n}\n\n// Example usage:\nconst point = [5, 5];\nconst rectangle = [0, 0, 10, 10];\nconsole.log(isPointInsideRectangle(point, rectangle)); // Output: true\n```"
  },
  {
    "task": "Develop a feature to compare two lists and return the common elements.",
    "code": "```javascript\nfunction findCommonElements(list1, list2) {\n    return list1.filter(element => list2.includes(element));\n}\n\n// Example usage:\nconst list1 = [1, 2, 3, 4, 5];\nconst list2 = [3, 4, 5, 6, 7];\nconst commonElements = findCommonElements(list1, list2);\nconsole.log(commonElements); // Output: [3, 4, 5]\n```"
  },
  {
    "task": "Design a function that determines if a text contains any uppercase letters.",
    "code": "```javascript\nfunction containsUppercase(text) {\n    for (let i = 0; i < text.length; i++) {\n        if (text[i] >= 'A' && text[i] <= 'Z') {\n            return true;\n        }\n    }\n    return false;\n}\n```"
  },
  {
    "task": "Implement a script to check if a given sentence is a question.",
    "code": "```javascript\nfunction isQuestion(sentence) {\n    return sentence.trim().endsWith('?');\n}\n\n// Example usage:\nconsole.log(isQuestion(\"Is this a question?\")); // true\nconsole.log(isQuestion(\"This is not a question.\")); // false\n```"
  },
  {
    "task": "Write a program to determine if a temperature is measured in Celsius or Fahrenheit.",
    "code": "```javascript\nfunction determineTemperatureType(temperature) {\n    if (temperature.toLowerCase().includes('c')) {\n        return 'Celsius';\n    } else if (temperature.toLowerCase().includes('f')) {\n        return 'Fahrenheit';\n    } else {\n        return 'Unknown';\n    }\n}\n\nconst temp1 = \"30C\";\nconst temp2 = \"86F\";\nconst temp3 = \"100\";\n\nconsole.log(determineTemperatureType(temp1)); // Output: Celsius\nconsole.log(determineTemperatureType(temp2)); // Output: Fahrenheit\nconsole.log(determineTemperatureType(temp3)); // Output: Unknown\n```"
  },
  {
    "task": "Create a system that verifies if a student is enrolled in a particular course.",
    "code": "```javascript\nfunction isStudentEnrolled(student, course, enrollmentList) {\n    for (let enrollment of enrollmentList) {\n        if (enrollment.student === student && enrollment.course === course) {\n            return true;\n        }\n    }\n    return false;\n}\n\n// Example usage:\nconst enrollmentList = [\n    { student: 'Alice', course: 'Math' },\n    { student: 'Bob', course: 'Science' }\n];\n\nconsole.log(isStudentEnrolled('Alice', 'Math', enrollmentList)); // true\nconsole.log(isStudentEnrolled('Charlie', 'Math', enrollmentList)); // false\n```"
  },
  {
    "task": "Build a utility to check if a given string is a valid hexadecimal number.",
    "code": "```javascript\nfunction isValidHexadecimal(str) {\n    const hexPattern = /^[0-9a-fA-F]+$/;\n    return hexPattern.test(str);\n}\n\n// Example usage\nconsole.log(isValidHexadecimal(\"1f4\")); // true\nconsole.log(isValidHexadecimal(\"GHI\")); // false\nconsole.log(isValidHexadecimal(\"123ABC\")); // true\nconsole.log(isValidHexadecimal(\"123abcxyz\")); // false\n```"
  },
  {
    "task": "Write a function to see if two circles intersect based on their radii and center points.",
    "code": "```javascript\nfunction doCirclesIntersect(x1, y1, r1, x2, y2, r2) {\n    const dx = x2 - x1;\n    const dy = y2 - y1;\n    const distance = Math.sqrt(dx * dx + dy * dy);\n    return distance < r1 + r2;\n}\n```"
  },
  {
    "task": "Develop a program that checks if a given number is within 10% of another number.",
    "code": "```javascript\nfunction isWithinTenPercent(number1, number2) {\n    const tenPercent = number2 * 0.10;\n    return Math.abs(number1 - number2) <= tenPercent;\n}\n\n// Example usage:\nconsole.log(isWithinTenPercent(105, 100)); // true\nconsole.log(isWithinTenPercent(120, 100)); // false\n```"
  },
  {
    "task": "Create a feature to determine if a character is alphanumeric.",
    "code": "```javascript\nfunction isAlphanumeric(char) {\n    return /^[a-z0-9]+$/i.test(char);\n}\n```"
  },
  {
    "task": "Implement a system to compare the profit margins of two products.",
    "code": "```javascript\nfunction compareProfitMargins(costPrice1, sellingPrice1, costPrice2, sellingPrice2) {\n    const profitMargin1 = (sellingPrice1 - costPrice1) / sellingPrice1;\n    const profitMargin2 = (sellingPrice2 - costPrice2) / sellingPrice2;\n\n    if (profitMargin1 > profitMargin2) {\n        return \"Product 1 has a higher profit margin.\";\n    } else if (profitMargin1 < profitMargin2) {\n        return \"Product 2 has a higher profit margin.\";\n    } else {\n        return \"Both products have the same profit margin.\";\n    }\n}\n```"
  },
  {
    "task": "Design a script to check if a given string contains any special characters.",
    "code": "```javascript\nfunction containsSpecialCharacters(str) {\n    const specialCharactersPattern = /[^a-zA-Z0-9 ]/;\n    return specialCharactersPattern.test(str);\n}\n\n// Example usage:\nconst inputString = \"Hello, World!\";\nconsole.log(containsSpecialCharacters(inputString)); // true\n```"
  },
  {
    "task": "Write a function to verify if a number is a multiple of another number.",
    "code": "```javascript\nfunction isMultiple(a, b) {\n    return a % b === 0;\n}\n```"
  },
  {
    "task": "Create a program that checks if a date is a holiday based on a list of holidays.",
    "code": "```javascript\nconst holidays = [\n    '2023-01-01',\n    '2023-12-25',\n    '2023-07-04'\n];\n\nfunction isHoliday(date) {\n    return holidays.includes(date);\n}\n\n// Example usage:\nconst dateToCheck = '2023-12-25';\nconsole.log(isHoliday(dateToCheck)); // true or false\n```"
  },
  {
    "task": "Build a utility to compare two text files and highlight the differences.",
    "code": "```javascript\nconst fs = require('fs');\n\nfunction getFileContent(filePath) {\n    try {\n        return fs.readFileSync(filePath, 'utf8').split('\\n');\n    } catch (error) {\n        console.error(`Error reading file ${filePath}:`, error);\n        return [];\n    }\n}\n\nfunction compareFiles(file1Path, file2Path) {\n    const file1Lines = getFileContent(file1Path);\n    const file2Lines = getFileContent(file2Path);\n    const maxLength = Math.max(file1Lines.length, file2Lines.length);\n    const differences = [];\n\n    for (let i = 0; i < maxLength; i++) {\n        const line1 = file1Lines[i] || '';\n        const line2 = file2Lines[i] || '';\n        if (line1 !== line2) {\n            differences.push({ line: i + 1, file1: line1, file2: line2 });\n        }\n    }\n\n    return differences;\n}\n\nfunction highlightDifferences(differences) {\n    differences.forEach(diff => {\n        console.log(`Line ${diff.line} differs:`);\n        console.log(`File 1: ${diff.file1}`);\n        console.log(`File 2: ${diff.file2}`);\n        console.log('---');\n    });\n}\n\nconst differences = compareFiles('file1.txt', 'file2.txt');\nhighlightDifferences(differences);\n```"
  },
  {
    "task": "Develop a function to determine if a given password is strong based on length and character diversity.",
    "code": "```javascript\nfunction isStrongPassword(password) {\n    const hasUpperCase = /[A-Z]/.test(password);\n    const hasLowerCase = /[a-z]/.test(password);\n    const hasNumbers = /\\d/.test(password);\n    const hasSpecialChars = /[!@#$%^&*(),.?\":{}|<>]/.test(password);\n    const isValidLength = password.length >= 8;\n\n    return isValidLength && hasUpperCase && hasLowerCase && hasNumbers && hasSpecialChars;\n}\n```"
  },
  {
    "task": "Write a script to see if a number is within a specified distance from zero.",
    "code": "```javascript\nfunction isWithinDistanceFromZero(number, distance) {\n    return Math.abs(number) <= distance;\n}\n\n// Example usage:\nconst number = 5;\nconst distance = 10;\nconsole.log(isWithinDistanceFromZero(number, distance)); // Output: true\n```"
  },
  {
    "task": "Create a system to check if a book title is available in a library database.",
    "code": "```javascript\nfunction isBookAvailable(title, libraryDatabase) {\n    for (let i = 0; i < libraryDatabase.length; i++) {\n        if (libraryDatabase[i] === title) {\n            return true;\n        }\n    }\n    return false;\n}\n\n// Example usage:\nconst libraryDatabase = ['The Great Gatsby', '1984', 'To Kill a Mockingbird', 'Pride and Prejudice'];\nconst bookTitle = '1984';\nconsole.log(isBookAvailable(bookTitle, libraryDatabase)); // Output: true\n```"
  },
  {
    "task": "Implement a feature that determines if a user has administrator privileges.",
    "code": "```javascript\nfunction hasAdminPrivileges(user) {\n    return user.role === 'admin';\n}\n\n// Example usage:\nconst user1 = { name: 'Alice', role: 'admin' };\nconst user2 = { name: 'Bob', role: 'user' };\n\nconsole.log(hasAdminPrivileges(user1)); // true\nconsole.log(hasAdminPrivileges(user2)); // false\n```"
  },
  {
    "task": "Design a function to compare the brightness of two colors.",
    "code": "```javascript\nfunction compareBrightness(color1, color2) {\n    const getBrightness = (color) => {\n        const r = parseInt(color.slice(1, 3), 16);\n        const g = parseInt(color.slice(3, 5), 16);\n        const b = parseInt(color.slice(5, 7), 16);\n        return 0.299 * r + 0.587 * g + 0.114 * b;\n    };\n\n    const brightness1 = getBrightness(color1);\n    const brightness2 = getBrightness(color2);\n\n    if (brightness1 > brightness2) {\n        return `${color1} is brighter than ${color2}`;\n    } else if (brightness1 < brightness2) {\n        return `${color2} is brighter than ${color1}`;\n    } else {\n        return `${color1} and ${color2} have the same brightness`;\n    }\n}\n```"
  },
  {
    "task": "Write a program to verify if a number is a valid credit card number using the Luhn algorithm.",
    "code": "```javascript\nfunction isValidCreditCardNumber(number) {\n    const digits = number.toString().split('').map(Number);\n    let sum = 0;\n    let isSecond = false;\n\n    for (let i = digits.length - 1; i >= 0; i--) {\n        let digit = digits[i];\n\n        if (isSecond) {\n            digit *= 2;\n            if (digit > 9) {\n                digit -= 9;\n            }\n        }\n\n        sum += digit;\n        isSecond = !isSecond;\n    }\n\n    return sum % 10 === 0;\n}\n\n// Example usage\nconst number = 1234567812345670; // replace with actual credit card number to test\nconsole.log(isValidCreditCardNumber(number));\n```"
  },
  {
    "task": "Create a script to determine if a given string is a valid IP address.",
    "code": "```javascript\nfunction isValidIPAddress(ip) {\n  const ipSegments = ip.split('.');\n  if (ipSegments.length !== 4) return false;\n  for (let segment of ipSegments) {\n    if (!/^\\d+$/.test(segment)) return false;\n    const num = parseInt(segment, 10);\n    if (num < 0 || num > 255) return false;\n  }\n  return true;\n}\n\n// Example usage:\nconst testIP = \"192.168.1.1\";\nconsole.log(isValidIPAddress(testIP)); // true or false\n```"
  },
  {
    "task": "Build a utility that checks if a number is part of an arithmetic sequence.",
    "code": "```javascript\nfunction isPartOfArithmeticSequence(num, start, diff) {\n    if (diff === 0) {\n        return num === start;\n    }\n    return (num - start) % diff === 0 && (num - start) / diff >= 0;\n}\n\n// Example usage:\nconsole.log(isPartOfArithmeticSequence(10, 2, 2)); // true\nconsole.log(isPartOfArithmeticSequence(14, 2, 3)); // true\nconsole.log(isPartOfArithmeticSequence(13, 2, 3)); // false\n```"
  },
  {
    "task": "Develop a feature to compare the efficiency of two algorithms based on time complexity.",
    "code": "```javascript\nfunction compareAlgorithms(algorithmA, algorithmB, inputSize) {\n    const timeComplexity = {\n        'O(1)': 1,\n        'O(log n)': Math.log2(inputSize),\n        'O(n)': inputSize,\n        'O(n log n)': inputSize * Math.log2(inputSize),\n        'O(n^2)': Math.pow(inputSize, 2),\n        'O(2^n)': Math.pow(2, inputSize),\n        'O(n!)': factorial(inputSize)\n    };\n\n    function factorial(n) {\n        if (n === 0 || n === 1) return 1;\n        return n * factorial(n - 1);\n    }\n\n    const timeA = timeComplexity[algorithmA];\n    const timeB = timeComplexity[algorithmB];\n\n    if (timeA < timeB) {\n        return 'Algorithm A is more efficient';\n    } else if (timeA > timeB) {\n        return 'Algorithm B is more efficient';\n    } else {\n        return 'Both algorithms have the same efficiency';\n    }\n}\n```"
  },
  {
    "task": "Write a function to see if a given date falls in a leap year.",
    "code": "```javascript\nfunction isLeapYear(date) {\n    const year = date.getFullYear();\n    return (year % 4 === 0 && year % 100 !== 0) || (year % 400 === 0);\n}\n\n// Example usage:\nconst date = new Date('2020-03-01');\nconsole.log(isLeapYear(date)); // true\n```"
  },
  {
    "task": "Create a program that determines if a user's subscription is active based on the current date.",
    "code": "```javascript\nfunction isSubscriptionActive(subscriptionEndDate) {\n  const currentDate = new Date();\n  return currentDate <= new Date(subscriptionEndDate);\n}\n\n// Example usage:\nconst userSubscriptionEndDate = '2023-12-31';\nconsole.log(isSubscriptionActive(userSubscriptionEndDate)); // Outputs true or false\n```"
  },
  {
    "task": "Design a tool to check if a user\u2019s input is a palindrome phrase, ignoring spaces and punctuation.",
    "code": "```javascript\nfunction isPalindrome(input) {\n    const cleanedInput = input.toLowerCase().replace(/[^a-z0-9]/g, '');\n    const reversedInput = cleanedInput.split('').reverse().join('');\n    return cleanedInput === reversedInput;\n}\n\n// Example usage:\nconst userInput = \"A man, a plan, a canal, Panama\";\nconsole.log(isPalindrome(userInput)); // true\n```"
  },
  {
    "task": "Implement a system to verify if a given number is part of the Fibonacci sequence.",
    "code": "```javascript\nfunction isFibonacci(num) {\n    if (num < 0) return false;\n    let a = 0;\n    let b = 1;\n    if (num === a || num === b) return true;\n    let fib = a + b;\n    while (fib <= num) {\n        if (fib === num) return true;\n        a = b;\n        b = fib;\n        fib = a + b;\n    }\n    return false;\n}\n```"
  },
  {
    "task": "Write a program to compare the elevation of two geographic locations.",
    "code": "```javascript\nfunction compareElevation(elevation1, elevation2) {\n    if (elevation1 > elevation2) {\n        return \"Location 1 is at a higher elevation than Location 2.\";\n    } else if (elevation1 < elevation2) {\n        return \"Location 1 is at a lower elevation than Location 2.\";\n    } else {\n        return \"Both locations are at the same elevation.\";\n    }\n}\n\n// Example usage:\nlet location1Elevation = 1500; // Elevation of location 1 in meters\nlet location2Elevation = 1200; // Elevation of location 2 in meters\nconsole.log(compareElevation(location1Elevation, location2Elevation));\n```"
  },
  {
    "task": "Create a function to determine if a given string is a valid JSON format.",
    "code": "```javascript\nfunction isValidJSON(str) {\n    try {\n        JSON.parse(str);\n        return true;\n    } catch (e) {\n        return false;\n    }\n}\n```"
  },
  {
    "task": "Build a utility that checks if a number is a factorial of any integer.",
    "code": "```javascript\nfunction isFactorial(number) {\n    if (number < 0) return false;\n    let factorial = 1;\n    for (let i = 1; factorial <= number; i++) {\n        if (factorial === number) return true;\n        factorial *= i;\n    }\n    return false;\n}\n\n// Example usage:\nconsole.log(isFactorial(6));  // true (3!)\nconsole.log(isFactorial(9));  // false\n```"
  },
  {
    "task": "Develop a feature to compare the widths of two ribbons and return the wider one.",
    "code": "```javascript\nfunction getWiderRibbon(width1, width2) {\n    return width1 > width2 ? width1 : width2;\n}\n```"
  },
  {
    "task": "Write a script to see if a word is present in a list of banned words.",
    "code": "```javascript\nfunction isWordBanned(word, bannedWords) {\n    return bannedWords.includes(word);\n}\n\n// Example usage:\nconst bannedWords = ['badword1', 'badword2', 'badword3'];\nconst wordToCheck = 'badword1';\nconsole.log(isWordBanned(wordToCheck, bannedWords)); // Output: true\n```"
  },
  {
    "task": "Design a system to determine if a patient's temperature is in the normal range.",
    "code": "```javascript\nfunction isTemperatureNormal(temperature) {\n    const normalLow = 36.1;\n    const normalHigh = 37.2;\n    return temperature >= normalLow && temperature <= normalHigh;\n}\n\n// Example usage:\nconst temperature = 36.5;\nconsole.log(isTemperatureNormal(temperature)); // Outputs: true or false\n```"
  },
  {
    "task": "Create a program that checks if a given time is during business hours.",
    "code": "```javascript\nfunction isBusinessHours(hour, minute) {\n    const openingHour = 9;\n    const closingHour = 17;\n    \n    if (hour < openingHour || hour > closingHour) {\n        return false;\n    }\n    \n    if (hour === closingHour && minute > 0) {\n        return false;\n    }\n    \n    return true;\n}\n\n// Example usage:\nconst currentHour = 10; // replace with actual hour\nconst currentMinute = 30; // replace with actual minute\n\nconsole.log(isBusinessHours(currentHour, currentMinute));\n```"
  },
  {
    "task": "Implement a function to see if a number is a triangular number.",
    "code": "```javascript\nfunction isTriangularNumber(num) {\n    if (num < 0) return false;\n    let n = 0;\n    let triangular = 0;\n    while (triangular < num) {\n        n++;\n        triangular = (n * (n + 1)) / 2;\n    }\n    return triangular === num;\n}\n```"
  },
  {
    "task": "Write a feature to compare the number of vowels in two given strings.",
    "code": "```javascript\nfunction countVowels(str) {\n    return (str.match(/[aeiou]/gi) || []).length;\n}\n\nfunction compareVowelCount(str1, str2) {\n    const vowelsStr1 = countVowels(str1);\n    const vowelsStr2 = countVowels(str2);\n    \n    if (vowelsStr1 > vowelsStr2) {\n        return \"First string has more vowels.\";\n    } else if (vowelsStr1 < vowelsStr2) {\n        return \"Second string has more vowels.\";\n    } else {\n        return \"Both strings have the same number of vowels.\";\n    }\n}\n\n// Example usage:\n// console.log(compareVowelCount(\"hello\", \"world\"));\n```"
  }
]