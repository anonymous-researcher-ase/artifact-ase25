[
  {
    "task": "Create a function that calculates the sum of two numbers and returns the result.",
    "code": "```javascript\nfunction sum(a, b) {\n    return a + b;\n}\n```"
  },
  {
    "task": "Design a function that takes a string and returns its length.",
    "code": "```javascript\nfunction getStringLength(str) {\n    return str.length;\n}\n```"
  },
  {
    "task": "Write a function that checks if a number is prime and returns a boolean value.",
    "code": "```javascript\nfunction isPrime(number) {\n    if (number <= 1) return false;\n    if (number <= 3) return true;\n    if (number % 2 === 0 || number % 3 === 0) return false;\n    for (let i = 5; i * i <= number; i += 6) {\n        if (number % i === 0 || number % (i + 2) === 0) return false;\n    }\n    return true;\n}\n```"
  },
  {
    "task": "Implement a function that returns the highest value in a list of integers.",
    "code": "```javascript\nfunction findHighestValue(numbers) {\n    return Math.max(...numbers);\n}\n```"
  },
  {
    "task": "Create a function that accepts a list of words and returns the longest word.",
    "code": "```javascript\nfunction findLongestWord(words) {\n    return words.reduce((longest, currentWord) => {\n        return currentWord.length > longest.length ? currentWord : longest;\n    }, \"\");\n}\n```"
  },
  {
    "task": "Write a function that takes a temperature in Celsius and returns the equivalent in Fahrenheit.",
    "code": "```javascript\nfunction celsiusToFahrenheit(celsius) {\n    return celsius * 9/5 + 32;\n}\n```"
  },
  {
    "task": "Develop a function that returns the factorial of a given number.",
    "code": "```javascript\nfunction factorial(n) {\n    if (n === 0 || n === 1) {\n        return 1;\n    }\n    return n * factorial(n - 1);\n}\n```"
  },
  {
    "task": "Implement a function that receives a date and returns the day of the week.",
    "code": "```javascript\nfunction getDayOfWeek(date) {\n    const daysOfWeek = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n    const dayIndex = new Date(date).getDay();\n    return daysOfWeek[dayIndex];\n}\n```"
  },
  {
    "task": "Write a function that calculates the area of a circle given its radius and returns the value.",
    "code": "```javascript\nfunction calculateCircleArea(radius) {\n    return Math.PI * radius * radius;\n}\n```"
  },
  {
    "task": "Create a function that converts a string to uppercase and returns the modified string.",
    "code": "```javascript\nfunction toUpperCaseString(str) {\n    return str.toUpperCase();\n}\n```"
  },
  {
    "task": "Design a function that returns the reverse of a given list.",
    "code": "```javascript\nfunction reverseList(list) {\n    return list.slice().reverse();\n}\n```"
  },
  {
    "task": "Implement a function that accepts a string and returns a dictionary with character frequencies.",
    "code": "```javascript\nfunction charFrequency(str) {\n    const frequency = {};\n    for (let char of str) {\n        frequency[char] = (frequency[char] || 0) + 1;\n    }\n    return frequency;\n}\n```"
  },
  {
    "task": "Write a function that returns the first non-repeating character in a string.",
    "code": "```javascript\nfunction firstNonRepeatingCharacter(str) {\n    const charCount = {};\n    \n    for (let char of str) {\n        charCount[char] = (charCount[char] || 0) + 1;\n    }\n    \n    for (let char of str) {\n        if (charCount[char] === 1) {\n            return char;\n        }\n    }\n    \n    return null;\n}\n```"
  },
  {
    "task": "Create a function that takes a list of numbers and returns a new list with only even numbers.",
    "code": "```javascript\nfunction filterEvenNumbers(numbers) {\n    return numbers.filter(number => number % 2 === 0);\n}\n```"
  },
  {
    "task": "Develop a function that receives a sentence and returns the word count.",
    "code": "```javascript\nfunction wordCount(sentence) {\n    return sentence.split(' ').length;\n}\n```"
  },
  {
    "task": "Implement a function that returns the smallest element in an array.",
    "code": "```javascript\nfunction findSmallestElement(arr) {\n    return Math.min(...arr);\n}\n```"
  },
  {
    "task": "Write a function that takes two strings and returns true if they are anagrams.",
    "code": "```javascript\nfunction areAnagrams(str1, str2) {\n    const sortedStr1 = str1.split('').sort().join('');\n    const sortedStr2 = str2.split('').sort().join('');\n    return sortedStr1 === sortedStr2;\n}\n```"
  },
  {
    "task": "Create a function that accepts an integer and returns a list of its divisors.",
    "code": "```javascript\nfunction getDivisors(num) {\n    let divisors = [];\n    for (let i = 1; i <= num; i++) {\n        if (num % i === 0) {\n            divisors.push(i);\n        }\n    }\n    return divisors;\n}\n```"
  },
  {
    "task": "Design a function that returns the square root of a given number.",
    "code": "```javascript\nfunction getSquareRoot(number) {\n    return Math.sqrt(number);\n}\n```"
  },
  {
    "task": "Implement a function that accepts a list and returns it sorted in ascending order.",
    "code": "```javascript\nfunction sortListAscending(list) {\n    return list.sort((a, b) => a - b);\n}\n```"
  },
  {
    "task": "Write a function that checks whether a given year is a leap year and returns a boolean.",
    "code": "```javascript\nfunction isLeapYear(year) {\n    return (year % 4 === 0 && year % 100 !== 0) || (year % 400 === 0);\n}\n```"
  },
  {
    "task": "Create a function that receives a list of numbers and returns their average.",
    "code": "```javascript\nfunction calculateAverage(numbers) {\n    if (numbers.length === 0) return 0;\n    let sum = numbers.reduce((acc, num) => acc + num, 0);\n    return sum / numbers.length;\n}\n```"
  },
  {
    "task": "Develop a function that returns the nth Fibonacci number.",
    "code": "```javascript\nfunction fibonacci(n) {\n    if (n <= 0) return 0;\n    if (n === 1) return 1;\n    let a = 0, b = 1, temp;\n    for (let i = 2; i <= n; i++) {\n        temp = a + b;\n        a = b;\n        b = temp;\n    }\n    return b;\n}\n```"
  },
  {
    "task": "Implement a function that accepts a string and returns it with vowels removed.",
    "code": "```javascript\nfunction removeVowels(inputString) {\n    return inputString.replace(/[aeiouAEIOU]/g, '');\n}\n```"
  },
  {
    "task": "Write a function that takes two dates and returns the number of days between them.",
    "code": "```javascript\nfunction daysBetween(date1, date2) {\n    const oneDay = 24 * 60 * 60 * 1000;\n    const diffInTime = Math.abs(date2 - date1);\n    return Math.round(diffInTime / oneDay);\n}\n```"
  },
  {
    "task": "Create a function that returns the last element of a list.",
    "code": "```javascript\nfunction getLastElement(list) {\n    return list[list.length - 1];\n}\n```"
  },
  {
    "task": "Design a function that calculates the GCD of two numbers and returns it.",
    "code": "```javascript\nfunction gcd(a, b) {\n    while (b !== 0) {\n        let temp = b;\n        b = a % b;\n        a = temp;\n    }\n    return a;\n}\n```"
  },
  {
    "task": "Implement a function that takes a list and returns a tuple with the min and max values.",
    "code": "```javascript\nfunction minMax(list) {\n    if (list.length === 0) return null;\n    let min = Math.min(...list);\n    let max = Math.max(...list);\n    return [min, max];\n}\n```"
  },
  {
    "task": "Write a function that converts a binary string to its decimal representation and returns it.",
    "code": "```javascript\nfunction binaryToDecimal(binaryString) {\n    return parseInt(binaryString, 2);\n}\n```"
  },
  {
    "task": "Create a function that accepts a dictionary and returns a list of its keys.",
    "code": "```javascript\nfunction getKeys(dictionary) {\n    return Object.keys(dictionary);\n}\n```"
  },
  {
    "task": "Develop a function that returns the concatenation of two strings.",
    "code": "```javascript\nfunction concatenateStrings(string1, string2) {\n    return string1 + string2;\n}\n```"
  },
  {
    "task": "Implement a function that receives a list and returns a new list with duplicates removed.",
    "code": "```javascript\nfunction removeDuplicates(list) {\n    return [...new Set(list)];\n}\n```"
  },
  {
    "task": "Write a function that returns the intersection of two lists.",
    "code": "```javascript\nfunction intersection(list1, list2) {\n    return list1.filter(value => list2.includes(value));\n}\n```"
  },
  {
    "task": "Create a function that takes an integer and returns whether it is even or odd as a string.",
    "code": "```javascript\nfunction evenOrOdd(number) {\n    return number % 2 === 0 ? \"even\" : \"odd\";\n}\n```"
  },
  {
    "task": "Design a function that returns the number of vowels in a given string.",
    "code": "```javascript\nfunction countVowels(str) {\n    const vowels = 'aeiouAEIOU';\n    let count = 0;\n    for (let char of str) {\n        if (vowels.includes(char)) {\n            count++;\n        }\n    }\n    return count;\n}\n```"
  },
  {
    "task": "Implement a function that counts the occurrences of a substring within a string and returns it.",
    "code": "```javascript\nfunction countOccurrences(mainString, subString) {\n    let count = 0;\n    let pos = mainString.indexOf(subString);\n    while (pos !== -1) {\n        count++;\n        pos = mainString.indexOf(subString, pos + 1);\n    }\n    return count;\n}\n```"
  },
  {
    "task": "Write a function that accepts a list of numbers and returns them sorted in descending order.",
    "code": "```javascript\nfunction sortDescending(numbers) {\n    return numbers.sort((a, b) => b - a);\n}\n```"
  },
  {
    "task": "Create a function that returns the median of a list of numbers.",
    "code": "```javascript\nfunction findMedian(numbers) {\n    numbers.sort((a, b) => a - b);\n    const mid = Math.floor(numbers.length / 2);\n\n    if (numbers.length % 2 === 0) {\n        return (numbers[mid - 1] + numbers[mid]) / 2;\n    } else {\n        return numbers[mid];\n    }\n}\n```"
  },
  {
    "task": "Develop a function that receives a sentence and returns it with words in reverse order.",
    "code": "```javascript\nfunction reverseWords(sentence) {\n    return sentence.split(' ').reverse().join(' ');\n}\n```"
  },
  {
    "task": "Implement a function that returns the sum of all elements in a matrix.",
    "code": "```javascript\nfunction sumMatrix(matrix) {\n    return matrix.reduce((sum, row) => sum + row.reduce((rowSum, value) => rowSum + value, 0), 0);\n}\n```"
  },
  {
    "task": "Write a function that accepts a string and returns true if it is a palindrome.",
    "code": "```javascript\nfunction isPalindrome(str) {\n    const reversed = str.split('').reverse().join('');\n    return str === reversed;\n}\n```"
  },
  {
    "task": "Create a function that takes a number and returns its binary representation as a string.",
    "code": "```javascript\nfunction numberToBinaryString(number) {\n    return number.toString(2);\n}\n```"
  },
  {
    "task": "Design a function that returns the number of words in a paragraph.",
    "code": "```javascript\nfunction countWords(paragraph) {\n    return paragraph.split(/\\s+/).filter(word => word.length > 0).length;\n}\n```"
  },
  {
    "task": "Implement a function that accepts a list and returns the index of its maximum element.",
    "code": "```javascript\nfunction indexOfMaxElement(arr) {\n    if (arr.length === 0) return -1;\n    let maxIndex = 0;\n    for (let i = 1; i < arr.length; i++) {\n        if (arr[i] > arr[maxIndex]) {\n            maxIndex = i;\n        }\n    }\n    return maxIndex;\n}\n```"
  },
  {
    "task": "Write a function that takes a list of grades and returns the highest grade.",
    "code": "```javascript\nfunction getHighestGrade(grades) {\n    return Math.max(...grades);\n}\n```"
  },
  {
    "task": "Create a function that returns the product of all positive integers up to a given number.",
    "code": "```javascript\nfunction productOfIntegers(n) {\n    if (n <= 0) return 0;\n    let product = 1;\n    for (let i = 1; i <= n; i++) {\n        product *= i;\n    }\n    return product;\n}\n```"
  },
  {
    "task": "Develop a function that receives a string and returns a new string with spaces replaced by hyphens.",
    "code": "```javascript\nfunction replaceSpacesWithHyphens(input) {\n    return input.split(' ').join('-');\n}\n```"
  },
  {
    "task": "Implement a function that takes a list of integers and returns their sum.",
    "code": "```javascript\nfunction sumOfList(numbers) {\n    return numbers.reduce((acc, num) => acc + num, 0);\n}\n```"
  },
  {
    "task": "Write a function that checks if a string is a valid email address and returns a boolean.",
    "code": "```javascript\nfunction isValidEmail(email) {\n  const emailPattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  return emailPattern.test(email);\n}\n```"
  },
  {
    "task": "Create a function that returns the decimal equivalent of a hexadecimal string.",
    "code": "```javascript\nfunction hexToDecimal(hexString) {\n    return parseInt(hexString, 16);\n}\n```"
  },
  {
    "task": "Design a function that calculates and returns the body mass index based on height and weight.",
    "code": "```javascript\nfunction calculateBMI(weight, height) {\n    return weight / (height * height);\n}\n```"
  },
  {
    "task": "Implement a function that returns the initials of a person's name given a full name.",
    "code": "```javascript\nfunction getInitials(fullName) {\n    return fullName.split(' ').map(word => word[0].toUpperCase()).join('');\n}\n```"
  },
  {
    "task": "Write a function that accepts a list of names and returns them sorted alphabetically.",
    "code": "```javascript\nfunction sortNames(names) {\n    return names.sort();\n}\n```"
  },
  {
    "task": "Create a function that takes a list of integers and returns a list of their squares.",
    "code": "```javascript\nfunction squareList(numbers) {\n    return numbers.map(number => number * number);\n}\n```"
  },
  {
    "task": "Develop a function that returns the common elements between two sets.",
    "code": "```javascript\nfunction getCommonElements(set1, set2) {\n    return new Set([...set1].filter(element => set2.has(element)));\n}\n```"
  },
  {
    "task": "Implement a function that receives a list of strings and returns the shortest string.",
    "code": "```javascript\nfunction findShortestString(strings) {\n    return strings.reduce((shortest, current) => {\n        return current.length < shortest.length ? current : shortest;\n    }, strings[0]);\n}\n```"
  },
  {
    "task": "Write a function that returns the sum of digits of a given integer.",
    "code": "```javascript\nfunction sumOfDigits(number) {\n    let sum = 0;\n    number = Math.abs(number);\n    while (number > 0) {\n        sum += number % 10;\n        number = Math.floor(number / 10);\n    }\n    return sum;\n}\n```"
  },
  {
    "task": "Create a function that takes a matrix and returns its transpose.",
    "code": "```javascript\nfunction transpose(matrix) {\n    return matrix[0].map((_, colIndex) => matrix.map(row => row[colIndex]));\n}\n```"
  },
  {
    "task": "Design a function that returns the percentage of uppercase letters in a string.",
    "code": "```javascript\nfunction percentageOfUppercase(str) {\n    if (str.length === 0) return 0;\n    let uppercaseCount = 0;\n    for (let char of str) {\n        if (char >= 'A' && char <= 'Z') {\n            uppercaseCount++;\n        }\n    }\n    return (uppercaseCount / str.length) * 100;\n}\n```"
  },
  {
    "task": "Implement a function that accepts a string and returns it with each word capitalized.",
    "code": "```javascript\nfunction capitalizeWords(input) {\n    return input.split(' ').map(word => word.charAt(0).toUpperCase() + word.slice(1)).join(' ');\n}\n```"
  },
  {
    "task": "Write a function that takes a list and returns the difference between the max and min values.",
    "code": "```javascript\nfunction maxMinDifference(arr) {\n    if (arr.length === 0) return null;\n    const maxVal = Math.max(...arr);\n    const minVal = Math.min(...arr);\n    return maxVal - minVal;\n}\n```"
  },
  {
    "task": "Create a function that returns a list containing the first n prime numbers.",
    "code": "```javascript\nfunction isPrime(num) {\n    if (num <= 1) return false;\n    if (num <= 3) return true;\n    if (num % 2 === 0 || num % 3 === 0) return false;\n    for (let i = 5; i * i <= num; i += 6) {\n        if (num % i === 0 || num % (i + 2) === 0) return false;\n    }\n    return true;\n}\n\nfunction firstNPrimes(n) {\n    let primes = [];\n    let num = 2;\n    while (primes.length < n) {\n        if (isPrime(num)) {\n            primes.push(num);\n        }\n        num++;\n    }\n    return primes;\n}\n```"
  },
  {
    "task": "Develop a function that receives a dictionary and returns a new dictionary with keys and values swapped.",
    "code": "```javascript\nfunction swapKeysAndValues(obj) {\n    const swapped = {};\n    for (const [key, value] of Object.entries(obj)) {\n        swapped[value] = key;\n    }\n    return swapped;\n}\n```"
  },
  {
    "task": "Implement a function that accepts a string and returns the frequency of each word.",
    "code": "```javascript\nfunction wordFrequency(str) {\n    const words = str.split(/\\s+/);\n    const frequency = {};\n    \n    words.forEach(word => {\n        word = word.toLowerCase();\n        frequency[word] = (frequency[word] || 0) + 1;\n    });\n    \n    return frequency;\n}\n```"
  },
  {
    "task": "Write a function that takes two numbers and returns their greatest common divisor.",
    "code": "```javascript\nfunction greatestCommonDivisor(a, b) {\n    while (b !== 0) {\n        let temp = b;\n        b = a % b;\n        a = temp;\n    }\n    return a;\n}\n```"
  },
  {
    "task": "Create a function that returns the number of consonants in a given string.",
    "code": "```javascript\nfunction countConsonants(str) {\n    return str.replace(/[^bcdfghjklmnpqrstvwxyz]/gi, '').length;\n}\n```"
  },
  {
    "task": "Design a function that checks if a number is a perfect square and returns a boolean.",
    "code": "```javascript\nfunction isPerfectSquare(num) {\n    if (num < 0) return false;\n    const sqrt = Math.sqrt(num);\n    return sqrt === Math.floor(sqrt);\n}\n```"
  },
  {
    "task": "Implement a function that takes a list of numbers and returns the mode.",
    "code": "```javascript\nfunction findMode(numbers) {\n    const frequencyMap = {};\n    let maxFrequency = 0;\n    let mode;\n\n    for (const number of numbers) {\n        frequencyMap[number] = (frequencyMap[number] || 0) + 1;\n        if (frequencyMap[number] > maxFrequency) {\n            maxFrequency = frequencyMap[number];\n            mode = number;\n        }\n    }\n\n    return mode;\n}\n```"
  },
  {
    "task": "Write a function that accepts a string and returns a new string with characters in reverse order.",
    "code": "```javascript\nfunction reverseString(str) {\n    return str.split('').reverse().join('');\n}\n```"
  },
  {
    "task": "Create a function that returns the sum of all even numbers in a list.",
    "code": "```javascript\nfunction sumOfEvenNumbers(list) {\n    return list.reduce((sum, num) => num % 2 === 0 ? sum + num : sum, 0);\n}\n```"
  },
  {
    "task": "Develop a function that receives two lists and returns their union.",
    "code": "```javascript\nfunction union(list1, list2) {\n    return [...new Set([...list1, ...list2])];\n}\n```"
  },
  {
    "task": "Implement a function that takes a string and returns the number of unique characters.",
    "code": "```javascript\nfunction countUniqueCharacters(str) {\n    const uniqueChars = new Set(str);\n    return uniqueChars.size;\n}\n```"
  },
  {
    "task": "Write a function that returns the cube of a given number.",
    "code": "```javascript\nfunction cube(number) {\n    return number ** 3;\n}\n```"
  },
  {
    "task": "Create a function that calculates the power of a number given a base and exponent and returns the result.",
    "code": "```javascript\nfunction power(base, exponent) {\n    return Math.pow(base, exponent);\n}\n```"
  },
  {
    "task": "Design a function that accepts a URL and returns its domain name.",
    "code": "```javascript\nfunction getDomainName(url) {\n    const hostname = new URL(url).hostname;\n    const parts = hostname.split('.');\n    return parts.length > 2 ? parts.slice(-2).join('.') : hostname;\n}\n```"
  },
  {
    "task": "Implement a function that takes a sentence and returns it with each letter shifted by one in the alphabet.",
    "code": "```javascript\nfunction shiftSentenceByOne(sentence) {\n    return sentence.split('').map(char => {\n        if (/[a-zA-Z]/.test(char)) {\n            let code = char.charCodeAt(0);\n            if ((code >= 65 && code < 90) || (code >= 97 && code < 122)) {\n                return String.fromCharCode(code + 1);\n            } else if (code === 90 || code === 122) {\n                return String.fromCharCode(code - 25);\n            }\n        }\n        return char;\n    }).join('');\n}\n```"
  },
  {
    "task": "Write a function that checks if a list is sorted and returns a boolean.",
    "code": "```javascript\nfunction isSorted(list) {\n    for (let i = 0; i < list.length - 1; i++) {\n        if (list[i] > list[i + 1]) {\n            return false;\n        }\n    }\n    return true;\n}\n```"
  },
  {
    "task": "Create a function that returns the longest increasing subsequence in a list of numbers.",
    "code": "```javascript\nfunction longestIncreasingSubsequence(nums) {\n    if (nums.length === 0) return [];\n\n    let lengths = new Array(nums.length).fill(1);\n    let previous = new Array(nums.length).fill(-1);\n\n    for (let i = 1; i < nums.length; i++) {\n        for (let j = 0; j < i; j++) {\n            if (nums[i] > nums[j] && lengths[i] < lengths[j] + 1) {\n                lengths[i] = lengths[j] + 1;\n                previous[i] = j;\n            }\n        }\n    }\n\n    let maxLength = Math.max(...lengths);\n    let index = lengths.indexOf(maxLength);\n    let lis = [];\n\n    while (index !== -1) {\n        lis.unshift(nums[index]);\n        index = previous[index];\n    }\n\n    return lis;\n}\n```"
  },
  {
    "task": "Develop a function that calculates and returns the compound interest for given principal, rate, and time.",
    "code": "```javascript\nfunction calculateCompoundInterest(principal, rate, time) {\n    return principal * Math.pow((1 + rate), time);\n}\n```"
  },
  {
    "task": "Implement a function that accepts two strings and returns their longest common substring.",
    "code": "```javascript\nfunction longestCommonSubstring(str1, str2) {\n    let maxLength = 0;\n    let end = 0;\n    const dp = Array.from({ length: str1.length + 1 }, () => Array(str2.length + 1).fill(0));\n\n    for (let i = 1; i <= str1.length; i++) {\n        for (let j = 1; j <= str2.length; j++) {\n            if (str1[i - 1] === str2[j - 1]) {\n                dp[i][j] = dp[i - 1][j - 1] + 1;\n                if (dp[i][j] > maxLength) {\n                    maxLength = dp[i][j];\n                    end = i;\n                }\n            }\n        }\n    }\n    return str1.slice(end - maxLength, end);\n}\n```"
  },
  {
    "task": "Write a function that takes a number and returns true if it is a palindrome.",
    "code": "```javascript\nfunction isPalindrome(number) {\n    const str = number.toString();\n    const reversedStr = str.split('').reverse().join('');\n    return str === reversedStr;\n}\n```"
  },
  {
    "task": "Create a function that returns the average length of words in a given sentence.",
    "code": "```javascript\nfunction averageWordLength(sentence) {\n    if (!sentence) return 0;\n    const words = sentence.split(' ');\n    const totalLength = words.reduce((sum, word) => sum + word.length, 0);\n    return totalLength / words.length;\n}\n```"
  },
  {
    "task": "Design a function that checks if a string contains only digits and returns a boolean.",
    "code": "```javascript\nfunction containsOnlyDigits(str) {\n    return /^\\d+$/.test(str);\n}\n```"
  },
  {
    "task": "Implement a function that receives a list of tuples and returns a list of the first elements.",
    "code": "```javascript\nfunction getFirstElements(tuples) {\n    return tuples.map(tuple => tuple[0]);\n}\n```"
  },
  {
    "task": "Write a function that takes a year and returns the Chinese zodiac sign for that year.",
    "code": "```javascript\nfunction getChineseZodiac(year) {\n    const zodiacSigns = [\n        \"Rat\", \"Ox\", \"Tiger\", \"Rabbit\", \"Dragon\", \"Snake\",\n        \"Horse\", \"Goat\", \"Monkey\", \"Rooster\", \"Dog\", \"Pig\"\n    ];\n    return zodiacSigns[(year - 4) % 12];\n}\n```"
  },
  {
    "task": "Create a function that returns the number of trailing zeros in a factorial of a given number.",
    "code": "```javascript\nfunction trailingZerosInFactorial(n) {\n    let count = 0;\n    for (let i = 5; n / i >= 1; i *= 5) {\n        count += Math.floor(n / i);\n    }\n    return count;\n}\n```"
  },
  {
    "task": "Develop a function that accepts a list and returns a new list with elements multiplied by their index.",
    "code": "```javascript\nfunction multiplyByIndex(arr) {\n    return arr.map((element, index) => element * index);\n}\n```"
  },
  {
    "task": "Implement a function that receives a string and returns a dictionary of word lengths.",
    "code": "```javascript\nfunction wordLengths(s) {\n    const words = s.split(/\\s+/);\n    const lengths = {};\n    words.forEach(word => {\n        lengths[word] = word.length;\n    });\n    return lengths;\n}\n```"
  },
  {
    "task": "Write a function that takes a list of integers and returns a list of numbers that are divisible by 3.",
    "code": "```javascript\nfunction divisibleByThree(numbers) {\n    return numbers.filter(number => number % 3 === 0);\n}\n```"
  },
  {
    "task": "Create a function that returns the result of a quadratic equation given its coefficients.",
    "code": "```javascript\nfunction solveQuadratic(a, b, c) {\n    const discriminant = b * b - 4 * a * c;\n    if (discriminant < 0) {\n        return null;\n    } else if (discriminant === 0) {\n        return -b / (2 * a);\n    } else {\n        const root1 = (-b + Math.sqrt(discriminant)) / (2 * a);\n        const root2 = (-b - Math.sqrt(discriminant)) / (2 * a);\n        return [root1, root2];\n    }\n}\n```"
  },
  {
    "task": "Design a function that checks if two lists have any elements in common and returns a boolean.",
    "code": "```javascript\nfunction haveCommonElements(list1, list2) {\n    return list1.some(element => list2.includes(element));\n}\n```"
  },
  {
    "task": "Implement a function that accepts a list and returns the sum of its elements using recursion.",
    "code": "```javascript\nfunction recursiveSum(list) {\n    if (list.length === 0) {\n        return 0;\n    }\n    return list[0] + recursiveSum(list.slice(1));\n}\n```"
  },
  {
    "task": "Write a function that takes a list of numbers and returns the variance.",
    "code": "```javascript\nfunction calculateVariance(numbers) {\n    if (numbers.length === 0) return 0;\n    const mean = numbers.reduce((acc, num) => acc + num, 0) / numbers.length;\n    const variance = numbers.reduce((acc, num) => acc + Math.pow(num - mean, 2), 0) / numbers.length;\n    return variance;\n}\n```"
  },
  {
    "task": "Create a function that returns the ASCII value of a given character.",
    "code": "```javascript\nfunction getAsciiValue(character) {\n    return character.charCodeAt(0);\n}\n```"
  },
  {
    "task": "Develop a function that takes a number and returns the number of bits required for its binary representation.",
    "code": "```javascript\nfunction numberOfBits(num) {\n    return num.toString(2).length;\n}\n```"
  }
]