[
  {
    "task": "Write a program that reads a user's name and age from the input, then prints a greeting message using both values.",
    "code": "```javascript\nconst readline = require('readline');\n\nconst rl = readline.createInterface({\n  input: process.stdin,\n  output: process.stdout\n});\n\nrl.question('Enter your name: ', (name) => {\n  rl.question('Enter your age: ', (age) => {\n    console.log(`Hello, ${name}! You are ${age} years old.`);\n    rl.close();\n  });\n});\n```"
  },
  {
    "task": "Create a script that continuously reads numbers from the input and prints their running total until a negative number is entered.",
    "code": "```javascript\nlet readline = require('readline');\n\nlet rl = readline.createInterface({\n    input: process.stdin,\n    output: process.stdout\n});\n\nlet total = 0;\n\nfunction askForNumber() {\n    rl.question('', (input) => {\n        let number = parseFloat(input);\n\n        if (number < 0) {\n            rl.close();\n        } else {\n            total += number;\n            console.log('Running Total:', total);\n            askForNumber();\n        }\n    });\n}\n\naskForNumber();\n```"
  },
  {
    "task": "Design a program that asks the user for a sentence and outputs the number of words it contains.",
    "code": "```javascript\nconst readline = require('readline');\n\nconst rl = readline.createInterface({\n  input: process.stdin,\n  output: process.stdout\n});\n\nrl.question('Please enter a sentence: ', (sentence) => {\n  const wordCount = sentence.trim().split(/\\s+/).length;\n  console.log(`The number of words in the sentence is: ${wordCount}`);\n  rl.close();\n});\n```"
  },
  {
    "task": "Build a command-line tool that reads a list of integers and outputs them in sorted order.",
    "code": "```javascript\nconst readline = require('readline');\n\nconst rl = readline.createInterface({\n  input: process.stdin,\n  output: process.stdout\n});\n\nrl.question('Enter a list of integers separated by spaces: ', (input) => {\n  const numbers = input.split(' ').map(Number);\n  const sortedNumbers = numbers.sort((a, b) => a - b);\n  console.log('Sorted integers:', sortedNumbers.join(' '));\n  rl.close();\n});\n```"
  },
  {
    "task": "Develop a program that reads a file name from the input, then prints the number of lines in that file.",
    "code": "```javascript\nconst fs = require('fs');\nconst readline = require('readline');\n\nconst rl = readline.createInterface({\n    input: process.stdin,\n    output: process.stdout\n});\n\nrl.question('Enter file name: ', (fileName) => {\n    fs.readFile(fileName, 'utf8', (err, data) => {\n        if (err) {\n            console.error('Error reading file:', err);\n            rl.close();\n            return;\n        }\n        const lineCount = data.split('\\n').length;\n        console.log('Number of lines:', lineCount);\n        rl.close();\n    });\n});\n```"
  },
  {
    "task": "Implement a calculator that reads two numbers and an operator (+, -, *, /) from the input and prints the result.",
    "code": "```javascript\nconst readline = require('readline');\n\nconst rl = readline.createInterface({\n  input: process.stdin,\n  output: process.stdout\n});\n\nrl.question('Enter first number: ', (firstInput) => {\n  rl.question('Enter second number: ', (secondInput) => {\n    rl.question('Enter operator (+, -, *, /): ', (operator) => {\n      const num1 = parseFloat(firstInput);\n      const num2 = parseFloat(secondInput);\n      let result;\n      \n      switch (operator) {\n        case '+':\n          result = num1 + num2;\n          break;\n        case '-':\n          result = num1 - num2;\n          break;\n        case '*':\n          result = num1 * num2;\n          break;\n        case '/':\n          result = num2 !== 0 ? num1 / num2 : 'Error: Division by zero';\n          break;\n        default:\n          result = 'Error: Invalid operator';\n      }\n\n      console.log('Result:', result);\n      rl.close();\n    });\n  });\n});\n```"
  },
  {
    "task": "Write a script that reads a user's full name and prints it in reverse order.",
    "code": "```javascript\nconst readline = require('readline');\n\nconst rl = readline.createInterface({\n  input: process.stdin,\n  output: process.stdout\n});\n\nrl.question('Enter your full name: ', (fullName) => {\n  const reversedName = fullName.split('').reverse().join('');\n  console.log(reversedName);\n  rl.close();\n});\n```"
  },
  {
    "task": "Create a program that asks for a word and checks if it is a palindrome, printing the appropriate message.",
    "code": "```javascript\nconst readline = require('readline');\n\nconst rl = readline.createInterface({\n  input: process.stdin,\n  output: process.stdout\n});\n\nrl.question('Enter a word: ', (word) => {\n  const isPalindrome = word === word.split('').reverse().join('');\n  if (isPalindrome) {\n    console.log('The word is a palindrome.');\n  } else {\n    console.log('The word is not a palindrome.');\n  }\n  rl.close();\n});\n```"
  },
  {
    "task": "Develop a tool that reads multiple lines of text and outputs the longest line.",
    "code": "```javascript\nconst readline = require('readline');\n\nconst rl = readline.createInterface({\n  input: process.stdin,\n  output: process.stdout,\n  terminal: false\n});\n\nlet longestLine = '';\n\nrl.on('line', (line) => {\n  if (line.length > longestLine.length) {\n    longestLine = line;\n  }\n});\n\nrl.on('close', () => {\n  console.log(longestLine);\n});\n```"
  },
  {
    "task": "Design a script that reads a number 'n' and prints the first 'n' Fibonacci numbers.",
    "code": "```javascript\nconst readline = require('readline');\n\nconst rl = readline.createInterface({\n  input: process.stdin,\n  output: process.stdout\n});\n\nrl.question('Enter a number: ', (input) => {\n  const n = parseInt(input);\n  if (isNaN(n) || n <= 0) {\n    console.log('Please enter a positive integer.');\n  } else {\n    let fib = [];\n    for (let i = 0; i < n; i++) {\n      if (i === 0) {\n        fib.push(0);\n      } else if (i === 1) {\n        fib.push(1);\n      } else {\n        fib.push(fib[i - 1] + fib[i - 2]);\n      }\n    }\n    console.log(`First ${n} Fibonacci numbers:`, fib.join(', '));\n  }\n  rl.close();\n});\n```"
  },
  {
    "task": "Write a program that takes a list of numbers from the input and prints only the even ones.",
    "code": "```javascript\nconst readline = require('readline');\n\nconst rl = readline.createInterface({\n  input: process.stdin,\n  output: process.stdout\n});\n\nrl.question('Enter a list of numbers separated by spaces: ', (input) => {\n  const numbers = input.split(' ').map(Number);\n  const evenNumbers = numbers.filter(num => num % 2 === 0);\n  console.log('Even numbers:', evenNumbers.join(' '));\n  rl.close();\n});\n```"
  },
  {
    "task": "Create a script that reads a date (day, month, year) and prints the day of the week for that date.",
    "code": "```javascript\nconst readline = require('readline');\n\nconst rl = readline.createInterface({\n  input: process.stdin,\n  output: process.stdout\n});\n\nrl.question('Enter day: ', (day) => {\n  rl.question('Enter month: ', (month) => {\n    rl.question('Enter year: ', (year) => {\n      const date = new Date(year, month - 1, day);\n      const options = { weekday: 'long' };\n      console.log(new Intl.DateTimeFormat('en-US', options).format(date));\n      rl.close();\n    });\n  });\n});\n```"
  },
  {
    "task": "Develop a program that reads a paragraph and counts the frequency of each letter in the text.",
    "code": "```javascript\nconst fs = require('fs');\n\nfunction countLetterFrequency(text) {\n  const frequency = {};\n  \n  for (let char of text.toLowerCase()) {\n    if (char >= 'a' && char <= 'z') {\n      frequency[char] = (frequency[char] || 0) + 1;\n    }\n  }\n  \n  return frequency;\n}\n\nfs.readFile('input.txt', 'utf8', (err, data) => {\n  if (err) {\n    console.error('Error reading file:', err);\n    return;\n  }\n  \n  const frequencies = countLetterFrequency(data);\n  \n  console.log('Letter frequencies:');\n  for (let [letter, count] of Object.entries(frequencies)) {\n    console.log(`${letter}: ${count}`);\n  }\n});\n```"
  },
  {
    "task": "Build a tool that reads a text and a word, then prints the number of times the word appears in the text.",
    "code": "```javascript\nconst readline = require('readline');\n\nconst rl = readline.createInterface({\n  input: process.stdin,\n  output: process.stdout\n});\n\nrl.question('Enter the text: ', (text) => {\n  rl.question('Enter the word to count: ', (word) => {\n    const wordCount = text.split(' ').filter(w => w === word).length;\n    console.log(`The word \"${word}\" appears ${wordCount} times in the text.`);\n    rl.close();\n  });\n});\n```"
  },
  {
    "task": "Implement a script that reads a temperature in Celsius and converts it to Fahrenheit, printing the result.",
    "code": "```javascript\nconst readline = require('readline');\n\nconst rl = readline.createInterface({\n  input: process.stdin,\n  output: process.stdout\n});\n\nrl.question('Enter temperature in Celsius: ', (celsius) => {\n  const fahrenheit = (parseFloat(celsius) * 9/5) + 32;\n  console.log(`Temperature in Fahrenheit: ${fahrenheit.toFixed(2)}`);\n  rl.close();\n});\n```"
  },
  {
    "task": "Write a program that continuously reads input until the word 'exit' is entered, then prints all entered inputs.",
    "code": "```javascript\nconst readline = require('readline');\n\nconst rl = readline.createInterface({\n  input: process.stdin,\n  output: process.stdout\n});\n\nlet inputs = [];\n\nrl.on('line', (input) => {\n  if (input.trim().toLowerCase() === 'exit') {\n    console.log(inputs.join('\\n'));\n    rl.close();\n  } else {\n    inputs.push(input);\n  }\n});\n```"
  },
  {
    "task": "Create a tool that prompts for a filename, reads the file, and prints its content in uppercase.",
    "code": "```javascript\nconst fs = require('fs');\nconst readline = require('readline');\n\nconst rl = readline.createInterface({\n  input: process.stdin,\n  output: process.stdout\n});\n\nrl.question('Enter filename: ', (filename) => {\n  fs.readFile(filename, 'utf8', (err, data) => {\n    if (err) {\n      console.error('Error reading file:', err);\n    } else {\n      console.log(data.toUpperCase());\n    }\n    rl.close();\n  });\n});\n```"
  },
  {
    "task": "Develop a program that reads a series of email addresses and prints the unique domain names.",
    "code": "```javascript\nconst readline = require('readline');\n\nconst rl = readline.createInterface({\n  input: process.stdin,\n  output: process.stdout\n});\n\nconst domainSet = new Set();\n\nconsole.log(\"Enter email addresses (type 'exit' to finish):\");\n\nrl.on('line', (input) => {\n  if (input.toLowerCase() === 'exit') {\n    console.log(\"Unique domain names:\");\n    domainSet.forEach(domain => console.log(domain));\n    rl.close();\n  } else {\n    const parts = input.split('@');\n    if (parts.length === 2) {\n      domainSet.add(parts[1]);\n    }\n  }\n});\n```"
  },
  {
    "task": "Design a script that reads a string and prints whether it contains all the letters of the alphabet.",
    "code": "```javascript\nconst readline = require('readline');\n\nconst rl = readline.createInterface({\n  input: process.stdin,\n  output: process.stdout\n});\n\nfunction containsAllAlphabets(str) {\n  const alphabet = 'abcdefghijklmnopqrstuvwxyz';\n  str = str.toLowerCase();\n  for (let char of alphabet) {\n    if (!str.includes(char)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nrl.question('Enter a string: ', (input) => {\n  if (containsAllAlphabets(input)) {\n    console.log('The string contains all the letters of the alphabet.');\n  } else {\n    console.log('The string does not contain all the letters of the alphabet.');\n  }\n  rl.close();\n});\n```"
  },
  {
    "task": "Write a program that reads a number and prints its factorial.",
    "code": "```javascript\nconst readline = require('readline');\n\nconst rl = readline.createInterface({\n  input: process.stdin,\n  output: process.stdout\n});\n\nrl.question('Enter a number: ', (input) => {\n  const number = parseInt(input);\n\n  function factorial(n) {\n    if (n <= 1) return 1;\n    return n * factorial(n - 1);\n  }\n\n  console.log(`Factorial of ${number} is ${factorial(number)}`);\n  rl.close();\n});\n```"
  },
  {
    "task": "Create a tool that reads a list of names and prints them in alphabetical order.",
    "code": "```javascript\nconst readline = require('readline');\n\nconst rl = readline.createInterface({\n  input: process.stdin,\n  output: process.stdout\n});\n\nlet names = [];\n\nconsole.log(\"Enter names, one per line. Type 'done' to finish:\");\n\nrl.on('line', (input) => {\n  if (input.trim().toLowerCase() === 'done') {\n    rl.close();\n  } else {\n    names.push(input.trim());\n  }\n});\n\nrl.on('close', () => {\n  names.sort();\n  console.log(\"Names in alphabetical order:\");\n  names.forEach(name => console.log(name));\n});\n```"
  },
  {
    "task": "Develop a program that asks for a sentence and prints each word on a new line.",
    "code": "```javascript\nconst readline = require('readline');\n\nconst rl = readline.createInterface({\n  input: process.stdin,\n  output: process.stdout\n});\n\nrl.question('Please enter a sentence: ', (sentence) => {\n  const words = sentence.split(' ');\n  words.forEach(word => console.log(word));\n  rl.close();\n});\n```"
  },
  {
    "task": "Build a script that reads a time in 12-hour format and converts it to 24-hour format.",
    "code": "```javascript\nconst readline = require('readline');\n\nconst rl = readline.createInterface({\n  input: process.stdin,\n  output: process.stdout\n});\n\nconst convertTo24HourFormat = (time12h) => {\n  const [time, modifier] = time12h.split(' ');\n  let [hours, minutes] = time.split(':');\n  if (hours === '12') {\n    hours = '00';\n  }\n  if (modifier.toLowerCase() === 'pm') {\n    hours = parseInt(hours, 10) + 12;\n  }\n  return `${hours.toString().padStart(2, '0')}:${minutes}`;\n};\n\nrl.question('Enter time in 12-hour format (hh:mm AM/PM): ', (time12h) => {\n  const time24h = convertTo24HourFormat(time12h);\n  console.log('Time in 24-hour format:', time24h);\n  rl.close();\n});\n```"
  },
  {
    "task": "Implement a program that reads two strings and checks if they are anagrams, printing the result.",
    "code": "```javascript\nconst readline = require('readline');\n\nconst rl = readline.createInterface({\n  input: process.stdin,\n  output: process.stdout\n});\n\nfunction areAnagrams(str1, str2) {\n  const normalize = str => str.replace(/\\s/g, '').toLowerCase().split('').sort().join('');\n  return normalize(str1) === normalize(str2);\n}\n\nrl.question('Enter the first string: ', (string1) => {\n  rl.question('Enter the second string: ', (string2) => {\n    if (areAnagrams(string1, string2)) {\n      console.log('The strings are anagrams.');\n    } else {\n      console.log('The strings are not anagrams.');\n    }\n    rl.close();\n  });\n});\n```"
  },
  {
    "task": "Write a tool that reads a paragraph and prints the first and last sentence.",
    "code": "```javascript\nconst readline = require('readline');\n\nconst rl = readline.createInterface({\n    input: process.stdin,\n    output: process.stdout\n});\n\nrl.question('Enter a paragraph: ', (paragraph) => {\n    const sentences = paragraph.match(/[^\\.!\\?]+[\\.!\\?]+/g);\n    if (sentences) {\n        const firstSentence = sentences[0];\n        const lastSentence = sentences[sentences.length - 1];\n        console.log('First sentence:', firstSentence.trim());\n        console.log('Last sentence:', lastSentence.trim());\n    } else {\n        console.log('No sentences found.');\n    }\n    rl.close();\n});\n```"
  },
  {
    "task": "Create a program that reads a binary number and converts it to decimal.",
    "code": "```javascript\nconst readline = require('readline');\n\nconst rl = readline.createInterface({\n  input: process.stdin,\n  output: process.stdout\n});\n\nrl.question('Enter a binary number: ', (binary) => {\n  const decimal = parseInt(binary, 2);\n  console.log(`The decimal value is: ${decimal}`);\n  rl.close();\n});\n```"
  },
  {
    "task": "Develop a script that reads a series of scores and prints the average score.",
    "code": "```javascript\nconst readline = require('readline');\n\nconst rl = readline.createInterface({\n    input: process.stdin,\n    output: process.stdout\n});\n\nlet scores = [];\n\nrl.on('line', (input) => {\n    if (input.toLowerCase() === 'end') {\n        const sum = scores.reduce((acc, score) => acc + score, 0);\n        const average = scores.length ? (sum / scores.length) : 0;\n        console.log(`Average score: ${average.toFixed(2)}`);\n        rl.close();\n    } else {\n        const score = parseFloat(input);\n        if (!isNaN(score)) {\n            scores.push(score);\n        } else {\n            console.log('Please enter a valid number or type \"end\" to finish.');\n        }\n    }\n});\n```"
  },
  {
    "task": "Design a program that reads a list of integers and prints the prime numbers.",
    "code": "```javascript\nconst readline = require('readline');\n\nconst rl = readline.createInterface({\n  input: process.stdin,\n  output: process.stdout\n});\n\nfunction isPrime(num) {\n  if (num <= 1) return false;\n  if (num <= 3) return true;\n  if (num % 2 === 0 || num % 3 === 0) return false;\n  for (let i = 5; i * i <= num; i += 6) {\n    if (num % i === 0 || num % (i + 2) === 0) return false;\n  }\n  return true;\n}\n\nrl.question('Enter a list of integers separated by spaces: ', (answer) => {\n  const numbers = answer.split(' ').map(Number);\n  const primes = numbers.filter(isPrime);\n  console.log('Prime numbers:', primes.join(' '));\n  rl.close();\n});\n```"
  },
  {
    "task": "Write a script that reads a word and prints its Pig Latin translation.",
    "code": "```javascript\nconst readline = require('readline');\n\nconst rl = readline.createInterface({\n  input: process.stdin,\n  output: process.stdout\n});\n\nrl.question('Enter a word: ', (word) => {\n  const pigLatin = word.slice(1) + word[0] + 'ay';\n  console.log('Pig Latin:', pigLatin);\n  rl.close();\n});\n```"
  },
  {
    "task": "Create a tool that reads a matrix of numbers and prints its transpose.",
    "code": "```javascript\nconst readline = require('readline');\n\nconst rl = readline.createInterface({\n  input: process.stdin,\n  output: process.stdout\n});\n\nlet inputLines = [];\n\nrl.on('line', (line) => {\n  if (line.trim() === '') {\n    rl.close();\n  } else {\n    inputLines.push(line.trim().split(' ').map(Number));\n  }\n});\n\nrl.on('close', () => {\n  const transpose = (matrix) => {\n    return matrix[0].map((_, colIndex) => matrix.map(row => row[colIndex]));\n  };\n\n  const transposedMatrix = transpose(inputLines);\n\n  transposedMatrix.forEach(row => {\n    console.log(row.join(' '));\n  });\n});\n```"
  },
  {
    "task": "Implement a program that reads a URL and prints the domain name.",
    "code": "```javascript\nconst readline = require('readline');\n\nconst rl = readline.createInterface({\n  input: process.stdin,\n  output: process.stdout\n});\n\nrl.question('Enter a URL: ', (url) => {\n  try {\n    const domain = new URL(url).hostname;\n    console.log('Domain name:', domain);\n  } catch (error) {\n    console.log('Invalid URL');\n  }\n  rl.close();\n});\n```"
  },
  {
    "task": "Write a script that reads a number and prints its multiplication table up to 12.",
    "code": "```javascript\nconst readline = require('readline');\n\nconst rl = readline.createInterface({\n  input: process.stdin,\n  output: process.stdout\n});\n\nrl.question('Enter a number: ', (answer) => {\n  const number = parseInt(answer);\n  for (let i = 1; i <= 12; i++) {\n    console.log(`${number} x ${i} = ${number * i}`);\n  }\n  rl.close();\n});\n```"
  },
  {
    "task": "Develop a program that reads a list of dates and prints them in order of occurrence.",
    "code": "```javascript\nconst readline = require('readline');\n\nconst rl = readline.createInterface({\n  input: process.stdin,\n  output: process.stdout\n});\n\nlet dates = [];\n\nconsole.log(\"Enter dates (YYYY-MM-DD), one per line. Type 'done' to finish:\");\n\nrl.on('line', (input) => {\n  if (input.trim().toLowerCase() === 'done') {\n    dates.sort((a, b) => new Date(a) - new Date(b));\n    console.log(\"Dates in order of occurrence:\");\n    dates.forEach(date => console.log(date));\n    rl.close();\n  } else {\n    dates.push(input.trim());\n  }\n});\n```"
  },
  {
    "task": "Create a tool that reads a text and prints it with each sentence capitalized.",
    "code": "```javascript\nconst readline = require('readline');\n\nconst rl = readline.createInterface({\n  input: process.stdin,\n  output: process.stdout\n});\n\nrl.question('Enter text: ', (input) => {\n  const capitalizeSentences = (text) => {\n    return text.replace(/(?:^|[.!?]\\s+)([a-z])/g, (match, p1) => match.replace(p1, p1.toUpperCase()));\n  };\n\n  const capitalizedText = capitalizeSentences(input);\n  console.log(capitalizedText);\n\n  rl.close();\n});\n```"
  },
  {
    "task": "Design a program that reads a list of words and prints them in reverse alphabetical order.",
    "code": "```javascript\nconst readline = require('readline');\n\nconst rl = readline.createInterface({\n  input: process.stdin,\n  output: process.stdout\n});\n\nlet words = [];\n\nrl.question('Enter words separated by space: ', (input) => {\n  words = input.split(' ');\n  words.sort((a, b) => b.localeCompare(a));\n  console.log('Words in reverse alphabetical order:');\n  console.log(words.join(' '));\n  rl.close();\n});\n```"
  },
  {
    "task": "Write a script that asks for two times and prints the difference in minutes.",
    "code": "```javascript\nconst readline = require('readline');\n\nconst rl = readline.createInterface({\n  input: process.stdin,\n  output: process.stdout\n});\n\nfunction parseTime(timeStr) {\n  const [hours, minutes] = timeStr.split(':').map(Number);\n  return hours * 60 + minutes;\n}\n\nrl.question('Enter the first time (HH:MM): ', (firstTime) => {\n  rl.question('Enter the second time (HH:MM): ', (secondTime) => {\n    const firstTimeMinutes = parseTime(firstTime);\n    const secondTimeMinutes = parseTime(secondTime);\n    const difference = Math.abs(firstTimeMinutes - secondTimeMinutes);\n    console.log(`The difference in minutes is: ${difference}`);\n    rl.close();\n  });\n});\n```"
  },
  {
    "task": "Build a program that reads a text and prints the number of vowels and consonants.",
    "code": "```javascript\nconst readline = require('readline');\n\nconst rl = readline.createInterface({\n  input: process.stdin,\n  output: process.stdout\n});\n\nrl.question('Enter a text: ', (inputText) => {\n  const vowels = 'aeiouAEIOU';\n  let vowelCount = 0;\n  let consonantCount = 0;\n\n  for (let char of inputText) {\n    if (vowels.includes(char)) {\n      vowelCount++;\n    } else if (char.match(/[a-zA-Z]/)) {\n      consonantCount++;\n    }\n  }\n\n  console.log(`Number of vowels: ${vowelCount}`);\n  console.log(`Number of consonants: ${consonantCount}`);\n\n  rl.close();\n});\n```"
  },
  {
    "task": "Implement a tool that reads a JSON object from input and prints its keys.",
    "code": "```javascript\nprocess.stdin.setEncoding('utf8');\n\nlet input = '';\nprocess.stdin.on('data', (chunk) => {\n  input += chunk;\n});\n\nprocess.stdin.on('end', () => {\n  try {\n    const jsonObject = JSON.parse(input);\n    const keys = Object.keys(jsonObject);\n    keys.forEach(key => {\n      console.log(key);\n    });\n  } catch (error) {\n    console.error('Invalid JSON input');\n  }\n});\n```"
  },
  {
    "task": "Write a program that reads a CSV file from input and prints each row as a dictionary.",
    "code": "```javascript\nconst readline = require('readline');\nconst fs = require('fs');\n\nconst rl = readline.createInterface({\n  input: process.stdin,\n  output: process.stdout\n});\n\nrl.question('Enter the CSV file path: ', (filePath) => {\n  fs.readFile(filePath, 'utf8', (err, data) => {\n    if (err) {\n      console.error('Error reading the file:', err);\n    } else {\n      const lines = data.split('\\n');\n      const headers = lines[0].split(',');\n      for (let i = 1; i < lines.length; i++) {\n        const values = lines[i].split(',');\n        const rowObject = {};\n        headers.forEach((header, index) => {\n          rowObject[header] = values[index];\n        });\n        console.log(rowObject);\n      }\n    }\n    rl.close();\n  });\n});\n```"
  },
  {
    "task": "Create a script that reads a sentence and prints it with the words in reverse order.",
    "code": "```javascript\nconst readline = require('readline');\n\nconst rl = readline.createInterface({\n  input: process.stdin,\n  output: process.stdout\n});\n\nrl.question('Enter a sentence: ', (sentence) => {\n  const reversedSentence = sentence.split(' ').reverse().join(' ');\n  console.log(reversedSentence);\n  rl.close();\n});\n```"
  },
  {
    "task": "Develop a tool that reads a list of numbers and prints their median.",
    "code": "```javascript\nconst readline = require('readline');\n\nconst rl = readline.createInterface({\n  input: process.stdin,\n  output: process.stdout\n});\n\nrl.question('Enter a list of numbers separated by spaces: ', (input) => {\n  const numbers = input.split(' ').map(Number).sort((a, b) => a - b);\n  const len = numbers.length;\n  let median;\n  \n  if (len % 2 === 0) {\n    median = (numbers[len / 2 - 1] + numbers[len / 2]) / 2;\n  } else {\n    median = numbers[Math.floor(len / 2)];\n  }\n\n  console.log('Median:', median);\n  rl.close();\n});\n```"
  },
  {
    "task": "Design a program that reads a sequence of characters and prints the first non-repeated character.",
    "code": "```javascript\nconst readline = require('readline');\n\nconst rl = readline.createInterface({\n  input: process.stdin,\n  output: process.stdout\n});\n\nrl.question('Enter a sequence of characters: ', (input) => {\n  const charCount = {};\n  \n  for (const char of input) {\n    if (charCount[char]) {\n      charCount[char]++;\n    } else {\n      charCount[char] = 1;\n    }\n  }\n  \n  for (const char of input) {\n    if (charCount[char] === 1) {\n      console.log(`The first non-repeated character is: ${char}`);\n      break;\n    }\n  }\n  \n  rl.close();\n});\n```"
  },
  {
    "task": "Write a script that reads a list of tuples and prints them sorted by the second element.",
    "code": "```javascript\nconst readline = require('readline');\n\nconst rl = readline.createInterface({\n  input: process.stdin,\n  output: process.stdout\n});\n\nlet data = '';\n\nrl.on('line', (input) => {\n  data += input;\n});\n\nrl.on('close', () => {\n  let tuples = JSON.parse(data);\n  tuples.sort((a, b) => a[1] - b[1]);\n  tuples.forEach(tuple => console.log(tuple));\n});\n```"
  },
  {
    "task": "Create a program that reads a list of cities and prints them grouped by their starting letter.",
    "code": "```javascript\nconst readline = require('readline');\n\nconst rl = readline.createInterface({\n  input: process.stdin,\n  output: process.stdout\n});\n\nlet cities = [];\n\nrl.question('Enter cities separated by commas: ', (input) => {\n  cities = input.split(',').map(city => city.trim());\n  const groupedCities = cities.reduce((acc, city) => {\n    const firstLetter = city[0].toUpperCase();\n    if (!acc[firstLetter]) {\n      acc[firstLetter] = [];\n    }\n    acc[firstLetter].push(city);\n    return acc;\n  }, {});\n\n  for (const letter in groupedCities) {\n    console.log(`${letter}: ${groupedCities[letter].join(', ')}`);\n  }\n\n  rl.close();\n});\n```"
  },
  {
    "task": "Build a tool that reads a text and prints the longest word.",
    "code": "```javascript\nconst readline = require('readline');\n\nconst rl = readline.createInterface({\n  input: process.stdin,\n  output: process.stdout\n});\n\nrl.question('Enter a text: ', (input) => {\n  const words = input.split(/\\s+/);\n  let longestWord = '';\n\n  for (const word of words) {\n    if (word.length > longestWord.length) {\n      longestWord = word;\n    }\n  }\n\n  console.log('Longest word:', longestWord);\n  rl.close();\n});\n```"
  },
  {
    "task": "Implement a program that reads a string and prints the number of unique characters.",
    "code": "```javascript\nconst readline = require('readline');\n\nconst rl = readline.createInterface({\n  input: process.stdin,\n  output: process.stdout\n});\n\nrl.question('Enter a string: ', (inputString) => {\n  const uniqueChars = new Set(inputString);\n  console.log(uniqueChars.size);\n  rl.close();\n});\n```"
  },
  {
    "task": "Write a script that reads two strings and prints the longest common substring.",
    "code": "```javascript\nconst readline = require('readline');\n\nconst rl = readline.createInterface({\n  input: process.stdin,\n  output: process.stdout\n});\n\nrl.question('Enter first string: ', (firstString) => {\n  rl.question('Enter second string: ', (secondString) => {\n    function longestCommonSubstring(s1, s2) {\n      let maxLength = 0;\n      let endIndex = 0;\n      const lengths = Array(s1.length + 1).fill().map(() => Array(s2.length + 1).fill(0));\n      \n      for (let i = 1; i <= s1.length; i++) {\n        for (let j = 1; j <= s2.length; j++) {\n          if (s1[i - 1] === s2[j - 1]) {\n            lengths[i][j] = lengths[i - 1][j - 1] + 1;\n            if (lengths[i][j] > maxLength) {\n              maxLength = lengths[i][j];\n              endIndex = i;\n            }\n          }\n        }\n      }\n      \n      return s1.slice(endIndex - maxLength, endIndex);\n    }\n    \n    console.log('Longest common substring:', longestCommonSubstring(firstString, secondString));\n    rl.close();\n  });\n});\n```"
  },
  {
    "task": "Develop a program that reads a chessboard position and prints all possible moves for a knight.",
    "code": "```javascript\nfunction getKnightMoves(position) {\n    const moves = [\n        [-2, -1], [-1, -2], [1, -2], [2, -1],\n        [2, 1], [1, 2], [-1, 2], [-2, 1]\n    ];\n    \n    const [letter, num] = position.split(\"\");\n    const x = letter.charCodeAt(0) - 'a'.charCodeAt(0);\n    const y = parseInt(num) - 1;\n\n    const possibleMoves = moves.map(([dx, dy]) => [x + dx, y + dy])\n        .filter(([nx, ny]) => nx >= 0 && nx < 8 && ny >= 0 && ny < 8)\n        .map(([nx, ny]) => String.fromCharCode(nx + 'a'.charCodeAt(0)) + (ny + 1));\n\n    return possibleMoves;\n}\n\nconst readline = require('readline');\n\nconst rl = readline.createInterface({\n    input: process.stdin,\n    output: process.stdout\n});\n\nrl.question('Enter knight position: ', (position) => {\n    const moves = getKnightMoves(position);\n    console.log('Possible moves:', moves.join(', '));\n    rl.close();\n});\n```"
  },
  {
    "task": "Create a tool that reads a list of numbers and prints the mode.",
    "code": "```javascript\nconst readline = require('readline');\n\nconst rl = readline.createInterface({\n  input: process.stdin,\n  output: process.stdout\n});\n\nrl.question('Enter a list of numbers separated by spaces: ', (input) => {\n  const numbers = input.split(' ').map(Number);\n  const frequency = {};\n  let maxFreq = 0;\n  let mode = null;\n\n  numbers.forEach(num => {\n    frequency[num] = (frequency[num] || 0) + 1;\n    if (frequency[num] > maxFreq) {\n      maxFreq = frequency[num];\n      mode = num;\n    }\n  });\n\n  console.log(`The mode is: ${mode}`);\n  rl.close();\n});\n```"
  },
  {
    "task": "Design a program that reads a list of file paths and prints the largest file.",
    "code": "```javascript\nconst fs = require('fs');\n\nfunction findLargestFile(filePaths) {\n    let largestFile = null;\n    let largestSize = 0;\n\n    filePaths.forEach(filePath => {\n        try {\n            const stats = fs.statSync(filePath);\n            if (stats.isFile() && stats.size > largestSize) {\n                largestSize = stats.size;\n                largestFile = filePath;\n            }\n        } catch (error) {\n            console.error(`Error reading file: ${filePath}`, error.message);\n        }\n    });\n\n    if (largestFile) {\n        console.log(`The largest file is: ${largestFile}`);\n    } else {\n        console.log('No valid files found.');\n    }\n}\n\nconst filePaths = process.argv.slice(2);\nfindLargestFile(filePaths);\n```"
  },
  {
    "task": "Write a script that reads a list of prices and prints the total cost with tax.",
    "code": "```javascript\nconst readline = require('readline');\n\nconst rl = readline.createInterface({\n  input: process.stdin,\n  output: process.stdout\n});\n\nlet prices = [];\nconst taxRate = 0.08;  // Example tax rate of 8%\n\nrl.question('Enter a list of prices separated by space: ', (input) => {\n  prices = input.split(' ').map(parseFloat);\n  const total = prices.reduce((acc, price) => acc + price, 0);\n  const totalWithTax = total * (1 + taxRate);\n  console.log(`Total cost with tax: ${totalWithTax.toFixed(2)}`);\n  rl.close();\n});\n```"
  },
  {
    "task": "Build a program that reads a list of temperatures and prints them in Fahrenheit.",
    "code": "```javascript\nconst readline = require('readline');\n\nconst rl = readline.createInterface({\n  input: process.stdin,\n  output: process.stdout\n});\n\nconsole.log(\"Enter temperatures in Celsius, separated by spaces:\");\n\nrl.on('line', (input) => {\n  const temperatures = input.split(' ').map(Number);\n  const temperaturesInFahrenheit = temperatures.map(celsius => (celsius * 9/5) + 32);\n  console.log(\"Temperatures in Fahrenheit:\", temperaturesInFahrenheit.join(' '));\n  rl.close();\n});\n```"
  },
  {
    "task": "Implement a tool that reads a list of book titles and prints them sorted by length.",
    "code": "```javascript\nconst readline = require('readline');\n\nconst rl = readline.createInterface({\n  input: process.stdin,\n  output: process.stdout\n});\n\nlet bookTitles = [];\n\nconsole.log(\"Enter book titles (type 'done' to finish):\");\n\nrl.on('line', (input) => {\n  if (input.toLowerCase() === 'done') {\n    bookTitles.sort((a, b) => a.length - b.length);\n    console.log(\"Sorted book titles by length:\");\n    bookTitles.forEach(title => console.log(title));\n    rl.close();\n  } else {\n    bookTitles.push(input);\n  }\n});\n```"
  },
  {
    "task": "Write a program that reads a directory path and prints all file names.",
    "code": "```javascript\nconst fs = require('fs');\nconst path = require('path');\nconst readline = require('readline');\n\nconst rl = readline.createInterface({\n    input: process.stdin,\n    output: process.stdout\n});\n\nrl.question('Enter directory path: ', (dirPath) => {\n    fs.readdir(dirPath, (err, files) => {\n        if (err) {\n            console.error('Error reading directory:', err.message);\n        } else {\n            files.forEach(file => {\n                console.log(file);\n            });\n        }\n        rl.close();\n    });\n});\n```"
  },
  {
    "task": "Create a script that reads a list of URLs and prints those with a secure connection.",
    "code": "```javascript\nconst readline = require('readline');\nconst rl = readline.createInterface({\n  input: process.stdin,\n  output: process.stdout\n});\n\nlet urls = [];\n\nrl.on('line', (input) => {\n  urls.push(input.trim());\n}).on('close', () => {\n  urls.forEach(url => {\n    if (url.startsWith('https://')) {\n      console.log(url);\n    }\n  });\n});\n```"
  },
  {
    "task": "Develop a tool that reads a sequence of numbers and prints if it is strictly increasing.",
    "code": "```javascript\nconst readline = require('readline');\n\nconst rl = readline.createInterface({\n  input: process.stdin,\n  output: process.stdout\n});\n\nrl.question('Enter a sequence of numbers separated by space: ', (input) => {\n  const numbers = input.split(' ').map(Number);\n  let isStrictlyIncreasing = true;\n  \n  for (let i = 0; i < numbers.length - 1; i++) {\n    if (numbers[i] >= numbers[i + 1]) {\n      isStrictlyIncreasing = false;\n      break;\n    }\n  }\n  \n  console.log(isStrictlyIncreasing ? \"The sequence is strictly increasing.\" : \"The sequence is not strictly increasing.\");\n  rl.close();\n});\n```"
  },
  {
    "task": "Design a program that reads a list of products and prints them grouped by category.",
    "code": "```javascript\nconst readline = require('readline');\n\nconst rl = readline.createInterface({\n  input: process.stdin,\n  output: process.stdout\n});\n\nlet products = [];\n\nrl.question('Enter products as \"name:category\" (end with empty line):\\n', function handleInput(input) {\n  if (input.trim() === '') {\n    const groupedProducts = products.reduce((acc, product) => {\n      const [name, category] = product.split(':');\n      if (!acc[category]) {\n        acc[category] = [];\n      }\n      acc[category].push(name);\n      return acc;\n    }, {});\n\n    for (const [category, names] of Object.entries(groupedProducts)) {\n      console.log(`Category: ${category}`);\n      names.forEach(name => console.log(`  - ${name}`));\n    }\n    rl.close();\n  } else {\n    products.push(input);\n    rl.question('', handleInput);\n  }\n});\n```"
  },
  {
    "task": "Write a script that reads a sentence and prints it with alternating word capitalization.",
    "code": "```javascript\nconst readline = require('readline');\n\nconst rl = readline.createInterface({\n    input: process.stdin,\n    output: process.stdout\n});\n\nrl.question('Enter a sentence: ', (sentence) => {\n    const words = sentence.split(' ');\n    const result = words.map((word, index) => {\n        return index % 2 === 0 ? word.toUpperCase() : word.toLowerCase();\n    }).join(' ');\n\n    console.log(result);\n    rl.close();\n});\n```"
  },
  {
    "task": "Create a program that reads a list of grades and prints the highest and lowest grade.",
    "code": "```javascript\nconst readline = require('readline');\n\nconst rl = readline.createInterface({\n  input: process.stdin,\n  output: process.stdout\n});\n\nrl.question('Enter grades separated by spaces: ', (input) => {\n  const grades = input.split(' ').map(Number);\n  const maxGrade = Math.max(...grades);\n  const minGrade = Math.min(...grades);\n\n  console.log(`Highest grade: ${maxGrade}`);\n  console.log(`Lowest grade: ${minGrade}`);\n\n  rl.close();\n});\n```"
  },
  {
    "task": "Build a tool that reads a text and prints the number of sentences.",
    "code": "```javascript\nconst readline = require('readline');\n\nconst rl = readline.createInterface({\n  input: process.stdin,\n  output: process.stdout\n});\n\nrl.question('Enter text: ', (input) => {\n  const sentenceCount = input.split(/[.!?]+/).filter(sentence => sentence.trim().length > 0).length;\n  console.log(`Number of sentences: ${sentenceCount}`);\n  rl.close();\n});\n```"
  },
  {
    "task": "Implement a program that reads a list of integers and prints the sum of all odd numbers.",
    "code": "```javascript\nconst readline = require('readline');\n\nconst rl = readline.createInterface({\n  input: process.stdin,\n  output: process.stdout\n});\n\nrl.question('Enter a list of integers separated by spaces: ', (input) => {\n  const numbers = input.split(' ').map(Number);\n  const sumOfOdds = numbers.reduce((sum, num) => num % 2 !== 0 ? sum + num : sum, 0);\n  console.log(`Sum of odd numbers: ${sumOfOdds}`);\n  rl.close();\n});\n```"
  },
  {
    "task": "Write a script that reads a text and prints the shortest sentence.",
    "code": "```javascript\nconst readline = require('readline');\n\nconst rl = readline.createInterface({\n  input: process.stdin,\n  output: process.stdout\n});\n\nrl.question('Enter your text: ', (input) => {\n  const sentences = input.match(/[^.!?]*[.!?]/g) || [];\n  let shortestSentence = sentences.reduce((shortest, sentence) => {\n    return sentence.trim().length < shortest.trim().length ? sentence : shortest;\n  }, sentences[0] || '');\n\n  console.log('Shortest sentence:', shortestSentence.trim());\n  rl.close();\n});\n```"
  },
  {
    "task": "Develop a program that reads a list of dictionaries and prints them sorted by a specific key.",
    "code": "```javascript\nconst readline = require('readline');\n\nconst rl = readline.createInterface({\n  input: process.stdin,\n  output: process.stdout\n});\n\nlet data = '';\n\nrl.on('line', (input) => {\n  data += input;\n});\n\nrl.on('close', () => {\n  try {\n    const dictionaries = JSON.parse(data);\n    const keyToSortBy = 'yourKeyHere'; // replace with the key you want to sort by\n    dictionaries.sort((a, b) => {\n      if (a[keyToSortBy] < b[keyToSortBy]) return -1;\n      if (a[keyToSortBy] > b[keyToSortBy]) return 1;\n      return 0;\n    });\n    console.log(dictionaries);\n  } catch (error) {\n    console.error('Error parsing JSON:', error.message);\n  }\n});\n```"
  },
  {
    "task": "Create a tool that reads a sequence of strings and prints the common prefix.",
    "code": "```javascript\nfunction findCommonPrefix(strings) {\n    if (strings.length === 0) return '';\n\n    let prefix = strings[0];\n    for (let i = 1; i < strings.length; i++) {\n        while (strings[i].indexOf(prefix) !== 0) {\n            prefix = prefix.substring(0, prefix.length - 1);\n            if (prefix === '') return '';\n        }\n    }\n    return prefix;\n}\n\nconst readline = require('readline');\n\nconst rl = readline.createInterface({\n    input: process.stdin,\n    output: process.stdout\n});\n\nlet input = [];\n\nrl.on('line', (line) => {\n    input.push(line.trim());\n}).on('close', () => {\n    console.log(findCommonPrefix(input));\n});\n```"
  },
  {
    "task": "Design a program that reads a number and prints all of its divisors.",
    "code": "```javascript\nconst readline = require('readline');\n\nconst rl = readline.createInterface({\n  input: process.stdin,\n  output: process.stdout\n});\n\nrl.question('Enter a number: ', (input) => {\n  const number = parseInt(input, 10);\n  console.log(`Divisors of ${number}:`);\n  for (let i = 1; i <= number; i++) {\n    if (number % i === 0) {\n      console.log(i);\n    }\n  }\n  rl.close();\n});\n```"
  },
  {
    "task": "Write a script that reads a text and prints each word with its length.",
    "code": "```javascript\nconst readline = require('readline');\n\nconst rl = readline.createInterface({\n  input: process.stdin,\n  output: process.stdout\n});\n\nrl.question('Enter text: ', (input) => {\n  const words = input.split(/\\s+/);\n  words.forEach(word => {\n    console.log(`${word}: ${word.length}`);\n  });\n  rl.close();\n});\n```"
  },
  {
    "task": "Build a program that reads a list of colors and prints them in a rainbow order.",
    "code": "```javascript\nconst readline = require('readline');\n\nconst rl = readline.createInterface({\n    input: process.stdin,\n    output: process.stdout\n});\n\nconst rainbowOrder = ['red', 'orange', 'yellow', 'green', 'blue', 'indigo', 'violet'];\n\nrl.question('Enter a list of colors separated by commas: ', (input) => {\n    const colors = input.split(',').map(color => color.trim().toLowerCase());\n    const sortedColors = colors.filter(color => rainbowOrder.includes(color))\n                                .sort((a, b) => rainbowOrder.indexOf(a) - rainbowOrder.indexOf(b));\n    console.log('Colors in rainbow order:', sortedColors.join(', '));\n    rl.close();\n});\n```"
  },
  {
    "task": "Implement a tool that reads a list of names and prints them with their initials.",
    "code": "```javascript\nconst readline = require('readline');\n\nconst rl = readline.createInterface({\n  input: process.stdin,\n  output: process.stdout\n});\n\nrl.question('Enter a list of names (comma-separated): ', (input) => {\n  const names = input.split(',').map(name => name.trim());\n  names.forEach(name => {\n    const initials = name.split(' ').map(part => part.charAt(0).toUpperCase()).join('');\n    console.log(`${name} (${initials})`);\n  });\n  rl.close();\n});\n```"
  },
  {
    "task": "Write a program that reads a series of coordinates and prints the center point.",
    "code": "```javascript\nconst readline = require('readline');\n\nconst rl = readline.createInterface({\n  input: process.stdin,\n  output: process.stdout\n});\n\nlet coordinates = [];\nrl.on('line', (input) => {\n  if (input.trim() === '') {\n    if (coordinates.length === 0) {\n      console.log('No coordinates entered.');\n    } else {\n      let xSum = 0, ySum = 0;\n      coordinates.forEach(([x, y]) => {\n        xSum += x;\n        ySum += y;\n      });\n      const centerX = xSum / coordinates.length;\n      const centerY = ySum / coordinates.length;\n      console.log(`Center point: (${centerX}, ${centerY})`);\n    }\n    rl.close();\n  } else {\n    const [x, y] = input.split(' ').map(Number);\n    coordinates.push([x, y]);\n  }\n});\n```"
  },
  {
    "task": "Create a script that reads a sentence and prints it with each vowel replaced by its uppercase form.",
    "code": "```javascript\nconst readline = require('readline');\n\nconst rl = readline.createInterface({\n  input: process.stdin,\n  output: process.stdout\n});\n\nrl.question('Enter a sentence: ', (sentence) => {\n  const result = sentence.replace(/[aeiou]/g, (match) => match.toUpperCase());\n  console.log(result);\n  rl.close();\n});\n```"
  },
  {
    "task": "Develop a tool that reads a mathematical expression and evaluates its result.",
    "code": "```javascript\nconst readline = require('readline');\n\nconst rl = readline.createInterface({\n  input: process.stdin,\n  output: process.stdout\n});\n\nrl.question('Enter a mathematical expression: ', (expression) => {\n  try {\n    const result = eval(expression);\n    console.log(`Result: ${result}`);\n  } catch (error) {\n    console.log('Invalid expression');\n  }\n  rl.close();\n});\n```"
  },
  {
    "task": "Design a program that reads a text and prints the first three words.",
    "code": "```javascript\nconst readline = require('readline');\n\nconst rl = readline.createInterface({\n  input: process.stdin,\n  output: process.stdout\n});\n\nrl.question('Enter a text: ', (answer) => {\n  const words = answer.split(/\\s+/);\n  const firstThreeWords = words.slice(0, 3).join(' ');\n  console.log(firstThreeWords);\n  rl.close();\n});\n```"
  },
  {
    "task": "Write a script that reads a list of numbers and prints them without duplicates.",
    "code": "```javascript\nconst readline = require('readline');\n\nconst rl = readline.createInterface({\n  input: process.stdin,\n  output: process.stdout\n});\n\nrl.question('Enter a list of numbers separated by spaces: ', (input) => {\n  const numbers = input.split(' ').map(Number);\n  const uniqueNumbers = Array.from(new Set(numbers));\n  console.log('Numbers without duplicates:', uniqueNumbers.join(' '));\n  rl.close();\n});\n```"
  },
  {
    "task": "Create a program that reads a string and prints it with spaces between each character.",
    "code": "```javascript\nconst readline = require('readline');\n\nconst rl = readline.createInterface({\n  input: process.stdin,\n  output: process.stdout\n});\n\nrl.question('Enter a string: ', (input) => {\n  const spacedString = input.split('').join(' ');\n  console.log(spacedString);\n  rl.close();\n});\n```"
  },
  {
    "task": "Build a tool that reads a list of events with dates and prints them by chronological order.",
    "code": "```javascript\nconst readline = require('readline');\n\nconst rl = readline.createInterface({\n  input: process.stdin,\n  output: process.stdout\n});\n\nlet events = [];\n\nrl.on('line', (input) => {\n  if (input === '') {\n    events.sort((a, b) => new Date(a.date) - new Date(b.date));\n    events.forEach(event => console.log(`${event.date}: ${event.name}`));\n    rl.close();\n  } else {\n    const [date, ...nameParts] = input.split(' ');\n    const name = nameParts.join(' ');\n    events.push({ date, name });\n  }\n});\n```"
  },
  {
    "task": "Implement a program that reads a list of fractions and prints their sum as a reduced fraction.",
    "code": "```javascript\nconst readline = require('readline');\n\nfunction gcd(a, b) {\n    return b === 0 ? a : gcd(b, a % b);\n}\n\nfunction reduceFraction(numerator, denominator) {\n    const divisor = gcd(numerator, denominator);\n    return [numerator / divisor, denominator / divisor];\n}\n\nfunction sumFractions(fractions) {\n    let numeratorSum = 0;\n    let denominatorSum = 1;\n\n    fractions.forEach(([numerator, denominator]) => {\n        numeratorSum = numeratorSum * denominator + numerator * denominatorSum;\n        denominatorSum *= denominator;\n        const reduced = reduceFraction(numeratorSum, denominatorSum);\n        numeratorSum = reduced[0];\n        denominatorSum = reduced[1];\n    });\n\n    return reduceFraction(numeratorSum, denominatorSum);\n}\n\nconst rl = readline.createInterface({\n    input: process.stdin,\n    output: process.stdout\n});\n\nrl.question('Enter fractions (e.g. 1/2 3/4 5/6): ', (input) => {\n    const fractions = input.split(' ').map(fraction => {\n        const [numerator, denominator] = fraction.split('/').map(Number);\n        return [numerator, denominator];\n    });\n\n    const [numeratorSum, denominatorSum] = sumFractions(fractions);\n    console.log(`Sum: ${numeratorSum}/${denominatorSum}`);\n    rl.close();\n});\n```"
  },
  {
    "task": "Write a script that reads a text and prints it with each consonant doubled.",
    "code": "```javascript\nconst readline = require('readline');\n\nconst rl = readline.createInterface({\n  input: process.stdin,\n  output: process.stdout\n});\n\nrl.question('Enter text: ', (input) => {\n  const doubledConsonants = input.replace(/([bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ])/g, '$1$1');\n  console.log(doubledConsonants);\n  rl.close();\n});\n```"
  },
  {
    "task": "Develop a program that reads a number and prints its representation in Roman numerals.",
    "code": "```javascript\nfunction toRoman(num) {\n    const romanNumerals = [\n        { value: 1000, numeral: 'M' },\n        { value: 900, numeral: 'CM' },\n        { value: 500, numeral: 'D' },\n        { value: 400, numeral: 'CD' },\n        { value: 100, numeral: 'C' },\n        { value: 90, numeral: 'XC' },\n        { value: 50, numeral: 'L' },\n        { value: 40, numeral: 'XL' },\n        { value: 10, numeral: 'X' },\n        { value: 9, numeral: 'IX' },\n        { value: 5, numeral: 'V' },\n        { value: 4, numeral: 'IV' },\n        { value: 1, numeral: 'I' }\n    ];\n    \n    let roman = '';\n    for (let i = 0; i < romanNumerals.length; i++) {\n        while (num >= romanNumerals[i].value) {\n            roman += romanNumerals[i].numeral;\n            num -= romanNumerals[i].value;\n        }\n    }\n    return roman;\n}\n\nconst readline = require('readline');\nconst rl = readline.createInterface({\n    input: process.stdin,\n    output: process.stdout\n});\n\nrl.question('Enter a number: ', (answer) => {\n    const num = parseInt(answer, 10);\n    if (!isNaN(num) && num > 0) {\n        console.log(`Roman numeral: ${toRoman(num)}`);\n    } else {\n        console.log('Please enter a valid positive integer.');\n    }\n    rl.close();\n});\n```"
  },
  {
    "task": "Create a tool that reads a list of words and prints them with each letter in reverse order.",
    "code": "```javascript\nconst readline = require('readline');\n\nconst rl = readline.createInterface({\n    input: process.stdin,\n    output: process.stdout\n});\n\nrl.question('Enter a list of words separated by spaces: ', (input) => {\n    const words = input.split(' ');\n    const reversedWords = words.map(word => word.split('').reverse().join(''));\n    console.log(reversedWords.join(' '));\n    rl.close();\n});\n```"
  },
  {
    "task": "Design a program that reads a set of points and prints the one closest to the origin.",
    "code": "```javascript\nconst readline = require('readline');\n\nconst rl = readline.createInterface({\n  input: process.stdin,\n  output: process.stdout\n});\n\nfunction distanceFromOrigin(x, y) {\n  return Math.sqrt(x * x + y * y);\n}\n\nfunction findClosestPoint(points) {\n  let closestPoint = null;\n  let minDistance = Infinity;\n\n  for (const point of points) {\n    const distance = distanceFromOrigin(point[0], point[1]);\n    if (distance < minDistance) {\n      minDistance = distance;\n      closestPoint = point;\n    }\n  }\n\n  return closestPoint;\n}\n\nlet points = [];\n\nrl.on('line', (input) => {\n  const [x, y] = input.split(' ').map(Number);\n  points.push([x, y]);\n}).on('close', () => {\n  const closestPoint = findClosestPoint(points);\n  if (closestPoint) {\n    console.log(`Closest point to origin: (${closestPoint[0]}, ${closestPoint[1]})`);\n  }\n});\n```"
  },
  {
    "task": "Write a script that reads a text and prints the frequency of each word.",
    "code": "```javascript\nconst readline = require('readline');\n\nconst rl = readline.createInterface({\n  input: process.stdin,\n  output: process.stdout\n});\n\nrl.question('Enter text: ', (text) => {\n  const wordFrequency = {};\n  const words = text.split(/\\s+/);\n\n  words.forEach((word) => {\n    word = word.toLowerCase();\n    wordFrequency[word] = (wordFrequency[word] || 0) + 1;\n  });\n\n  console.log('Word Frequencies:');\n  for (const [word, frequency] of Object.entries(wordFrequency)) {\n    console.log(`${word}: ${frequency}`);\n  }\n\n  rl.close();\n});\n```"
  },
  {
    "task": "Build a program that reads a list of integers and prints the second smallest.",
    "code": "```javascript\nconst readline = require('readline');\n\nconst rl = readline.createInterface({\n  input: process.stdin,\n  output: process.stdout\n});\n\nrl.question('Enter a list of integers separated by spaces: ', (input) => {\n  const numbers = input.split(' ').map(Number);\n  if (numbers.length < 2) {\n    console.log('Not enough elements to determine the second smallest.');\n  } else {\n    const uniqueNumbers = [...new Set(numbers)];\n    uniqueNumbers.sort((a, b) => a - b);\n    if (uniqueNumbers.length < 2) {\n      console.log('Not enough unique elements to determine the second smallest.');\n    } else {\n      console.log(uniqueNumbers[1]);\n    }\n  }\n  rl.close();\n});\n```"
  },
  {
    "task": "Implement a tool that reads a string and prints all its substrings.",
    "code": "```javascript\nconst readline = require('readline');\n\nconst rl = readline.createInterface({\n  input: process.stdin,\n  output: process.stdout\n});\n\nrl.question('Enter a string: ', (input) => {\n  for (let i = 0; i < input.length; i++) {\n    for (let j = i + 1; j <= input.length; j++) {\n      console.log(input.substring(i, j));\n    }\n  }\n  rl.close();\n});\n```"
  },
  {
    "task": "Write a program that reads a number and generates a random number up to that number.",
    "code": "```javascript\nconst readline = require('readline');\n\nconst rl = readline.createInterface({\n  input: process.stdin,\n  output: process.stdout\n});\n\nrl.question('Enter a number: ', (input) => {\n  const maxNumber = parseInt(input, 10);\n  if (!isNaN(maxNumber) && maxNumber > 0) {\n    const randomNumber = Math.floor(Math.random() * maxNumber);\n    console.log(`Random number: ${randomNumber}`);\n  } else {\n    console.log('Please enter a valid positive number.');\n  }\n  rl.close();\n});\n```"
  },
  {
    "task": "Create a script that reads a sentence and prints it with each word reversed.",
    "code": "```javascript\nconst readline = require('readline');\n\nconst rl = readline.createInterface({\n  input: process.stdin,\n  output: process.stdout\n});\n\nrl.question('Enter a sentence: ', (sentence) => {\n  const reversedWords = sentence.split(' ').map(word => word.split('').reverse().join('')).join(' ');\n  console.log(reversedWords);\n  rl.close();\n});\n```"
  },
  {
    "task": "Develop a tool that reads a text and prints it with each sentence on a new line.",
    "code": "```javascript\nconst readline = require('readline');\n\nconst rl = readline.createInterface({\n  input: process.stdin,\n  output: process.stdout\n});\n\nrl.question('Enter text: ', (input) => {\n  const sentences = input.match(/[^.!?]+[.!?]*/g);\n  if (sentences) {\n    sentences.forEach(sentence => console.log(sentence.trim()));\n  }\n  rl.close();\n});\n```"
  },
  {
    "task": "Design a program that reads a list of numbers and prints the product of all negative numbers.",
    "code": "```javascript\nconst readline = require('readline');\n\nconst rl = readline.createInterface({\n  input: process.stdin,\n  output: process.stdout\n});\n\nrl.question('Enter a list of numbers separated by spaces: ', (input) => {\n  const numbers = input.split(' ').map(Number);\n  let product = 1;\n  let hasNegative = false;\n\n  for (const num of numbers) {\n    if (num < 0) {\n      product *= num;\n      hasNegative = true;\n    }\n  }\n\n  if (hasNegative) {\n    console.log(`Product of negative numbers: ${product}`);\n  } else {\n    console.log('No negative numbers found.');\n  }\n\n  rl.close();\n});\n```"
  },
  {
    "task": "Write a script that reads a dictionary and prints the keys and values in sorted order.",
    "code": "```javascript\nconst readline = require('readline');\n\nconst rl = readline.createInterface({\n  input: process.stdin,\n  output: process.stdout\n});\n\nlet input = '';\n\nrl.on('line', (line) => {\n  input += line.trim();\n});\n\nrl.on('close', () => {\n  let dictionary;\n  try {\n    dictionary = JSON.parse(input);\n  } catch (error) {\n    console.error('Invalid input');\n    return;\n  }\n\n  if (typeof dictionary !== 'object' || Array.isArray(dictionary)) {\n    console.error('Input must be a dictionary');\n    return;\n  }\n\n  const sortedKeys = Object.keys(dictionary).sort();\n  sortedKeys.forEach(key => {\n    console.log(`${key}: ${dictionary[key]}`);\n  });\n});\n```"
  },
  {
    "task": "Create a program that reads a text and prints the number of unique words.",
    "code": "```javascript\nconst readline = require('readline');\n\nconst rl = readline.createInterface({\n  input: process.stdin,\n  output: process.stdout\n});\n\nrl.question('Enter text: ', (text) => {\n  const words = text.split(/\\s+/);\n  const uniqueWords = new Set(words);\n  console.log(uniqueWords.size);\n  rl.close();\n});\n```"
  }
]