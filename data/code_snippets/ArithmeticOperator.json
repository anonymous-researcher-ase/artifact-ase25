{
    "Rust ArithmeticOperator": "let baz = foo + bar;\nlet qux = foo - bar;\nlet quux = foo * bar;\nlet corge = foo / bar;\nlet grault = foo % bar;\nlet garply = foo + 1;\nlet waldo = foo - 1;",
    "JavaScript ArithmeticOperator": "let baz = foo + bar;\nlet qux = foo - bar;\nlet quux = foo * bar;\nlet corge = foo / bar;\nlet grault = foo % bar;\nlet garply = foo++;\nlet waldo = foo--;",
    "Python ArithmeticOperator": "baz = foo + bar\nqux = foo - bar\nquux = foo * bar\ncorge = foo / bar\ngrault = foo % bar\ngarply = foo + 1\nwaldo = foo - 1\n",
    "Java ArithmeticOperator": "int qux = foo + bar;\nint quux = foo - bar;\nint corge = foo * bar;\nint grault = foo / bar;\nint garply = foo % bar;\nint waldo = foo++;\nint fred = foo--;",
    "Kotlin ArithmeticOperator": "var baz = foo + bar\nvar qux = foo - bar\nvar quux = foo * bar\nvar corge = foo / bar\nvar grault = foo % bar\nvar garply = foo++\nvar waldo = foo--\n",
    "C++ ArithmeticOperator": "int baz = foo + bar;\nint qux = foo - bar;\nint quux = foo * bar;\nint corge = foo / bar;\nint grault = foo % bar;\nint garply = foo + 1;\nint waldo = foo - 1;",
    "Haskell ArithmeticOperator": "let foo = x + y\n    bar = x - y\n    baz = x * y\n    qux = x `div` y\n    quux = x `mod` y\n    corge = x + 1\n    grault = x - 1",
    "C ArithmeticOperator": "int baz = foo + bar;\nint qux = foo - bar;\nint quux = foo * bar;\nint corge = foo / bar;\nint grault = foo % bar;\nint garply = foo + 1;\nint waldo = foo - 1;"
}