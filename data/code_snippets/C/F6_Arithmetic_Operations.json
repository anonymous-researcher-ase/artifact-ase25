[
  {
    "task": "Write a function that takes two numbers and returns their sum.",
    "code": "```c\n#include <stdio.h>\n\nint add(int a, int b) {\n    return a + b;\n}\n\nint main() {\n    int num1 = 5;\n    int num2 = 10;\n    int result = add(num1, num2);\n    printf(\"The sum is: %d\\n\", result);\n    return 0;\n}\n```"
  },
  {
    "task": "Create a program that calculates the difference between two given integers.",
    "code": "```c\n#include <stdio.h>\n\nint main() {\n    int num1, num2, difference;\n    \n    printf(\"Enter first integer: \");\n    scanf(\"%d\", &num1);\n    \n    printf(\"Enter second integer: \");\n    scanf(\"%d\", &num2);\n    \n    difference = num1 - num2;\n    \n    printf(\"The difference is: %d\\n\", difference);\n    \n    return 0;\n}\n```"
  },
  {
    "task": "Design a function to multiply two floating-point numbers and return the result.",
    "code": "```c\n#include <stdio.h>\n\nfloat multiply(float a, float b) {\n    return a * b;\n}\n\nint main() {\n    float num1 = 5.5;\n    float num2 = 3.2;\n    float result = multiply(num1, num2);\n    printf(\"The result is: %.2f\\n\", result);\n    return 0;\n}\n```"
  },
  {
    "task": "Implement a function that divides two numbers and handles division by zero exceptions.",
    "code": "```c\n#include <stdio.h>\n#include <stdbool.h>\n\nbool divide(double numerator, double denominator, double *result) {\n    if (denominator == 0) {\n        return false; // Division by zero\n    }\n    *result = numerator / denominator;\n    return true;\n}\n\nint main() {\n    double num1 = 10.0, num2 = 2.0, result;\n    if (divide(num1, num2, &result)) {\n        printf(\"Result: %f\\n\", result);\n    } else {\n        printf(\"Error: Division by zero.\\n\");\n    }\n    return 0;\n}\n```"
  },
  {
    "task": "Build a calculator that can perform addition, subtraction, multiplication, and division on user-provided inputs.",
    "code": "```c\n#include <stdio.h>\n\nint main() {\n    double num1, num2;\n    char op;\n    double result;\n\n    printf(\"Enter first number: \");\n    scanf(\"%lf\", &num1);\n    printf(\"Enter an operator (+, -, *, /): \");\n    scanf(\" %c\", &op);\n    printf(\"Enter second number: \");\n    scanf(\"%lf\", &num2);\n\n    switch (op) {\n        case '+':\n            result = num1 + num2;\n            printf(\"Result: %.2lf\\n\", result);\n            break;\n        case '-':\n            result = num1 - num2;\n            printf(\"Result: %.2lf\\n\", result);\n            break;\n        case '*':\n            result = num1 * num2;\n            printf(\"Result: %.2lf\\n\", result);\n            break;\n        case '/':\n            if (num2 != 0) {\n                result = num1 / num2;\n                printf(\"Result: %.2lf\\n\", result);\n            } else {\n                printf(\"Error: Division by zero.\\n\");\n            }\n            break;\n        default:\n            printf(\"Error: Invalid operator.\\n\");\n            break;\n    }\n\n    return 0;\n}\n```"
  },
  {
    "task": "Write a script to compute the average of a list of numbers using arithmetic operations.",
    "code": "```c\n#include <stdio.h>\n\nint main() {\n    int numbers[] = {10, 20, 30, 40, 50};\n    int sum = 0;\n    int count = sizeof(numbers) / sizeof(numbers[0]);\n    for (int i = 0; i < count; i++) {\n        sum += numbers[i];\n    }\n    double average = (double)sum / count;\n    printf(\"The average is: %.2f\\n\", average);\n    return 0;\n}\n```"
  },
  {
    "task": "Create a function that returns the remainder of the division of two integers.",
    "code": "```c\n#include <stdio.h>\n\nint remainder(int a, int b) {\n    return a % b;\n}\n\nint main() {\n    int num1 = 10;\n    int num2 = 3;\n    printf(\"Remainder of %d divided by %d is %d\\n\", num1, num2, remainder(num1, num2));\n    return 0;\n}\n```"
  },
  {
    "task": "Develop a function that can add a variable number of arguments and return the total.",
    "code": "```c\n#include <stdio.h>\n#include <stdarg.h>\n\nint addNumbers(int count, ...) {\n    va_list args;\n    va_start(args, count);\n    int sum = 0;\n    for (int i = 0; i < count; i++) {\n        sum += va_arg(args, int);\n    }\n    va_end(args);\n    return sum;\n}\n\nint main() {\n    int total = addNumbers(4, 1, 2, 3, 4);\n    printf(\"Total: %d\\n\", total);\n    return 0;\n}\n```"
  },
  {
    "task": "Write a program that subtracts a series of numbers from an initial value.",
    "code": "```c\n#include <stdio.h>\n\nint main() {\n    int initial_value = 100; // Example initial value\n    int numbers[] = {10, 20, 5, 15}; // Example series of numbers to subtract\n    int size = sizeof(numbers) / sizeof(numbers[0]);\n\n    for (int i = 0; i < size; i++) {\n        initial_value -= numbers[i];\n    }\n\n    printf(\"Result after subtraction: %d\\n\", initial_value);\n    return 0;\n}\n```"
  },
  {
    "task": "Implement a function that multiplies all elements in an array and returns the product.",
    "code": "```c\n#include <stdio.h>\n\nint multiplyArrayElements(int *arr, int size) {\n    int product = 1;\n    for (int i = 0; i < size; i++) {\n        product *= arr[i];\n    }\n    return product;\n}\n\nint main() {\n    int array[] = {1, 2, 3, 4, 5};\n    int size = sizeof(array) / sizeof(array[0]);\n    int result = multiplyArrayElements(array, size);\n    printf(\"Product of array elements: %d\\n\", result);\n    return 0;\n}\n```"
  },
  {
    "task": "Design a program that divides a number by another and rounds the result to two decimal places.",
    "code": "```c\n#include <stdio.h>\n\nint main() {\n    double numerator, denominator, result;\n\n    printf(\"Enter the numerator: \");\n    scanf(\"%lf\", &numerator);\n\n    printf(\"Enter the denominator: \");\n    scanf(\"%lf\", &denominator);\n\n    if (denominator != 0) {\n        result = numerator / denominator;\n        printf(\"Result: %.2lf\\n\", result);\n    } else {\n        printf(\"Error: Division by zero is not allowed.\\n\");\n    }\n\n    return 0;\n}\n```"
  },
  {
    "task": "Create a function that performs arithmetic operations on complex numbers.",
    "code": "```c\n#include <stdio.h>\n\ntypedef struct {\n    double real;\n    double imag;\n} Complex;\n\nComplex add(Complex a, Complex b) {\n    Complex result;\n    result.real = a.real + b.real;\n    result.imag = a.imag + b.imag;\n    return result;\n}\n\nComplex subtract(Complex a, Complex b) {\n    Complex result;\n    result.real = a.real - b.real;\n    result.imag = a.imag - b.imag;\n    return result;\n}\n\nComplex multiply(Complex a, Complex b) {\n    Complex result;\n    result.real = a.real * b.real - a.imag * b.imag;\n    result.imag = a.real * b.imag + a.imag * b.real;\n    return result;\n}\n\nComplex divide(Complex a, Complex b) {\n    Complex result;\n    double denominator = b.real * b.real + b.imag * b.imag;\n    result.real = (a.real * b.real + a.imag * b.imag) / denominator;\n    result.imag = (a.imag * b.real - a.real * b.imag) / denominator;\n    return result;\n}\n\nint main() {\n    Complex num1 = {4.0, 3.0};\n    Complex num2 = {2.0, -1.0};\n\n    Complex resultAdd = add(num1, num2);\n    Complex resultSubtract = subtract(num1, num2);\n    Complex resultMultiply = multiply(num1, num2);\n    Complex resultDivide = divide(num1, num2);\n\n    printf(\"Addition: %.2f + %.2fi\\n\", resultAdd.real, resultAdd.imag);\n    printf(\"Subtraction: %.2f + %.2fi\\n\", resultSubtract.real, resultSubtract.imag);\n    printf(\"Multiplication: %.2f + %.2fi\\n\", resultMultiply.real, resultMultiply.imag);\n    printf(\"Division: %.2f + %.2fi\\n\", resultDivide.real, resultDivide.imag);\n\n    return 0;\n}\n```"
  },
  {
    "task": "Write a function to calculate the area of a rectangle given its length and width using multiplication.",
    "code": "```c\n#include <stdio.h>\n\ndouble calculateRectangleArea(double length, double width) {\n    return length * width;\n}\n\nint main() {\n    double length = 5.0;\n    double width = 3.0;\n    double area = calculateRectangleArea(length, width);\n    printf(\"Area of the rectangle: %.2f\\n\", area);\n    return 0;\n}\n```"
  },
  {
    "task": "Build a program that converts a price in dollars to another currency using multiplication with exchange rates.",
    "code": "```c\n#include <stdio.h>\n\nint main() {\n    double dollars, exchangeRate, convertedAmount;\n\n    printf(\"Enter the amount in dollars: \");\n    scanf(\"%lf\", &dollars);\n\n    printf(\"Enter the exchange rate: \");\n    scanf(\"%lf\", &exchangeRate);\n\n    convertedAmount = dollars * exchangeRate;\n\n    printf(\"Converted amount: %.2lf\\n\", convertedAmount);\n\n    return 0;\n}\n```"
  },
  {
    "task": "Implement a function that checks if a number is divisible by another and returns a boolean.",
    "code": "```c\n#include <stdbool.h>\n\nbool isDivisible(int numerator, int denominator) {\n    if (denominator == 0) {\n        return false; // handle division by zero\n    }\n    return (numerator % denominator) == 0;\n}\n```"
  },
  {
    "task": "Write a script to sum the digits of an integer using arithmetic operations.",
    "code": "```c\n#include <stdio.h>\n\nint sumDigits(int number) {\n    int sum = 0;\n    while (number != 0) {\n        sum += number % 10;\n        number /= 10;\n    }\n    return sum;\n}\n\nint main() {\n    int number;\n    printf(\"Enter an integer: \");\n    scanf(\"%d\", &number);\n    int result = sumDigits(number);\n    printf(\"Sum of digits: %d\\n\", result);\n    return 0;\n}\n```"
  },
  {
    "task": "Develop a function that applies a discount percentage to a price using subtraction and multiplication.",
    "code": "```c\n#include <stdio.h>\n\ndouble applyDiscount(double price, double discountPercentage) {\n    return price - (price * (discountPercentage / 100.0));\n}\n\nint main() {\n    double price = 100.0;\n    double discount = 15.0;\n    double discountedPrice = applyDiscount(price, discount);\n    printf(\"Discounted Price: %.2f\\n\", discountedPrice);\n    return 0;\n}\n```"
  },
  {
    "task": "Create a program to calculate the yearly salary given an hourly wage and hours worked per week.",
    "code": "```c\n#include <stdio.h>\n\nint main() {\n    double hourlyWage, hoursPerWeek, yearlySalary;\n    int weeksPerYear = 52; // Assuming 52 working weeks per year\n\n    printf(\"Enter your hourly wage: \");\n    scanf(\"%lf\", &hourlyWage);\n\n    printf(\"Enter hours worked per week: \");\n    scanf(\"%lf\", &hoursPerWeek);\n\n    yearlySalary = hourlyWage * hoursPerWeek * weeksPerYear;\n\n    printf(\"Your yearly salary is: %.2lf\\n\", yearlySalary);\n\n    return 0;\n}\n```"
  },
  {
    "task": "Design a function that calculates the compound interest over a given period using arithmetic operations.",
    "code": "```c\n#include <stdio.h>\n#include <math.h>\n\ndouble calculateCompoundInterest(double principal, double rate, int timesCompounded, int years) {\n    return principal * pow((1 + rate / timesCompounded), timesCompounded * years);\n}\n\nint main() {\n    double principal = 1000.0;\n    double rate = 0.05; // 5% interest rate\n    int timesCompounded = 4; // quarterly\n    int years = 10;\n\n    double compoundInterest = calculateCompoundInterest(principal, rate, timesCompounded, years);\n    printf(\"Compound Interest: %.2f\\n\", compoundInterest);\n\n    return 0;\n}\n```"
  },
  {
    "task": "Write a program that scales a 2D point by a given factor using multiplication.",
    "code": "```c\n#include <stdio.h>\n\nint main() {\n    double x, y, factor;\n    \n    // Example values for the point and the scaling factor\n    x = 3.0;\n    y = 4.0;\n    factor = 2.5;\n    \n    // Scaling the point\n    x *= factor;\n    y *= factor;\n    \n    printf(\"Scaled point: (%.2f, %.2f)\\n\", x, y);\n    \n    return 0;\n}\n```"
  },
  {
    "task": "Implement a function that calculates the perimeter of a triangle given its side lengths.",
    "code": "```c\n#include <stdio.h>\n\ndouble calculateTrianglePerimeter(double side1, double side2, double side3) {\n    return side1 + side2 + side3;\n}\n\nint main() {\n    double a = 5.0, b = 7.0, c = 9.0;\n    double perimeter = calculateTrianglePerimeter(a, b, c);\n    printf(\"Perimeter of the triangle: %.2f\\n\", perimeter);\n    return 0;\n}\n```"
  },
  {
    "task": "Create a function to determine if three sides can form a right triangle using the Pythagorean theorem.",
    "code": "```c\n#include <stdio.h>\n\nint isRightTriangle(int a, int b, int c) {\n    int max = a;\n    int side1 = b, side2 = c;\n    \n    if (b > max) {\n        max = b;\n        side1 = a;\n        side2 = c;\n    }\n    if (c > max) {\n        max = c;\n        side1 = a;\n        side2 = b;\n    }\n    \n    return (max * max) == (side1 * side1) + (side2 * side2);\n}\n\nint main() {\n    int a = 3, b = 4, c = 5;\n    if (isRightTriangle(a, b, c)) {\n        printf(\"The sides form a right triangle.\\n\");\n    } else {\n        printf(\"The sides do not form a right triangle.\\n\");\n    }\n    return 0;\n}\n```"
  },
  {
    "task": "Write a script that calculates the total cost of items in a shopping cart using addition.",
    "code": "```c\n#include <stdio.h>\n\nint main() {\n    double prices[] = {12.99, 23.75, 9.50, 45.00, 30.25};\n    int itemCount = sizeof(prices) / sizeof(prices[0]);\n    double totalCost = 0.0;\n\n    for (int i = 0; i < itemCount; i++) {\n        totalCost += prices[i];\n    }\n\n    printf(\"Total cost: $%.2f\\n\", totalCost);\n    return 0;\n}\n```"
  },
  {
    "task": "Develop a function that returns the quotient and remainder of a division operation.",
    "code": "```c\n#include <stdio.h>\n\nvoid divide(int dividend, int divisor, int *quotient, int *remainder) {\n    *quotient = dividend / divisor;\n    *remainder = dividend % divisor;\n}\n\nint main() {\n    int dividend = 20, divisor = 3;\n    int quotient, remainder;\n    \n    divide(dividend, divisor, &quotient, &remainder);\n    \n    printf(\"Quotient: %d, Remainder: %d\\n\", quotient, remainder);\n    \n    return 0;\n}\n```"
  },
  {
    "task": "Build a program that simulates a basic checkout system using arithmetic operations for totals and discounts.",
    "code": "```c\n#include <stdio.h>\n\nint main() {\n    double price1 = 10.99;\n    double price2 = 5.49;\n    double discountRate = 0.10; // 10% discount\n    double total, discountAmount, finalTotal;\n\n    total = price1 + price2;\n    discountAmount = total * discountRate;\n    finalTotal = total - discountAmount;\n\n    printf(\"Total: $%.2f\\n\", total);\n    printf(\"Discount: $%.2f\\n\", discountAmount);\n    printf(\"Final Total: $%.2f\\n\", finalTotal);\n\n    return 0;\n}\n```"
  },
  {
    "task": "Implement a function to calculate the distance between two points on a plane using subtraction and square roots.",
    "code": "```c\n#include <math.h>\n\ndouble calculateDistance(double x1, double y1, double x2, double y2) {\n    double dx = x2 - x1;\n    double dy = y2 - y1;\n    return sqrt(dx * dx + dy * dy);\n}\n```"
  },
  {
    "task": "Write a function that calculates the speed of a vehicle given distance and time using division.",
    "code": "```c\n#include <stdio.h>\n\ndouble calculateSpeed(double distance, double time) {\n    return distance / time;\n}\n\nint main() {\n    double distance = 150.0; // example distance in kilometers\n    double time = 3.0;       // example time in hours\n    double speed = calculateSpeed(distance, time);\n    printf(\"The speed of the vehicle is %.2f km/h\\n\", speed);\n    return 0;\n}\n```"
  },
  {
    "task": "Create a program to compute the total minutes in a given number of hours using multiplication.",
    "code": "```c\n#include <stdio.h>\n\nint main() {\n    int hours;\n    printf(\"Enter the number of hours: \");\n    scanf(\"%d\", &hours);\n\n    int totalMinutes = hours * 60;\n    printf(\"Total minutes: %d\\n\", totalMinutes);\n\n    return 0;\n}\n```"
  },
  {
    "task": "Design a function that determines the number of dozens of eggs from a given total number of eggs.",
    "code": "```c\n#include <stdio.h>\n\nint calculateDozens(int totalEggs) {\n    return totalEggs / 12;\n}\n\nint main() {\n    int totalEggs = 30;\n    int dozens = calculateDozens(totalEggs);\n    printf(\"Number of dozens: %d\\n\", dozens);\n    return 0;\n}\n```"
  },
  {
    "task": "Write a script to find the greatest common divisor of two numbers using arithmetic operations.",
    "code": "```c\n#include <stdio.h>\n\nint gcd(int a, int b) {\n    while (b != 0) {\n        int temp = b;\n        b = a % b;\n        a = temp;\n    }\n    return a;\n}\n\nint main() {\n    int num1 = 56;\n    int num2 = 98;\n    int result = gcd(num1, num2);\n    printf(\"GCD of %d and %d is %d\\n\", num1, num2, result);\n    return 0;\n}\n```"
  },
  {
    "task": "Develop a program that calculates the total weight of multiple items using addition.",
    "code": "```c\n#include <stdio.h>\n\nint main() {\n    int numberOfItems;\n    double weight, totalWeight = 0.0;\n\n    printf(\"Enter the number of items: \");\n    scanf(\"%d\", &numberOfItems);\n\n    for (int i = 0; i < numberOfItems; i++) {\n        printf(\"Enter the weight of item %d: \", i + 1);\n        scanf(\"%lf\", &weight);\n        totalWeight += weight;\n    }\n\n    printf(\"The total weight of the items is: %.2lf\\n\", totalWeight);\n\n    return 0;\n}\n```"
  },
  {
    "task": "Implement a function to convert a temperature from Celsius to Fahrenheit using multiplication and addition.",
    "code": "```c\n#include <stdio.h>\n\ndouble celsiusToFahrenheit(double celsius) {\n    return celsius * 9.0 / 5.0 + 32.0;\n}\n\nint main() {\n    double celsius = 25.0;\n    double fahrenheit = celsiusToFahrenheit(celsius);\n    printf(\"%.2f Celsius is %.2f Fahrenheit\\n\", celsius, fahrenheit);\n    return 0;\n}\n```"
  },
  {
    "task": "Create a program that determines the age difference between two people given their birth years.",
    "code": "```c\n#include <stdio.h>\n\nint main() {\n    int birthYear1, birthYear2, ageDifference;\n\n    printf(\"Enter the birth year of the first person: \");\n    scanf(\"%d\", &birthYear1);\n\n    printf(\"Enter the birth year of the second person: \");\n    scanf(\"%d\", &birthYear2);\n\n    ageDifference = birthYear1 - birthYear2;\n    if (ageDifference < 0) {\n        ageDifference = -ageDifference;\n    }\n\n    printf(\"The age difference between the two people is %d years.\\n\", ageDifference);\n\n    return 0;\n}\n```"
  },
  {
    "task": "Write a function to calculate the final price after applying tax and discount using addition and subtraction.",
    "code": "```c\n#include <stdio.h>\n\ndouble calculateFinalPrice(double initialPrice, double taxRate, double discount) {\n    double taxAmount = initialPrice * taxRate;\n    double priceAfterTax = initialPrice + taxAmount;\n    double finalPrice = priceAfterTax - discount;\n    return finalPrice;\n}\n\nint main() {\n    double initialPrice = 100.0; // Example initial price\n    double taxRate = 0.15; // Example tax rate: 15%\n    double discount = 10.0; // Example discount\n\n    double finalPrice = calculateFinalPrice(initialPrice, taxRate, discount);\n    printf(\"The final price is: %.2f\\n\", finalPrice);\n\n    return 0;\n}\n```"
  },
  {
    "task": "Design a program to compute the net profit given total revenue and expenses.",
    "code": "```c\n#include <stdio.h>\n\nint main() {\n    double totalRevenue, expenses, netProfit;\n\n    printf(\"Enter the total revenue: \");\n    scanf(\"%lf\", &totalRevenue);\n\n    printf(\"Enter the expenses: \");\n    scanf(\"%lf\", &expenses);\n\n    netProfit = totalRevenue - expenses;\n\n    printf(\"The net profit is: %.2lf\\n\", netProfit);\n\n    return 0;\n}\n```"
  },
  {
    "task": "Develop a function to calculate the BMI given weight and height using division and multiplication.",
    "code": "```c\n#include <stdio.h>\n\ndouble calculateBMI(double weight, double height) {\n    return weight / (height * height);\n}\n\nint main() {\n    double weight = 70.0; // Example weight in kilograms\n    double height = 1.75; // Example height in meters\n    double bmi = calculateBMI(weight, height);\n    printf(\"BMI: %.2f\\n\", bmi);\n    return 0;\n}\n```"
  },
  {
    "task": "Create a function that calculates the midpoint between two numbers using addition and division.",
    "code": "```c\n#include <stdio.h>\n\ndouble calculateMidpoint(double num1, double num2) {\n    return (num1 + num2) / 2.0;\n}\n\nint main() {\n    double number1 = 10.0;\n    double number2 = 20.0;\n    double midpoint = calculateMidpoint(number1, number2);\n    printf(\"The midpoint is: %f\\n\", midpoint);\n    return 0;\n}\n```"
  },
  {
    "task": "Write a program that outputs the result of dividing a number by another with remainder.",
    "code": "```c\n#include <stdio.h>\n\nint main() {\n    int dividend = 20;\n    int divisor = 3;\n    int quotient = dividend / divisor;\n    int remainder = dividend % divisor;\n\n    printf(\"Quotient: %d\\n\", quotient);\n    printf(\"Remainder: %d\\n\", remainder);\n\n    return 0;\n}\n```"
  },
  {
    "task": "Implement a function to calculate the factorial of a number using multiplication.",
    "code": "```c\n#include <stdio.h>\n\nint factorial(int n) {\n    if (n < 0) return -1; // Factorial not defined for negative numbers\n    int result = 1;\n    for (int i = 2; i <= n; i++) {\n        result *= i;\n    }\n    return result;\n}\n\nint main() {\n    int number = 5; // Example number\n    printf(\"Factorial of %d is %d\\n\", number, factorial(number));\n    return 0;\n}\n```"
  },
  {
    "task": "Build a script to find the average of three numbers using addition and division.",
    "code": "```c\n#include <stdio.h>\n\nint main() {\n    double num1, num2, num3, sum, average;\n\n    // Example numbers\n    num1 = 5.0;\n    num2 = 10.0;\n    num3 = 15.0;\n\n    sum = num1 + num2 + num3;\n    average = sum / 3.0;\n\n    printf(\"The average is: %.2f\\n\", average);\n\n    return 0;\n}\n```"
  },
  {
    "task": "Create a program that simulates a simple bank account using arithmetic operations for deposits and withdrawals.",
    "code": "```c\n#include <stdio.h>\n\nint main() {\n    double balance = 0.0;\n    int choice;\n    double amount;\n\n    while (1) {\n        printf(\"Bank Account Simulation\\n\");\n        printf(\"1. Deposit\\n\");\n        printf(\"2. Withdraw\\n\");\n        printf(\"3. Check Balance\\n\");\n        printf(\"4. Exit\\n\");\n        printf(\"Enter your choice: \");\n        scanf(\"%d\", &choice);\n\n        switch (choice) {\n            case 1:\n                printf(\"Enter amount to deposit: \");\n                scanf(\"%lf\", &amount);\n                if (amount > 0) {\n                    balance += amount;\n                    printf(\"Deposited: %.2lf\\n\", amount);\n                } else {\n                    printf(\"Invalid amount!\\n\");\n                }\n                break;\n            case 2:\n                printf(\"Enter amount to withdraw: \");\n                scanf(\"%lf\", &amount);\n                if (amount > 0 && amount <= balance) {\n                    balance -= amount;\n                    printf(\"Withdrawn: %.2lf\\n\", amount);\n                } else {\n                    printf(\"Invalid amount or insufficient balance!\\n\");\n                }\n                break;\n            case 3:\n                printf(\"Current Balance: %.2lf\\n\", balance);\n                break;\n            case 4:\n                printf(\"Exiting...\\n\");\n                return 0;\n            default:\n                printf(\"Invalid choice!\\n\");\n        }\n    }\n}\n```"
  },
  {
    "task": "Write a function that computes the cost per item given a total cost and quantity using division.",
    "code": "```c\n#include <stdio.h>\n\ndouble computeCostPerItem(double totalCost, int quantity) {\n    if (quantity == 0) {\n        return 0.0; // Avoid division by zero\n    }\n    return totalCost / quantity;\n}\n\nint main() {\n    double totalCost = 100.0;\n    int quantity = 4;\n    double costPerItem = computeCostPerItem(totalCost, quantity);\n    printf(\"Cost per item: %.2f\\n\", costPerItem);\n    return 0;\n}\n```"
  },
  {
    "task": "Design a program that calculates the time required to travel a distance at a given speed.",
    "code": "```c\n#include <stdio.h>\n\nint main() {\n    double distance, speed, time;\n\n    // Input distance\n    printf(\"Enter the distance (in kilometers): \");\n    scanf(\"%lf\", &distance);\n\n    // Input speed\n    printf(\"Enter the speed (in km/h): \");\n    scanf(\"%lf\", &speed);\n\n    // Calculate time\n    time = distance / speed;\n\n    // Output the result\n    printf(\"Time required to travel the distance: %.2lf hours\\n\", time);\n\n    return 0;\n}\n```"
  },
  {
    "task": "Develop a function that returns the absolute difference between two numbers.",
    "code": "```c\n#include <stdio.h>\n\nint absoluteDifference(int a, int b) {\n    return a > b ? a - b : b - a;\n}\n\nint main() {\n    int num1 = 10;\n    int num2 = 5;\n    int result = absoluteDifference(num1, num2);\n    printf(\"Absolute difference: %d\\n\", result);\n    return 0;\n}\n```"
  },
  {
    "task": "Implement a program to compute the geometric mean of a set of numbers using multiplication and roots.",
    "code": "```c\n#include <stdio.h>\n#include <math.h>\n\ndouble geometricMean(double numbers[], int count) {\n    double product = 1.0;\n    for (int i = 0; i < count; i++) {\n        product *= numbers[i];\n    }\n    return pow(product, 1.0 / count);\n}\n\nint main() {\n    double numbers[] = {2.0, 4.0, 8.0, 16.0};\n    int count = sizeof(numbers) / sizeof(numbers[0]);\n    double result = geometricMean(numbers, count);\n    printf(\"Geometric Mean: %.2f\\n\", result);\n    return 0;\n}\n```"
  },
  {
    "task": "Write a function to calculate the total interest paid on a loan using arithmetic operations.",
    "code": "```c\n#include <stdio.h>\n\ndouble calculateTotalInterest(double principal, double annualRate, int years) {\n    double totalInterest = 0.0;\n    double ratePerPeriod = annualRate / 12;\n    int totalPeriods = years * 12;\n    \n    for (int i = 0; i < totalPeriods; i++) {\n        double interestForPeriod = principal * ratePerPeriod;\n        totalInterest += interestForPeriod;\n        principal -= (interestForPeriod / ratePerPeriod);\n    }\n    \n    return totalInterest;\n}\n\nint main() {\n    double principal = 10000.0;\n    double annualRate = 0.05;\n    int years = 5;\n    double totalInterest = calculateTotalInterest(principal, annualRate, years);\n    printf(\"Total interest paid: %.2f\\n\", totalInterest);\n    return 0;\n}\n```"
  },
  {
    "task": "Create a program that calculates the sum of even numbers within a specified range.",
    "code": "```c\n#include <stdio.h>\n\nint main() {\n    int start, end, sum = 0;\n    \n    printf(\"Enter the start of the range: \");\n    scanf(\"%d\", &start);\n    \n    printf(\"Enter the end of the range: \");\n    scanf(\"%d\", &end);\n    \n    for (int i = start; i <= end; i++) {\n        if (i % 2 == 0) {\n            sum += i;\n        }\n    }\n    \n    printf(\"The sum of even numbers between %d and %d is: %d\\n\", start, end, sum);\n    \n    return 0;\n}\n```"
  },
  {
    "task": "Design a script to determine the final balance in a savings account after regular deposits and withdrawals.",
    "code": "```c\n#include <stdio.h>\n\nint main() {\n    double initial_balance = 1000.0; // Example initial balance\n    double deposits[] = {200.0, 150.0, 300.0}; // Example deposits\n    double withdrawals[] = {100.0, 50.0}; // Example withdrawals\n    \n    int num_deposits = sizeof(deposits) / sizeof(deposits[0]);\n    int num_withdrawals = sizeof(withdrawals) / sizeof(withdrawals[0]);\n    \n    double balance = initial_balance;\n    \n    for (int i = 0; i < num_deposits; i++) {\n        balance += deposits[i];\n    }\n    \n    for (int i = 0; i < num_withdrawals; i++) {\n        balance -= withdrawals[i];\n    }\n    \n    printf(\"Final balance: %.2f\\n\", balance);\n    \n    return 0;\n}\n```"
  },
  {
    "task": "Develop a function to compute the surface area of a cylinder given its radius and height.",
    "code": "```c\n#include <stdio.h>\n\n#define PI 3.14159265358979323846\n\ndouble surfaceAreaOfCylinder(double radius, double height) {\n    return 2 * PI * radius * (radius + height);\n}\n\nint main() {\n    double radius = 5.0;\n    double height = 10.0;\n    double area = surfaceAreaOfCylinder(radius, height);\n    printf(\"Surface area of the cylinder: %.2f\\n\", area);\n    return 0;\n}\n```"
  },
  {
    "task": "Write a program that outputs the result of an arithmetic sequence given the first term and common difference.",
    "code": "```c\n#include <stdio.h>\n\nint main() {\n    int firstTerm, commonDifference, n, result;\n\n    // Example inputs\n    firstTerm = 5;         // First term of the arithmetic sequence\n    commonDifference = 3;  // Common difference\n    n = 10;                // Term number to find\n\n    // Calculate the nth term of the arithmetic sequence\n    result = firstTerm + (n - 1) * commonDifference;\n\n    // Output the result\n    printf(\"The %dth term of the arithmetic sequence is: %d\\n\", n, result);\n\n    return 0;\n}\n```"
  },
  {
    "task": "Implement a function that finds the average speed for a trip given total distance and time.",
    "code": "```c\n#include <stdio.h>\n\ndouble calculate_average_speed(double total_distance, double total_time) {\n    return total_distance / total_time;\n}\n\nint main() {\n    double distance = 150.0; // example distance in kilometers\n    double time = 2.0;       // example time in hours\n\n    double average_speed = calculate_average_speed(distance, time);\n    printf(\"Average Speed: %.2f km/h\\n\", average_speed);\n\n    return 0;\n}\n```"
  },
  {
    "task": "Create a function to calculate the total cost of a road trip given fuel cost per mile and distance.",
    "code": "```c\n#include <stdio.h>\n\ndouble calculateTotalCost(double fuelCostPerMile, double distance) {\n    return fuelCostPerMile * distance;\n}\n\nint main() {\n    double fuelCostPerMile = 0.12; // example cost per mile\n    double distance = 150.0; // example distance in miles\n\n    double totalCost = calculateTotalCost(fuelCostPerMile, distance);\n    printf(\"Total cost of the road trip: $%.2f\\n\", totalCost);\n\n    return 0;\n}\n```"
  },
  {
    "task": "Write a script that determines the number of tiles required to cover a floor area using arithmetic operations.",
    "code": "```c\n#include <stdio.h>\n\nint main() {\n    double floorLength, floorWidth, tileLength, tileWidth;\n    printf(\"Enter the floor length: \");\n    scanf(\"%lf\", &floorLength);\n    printf(\"Enter the floor width: \");\n    scanf(\"%lf\", &floorWidth);\n    printf(\"Enter the tile length: \");\n    scanf(\"%lf\", &tileLength);\n    printf(\"Enter the tile width: \");\n    scanf(\"%lf\", &tileWidth);\n\n    double floorArea = floorLength * floorWidth;\n    double tileArea = tileLength * tileWidth;\n    int numberOfTiles = (int)(floorArea / tileArea) + ((int)(floorArea) % (int)(tileArea) != 0);\n\n    printf(\"Number of tiles required: %d\\n\", numberOfTiles);\n    return 0;\n}\n```"
  },
  {
    "task": "Develop a program to calculate the amount of paint needed to cover a wall given its area.",
    "code": "```c\n#include <stdio.h>\n\nint main() {\n    double wallArea, paintCoveragePerLiter, litersNeeded;\n\n    // Example values (can be replaced with user input or other data sources)\n    wallArea = 50.0; // in square meters\n    paintCoveragePerLiter = 10.0; // in square meters per liter\n\n    litersNeeded = wallArea / paintCoveragePerLiter;\n\n    printf(\"Liters of paint needed: %.2f\\n\", litersNeeded);\n    \n    return 0;\n}\n```"
  },
  {
    "task": "Build a function that calculates the price per unit weight given total price and weight.",
    "code": "```c\n#include <stdio.h>\n\ndouble calculatePricePerUnitWeight(double totalPrice, double weight) {\n    if (weight == 0) {\n        return 0; // Avoid division by zero\n    }\n    return totalPrice / weight;\n}\n\nint main() {\n    double totalPrice = 100.0;\n    double weight = 5.0;\n    double pricePerUnitWeight = calculatePricePerUnitWeight(totalPrice, weight);\n    printf(\"Price per unit weight: %.2f\\n\", pricePerUnitWeight);\n    return 0;\n}\n```"
  },
  {
    "task": "Implement a program that computes the volume of a rectangular prism given its dimensions.",
    "code": "```c\n#include <stdio.h>\n\nint main() {\n    double length, width, height, volume;\n\n    printf(\"Enter the length of the rectangular prism: \");\n    scanf(\"%lf\", &length);\n\n    printf(\"Enter the width of the rectangular prism: \");\n    scanf(\"%lf\", &width);\n\n    printf(\"Enter the height of the rectangular prism: \");\n    scanf(\"%lf\", &height);\n\n    volume = length * width * height;\n\n    printf(\"The volume of the rectangular prism is: %.2lf\\n\", volume);\n\n    return 0;\n}\n```"
  },
  {
    "task": "Write a function to find the percentage increase or decrease between two numbers.",
    "code": "```c\n#include <stdio.h>\n\ndouble calculatePercentageChange(double original, double new) {\n    if (original == 0) {\n        return 0; // Avoid division by zero\n    }\n    return ((new - original) / original) * 100;\n}\n\nint main() {\n    double originalValue = 50.0;\n    double newValue = 75.0;\n    \n    double percentageChange = calculatePercentageChange(originalValue, newValue);\n    printf(\"Percentage change: %.2f%%\\n\", percentageChange);\n    \n    return 0;\n}\n```"
  },
  {
    "task": "Create a program to determine the number of complete weeks within a specified number of days.",
    "code": "```c\n#include <stdio.h>\n\nint main() {\n    int days, weeks;\n\n    printf(\"Enter the number of days: \");\n    scanf(\"%d\", &days);\n\n    weeks = days / 7;\n\n    printf(\"Number of complete weeks: %d\\n\", weeks);\n\n    return 0;\n}\n```"
  },
  {
    "task": "Design a function that calculates the break-even point for a business using cost and revenue data.",
    "code": "```c\n#include <stdio.h>\n\ndouble calculateBreakEvenPoint(double fixedCosts, double variableCostPerUnit, double pricePerUnit) {\n    if (pricePerUnit <= variableCostPerUnit) {\n        return -1; // No break-even point if price per unit is not greater than variable cost per unit\n    }\n    return fixedCosts / (pricePerUnit - variableCostPerUnit);\n}\n\nint main() {\n    double fixedCosts = 10000.0; // Example fixed costs\n    double variableCostPerUnit = 5.0; // Example variable cost per unit\n    double pricePerUnit = 10.0; // Example price per unit\n\n    double breakEvenPoint = calculateBreakEvenPoint(fixedCosts, variableCostPerUnit, pricePerUnit);\n    \n    if (breakEvenPoint == -1) {\n        printf(\"No break-even point.\\n\");\n    } else {\n        printf(\"Break-even point (in units): %.2f\\n\", breakEvenPoint);\n    }\n\n    return 0;\n}\n```"
  },
  {
    "task": "Develop a program that converts a total number of seconds into hours, minutes, and seconds.",
    "code": "```c\n#include <stdio.h>\n\nint main() {\n    int total_seconds, hours, minutes, seconds;\n\n    printf(\"Enter the total number of seconds: \");\n    scanf(\"%d\", &total_seconds);\n\n    hours = total_seconds / 3600;\n    total_seconds = total_seconds % 3600;\n    minutes = total_seconds / 60;\n    seconds = total_seconds % 60;\n\n    printf(\"%d hours, %d minutes, %d seconds\\n\", hours, minutes, seconds);\n\n    return 0;\n}\n```"
  },
  {
    "task": "Write a function that calculates the depreciation of an asset over time using arithmetic operations.",
    "code": "```c\n#include <stdio.h>\n\ndouble calculateDepreciation(double initial_value, double salvage_value, int useful_life, int year) {\n    double depreciation;\n    if (year > 0 && year <= useful_life) {\n        depreciation = (initial_value - salvage_value) / useful_life;\n        return initial_value - (depreciation * year);\n    }\n    return 0.0;\n}\n\nint main() {\n    double initial_value = 10000.0;\n    double salvage_value = 2000.0;\n    int useful_life = 5;\n    int year = 3;\n\n    double value = calculateDepreciation(initial_value, salvage_value, useful_life, year);\n\n    printf(\"The value of the asset after %d years is: %.2f\\n\", year, value);\n\n    return 0;\n}\n```"
  },
  {
    "task": "Create a program that computes the final exam grade needed to achieve a target course average.",
    "code": "```c\n#include <stdio.h>\n\nint main() {\n    double currentAverage, targetAverage, finalExamWeight, neededFinalExamGrade;\n\n    printf(\"Enter your current course average: \");\n    scanf(\"%lf\", &currentAverage);\n\n    printf(\"Enter your target course average: \");\n    scanf(\"%lf\", &targetAverage);\n\n    printf(\"Enter the weight of the final exam (as a percentage): \");\n    scanf(\"%lf\", &finalExamWeight);\n\n    if (finalExamWeight <= 0 || finalExamWeight > 100) {\n        printf(\"Invalid final exam weight.\\n\");\n        return 1;\n    }\n\n    neededFinalExamGrade = (targetAverage - currentAverage * (1 - finalExamWeight / 100)) / (finalExamWeight / 100);\n\n    printf(\"You need a final exam grade of: %.2lf\\n\", neededFinalExamGrade);\n\n    return 0;\n}\n```"
  },
  {
    "task": "Implement a function to calculate the total cost of groceries given prices and quantities of items.",
    "code": "```c\n#include <stdio.h>\n\ndouble calculateTotalCost(double prices[], int quantities[], int size) {\n    double totalCost = 0.0;\n    for (int i = 0; i < size; i++) {\n        totalCost += prices[i] * quantities[i];\n    }\n    return totalCost;\n}\n\nint main() {\n    double prices[] = {2.5, 3.0, 4.0, 5.5};\n    int quantities[] = {2, 1, 3, 4};\n    int size = sizeof(prices) / sizeof(prices[0]);\n\n    double totalCost = calculateTotalCost(prices, quantities, size);\n    printf(\"Total cost of groceries: %.2f\\n\", totalCost);\n\n    return 0;\n}\n```"
  },
  {
    "task": "Write a script that determines the number of years required to double an investment using a fixed interest rate.",
    "code": "```c\n#include <stdio.h>\n#include <math.h>\n\nint main() {\n    double principal, rate, amount;\n    int years = 0;\n\n    // Example values for principal and rate\n    principal = 1000.0; // Initial investment\n    rate = 0.05;        // Fixed interest rate (5%)\n\n    amount = principal;\n    while (amount < 2 * principal) {\n        amount += amount * rate;\n        years++;\n    }\n\n    printf(\"Years required to double the investment: %d\\n\", years);\n    return 0;\n}\n```"
  },
  {
    "task": "Develop a function that computes the harmonic mean of a set of numbers using division and addition.",
    "code": "```c\n#include <stdio.h>\n\ndouble harmonic_mean(double numbers[], int count) {\n    double sum = 0.0;\n    for (int i = 0; i < count; i++) {\n        sum += 1.0 / numbers[i];\n    }\n    return count / sum;\n}\n\nint main() {\n    double numbers[] = {1.0, 2.0, 4.0, 4.0};\n    int count = sizeof(numbers) / sizeof(numbers[0]);\n    double h_mean = harmonic_mean(numbers, count);\n    printf(\"Harmonic Mean: %f\\n\", h_mean);\n    return 0;\n}\n```"
  },
  {
    "task": "Create a program to find the sum of the squares of numbers in a given range.",
    "code": "```c\n#include <stdio.h>\n\nint main() {\n    int start, end, sum = 0;\n\n    printf(\"Enter the start of the range: \");\n    scanf(\"%d\", &start);\n    printf(\"Enter the end of the range: \");\n    scanf(\"%d\", &end);\n\n    for (int i = start; i <= end; i++) {\n        sum += i * i;\n    }\n\n    printf(\"Sum of squares from %d to %d is %d\\n\", start, end, sum);\n\n    return 0;\n}\n```"
  },
  {
    "task": "Design a function that calculates the energy consumption of an appliance given power and usage time.",
    "code": "```c\n#include <stdio.h>\n\ndouble calculateEnergyConsumption(double power, double usageTime) {\n    return power * usageTime;\n}\n\nint main() {\n    double power = 1500.0; // in watts\n    double usageTime = 2.5; // in hours\n    double energyConsumption = calculateEnergyConsumption(power, usageTime);\n    printf(\"Energy Consumption: %.2f watt-hours\\n\", energyConsumption);\n    return 0;\n}\n```"
  },
  {
    "task": "Write a program that simulates a simple stock portfolio using arithmetic operations for buying and selling.",
    "code": "```c\n#include <stdio.h>\n\nint main() {\n    double cash = 1000.00; // Starting cash\n    double stockPrice = 50.00; // Price per stock\n    int stocksOwned = 0;\n\n    // Buy 10 stocks\n    int stocksToBuy = 10;\n    double cost = stocksToBuy * stockPrice;\n    if (cash >= cost) {\n        stocksOwned += stocksToBuy;\n        cash -= cost;\n    }\n\n    // Sell 5 stocks\n    int stocksToSell = 5;\n    double revenue = stocksToSell * stockPrice;\n    if (stocksOwned >= stocksToSell) {\n        stocksOwned -= stocksToSell;\n        cash += revenue;\n    }\n\n    // Print final portfolio\n    printf(\"Final cash: $%.2f\\n\", cash);\n    printf(\"Stocks owned: %d\\n\", stocksOwned);\n\n    return 0;\n}\n```"
  },
  {
    "task": "Implement a function to calculate the gravitational force between two masses using multiplication and division.",
    "code": "```c\n#include <stdio.h>\n\n#define GRAVITATIONAL_CONSTANT 6.67430e-11\n\ndouble calculateGravitationalForce(double mass1, double mass2, double distance) {\n    return (GRAVITATIONAL_CONSTANT * mass1 * mass2) / (distance * distance);\n}\n\nint main() {\n    double mass1 = 5.972e24; // Earth mass in kg\n    double mass2 = 7.348e22; // Moon mass in kg\n    double distance = 3.844e8; // Distance between Earth and Moon in meters\n\n    double force = calculateGravitationalForce(mass1, mass2, distance);\n    printf(\"Gravitational Force: %e N\\n\", force);\n\n    return 0;\n}\n```"
  },
  {
    "task": "Create a function that determines the price per square foot of a piece of real estate.",
    "code": "```c\n#include <stdio.h>\n\ndouble price_per_square_foot(double total_price, double total_square_feet) {\n    if (total_square_feet == 0) {\n        return 0;\n    }\n    return total_price / total_square_feet;\n}\n\nint main() {\n    double total_price = 500000; // Example total price\n    double total_square_feet = 2000; // Example total square feet\n\n    double price_sq_ft = price_per_square_foot(total_price, total_square_feet);\n    printf(\"Price per square foot: $%.2f\\n\", price_sq_ft);\n\n    return 0;\n}\n```"
  },
  {
    "task": "Write a script to compute the total interest earned on a savings account with monthly compounding.",
    "code": "```c\n#include <stdio.h>\n#include <math.h>\n\nint main() {\n    double principal = 1000.0; // Initial amount\n    double annual_rate = 0.05; // Annual interest rate\n    int years = 5; // Number of years\n    int n = 12; // Number of compounding periods per year\n\n    double total_amount = principal * pow((1 + annual_rate / n), n * years);\n    double interest_earned = total_amount - principal;\n\n    printf(\"Total interest earned: %.2f\\n\", interest_earned);\n\n    return 0;\n}\n```"
  },
  {
    "task": "Develop a program that calculates the calories burned during exercise given MET value and duration.",
    "code": "```c\n#include <stdio.h>\n\nint main() {\n    float metValue, duration, weight, caloriesBurned;\n\n    // Example values for MET, duration in hours, and weight in kg\n    metValue = 8.0; // MET value for the exercise\n    duration = 1.0; // Duration in hours\n    weight = 70.0;  // Weight in kg\n\n    // Calculate calories burned\n    caloriesBurned = metValue * weight * duration;\n\n    printf(\"Calories burned: %.2f\\n\", caloriesBurned);\n\n    return 0;\n}\n```"
  },
  {
    "task": "Build a function that converts a speed from miles per hour to kilometers per hour using multiplication.",
    "code": "```c\n#include <stdio.h>\n\ndouble mphToKph(double mph) {\n    return mph * 1.60934;\n}\n\nint main() {\n    double mph = 60.0; // Example speed in miles per hour\n    double kph = mphToKph(mph);\n    printf(\"Speed in kilometers per hour: %.2f\\n\", kph);\n    return 0;\n}\n```"
  },
  {
    "task": "Implement a program to find the number of days between two dates using arithmetic operations.",
    "code": "```c\n#include <stdio.h>\n\nstruct Date {\n    int day;\n    int month;\n    int year;\n};\n\n// Function to check if a year is a leap year\nint isLeapYear(int year) {\n    return (year % 4 == 0 && year % 100 != 0) || (year % 400 == 0);\n}\n\n// Function to calculate the number of days in a given month of a given year\nint daysInMonth(int month, int year) {\n    switch (month) {\n        case 1: case 3: case 5: case 7: case 8: case 10: case 12:\n            return 31;\n        case 4: case 6: case 9: case 11:\n            return 30;\n        case 2:\n            return isLeapYear(year) ? 29 : 28;\n        default:\n            return 0;\n    }\n}\n\n// Function to convert a date to the number of days since 01/01/0000\nint dateToDays(struct Date date) {\n    int days = date.day;\n    for (int y = 0; y < date.year; y++) {\n        days += isLeapYear(y) ? 366 : 365;\n    }\n    for (int m = 1; m < date.month; m++) {\n        days += daysInMonth(m, date.year);\n    }\n    return days;\n}\n\n// Function to calculate the difference in days between two dates\nint daysBetween(struct Date date1, struct Date date2) {\n    int days1 = dateToDays(date1);\n    int days2 = dateToDays(date2);\n    return days2 - days1;\n}\n\nint main() {\n    struct Date date1, date2;\n    \n    printf(\"Enter first date (dd mm yyyy): \");\n    scanf(\"%d %d %d\", &date1.day, &date1.month, &date1.year);\n    \n    printf(\"Enter second date (dd mm yyyy): \");\n    scanf(\"%d %d %d\", &date2.day, &date2.month, &date2.year);\n    \n    int diff = daysBetween(date1, date2);\n    printf(\"Number of days between the two dates: %d\\n\", diff);\n    \n    return 0;\n}\n```"
  },
  {
    "task": "Write a function to calculate the area of a circle given its radius.",
    "code": "```c\n#include <stdio.h>\n\n#define PI 3.14159265358979323846\n\ndouble calculateAreaOfCircle(double radius) {\n    return PI * radius * radius;\n}\n\nint main() {\n    double radius = 5.0;\n    double area = calculateAreaOfCircle(radius);\n    printf(\"Area of the circle with radius %.2f is %.2f\\n\", radius, area);\n    return 0;\n}\n```"
  },
  {
    "task": "Create a program that determines the total distance driven given trips with varying speeds and durations.",
    "code": "```c\n#include <stdio.h>\n\nint main() {\n    int numberOfTrips, i;\n    double speed, duration, totalDistance = 0.0;\n    \n    printf(\"Enter the number of trips: \");\n    scanf(\"%d\", &numberOfTrips);\n    \n    for (i = 0; i < numberOfTrips; ++i) {\n        printf(\"Enter speed (in km/h) and duration (in hours) for trip %d: \", i+1);\n        scanf(\"%lf %lf\", &speed, &duration);\n        totalDistance += speed * duration;\n    }\n    \n    printf(\"Total distance driven: %.2f km\\n\", totalDistance);\n    \n    return 0;\n}\n```"
  },
  {
    "task": "Design a function to compute the final price of an item after applying multiple discounts sequentially.",
    "code": "```c\n#include <stdio.h>\n\ndouble computeFinalPrice(double initialPrice, double discounts[], int numDiscounts) {\n    double finalPrice = initialPrice;\n    for (int i = 0; i < numDiscounts; i++) {\n        finalPrice *= (1.0 - discounts[i]);\n    }\n    return finalPrice;\n}\n\nint main() {\n    double initialPrice = 100.0;\n    double discounts[] = {0.1, 0.2, 0.05}; // 10%, 20%, 5% discounts\n    int numDiscounts = sizeof(discounts) / sizeof(discounts[0]);\n    double finalPrice = computeFinalPrice(initialPrice, discounts, numDiscounts);\n    printf(\"Final price: %.2f\\n\", finalPrice);\n    return 0;\n}\n```"
  },
  {
    "task": "Write a script that calculates the number of bricks needed to build a wall given wall dimensions and brick size.",
    "code": "```c\n#include <stdio.h>\n\nint main() {\n    double wallWidth, wallHeight, brickWidth, brickHeight;\n    int bricksNeeded;\n\n    // Example wall and brick dimensions\n    wallWidth = 10.0;  // Wall width in meters\n    wallHeight = 2.5;  // Wall height in meters\n    brickWidth = 0.2;  // Brick width in meters\n    brickHeight = 0.1; // Brick height in meters\n\n    // Calculate the number of bricks needed\n    bricksNeeded = (int)((wallWidth / brickWidth) * (wallHeight / brickHeight));\n\n    printf(\"Number of bricks needed: %d\\n\", bricksNeeded);\n\n    return 0;\n}\n```"
  },
  {
    "task": "Develop a program to determine the number of pizzas required for a party given the number of people and slices per pizza.",
    "code": "```c\n#include <stdio.h>\n\nint main() {\n    int people, slicesPerPizza, slicesPerPerson;\n    int totalSlicesNeeded, pizzasNeeded;\n\n    printf(\"Enter the number of people: \");\n    scanf(\"%d\", &people);\n\n    printf(\"Enter the number of slices each person will eat: \");\n    scanf(\"%d\", &slicesPerPerson);\n\n    printf(\"Enter the number of slices per pizza: \");\n    scanf(\"%d\", &slicesPerPizza);\n\n    totalSlicesNeeded = people * slicesPerPerson;\n    pizzasNeeded = (totalSlicesNeeded + slicesPerPizza - 1) / slicesPerPizza;\n\n    printf(\"Number of pizzas required: %d\\n\", pizzasNeeded);\n\n    return 0;\n}\n```"
  },
  {
    "task": "Implement a function that calculates the total cost of a meal including tax and tip.",
    "code": "```c\n#include <stdio.h>\n\ndouble calculateTotalCost(double mealCost, double taxRate, double tipRate) {\n    double taxAmount = mealCost * taxRate;\n    double tipAmount = mealCost * tipRate;\n    double totalCost = mealCost + taxAmount + tipAmount;\n    return totalCost;\n}\n\nint main() {\n    double mealCost = 50.0;\n    double taxRate = 0.08; // 8% tax\n    double tipRate = 0.15; // 15% tip\n\n    double totalCost = calculateTotalCost(mealCost, taxRate, tipRate);\n    printf(\"Total cost of the meal: $%.2f\\n\", totalCost);\n\n    return 0;\n}\n```"
  },
  {
    "task": "Create a program to compute the average rainfall over a period using addition and division.",
    "code": "```c\n#include <stdio.h>\n\nint main() {\n    int n, i;\n    float sum = 0.0, rainfall, average;\n\n    printf(\"Enter the number of periods: \");\n    scanf(\"%d\", &n);\n\n    for (i = 0; i < n; i++) {\n        printf(\"Enter rainfall for period %d: \", i + 1);\n        scanf(\"%f\", &rainfall);\n        sum += rainfall;\n    }\n\n    if (n > 0) {\n        average = sum / n;\n        printf(\"Average rainfall: %.2f\\n\", average);\n    } else {\n        printf(\"No periods to compute average.\\n\");\n    }\n\n    return 0;\n}\n```"
  },
  {
    "task": "Write a function that determines the number of batches needed to produce a specific quantity of a product.",
    "code": "```c\n#include <stdio.h>\n\nint calculateBatches(int totalQuantity, int batchSize) {\n    return (totalQuantity + batchSize - 1) / batchSize;\n}\n\nint main() {\n    int totalQuantity = 100;\n    int batchSize = 12;\n    int batches = calculateBatches(totalQuantity, batchSize);\n    printf(\"Number of batches needed: %d\\n\", batches);\n    return 0;\n}\n```"
  },
  {
    "task": "Design a program to calculate the total energy consumption of a household given individual appliance usage.",
    "code": "```c\n#include <stdio.h>\n\nint main() {\n    // Define the usage of each appliance in kilowatt-hours (kWh)\n    double fridgeUsage = 1.2; // Example usage\n    double ovenUsage = 2.5;   // Example usage\n    double washingMachineUsage = 0.5; // Example usage\n    double airConditionerUsage = 3.8; // Example usage\n\n    // Calculate the total energy consumption\n    double totalEnergyConsumption = fridgeUsage + ovenUsage + washingMachineUsage + airConditionerUsage;\n\n    // Output the total energy consumption\n    printf(\"Total energy consumption: %.2f kWh\\n\", totalEnergyConsumption);\n\n    return 0;\n}\n```"
  },
  {
    "task": "Develop a function that computes the body surface area of a person using height and weight.",
    "code": "```c\n#include <stdio.h>\n#include <math.h>\n\ndouble computeBodySurfaceArea(double height, double weight) {\n    return sqrt((height * weight) / 3600.0);\n}\n\nint main() {\n    double height = 175.0; // example height in cm\n    double weight = 70.0;  // example weight in kg\n    double bsa = computeBodySurfaceArea(height, weight);\n    printf(\"Body Surface Area: %.2f\\n\", bsa);\n    return 0;\n}\n```"
  },
  {
    "task": "Build a script to calculate the monthly payment on a mortgage using principal, interest rate, and term.",
    "code": "```c\n#include <stdio.h>\n#include <math.h>\n\ndouble calculateMonthlyPayment(double principal, double annualInterestRate, int termYears) {\n    double monthlyInterestRate = annualInterestRate / 12 / 100;\n    int numberOfPayments = termYears * 12;\n    return (principal * monthlyInterestRate) / (1 - pow(1 + monthlyInterestRate, -numberOfPayments));\n}\n\nint main() {\n    double principal = 250000; // Example principal amount\n    double annualInterestRate = 3.5; // Example annual interest rate in percentage\n    int termYears = 30; // Example term in years\n\n    double monthlyPayment = calculateMonthlyPayment(principal, annualInterestRate, termYears);\n    printf(\"Monthly Payment: $%.2f\\n\", monthlyPayment);\n\n    return 0;\n}\n```"
  },
  {
    "task": "Implement a function to find the volume of a cone given its height and radius.",
    "code": "```c\n#include <stdio.h>\n#define PI 3.14159265358979323846\n\ndouble cone_volume(double radius, double height) {\n    return (PI * radius * radius * height) / 3.0;\n}\n\nint main() {\n    double radius, height;\n    printf(\"Enter the radius of the cone: \");\n    scanf(\"%lf\", &radius);\n    printf(\"Enter the height of the cone: \");\n    scanf(\"%lf\", &height);\n    \n    double volume = cone_volume(radius, height);\n    printf(\"The volume of the cone is: %.2lf\\n\", volume);\n    \n    return 0;\n}\n```"
  },
  {
    "task": "Write a program that estimates the cost of a trip using fuel efficiency and distance.",
    "code": "```c\n#include <stdio.h>\n\nint main() {\n    double fuelEfficiency; // Fuel efficiency in kilometers per liter\n    double distance;       // Distance of the trip in kilometers\n    double fuelCost;       // Cost of fuel per liter\n    double totalCost;\n\n    // Example inputs\n    fuelEfficiency = 15.0; // e.g. 15 km/l\n    distance = 300.0;      // e.g. 300 km\n    fuelCost = 5.0;        // e.g. 5 currency units per liter\n\n    totalCost = (distance / fuelEfficiency) * fuelCost;\n\n    printf(\"The estimated cost of the trip is: %.2f\\n\", totalCost);\n\n    return 0;\n}\n```"
  }
]