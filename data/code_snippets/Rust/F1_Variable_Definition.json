[
  {
    "task": "Define an integer variable and assign it a value.",
    "code": "```rust\nfn main() {\n    let my_variable: i32 = 42;\n}\n```"
  },
  {
    "task": "Create a string variable to store your full name.",
    "code": "```rust\nfn main() {\n    let full_name: &str = \"Your Full Name\";\n}\n```"
  },
  {
    "task": "Define a boolean variable to represent if a feature is enabled.",
    "code": "```rust\nlet feature_enabled: bool = true;\n```"
  },
  {
    "task": "Declare a floating-point variable for storing temperature in Celsius.",
    "code": "```rust\nfn main() {\n    let temperature_celsius: f64 = 0.0;\n}\n```"
  },
  {
    "task": "Create a variable to hold the current date and time.",
    "code": "```rust\nuse chrono::prelude::*;\n\nfn main() {\n    let current_date_time = Utc::now();\n}\n```"
  },
  {
    "task": "Define a list variable to store a collection of favorite book titles.",
    "code": "```rust\nfn main() {\n    let favorite_books = vec![\n        String::from(\"To Kill a Mockingbird\"),\n        String::from(\"1984\"),\n        String::from(\"The Great Gatsby\"),\n        String::from(\"The Catcher in the Rye\"),\n        String::from(\"Pride and Prejudice\"),\n    ];\n}\n```"
  },
  {
    "task": "Create a dictionary variable to map student names to their grades.",
    "code": "```rust\nuse std::collections::HashMap;\n\nfn main() {\n    let mut student_grades: HashMap<&str, char> = HashMap::new();\n    student_grades.insert(\"Alice\", 'A');\n    student_grades.insert(\"Bob\", 'B');\n    student_grades.insert(\"Charlie\", 'C');\n}\n```"
  },
  {
    "task": "Declare a constant variable to represent the mathematical value of pi.",
    "code": "```rust\nconst PI: f64 = 3.141592653589793;\n```"
  },
  {
    "task": "Define a variable to store the user's age and ensure it is an integer.",
    "code": "```rust\nfn main() {\n    let user_age: i32 = 0;\n}\n```"
  },
  {
    "task": "Create a variable to hold a complex number.",
    "code": "```rust\nfn main() {\n    let complex_number: num_complex::Complex<f64> = num_complex::Complex::new(0.0, 0.0);\n}\n```"
  },
  {
    "task": "Define a variable to store a multiline text as a string.",
    "code": "```rust\nfn main() {\n    let multiline_text = \"This is a\nmultiline text\nstored as a string.\";\n    \n    println!(\"{}\", multiline_text);\n}\n```"
  },
  {
    "task": "Declare a variable to store a person's height in meters as a floating-point number.",
    "code": "```rust\nlet height_in_meters: f64 = 0.0;\n```"
  },
  {
    "task": "Define a variable to hold the result of a mathematical expression.",
    "code": "```rust\nfn main() {\n    let result = 3 + 4 * 2 - 5 / 1;\n    println!(\"The result is: {}\", result);\n}\n```"
  },
  {
    "task": "Create a variable to store a person's favorite color.",
    "code": "```rust\nfn main() {\n    let favorite_color = \"blue\";\n}\n```"
  },
  {
    "task": "Declare a variable to store the number of items in a shopping cart.",
    "code": "```rust\nlet number_of_items_in_cart: u32 = 0;\n```"
  },
  {
    "task": "Define a variable to store a user\u2019s last login timestamp.",
    "code": "```rust\nfn main() {\n    let last_login_timestamp: u64 = 0;\n}\n```"
  },
  {
    "task": "Create a variable to hold a function reference.",
    "code": "```rust\nfn example_function() {\n    println!(\"This is an example function.\");\n}\n\nfn main() {\n    let function_reference: fn() = example_function;\n    function_reference();\n}\n```"
  },
  {
    "task": "Declare a variable to store a configuration setting.",
    "code": "```rust\nlet config_setting: String = String::from(\"default_value\");\n```"
  },
  {
    "task": "Define a variable to keep track of a player's score in a game.",
    "code": "```rust\nfn main() {\n    let player_score: i32 = 0;\n}\n```"
  },
  {
    "task": "Create a variable to store a list of prime numbers.",
    "code": "```rust\nfn main() {\n    let prime_numbers = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29];\n}\n```"
  },
  {
    "task": "Declare a variable to represent the state of a light switch (on/off).",
    "code": "```rust\nlet light_switch_on: bool = true; // true for on, false for off\n```"
  },
  {
    "task": "Define a variable to store an email address.",
    "code": "```rust\nfn main() {\n    let email_address = \"example@example.com\";\n}\n```"
  },
  {
    "task": "Create a variable to hold the URL of a website.",
    "code": "```rust\nfn main() {\n    let website_url = \"https://www.example.com\";\n}\n```"
  },
  {
    "task": "Declare a variable to store the status of a network connection.",
    "code": "```rust\nlet network_status: bool = false;\n```"
  },
  {
    "task": "Define a variable to hold the result of a database query.",
    "code": "```rust\nlet query_result = get_database_query_result();\n```"
  },
  {
    "task": "Create a variable to store the dimensions of a rectangle.",
    "code": "```rust\nfn main() {\n    let width: u32 = 10;\n    let height: u32 = 5;\n}\n```"
  },
  {
    "task": "Declare a variable to hold the name of a file to be opened.",
    "code": "```rust\nlet file_name = \"example.txt\";\n```"
  },
  {
    "task": "Define a variable to store a person's phone number.",
    "code": "```rust\nfn main() {\n    let phone_number: String = String::from(\"123-456-7890\");\n}\n```"
  },
  {
    "task": "Create a variable to store the total cost of items in a cart.",
    "code": "```rust\nfn main() {\n    let total_cost: f64 = 0.0;\n}\n```"
  },
  {
    "task": "Declare a variable to store a list of to-do tasks.",
    "code": "```rust\nfn main() {\n    let to_do_tasks: Vec<&str> = Vec::new();\n}\n```"
  },
  {
    "task": "Define a variable to hold a user's profile information.",
    "code": "```rust\nstruct UserProfile {\n    username: String,\n    email: String,\n    age: u32,\n}\n\nfn main() {\n    let user_profile = UserProfile {\n        username: String::from(\"JohnDoe\"),\n        email: String::from(\"johndoe@example.com\"),\n        age: 30,\n    };\n}\n```"
  },
  {
    "task": "Create a variable to store an array of sensor readings.",
    "code": "```rust\nfn main() {\n    let sensor_readings: [f32; 5] = [23.5, 24.0, 22.8, 23.9, 24.1];\n}\n```"
  },
  {
    "task": "Declare a variable to represent the number of attempts a user has to log in.",
    "code": "```rust\nlet login_attempts: u32 = 0;\n```"
  },
  {
    "task": "Define a variable to store the maximum capacity of a container.",
    "code": "```rust\nfn main() {\n    let max_capacity: u32 = 100; // Replace 100 with the desired maximum capacity value\n}\n```"
  },
  {
    "task": "Create a variable to store a list of city names.",
    "code": "```rust\nfn main() {\n    let city_names = vec![\"New York\", \"Los Angeles\", \"Chicago\", \"Houston\", \"Phoenix\"];\n}\n```"
  },
  {
    "task": "Declare a variable to hold the age of a historical artifact.",
    "code": "```rust\nfn main() {\n    let artifact_age: u32;\n}\n```"
  },
  {
    "task": "Define a variable to store an error message.",
    "code": "```rust\nlet error_message: &str = \"An error has occurred.\";\n```"
  },
  {
    "task": "Create a variable to hold the value of a currency conversion rate.",
    "code": "```rust\nfn main() {\n    let conversion_rate: f64 = 0.85;\n}\n```"
  },
  {
    "task": "Declare a variable to store the result of a coin toss (heads/tails).",
    "code": "```rust\nlet coin_toss_result: &str = \"heads\";\n```"
  },
  {
    "task": "Define a variable to track the number of likes on a post.",
    "code": "```rust\nfn main() {\n    let number_of_likes = 0;\n}\n```"
  },
  {
    "task": "Create a variable to hold the settings of a user's preferences.",
    "code": "```rust\nfn main() {\n    let user_preferences = \"User's settings\";\n}\n```"
  },
  {
    "task": "Declare a variable to store a person's birthdate.",
    "code": "```rust\nlet birthdate: String;\n```"
  },
  {
    "task": "Define a variable to represent a chess piece's position on a board.",
    "code": "```rust\nfn main() {\n    let chess_piece_position = (3, 5); // (row, column) format\n}\n```"
  },
  {
    "task": "Create a variable to store the number of pages in a book.",
    "code": "```rust\nfn main() {\n    let number_of_pages: u32 = 350;\n}\n```"
  },
  {
    "task": "Declare a variable to store the highest score achieved in a game.",
    "code": "```rust\nlet highest_score: i32 = 0;\n```"
  },
  {
    "task": "Define a variable to store a list of ingredients for a recipe.",
    "code": "```rust\nfn main() {\n    let ingredients = vec![\n        \"flour\",\n        \"sugar\",\n        \"eggs\",\n        \"butter\",\n        \"baking powder\",\n        \"vanilla extract\",\n    ];\n}\n```"
  },
  {
    "task": "Create a variable to store the speed of a vehicle in km/h.",
    "code": "```rust\nfn main() {\n    let vehicle_speed_kmh: f64 = 80.0;\n}\n```"
  },
  {
    "task": "Declare a variable to hold a person's middle initial.",
    "code": "```rust\nlet middle_initial: char;\n```"
  },
  {
    "task": "Define a variable to store the result of a temperature conversion.",
    "code": "```rust\nfn main() {\n    let celsius_temperature = 25.0;\n    let fahrenheit_temperature = (celsius_temperature * 9.0/5.0) + 32.0;\n}\n```"
  },
  {
    "task": "Create a variable to hold a list of registered usernames.",
    "code": "```rust\nfn main() {\n    let registered_usernames: Vec<String> = Vec::new();\n}\n```"
  },
  {
    "task": "Declare a variable to store the name of a country.",
    "code": "```rust\nlet country_name = \"CountryName\";\n```"
  },
  {
    "task": "Define a variable to track the number of visits to a website.",
    "code": "```rust\nfn main() {\n    let mut number_of_visits: u32 = 0;\n}\n```"
  },
  {
    "task": "Create a variable to store the title of a movie.",
    "code": "```rust\nfn main() {\n    let movie_title = \"The Matrix\";\n}\n```"
  },
  {
    "task": "Declare a variable to hold the result of a random number generator.",
    "code": "```rust\nuse rand::Rng;\n\nfn main() {\n    let mut rng = rand::thread_rng();\n    let result: u32 = rng.gen();\n}\n```"
  },
  {
    "task": "Define a variable to store a binary value.",
    "code": "```rust\nfn main() {\n    let binary_value: u8 = 0b1010; // Example binary value\n}\n```"
  },
  {
    "task": "Create a variable to store a student's attendance record.",
    "code": "```rust\nfn main() {\n    let student_attendance_record = String::new();\n}\n```"
  },
  {
    "task": "Declare a variable to represent a traffic light's color.",
    "code": "```rust\nlet traffic_light_color = \"red\";\n```"
  },
  {
    "task": "Define a variable to store a person's occupation.",
    "code": "```rust\nfn main() {\n    let occupation = \"Software Developer\";\n}\n```"
  },
  {
    "task": "Create a variable to store the volume level of an audio player.",
    "code": "```rust\nfn main() {\n    let volume_level: i32 = 50;\n}\n```"
  },
  {
    "task": "Declare a variable to store the dimensions of a 3D object.",
    "code": "```rust\nfn main() {\n    let dimensions = (width: f64, height: f64, depth: f64);\n}\n```"
  },
  {
    "task": "Define a variable to hold the value of a stock price.",
    "code": "```rust\nfn main() {\n    let stock_price: f64 = 150.25;\n}\n```"
  },
  {
    "task": "Create a variable to store a list of holiday destinations.",
    "code": "```rust\nfn main() {\n    let holiday_destinations = vec![\"Paris\", \"New York\", \"Tokyo\", \"Sydney\", \"Rome\"];\n}\n```"
  },
  {
    "task": "Declare a variable to store the status of an application process.",
    "code": "```rust\nlet application_status: String;\n```"
  },
  {
    "task": "Define a variable to store the current phase of the moon.",
    "code": "```rust\nfn main() {\n    let current_moon_phase = \"Waxing Crescent\";\n}\n```"
  },
  {
    "task": "Create a variable to hold the amount of memory used by an application.",
    "code": "```rust\nfn main() {\n    let memory_used: u64 = 0;\n}\n```"
  },
  {
    "task": "Declare a variable to store the current version of a software application.",
    "code": "```rust\nfn main() {\n    let current_version = \"1.0.0\";\n}\n```"
  },
  {
    "task": "Define a variable to hold the number of chapters in a book.",
    "code": "```rust\nfn main() {\n    let number_of_chapters = 12; // Example value\n}\n```"
  },
  {
    "task": "Create a variable to store information about a car's fuel efficiency.",
    "code": "```rust\nfn main() {\n    let fuel_efficiency: f32 = 25.0; // in miles per gallon\n}\n```"
  },
  {
    "task": "Declare a variable to store a user's role in a system.",
    "code": "```rust\nfn main() {\n    let user_role = \"admin\"; // Example role\n}\n```"
  },
  {
    "task": "Define a variable to store a list of programming languages known.",
    "code": "```rust\nfn main() {\n    let programming_languages = vec![\"Rust\", \"Python\", \"JavaScript\", \"Java\", \"C++\"];\n}\n```"
  },
  {
    "task": "Create a variable to track the progress of a download.",
    "code": "```rust\nfn main() {\n    let download_progress: f32 = 0.0;\n}\n```"
  },
  {
    "task": "Declare a variable to store the outcome of a survey question.",
    "code": "```rust\nfn main() {\n    let survey_outcome: String = String::from(\"Yes\");\n}\n```"
  },
  {
    "task": "Define a variable to hold a personal identification number.",
    "code": "```rust\nfn main() {\n    let personal_identification_number: i32 = 123456789;\n}\n```"
  },
  {
    "task": "Create a variable to store the current weather conditions.",
    "code": "```rust\nfn main() {\n    let current_weather_conditions = \"sunny\";\n}\n```"
  },
  {
    "task": "Declare a variable to hold the result of a multiplication operation.",
    "code": "```rust\nfn main() {\n    let result = 5 * 3;\n}\n```"
  },
  {
    "task": "Define a variable to store the winner of a competition.",
    "code": "```rust\nfn main() {\n    let winner: &str = \"John Doe\";\n}\n```"
  },
  {
    "task": "Create a variable to hold the name of a restaurant.",
    "code": "```rust\nfn main() {\n    let restaurant_name = \"Gourmet Paradise\";\n}\n```"
  },
  {
    "task": "Declare a variable to store the number of floors in a building.",
    "code": "```rust\nfn main() {\n    let number_of_floors: i32 = 10;\n}\n```"
  },
  {
    "task": "Define a variable to store a person's signature.",
    "code": "```rust\nfn main() {\n    let signature: &str = \"John Doe\";\n}\n```"
  },
  {
    "task": "Create a variable to store the average grade of a class.",
    "code": "```rust\nfn main() {\n    let average_grade: f64 = 0.0;\n}\n```"
  },
  {
    "task": "Declare a variable to store the length of a movie in minutes.",
    "code": "```rust\nfn main() {\n    let movie_length_in_minutes: u32;\n}\n```"
  },
  {
    "task": "Define a variable to store the details of a meeting schedule.",
    "code": "```rust\nstruct MeetingSchedule {\n    date: String,\n    time: String,\n    location: String,\n    agenda: String,\n}\n\nfn main() {\n    let meeting = MeetingSchedule {\n        date: String::from(\"2023-10-01\"),\n        time: String::from(\"10:00 AM\"),\n        location: String::from(\"Conference Room A\"),\n        agenda: String::from(\"Project Update\"),\n    };\n}\n```"
  },
  {
    "task": "Create a variable to track the number of active users on a platform.",
    "code": "```rust\nfn main() {\n    let active_users: u32 = 0;\n}\n```"
  },
  {
    "task": "Declare a variable to store the resolution of a screen.",
    "code": "```rust\nlet screen_resolution: (u32, u32) = (1920, 1080);\n```"
  },
  {
    "task": "Define a variable to store the content of a blog post.",
    "code": "```rust\nfn main() {\n    let blog_post_content = String::from(\"This is the content of the blog post.\");\n}\n```"
  },
  {
    "task": "Create a variable to hold a list of email contacts.",
    "code": "```rust\nfn main() {\n    let email_contacts: Vec<&str> = Vec::new();\n}\n```"
  },
  {
    "task": "Declare a variable to store the duration of an event.",
    "code": "```rust\nfn main() {\n    let event_duration: u32;\n}\n```"
  },
  {
    "task": "Define a variable to hold a list of completed tasks.",
    "code": "```rust\nfn main() {\n    let completed_tasks: Vec<&str> = Vec::new();\n}\n```"
  },
  {
    "task": "Create a variable to store the name of a musical instrument.",
    "code": "```rust\nfn main() {\n    let instrument_name = \"guitar\";\n}\n```"
  },
  {
    "task": "Declare a variable to hold the result of a boolean expression.",
    "code": "```rust\nfn main() {\n    let result = true && false; // Example boolean expression\n}\n```"
  },
  {
    "task": "Define a variable to store the name of a planet.",
    "code": "```rust\nfn main() {\n    let planet_name = \"Earth\";\n}\n```"
  },
  {
    "task": "Create a variable to store the balance of a bank account.",
    "code": "```rust\nfn main() {\n    let balance: f64 = 0.0;\n}\n```"
  },
  {
    "task": "Declare a variable to store the outcome of a dice roll.",
    "code": "```rust\nfn main() {\n    let dice_roll: u32;\n}\n```"
  },
  {
    "task": "Define a variable to store the current exchange rate.",
    "code": "```rust\nfn main() {\n    let current_exchange_rate: f64 = 1.23;\n}\n```"
  },
  {
    "task": "Create a variable to hold the name of a university.",
    "code": "```rust\nfn main() {\n    let university_name = \"Example University\";\n}\n```"
  }
]