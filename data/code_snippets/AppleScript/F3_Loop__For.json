[
  {
    "task": "Write a program that prints numbers from 1 to 10 using a for loop.",
    "code": "```applescript\nrepeat with i from 1 to 10\n    display dialog i\nend repeat\n```"
  },
  {
    "task": "Create a loop that iterates over an array of names and prints each name.",
    "code": "```applescript\nset namesArray to {\"Alice\", \"Bob\", \"Charlie\", \"David\"}\n\nrepeat with i from 1 to count of namesArray\n    set currentName to item i of namesArray\n    display dialog currentName\nend repeat\n```"
  },
  {
    "task": "Design a for loop to calculate the factorial of a given number.",
    "code": "```applescript\nset theNumber to 5\nset factorial to 1\n\nrepeat with i from 1 to theNumber\n    set factorial to factorial * i\nend repeat\n\nreturn factorial\n```"
  },
  {
    "task": "Implement a program that uses a for loop to sum all even numbers between 1 and 100.",
    "code": "```applescript\nset total to 0\nrepeat with i from 1 to 100\n    if i mod 2 is 0 then\n        set total to total + i\n    end if\nend repeat\nreturn total\n```"
  },
  {
    "task": "Use a for loop to generate and print the Fibonacci sequence up to 20 terms.",
    "code": "```applescript\nset fib1 to 0\nset fib2 to 1\nlog fib1\nlog fib2\n\nrepeat with i from 3 to 20\n    set fibNext to fib1 + fib2\n    log fibNext\n    set fib1 to fib2\n    set fib2 to fibNext\nend repeat\n```"
  },
  {
    "task": "Construct a for loop that prints the multiplication table for a given number.",
    "code": "```applescript\nset givenNumber to 5\nrepeat with i from 1 to 10\n    set result to givenNumber * i\n    display dialog (givenNumber & \" x \" & i & \" = \" & result) as string\nend repeat\n```"
  },
  {
    "task": "Write code to iterate through a list of student grades and print only those above a certain threshold.",
    "code": "```applescript\nset studentGrades to {85, 92, 78, 90, 64, 88}\nset threshold to 80\n\nrepeat with grade in studentGrades\n    if grade > threshold then\n        display dialog (grade as string)\n    end if\nend repeat\n```"
  },
  {
    "task": "Create a for loop that appends the square of numbers 1 to 10 to a list.",
    "code": "```applescript\nset squareList to {}\nrepeat with i from 1 to 10\n    set end of squareList to i * i\nend repeat\n```"
  },
  {
    "task": "Develop a for loop that reverses a given string.",
    "code": "```applescript\nset originalString to \"Hello, World!\"\nset reversedString to \"\"\n\nrepeat with i from (length of originalString) to 1 by -1\n    set reversedString to reversedString & character i of originalString\nend repeat\n\nreversedString\n```"
  },
  {
    "task": "Build a program that uses a for loop to print all elements in a 2D matrix.",
    "code": "```applescript\nset matrix to {{1, 2, 3}, {4, 5, 6}, {7, 8, 9}}\n\nrepeat with i from 1 to count of matrix\n    set row to item i of matrix\n    repeat with j from 1 to count of row\n        set element to item j of row\n        log element\n    end repeat\nend repeat\n```"
  },
  {
    "task": "Use a for loop to find the maximum value in an array of integers.",
    "code": "```applescript\nset integerArray to {5, 12, 3, 9, 21, 8}\nset maxValue to item 1 of integerArray\n\nrepeat with i from 2 to count of integerArray\n    if item i of integerArray > maxValue then\n        set maxValue to item i of integerArray\n    end if\nend repeat\n\nreturn maxValue\n```"
  },
  {
    "task": "Write a program that uses a for loop to print the characters of a string, one per line.",
    "code": "```applescript\nset myString to \"Hello, World!\"\nrepeat with i from 1 to (count characters of myString)\n    set currentChar to character i of myString\n    display dialog currentChar\nend repeat\n```"
  },
  {
    "task": "Create a for loop that counts the number of vowels in a given sentence.",
    "code": "```applescript\nset sentence to \"Enter your sentence here\"\nset vowels to \"aeiouAEIOU\"\nset count to 0\n\nrepeat with i from 1 to length of sentence\n    set currentChar to character i of sentence\n    if vowels contains currentChar then\n        set count to count + 1\n    end if\nend repeat\n\nreturn count\n```"
  },
  {
    "task": "Implement a for loop to check if a number is prime by testing divisibility.",
    "code": "```applescript\non isPrime(n)\n    if n \u2264 1 then return false\n    set isPrime to true\n    repeat with i from 2 to n - 1\n        if (n mod i is 0) then\n            set isPrime to false\n            exit repeat\n        end if\n    end repeat\n    return isPrime\nend isPrime\n\n-- Example usage\nset testNumber to 17\nset result to isPrime(testNumber)\nif result then\n    display dialog (testNumber as string) & \" is a prime number.\"\nelse\n    display dialog (testNumber as string) & \" is not a prime number.\"\nend if\n```"
  },
  {
    "task": "Design a for loop that prints a pyramid pattern of asterisks with a given height.",
    "code": "```applescript\nset pyramidHeight to 5\n\nrepeat with i from 1 to pyramidHeight\n    set numSpaces to pyramidHeight - i\n    set numAsterisks to (2 * i) - 1\n    set line to \"\"\n    \n    repeat with j from 1 to numSpaces\n        set line to line & \" \"\n    end repeat\n    \n    repeat with k from 1 to numAsterisks\n        set line to line & \"*\"\n    end repeat\n    \n    display dialog line buttons {\"OK\"} default button \"OK\"\nend repeat\n```"
  },
  {
    "task": "Write a program that uses a for loop to calculate the sum of digits of a number.",
    "code": "```applescript\nset theNumber to 12345\nset theNumberString to theNumber as string\nset sumOfDigits to 0\n\nrepeat with i from 1 to length of theNumberString\n    set thisDigit to character i of theNumberString as integer\n    set sumOfDigits to sumOfDigits + thisDigit\nend repeat\n\nreturn sumOfDigits\n```"
  },
  {
    "task": "Construct a for loop to flatten a list of lists into a single list.",
    "code": "```applescript\nset listOfLists to {{1, 2, 3}, {4, 5}, {6, 7, 8, 9}}\nset flattenedList to {}\n\nrepeat with sublist in listOfLists\n\trepeat with item in sublist\n\t\tset end of flattenedList to item\n\tend repeat\nend repeat\n\nflattenedList\n```"
  },
  {
    "task": "Use a for loop to generate a list of random numbers and print them.",
    "code": "```applescript\nset randomNumbers to {}\nrepeat with i from 1 to 10\n    set end of randomNumbers to (random number from 1 to 100)\nend repeat\n\nrepeat with num in randomNumbers\n    log num\nend repeat\n```"
  },
  {
    "task": "Create a for loop that iterates through a dictionary and prints its keys and values.",
    "code": "```applescript\nset myDict to {key1:\"value1\", key2:\"value2\", key3:\"value3\"}\n\nrepeat with key in myDict's keys\n    set value to myDict's item key\n    display dialog \"Key: \" & key & \", Value: \" & value\nend repeat\n```"
  },
  {
    "task": "Develop a for loop that counts down from 10 to 1 and prints each number.",
    "code": "```applescript\nrepeat with i from 10 to 1 by -1\n    display dialog i\nend repeat\n```"
  },
  {
    "task": "Write code to multiply each element in an array by 2 using a for loop.",
    "code": "```applescript\nset originalArray to {1, 2, 3, 4, 5}\nset multipliedArray to {}\n\nrepeat with i from 1 to count originalArray\n    set end of multipliedArray to (item i of originalArray) * 2\nend repeat\n\nreturn multipliedArray\n```"
  },
  {
    "task": "Create a for loop that calculates the average of numbers in a list.",
    "code": "```applescript\nset theList to {5, 10, 15, 20, 25}\nset total to 0\nset count to count of theList\n\nrepeat with i from 1 to count\n    set total to total + item i of theList\nend repeat\n\nset average to total / count\naverage\n```"
  },
  {
    "task": "Implement a for loop to find duplicate elements in an array.",
    "code": "```applescript\nset inputList to {1, 2, 3, 2, 4, 5, 3, 6}\nset duplicates to {}\n\nrepeat with i from 1 to (count of inputList)\n\tset currentElement to item i of inputList\n\tset alreadyFound to false\n\t\n\trepeat with j from 1 to (i - 1)\n\t\tif item j of inputList is currentElement then\n\t\t\tset alreadyFound to true\n\t\t\texit repeat\n\t\tend if\n\tend repeat\n\t\n\tif alreadyFound then\n\t\tif currentElement is not in duplicates then\n\t\t\tset end of duplicates to currentElement\n\t\tend if\n\tend if\nend repeat\n\nreturn duplicates\n```"
  },
  {
    "task": "Design a for loop that removes all occurrences of a specific element from a list.",
    "code": "```applescript\nset myList to {\"apple\", \"banana\", \"cherry\", \"apple\", \"date\", \"apple\"}\nset elementToRemove to \"apple\"\nset newList to {}\n\nrepeat with anItem in myList\n    if anItem is not equal to elementToRemove then\n        set end of newList to anItem\n    end if\nend repeat\n\nreturn newList\n```"
  },
  {
    "task": "Use a for loop to simulate rolling a dice 100 times and count the occurrences of each face.",
    "code": "```applescript\nset faceCounts to {1, 1, 1, 1, 1, 1}\n\nrepeat with i from 1 to 100\n\tset roll to (random number from 1 to 6)\n\tset faceCounts's item roll to (faceCounts's item roll) + 1\nend repeat\n\nfaceCounts\n```"
  },
  {
    "task": "Write a for loop that prints all the prime numbers between 1 and 50.",
    "code": "```applescript\non isPrime(n)\n    if n \u2264 1 then return false\n    if n = 2 then return true\n    if n mod 2 = 0 then return false\n    set sqrtN to (n ^ 0.5) as integer\n    repeat with i from 3 to sqrtN by 2\n        if n mod i = 0 then return false\n    end repeat\n    return true\nend isPrime\n\nrepeat with i from 1 to 50\n    if isPrime(i) then\n        display dialog i\n    end if\nend repeat\n```"
  },
  {
    "task": "Develop a for loop that extracts all the uppercase letters from a string.",
    "code": "```applescript\nset inputString to \"Example STRING With UpperCase LETTERS\"\nset uppercaseLetters to \"\"\n\nrepeat with i from 1 to (length of inputString)\n    set currentChar to character i of inputString\n    if currentChar is in characters of \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\" then\n        set uppercaseLetters to uppercaseLetters & currentChar\n    end if\nend repeat\n\nreturn uppercaseLetters\n```"
  },
  {
    "task": "Create a for loop that checks if a list is sorted in ascending order.",
    "code": "```applescript\nset myList to {1, 2, 3, 5, 4}\nset isSorted to true\n\nrepeat with i from 1 to (count myList) - 1\n    if item i of myList > item (i + 1) of myList then\n        set isSorted to false\n        exit repeat\n    end if\nend repeat\n\nreturn isSorted\n```"
  },
  {
    "task": "Implement a for loop to generate a list of the first 10 square numbers.",
    "code": "```applescript\nset squareNumbers to {}\nrepeat with i from 1 to 10\n    set end of squareNumbers to (i * i)\nend repeat\nsquareNumbers\n```"
  },
  {
    "task": "Write code to print all the elements of a list that are greater than a given number using a for loop.",
    "code": "```applescript\nset myList to {5, 2, 8, 10, 3}\nset threshold to 4\n\nrepeat with anItem in myList\n    if anItem > threshold then\n        display dialog anItem as string\n    end if\nend repeat\n```"
  },
  {
    "task": "Construct a for loop that finds the smallest number in an array.",
    "code": "```applescript\nset numberArray to {5, 3, 9, 1, 6}\nset smallestNumber to item 1 of numberArray\n\nrepeat with i from 2 to count of numberArray\n    if item i of numberArray < smallestNumber then\n        set smallestNumber to item i of numberArray\n    end if\nend repeat\n\nsmallestNumber\n```"
  },
  {
    "task": "Develop a for loop that prints the first N lines of Pascal's Triangle.",
    "code": "```applescript\nproperty N : 10\n\non run\n\trepeat with i from 0 to N - 1\n\t\tset myRow to pascalRow(i)\n\t\tlog (myRow as text)\n\tend repeat\nend run\n\non pascalRow(rowNumber)\n\tset row to {1}\n\trepeat with i from 1 to rowNumber\n\t\tset end of row to ((item -1 of row) * (rowNumber - i + 1)) / i\n\tend repeat\n\treturn row\nend pascalRow\n```"
  },
  {
    "task": "Create a for loop that calculates the product of all elements in a list.",
    "code": "```applescript\nset theList to {1, 2, 3, 4, 5}\nset product to 1\n\nrepeat with i from 1 to count of theList\n    set product to product * item i of theList\nend repeat\n\nreturn product\n```"
  },
  {
    "task": "Use a for loop to print numbers from 1 to 100, but replace multiples of 3 with 'Fizz'.",
    "code": "```applescript\nrepeat with i from 1 to 100\n    if i mod 3 is 0 then\n        display dialog \"Fizz\"\n    else\n        display dialog i\n    end if\nend repeat\n```"
  },
  {
    "task": "Write a for loop that iterates over a string and counts the number of words.",
    "code": "```applescript\nset inputString to \"This is a sample string with several words\"\nset wordCount to 0\nset textItems to every word of inputString\n\nrepeat with i from 1 to count of textItems\n    set wordCount to wordCount + 1\nend repeat\n\nwordCount\n```"
  },
  {
    "task": "Design a for loop that prints numbers from 1 to 50, but skips numbers divisible by 5.",
    "code": "```applescript\nrepeat with i from 1 to 50\n    if i mod 5 is not 0 then\n        display dialog i as string\n    end if\nend repeat\n```"
  },
  {
    "task": "Implement a for loop that prints a checkerboard pattern of asterisks.",
    "code": "```applescript\nset boardSize to 8\nset checkerboard to \"\"\n\nrepeat with i from 1 to boardSize\n    set line to \"\"\n    repeat with j from 1 to boardSize\n        if (i + j) mod 2 is equal to 0 then\n            set line to line & \"*\"\n        else\n            set line to line & \" \"\n        end if\n    end repeat\n    set checkerboard to checkerboard & line & return\nend repeat\n\ndisplay dialog checkerboard\n```"
  },
  {
    "task": "Create a for loop that finds the index of a target value in a list.",
    "code": "```applescript\nset target to \"yourTargetValue\"\nset myList to {\"value1\", \"value2\", \"yourTargetValue\", \"value4\"}\nset targetIndex to -1\n\nrepeat with i from 1 to count of myList\n    if item i of myList is equal to target then\n        set targetIndex to i\n        exit repeat\n    end if\nend repeat\n\nreturn targetIndex\n```"
  },
  {
    "task": "Use a for loop to concatenate a list of strings into a single string.",
    "code": "```applescript\nset stringList to {\"Hello\", \" \", \"World\", \"!\"}\nset result to \"\"\n\nrepeat with i from 1 to count of stringList\n    set result to result & item i of stringList\nend repeat\n\nreturn result\n```"
  },
  {
    "task": "Develop a for loop that rotates a list to the right by a given number of positions.",
    "code": "```applescript\nset originalList to {1, 2, 3, 4, 5}\nset positions to 2\n\nset rotatedList to originalList\n\nset listLength to length of originalList\n\nrepeat with i from 1 to listLength\n\tset item (mod (i - 1 + positions) listLength + 1) of rotatedList to item i of originalList\nend repeat\n\nrotatedList\n```"
  },
  {
    "task": "Write code that uses a for loop to insert an element into a sorted list while maintaining order.",
    "code": "```applescript\nset sortedList to {1, 3, 5, 7, 9}\nset newElement to 6\n\nrepeat with i from 1 to (count of sortedList)\n    if item i of sortedList > newElement then\n        set sortedList to (items 1 thru (i - 1) of sortedList) & newElement & (items i thru end of sortedList)\n        exit repeat\n    end if\nend repeat\n\nif not (newElement is in sortedList) then\n    set end of sortedList to newElement\nend if\n\nsortedList\n```"
  },
  {
    "task": "Implement a for loop that counts the frequency of each character in a string.",
    "code": "```applescript\nset inputString to \"example string\"\nset charFrequency to {}\n\nrepeat with i from 1 to (length of inputString)\n    set currentChar to character i of inputString\n    if currentChar is not in charFrequency then\n        set end of charFrequency to {currentChar, 0}\n    end if\n    repeat with j from 1 to (count charFrequency)\n        if item 1 of item j of charFrequency is currentChar then\n            set item 2 of item j of charFrequency to (item 2 of item j of charFrequency) + 1\n        end if\n    end repeat\nend repeat\n\ncharFrequency\n```"
  },
  {
    "task": "Create a for loop that prints all subsets of a given set.",
    "code": "```applescript\nset inputList to {\"a\", \"b\", \"c\"}\nset n to count of inputList\n\nrepeat with i from 0 to (2 ^ n) - 1\n    set subset to {}\n    repeat with j from 0 to n - 1\n        if (i div (2 ^ j)) mod 2 is equal to 1 then\n            set end of subset to item (j + 1) of inputList\n        end if\n    end repeat\n    log subset\nend repeat\n```"
  },
  {
    "task": "Design a for loop to generate all permutations of a string.",
    "code": "```applescript\non permuteString(aString)\n\tset strLength to length of aString\n\tset resultList to {}\n\t\n\tscript\n\t\ton permute(subStr, remainingStr)\n\t\t\tif (length of remainingStr) = 0 then\n\t\t\t\tcopy subStr to end of resultList\n\t\t\telse\n\t\t\t\trepeat with i from 1 to (length of remainingStr)\n\t\t\t\t\tset currentChar to character i of remainingStr\n\t\t\t\t\tset nextSubStr to subStr & currentChar\n\t\t\t\t\tset nextRemainingStr to (text 1 thru (i - 1) of remainingStr) & (text (i + 1) thru -1 of remainingStr)\n\t\t\t\t\tmy permute(nextSubStr, nextRemainingStr)\n\t\t\t\tend repeat\n\t\t\tend if\n\t\tend permute\n\tend script\n\t\n\tpermute(\"\", aString)\n\treturn resultList\nend permuteString\n\n-- Example usage\nset permutations to permuteString(\"abc\")\nrepeat with perm in permutations\n\tdisplay dialog perm\nend repeat\n```"
  },
  {
    "task": "Write a for loop that sorts an array in descending order.",
    "code": "```applescript\nset myArray to {5, 2, 9, 1, 5, 6}\nset arrayLength to length of myArray\n\nrepeat with i from 1 to (arrayLength - 1)\n    repeat with j from (i + 1) to arrayLength\n        if item i of myArray < item j of myArray then\n            set temp to item i of myArray\n            set item i of myArray to item j of myArray\n            set item j of myArray to temp\n        end if\n    end repeat\nend repeat\n\nmyArray\n```"
  },
  {
    "task": "Use a for loop to generate a sequence of random characters and print them.",
    "code": "```applescript\nset characterSequence to \"\"\nset randomCharacters to \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\"\n\nrepeat with i from 1 to 10\n    set randomIndex to (random number from 1 to (count characters of randomCharacters))\n    set randomChar to character randomIndex of randomCharacters\n    set characterSequence to characterSequence & randomChar\nend repeat\n\ndisplay dialog characterSequence\n```"
  },
  {
    "task": "Construct a for loop that finds the common elements between two lists.",
    "code": "```applescript\nset list1 to {\"apple\", \"banana\", \"orange\"}\nset list2 to {\"banana\", \"kiwi\", \"orange\"}\nset commonElements to {}\n\nrepeat with i from 1 to count of list1\n    set currentElement to item i of list1\n    if currentElement is in list2 then\n        set end of commonElements to currentElement\n    end if\nend repeat\n\nreturn commonElements\n```"
  },
  {
    "task": "Develop a for loop to calculate and print the cumulative sum of a list.",
    "code": "```applescript\nset myList to {1, 2, 3, 4, 5}\nset cumulativeSum to 0\n\nrepeat with i from 1 to count of myList\n    set cumulativeSum to cumulativeSum + item i of myList\n    display dialog \"Cumulative Sum: \" & cumulativeSum\nend repeat\n```"
  },
  {
    "task": "Create a for loop that prints a diamond pattern using asterisks.",
    "code": "```applescript\nset num to 5\nset diamond to \"\"\n\n-- Create the upper part of the diamond\nrepeat with i from 1 to num\n\tset spaces to num - i\n\tset stars to 2 * i - 1\n\tset line to (spaceRepeat(spaces) & starRepeat(stars))\n\tset diamond to diamond & line & return\nend repeat\n\n-- Create the lower part of the diamond\nrepeat with i from (num - 1) to 1 by -1\n\tset spaces to num - i\n\tset stars to 2 * i - 1\n\tset line to (spaceRepeat(spaces) & starRepeat(stars))\n\tset diamond to diamond & line & return\nend repeat\n\n-- Display the diamond pattern\ndisplay dialog diamond\n\n-- Function to repeat spaces\non spaceRepeat(n)\n\tset spaceString to \"\"\n\trepeat n times\n\t\tset spaceString to spaceString & \" \"\n\tend repeat\n\treturn spaceString\nend spaceRepeat\n\n-- Function to repeat stars\non starRepeat(n)\n\tset starString to \"\"\n\trepeat n times\n\t\tset starString to starString & \"*\"\n\tend repeat\n\treturn starString\nend starRepeat\n```"
  },
  {
    "task": "Write a for loop that simulates a countdown timer from a specified number of seconds.",
    "code": "```applescript\nset countdownStart to 10\n\nrepeat with i from countdownStart to 1 by -1\n    display dialog \"Countdown: \" & i buttons {\"OK\"} default button \"OK\"\nend repeat\n\ndisplay dialog \"Time's up!\" buttons {\"OK\"} default button \"OK\"\n```"
  },
  {
    "task": "Use a for loop to print the transpose of a matrix.",
    "code": "```applescript\nset matrix to {{1, 2, 3}, {4, 5, 6}, {7, 8, 9}}\nset numRows to count of matrix\nset numCols to count of item 1 of matrix\n\nrepeat with i from 1 to numCols\n    set row to \"\"\n    repeat with j from 1 to numRows\n        set row to row & (item i of item j of matrix) & \" \"\n    end repeat\n    log row\nend repeat\n```"
  },
  {
    "task": "Implement a for loop that reverses the order of words in a sentence.",
    "code": "```applescript\nset sentence to \"This is a sample sentence\"\nset wordList to words of sentence\nset reversedList to {}\n\nrepeat with i from (count wordList) to 1 by -1\n    set end of reversedList to item i of wordList\nend repeat\n\nset reversedSentence to reversedList as text\n```"
  },
  {
    "task": "Create a for loop that deletes elements from a list that are less than a given value.",
    "code": "```applescript\nset myList to {10, 15, 3, 7, 19, 1}\nset threshold to 5\n\nset newList to {}\nrepeat with i from 1 to count of myList\n    set currentItem to item i of myList\n    if currentItem is greater than or equal to threshold then\n        set end of newList to currentItem\n    end if\nend repeat\n\nset myList to newList\n```"
  },
  {
    "task": "Design a for loop to merge two sorted lists into a single sorted list.",
    "code": "```applescript\nset list1 to {1, 3, 5, 7, 9}\nset list2 to {2, 4, 6, 8, 10}\nset mergedList to {}\nset i to 1\nset j to 1\n\nrepeat with k from 1 to (count list1) + (count list2)\n    if i is less than or equal to (count list1) and (j is greater than (count list2) or item i of list1 < item j of list2) then\n        set end of mergedList to item i of list1\n        set i to i + 1\n    else\n        set end of mergedList to item j of list2\n        set j to j + 1\n    end if\nend repeat\n\nreturn mergedList\n```"
  },
  {
    "task": "Write a for loop that calculates the power of a number using repeated multiplication.",
    "code": "```applescript\nset baseNumber to 2\nset exponent to 5\nset result to 1\n\nrepeat with i from 1 to exponent\n    set result to result * baseNumber\nend repeat\n\nresult\n```"
  },
  {
    "task": "Use a for loop to find the longest word in a list of words.",
    "code": "```applescript\nset wordList to {\"apple\", \"banana\", \"cherry\", \"date\", \"elderberry\", \"fig\", \"grape\"}\nset longestWord to \"\"\nset maxLength to 0\n\nrepeat with i from 1 to count of wordList\n    set currentWord to item i of wordList\n    if (length of currentWord) > maxLength then\n        set longestWord to currentWord\n        set maxLength to length of currentWord\n    end if\nend repeat\n\nreturn longestWord\n```"
  },
  {
    "task": "Develop a for loop that sorts a list of tuples based on the second element.",
    "code": "```applescript\nset myList to {{\"apple\", 3}, {\"banana\", 1}, {\"cherry\", 2}}\n\nrepeat with i from 1 to (count myList) - 1\n    repeat with j from i + 1 to (count myList)\n        if item 2 of (item i of myList) > item 2 of (item j of myList) then\n            set temp to item i of myList\n            set item i of myList to item j of myList\n            set item j of myList to temp\n        end if\n    end repeat\nend repeat\n\nreturn myList\n```"
  },
  {
    "task": "Create a for loop that replicates each character in a string a given number of times.",
    "code": "```applescript\nset inputString to \"example\"\nset repetitions to 3\nset resultString to \"\"\n\nrepeat with i from 1 to length of inputString\n    set char to character i of inputString\n    repeat with j from 1 to repetitions\n        set resultString to resultString & char\n    end repeat\nend repeat\n\nreturn resultString\n```"
  },
  {
    "task": "Construct a for loop that replaces spaces in a string with hyphens.",
    "code": "```applescript\nset originalString to \"This is a test string\"\nset modifiedString to \"\"\n\nrepeat with i from 1 to (count of characters of originalString)\n    set currentChar to character i of originalString\n    if currentChar is space then\n        set modifiedString to modifiedString & \"-\"\n    else\n        set modifiedString to modifiedString & currentChar\n    end if\nend repeat\n\nreturn modifiedString\n```"
  },
  {
    "task": "Design a for loop to find the intersection of two sets.",
    "code": "```applescript\nset setA to {1, 2, 3, 4, 5}\nset setB to {3, 4, 5, 6, 7}\nset intersection to {}\n\nrepeat with i from 1 to count of setA\n    set currentItem to item i of setA\n    if setB contains currentItem then\n        set end of intersection to currentItem\n    end if\nend repeat\n\nreturn intersection\n```"
  },
  {
    "task": "Write a for loop that generates a list of prime numbers up to a given number.",
    "code": "```applescript\non isPrime(n)\n    if n \u2264 1 then return false\n    if n = 2 then return true\n    if n mod 2 = 0 then return false\n    set maxDivisor to (n ^ 0.5) div 1\n    repeat with i from 3 to maxDivisor by 2\n        if n mod i = 0 then return false\n    end repeat\n    return true\nend isPrime\n\non generatePrimes(upToNumber)\n    set primeList to {}\n    repeat with i from 2 to upToNumber\n        if isPrime(i) then\n            set end of primeList to i\n        end if\n    end repeat\n    return primeList\nend generatePrimes\n\n-- Example usage:\ndisplay dialog (generatePrimes(30)) as string\n```"
  },
  {
    "task": "Use a for loop to implement a simple text-based progress bar.",
    "code": "```applescript\nset totalSteps to 10\nset progressBar to \"\"\n\nrepeat with i from 1 to totalSteps\n\tset progressBar to progressBar & \"#\"\n\tdisplay dialog \"Progress: \" & progressBar\n\tdelay 0.5\nend repeat\n```"
  },
  {
    "task": "Implement a for loop that finds and prints all palindromic numbers between 10 and 200.",
    "code": "```applescript\nrepeat with i from 10 to 200\n\tset numStr to i as text\n\tset revStr to reverse of characters of numStr as text\n\tif numStr is equal to revStr then\n\t\tdisplay dialog numStr\n\tend if\nend repeat\n```"
  },
  {
    "task": "Create a for loop that multiplies corresponding elements of two lists and stores the result.",
    "code": "```applescript\nset list1 to {1, 2, 3, 4}\nset list2 to {5, 6, 7, 8}\nset resultList to {}\n\nrepeat with i from 1 to count of list1\n    set end of resultList to (item i of list1) * (item i of list2)\nend repeat\n```"
  },
  {
    "task": "Develop a for loop that finds the difference between the largest and smallest numbers in a list.",
    "code": "```applescript\nset numberList to {3, 7, 1, 9, 4}\nset smallest to item 1 of numberList\nset largest to item 1 of numberList\n\nrepeat with i from 2 to count of numberList\n    set currentNumber to item i of numberList\n    if currentNumber < smallest then\n        set smallest to currentNumber\n    else if currentNumber > largest then\n        set largest to currentNumber\n    end if\nend repeat\n\nset difference to largest - smallest\ndifference\n```"
  },
  {
    "task": "Write a for loop that prints numbers from 1 to 100, replacing multiples of 5 with 'Buzz'.",
    "code": "```applescript\nrepeat with i from 1 to 100\n    if i mod 5 is 0 then\n        display dialog \"Buzz\"\n    else\n        display dialog i as string\n    end if\nend repeat\n```"
  },
  {
    "task": "Use a for loop to convert a list of integers into their binary representation.",
    "code": "```applescript\nset integerList to {5, 10, 15, 20}\nset binaryList to {}\n\nrepeat with i from 1 to count of integerList\n    set end of binaryList to do shell script \"echo 'obase=2; \" & (item i of integerList) & \"' | bc\"\nend repeat\n\nreturn binaryList\n```"
  },
  {
    "task": "Design a for loop that fills a 2D array with consecutive numbers in a spiral pattern.",
    "code": "```applescript\nset theArray to {}\nset n to 4 -- Define the size of the 2D array (n x n)\n\n-- Initialize the 2D array with zeroes\nrepeat with i from 1 to n\n    set end of theArray to {}\n    repeat with j from 1 to n\n        set end of item i of theArray to 0\n    end repeat\nend repeat\n\n-- Spiral filling logic\nset currentNumber to 1\nset rowStart to 1\nset rowEnd to n\nset colStart to 1\nset colEnd to n\n\nrepeat while (rowStart \u2264 rowEnd) and (colStart \u2264 colEnd)\n    -- Fill top row\n    repeat with i from colStart to colEnd\n        set item i of item rowStart of theArray to currentNumber\n        set currentNumber to currentNumber + 1\n    end repeat\n    set rowStart to rowStart + 1\n\n    -- Fill right column\n    repeat with i from rowStart to rowEnd\n        set item colEnd of item i of theArray to currentNumber\n        set currentNumber to currentNumber + 1\n    end repeat\n    set colEnd to colEnd - 1\n\n    -- Fill bottom row\n    if rowStart \u2264 rowEnd then\n        repeat with i from colEnd to colStart by -1\n            set item i of item rowEnd of theArray to currentNumber\n            set currentNumber to currentNumber + 1\n        end repeat\n        set rowEnd to rowEnd - 1\n    end if\n\n    -- Fill left column\n    if colStart \u2264 colEnd then\n        repeat with i from rowEnd to rowStart by -1\n            set item colStart of item i of theArray to currentNumber\n            set currentNumber to currentNumber + 1\n        end repeat\n        set colStart to colStart + 1\n    end if\nend repeat\n\n-- Display the array\nrepeat with i from 1 to n\n    log item i of theArray\nend repeat\n```"
  },
  {
    "task": "Create a for loop that iterates over a list and removes duplicates.",
    "code": "```applescript\nset originalList to {\"apple\", \"banana\", \"apple\", \"orange\", \"banana\"}\nset uniqueList to {}\n\nrepeat with anItem in originalList\n    if anItem is not in uniqueList then\n        set end of uniqueList to anItem\n    end if\nend repeat\n\nreturn uniqueList\n```"
  },
  {
    "task": "Implement a for loop to calculate the dot product of two vectors.",
    "code": "```applescript\nset vector1 to {1, 2, 3}\nset vector2 to {4, 5, 6}\nset dotProduct to 0\n\nrepeat with i from 1 to count of vector1\n    set dotProduct to dotProduct + (item i of vector1) * (item i of vector2)\nend repeat\n\ndotProduct\n```"
  },
  {
    "task": "Write a for loop that prints a sequence of numbers in reverse order.",
    "code": "```applescript\nset startNumber to 10\nset endNumber to 1\n\nrepeat with i from startNumber to endNumber by -1\n    display dialog (i as string)\nend repeat\n```"
  },
  {
    "task": "Develop a for loop that computes the greatest common divisor (GCD) of two numbers.",
    "code": "```applescript\nset a to 48\nset b to 18\n\nrepeat while b is not 0\n    set temp to b\n    set b to a mod b\n    set a to temp\nend repeat\n\nreturn a\n```"
  },
  {
    "task": "Construct a for loop that prints a square pattern of numbers with a given side length.",
    "code": "```applescript\nset sideLength to 5\nrepeat with i from 1 to sideLength\n    set row to \"\"\n    repeat with j from 1 to sideLength\n        set row to row & (j as text) & \" \"\n    end repeat\n    log row\nend repeat\n```"
  },
  {
    "task": "Create a for loop that shifts all elements of a list to the left by one position.",
    "code": "```applescript\nset myList to {\"a\", \"b\", \"c\", \"d\", \"e\"}\nset firstElement to item 1 of myList\nset listLength to (count of myList)\n\nrepeat with i from 1 to (listLength - 1)\n    set item i of myList to item (i + 1) of myList\nend repeat\n\nset item listLength of myList to firstElement\nreturn myList\n```"
  },
  {
    "task": "Use a for loop to print the first 20 triangular numbers.",
    "code": "```applescript\nrepeat with n from 1 to 20\n    set triangularNumber to (n * (n + 1)) / 2\n    display dialog triangularNumber\nend repeat\n```"
  },
  {
    "task": "Write a for loop that finds the first repeating character in a string.",
    "code": "```applescript\nset myString to \"example\"\nset foundCharacter to \"\"\nrepeat with i from 1 to (length of myString)\n\tset currentChar to character i of myString\n\tif foundCharacter is not \"\" then exit repeat\n\trepeat with j from (i + 1) to (length of myString)\n\t\tif currentChar is equal to character j of myString then\n\t\t\tset foundCharacter to currentChar\n\t\t\texit repeat\n\t\tend if\n\tend repeat\nend repeat\ndisplay dialog \"First repeating character: \" & foundCharacter\n```"
  },
  {
    "task": "Design a for loop that transforms a list of temperatures from Celsius to Fahrenheit.",
    "code": "```applescript\nset celsiusTemperatures to {0, 10, 20, 30, 40, 100}\nset fahrenheitTemperatures to {}\n\nrepeat with celsiusTemp in celsiusTemperatures\n\tset fahrenheitTemp to celsiusTemp * 9 / 5 + 32\n\tcopy fahrenheitTemp to end of fahrenheitTemperatures\nend repeat\n\nreturn fahrenheitTemperatures\n```"
  },
  {
    "task": "Implement a for loop to determine if a string is an isogram.",
    "code": "```applescript\nset inputString to \"example\"\nset isIsogram to true\n\nrepeat with i from 1 to (count of characters of inputString)\n    set currentChar to character i of inputString\n    set currentChar to currentChar as text\n    repeat with j from (i + 1) to (count of characters of inputString)\n        if currentChar is equal to (character j of inputString as text) then\n            set isIsogram to false\n            exit repeat\n        end if\n    end repeat\n    if isIsogram is false then exit repeat\nend repeat\n\nreturn isIsogram\n```"
  },
  {
    "task": "Use a for loop to create a histogram from a list of integers.",
    "code": "```applescript\nset integerList to {1, 3, 5, 2, 4, 5, 3, 2, 1, 5}\nset maxNumber to 5\nset histogram to \"\"\n\nrepeat with i from 1 to maxNumber\n    set count to 0\n    repeat with j from 1 to count integerList\n        if item j of integerList is i then\n            set count to count + 1\n        end if\n    end repeat\n    set histogram to histogram & i & \": \" & repeatString(\"*\", count) & return\nend repeat\n\non repeatString(char, times)\n    set result to \"\"\n    repeat times times\n        set result to result & char\n    end repeat\n    return result\nend repeatString\n\nreturn histogram\n```"
  },
  {
    "task": "Create a for loop that prints the indexes of all occurrences of a particular element in a list.",
    "code": "```applescript\nset targetElement to \"element\" -- Replace with the actual element to search for\nset myList to {\"element\", \"test\", \"example\", \"element\", \"sample\"} -- Replace with the actual list\n\nrepeat with i from 1 to count of myList\n    if item i of myList is targetElement then\n        log i\n    end if\nend repeat\n```"
  },
  {
    "task": "Write a for loop that checks if a given string is a palindrome.",
    "code": "```applescript\nset inputString to \"radar\"\nset isPalindrome to true\nset stringLength to length of inputString\n\nrepeat with i from 1 to stringLength div 2\n    if (text item i of inputString) is not equal to (text item (stringLength - i + 1) of inputString) then\n        set isPalindrome to false\n        exit repeat\n    end if\nend repeat\n\nreturn isPalindrome\n```"
  },
  {
    "task": "Develop a for loop to simulate the behavior of a simple finite state machine.",
    "code": "```applescript\nset states to {\"Start\", \"Process\", \"End\"}\nset currentState to \"Start\"\n\nrepeat with i from 1 to 3\n    if currentState is \"Start\" then\n        set currentState to \"Process\"\n    else if currentState is \"Process\" then\n        set currentState to \"End\"\n    else if currentState is \"End\" then\n        set currentState to \"Start\"\n    end if\n    display dialog \"Current State: \" & currentState\nend repeat\n```"
  },
  {
    "task": "Design a for loop that finds the sum of all odd numbers in a list.",
    "code": "```applescript\nset numberList to {1, 2, 3, 4, 5, 6, 7, 8, 9}\nset sumOfOdds to 0\n\nrepeat with i from 1 to count of numberList\n    set currentNumber to item i of numberList\n    if currentNumber mod 2 is not 0 then\n        set sumOfOdds to sumOfOdds + currentNumber\n    end if\nend repeat\n\nsumOfOdds\n```"
  },
  {
    "task": "Use a for loop to count how many words start with a vowel in a given sentence.",
    "code": "```applescript\nset sentence to \"A quick brown fox jumps over the lazy dog\"\nset vowelCount to 0\nset vowels to {\"a\", \"e\", \"i\", \"o\", \"u\"}\n\nset theWords to words of sentence\nrepeat with i from 1 to count of theWords\n\tset firstLetter to character 1 of item i of theWords\n\tif firstLetter is in vowels then\n\t\tset vowelCount to vowelCount + 1\n\tend if\nend repeat\n\nreturn vowelCount\n```"
  },
  {
    "task": "Implement a for loop that sorts a list of strings by their length.",
    "code": "```applescript\nset stringList to {\"apple\", \"banana\", \"kiwi\", \"grape\", \"strawberry\"}\nset sortedList to {}\n\nrepeat with i from 1 to (count stringList)\n\tset minIndex to i\n\trepeat with j from (i + 1) to (count stringList)\n\t\tif (length of item j of stringList) < (length of item minIndex of stringList) then\n\t\t\tset minIndex to j\n\t\tend if\n\tend repeat\n\tset end of sortedList to item minIndex of stringList\n\tset stringList to (items 1 thru (minIndex - 1) of stringList) & (items (minIndex + 1) thru end of stringList)\nend repeat\n\nsortedList\n```"
  },
  {
    "task": "Write a for loop that prints the factorial of numbers from 1 to 10.",
    "code": "```applescript\nrepeat with i from 1 to 10\n    set factorial to 1\n    repeat with j from 1 to i\n        set factorial to factorial * j\n    end repeat\n    display dialog \"Factorial of \" & i & \" is \" & factorial\nend repeat\n```"
  },
  {
    "task": "Create a for loop that replaces all instances of a substring in a string with another substring.",
    "code": "```applescript\nset originalString to \"This is a test string. This string is for testing.\"\nset targetSubstring to \"string\"\nset replacementSubstring to \"sentence\"\n\nset finalString to originalString\nset AppleScript's text item delimiters to targetSubstring\nset textItems to text items of finalString\nset AppleScript's text item delimiters to replacementSubstring\nset finalString to textItems as string\nset AppleScript's text item delimiters to \"\"\n\nfinalString\n```"
  },
  {
    "task": "Develop a for loop that squares each element in a list of numbers.",
    "code": "```applescript\nset numberList to {1, 2, 3, 4, 5}\nset squaredList to {}\n\nrepeat with i from 1 to count of numberList\n    set end of squaredList to (item i of numberList) ^ 2\nend repeat\n\nreturn squaredList\n```"
  },
  {
    "task": "Use a for loop to reverse the order of elements in an array.",
    "code": "```applescript\nset myList to {\"apple\", \"banana\", \"cherry\", \"date\"}\nset reversedList to {}\n\nrepeat with i from (count myList) to 1 by -1\n    set end of reversedList to item i of myList\nend repeat\n\nreversedList\n```"
  },
  {
    "task": "Implement a for loop that tests if two strings are anagrams of each other.",
    "code": "```applescript\nset str1 to \"listen\"\nset str2 to \"silent\"\n\non isAnagram(s1, s2)\n    if (length of s1) is not equal to (length of s2) then return false\n    \n    set charCount1 to {}\n    set charCount2 to {}\n    \n    repeat with i from 1 to (length of s1)\n        set char1 to character i of s1\n        set char2 to character i of s2\n        \n        if charCount1 contains char1 then\n            set end of charCount1's item (char1 as string) to (item char1 of charCount1) + 1\n        else\n            set end of charCount1 to 1\n        end if\n        \n        if charCount2 contains char2 then\n            set end of charCount2's item (char2 as string) to (item char2 of charCount2) + 1\n        else\n            set end of charCount2 to 1\n        end if\n    end repeat\n    \n    return charCount1 = charCount2\nend isAnagram\n\nset result to isAnagram(str1, str2)\ndisplay dialog \"Are the strings anagrams? \" & (result as string)\n```"
  },
  {
    "task": "Design a for loop to find and print all Armstrong numbers between 100 and 999.",
    "code": "```applescript\nrepeat with num from 100 to 999\n\tset strNum to num as text\n\tset sum to 0\n\trepeat with i from 1 to length of strNum\n\t\tset digit to text item i of strNum as integer\n\t\tset sum to sum + (digit ^ 3)\n\tend repeat\n\tif sum is equal to num then\n\t\tdisplay dialog num as text\n\tend if\nend repeat\n```"
  }
]