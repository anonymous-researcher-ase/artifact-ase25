[
  {
    "task": "Define a class representing a book with attributes for title, author, and number of pages, and a method to display the book's information.",
    "code": "```applescript\nscript Book\n    property title : \"\"\n    property author : \"\"\n    property numberOfPages : 0\n\n    on displayInformation()\n        return \"Title: \" & title & \", Author: \" & author & \", Number of Pages: \" & (numberOfPages as string)\n    end displayInformation\nend script\n```"
  },
  {
    "task": "Create a class for a bank account that includes attributes for account number, balance, and a method to deposit funds.",
    "code": "```applescript\nscript BankAccount\n    property accountNumber : \"\"\n    property balance : 0.0\n    \n    on setAccountNumber(anAccountNumber)\n        set accountNumber to anAccountNumber\n    end setAccountNumber\n    \n    on setBalance(aBalance)\n        set balance to aBalance\n    end setBalance\n    \n    on depositFunds(amount)\n        set balance to balance + amount\n    end depositFunds\nend script\n```"
  },
  {
    "task": "Design a class for a vehicle with properties for make, model, and year, and a method to start the engine.",
    "code": "```applescript\nscript Vehicle\n    property make : \"\"\n    property model : \"\"\n    property year : 0\n\n    on startEngine()\n        return \"Engine started for \" & make & \" \" & model & \" (\" & year & \")\"\n    end startEngine\nend script\n```"
  },
  {
    "task": "Implement a class that models a student with attributes for name, ID, and grades, and a method to calculate the GPA.",
    "code": "```applescript\nscript Student\n    property name : \"\"\n    property ID : \"\"\n    property grades : {}\n\n    on calculateGPA()\n        if (count of grades) is 0 then\n            return 0\n        else\n            set total to 0\n            repeat with grade in grades\n                set total to total + grade\n            end repeat\n            return total / (count of grades)\n        end if\n    end calculateGPA\nend script\n```"
  },
  {
    "task": "Construct a class for a rectangle that has attributes for width and height, and methods to calculate area and perimeter.",
    "code": "```applescript\nscript Rectangle\n    property width : 0\n    property height : 0\n\n    on calculateArea()\n        return width * height\n    end calculateArea\n\n    on calculatePerimeter()\n        return 2 * (width + height)\n    end calculatePerimeter\nend script\n```"
  },
  {
    "task": "Formulate a class for a smartphone with properties for brand, model, and battery life, and a method to make a call.",
    "code": "```applescript\nscript Smartphone\n    property brand : \"\"\n    property model : \"\"\n    property batteryLife : 0\n\n    on makeCall(phoneNumber)\n        display dialog \"Calling \" & phoneNumber & \" from \" & brand & \" \" & model\n    end makeCall\nend script\n```"
  },
  {
    "task": "Build a class representing a movie with attributes for title, director, and duration, and a method to play the movie.",
    "code": "```applescript\nscript Movie\n    property title : \"\"\n    property director : \"\"\n    property duration : 0\n\n    on playMovie()\n        display dialog \"Playing movie: \" & title\n    end playMovie\nend script\n```"
  },
  {
    "task": "Create a class for an employee with attributes for name, position, and salary, and a method to display their profile.",
    "code": "```applescript\nscript Employee\n    property name : \"\"\n    property position : \"\"\n    property salary : 0\n    \n    on displayProfile()\n        return \"Name: \" & name & \", Position: \" & position & \", Salary: $\" & salary\n    end displayProfile\nend script\n```"
  },
  {
    "task": "Design a class for a library that includes attributes for name, location, and books available, and a method to add a new book.",
    "code": "```applescript\nscript Library\n    property name : \"\"\n    property location : \"\"\n    property booksAvailable : {}\n\n    on setName(libName)\n        set name to libName\n    end setName\n\n    on setLocation(libLocation)\n        set location to libLocation\n    end setLocation\n\n    on setBooksAvailable(books)\n        set booksAvailable to books\n    end setBooksAvailable\n\n    on addBook(newBook)\n        set end of booksAvailable to newBook\n    end addBook\nend script\n```"
  },
  {
    "task": "Develop a class for a shopping cart with properties for items and total cost, and methods to add and remove items.",
    "code": "```applescript\nscript ShoppingCart\n    property itemList : {}\n    property totalCost : 0\n\n    on addItem(item, cost)\n        copy item to end of itemList\n        set totalCost to totalCost + cost\n    end addItem\n\n    on removeItem(item, cost)\n        set itemList to my removeFirstOccurrence(itemList, item)\n        set totalCost to totalCost - cost\n    end removeItem\n\n    on removeFirstOccurrence(theList, theItem)\n        set newList to {}\n        set itemRemoved to false\n        repeat with i from 1 to count of theList\n            if (item i of theList is theItem) and (not itemRemoved) then\n                set itemRemoved to true\n            else\n                copy (item i of theList) to end of newList\n            end if\n        end repeat\n        return newList\n    end removeFirstOccurrence\nend script\n```"
  },
  {
    "task": "Implement a class for a thermostat with attributes for current temperature and desired temperature, and a method to adjust the temperature.",
    "code": "```applescript\nscript Thermostat\n    property currentTemperature : 0\n    property desiredTemperature : 0\n\n    on adjustTemperature()\n        if currentTemperature < desiredTemperature then\n            set currentTemperature to currentTemperature + 1\n        else if currentTemperature > desiredTemperature then\n            set currentTemperature to currentTemperature - 1\n        end if\n    end adjustTemperature\nend script\n```"
  },
  {
    "task": "Formulate a class for a person with attributes for first name, last name, and age, and a method to return the full name.",
    "code": "```applescript\nscript Person\n    property firstName : \"\"\n    property lastName : \"\"\n    property age : 0\n    \n    on getFullName()\n        return firstName & \" \" & lastName\n    end getFullName\nend script\n```"
  },
  {
    "task": "Construct a class for a game character with properties for health, strength, and inventory, and a method to attack.",
    "code": "```applescript\nscript GameCharacter\n    property health : 100\n    property strength : 10\n    property inventory : {}\n\n    on attack(target)\n        set targetHealth to target's health\n        set target's health to targetHealth - my strength\n    end attack\nend script\n```"
  },
  {
    "task": "Create a class for a calendar event with attributes for title, date, and location, and a method to reschedule the event.",
    "code": "```applescript\nscript CalendarEvent\n    property title : \"\"\n    property eventDate : date\n    property location : \"\"\n\n    on initWithTitleDateLocation(newTitle, newDate, newLocation)\n        set my title to newTitle\n        set my eventDate to newDate\n        set my location to newLocation\n    end initWithTitleDateLocation\n\n    on rescheduleEvent(newDate)\n        set my eventDate to newDate\n    end rescheduleEvent\nend script\n```"
  },
  {
    "task": "Design a class representing a song with properties for title, artist, and duration, and a method to play the song.",
    "code": "```applescript\nscript Song\n    property title : \"\"\n    property artist : \"\"\n    property duration : 0\n    \n    on playSong()\n        display dialog \"Playing \" & title & \" by \" & artist\n    end playSong\nend script\n```"
  },
  {
    "task": "Develop a class for an order in an e-commerce system with attributes for order ID, customer, and items, and a method to calculate total price.",
    "code": "```applescript\nscript Order\n    property orderID : \"\"\n    property customer : \"\"\n    property items : {}\n    \n    on calculateTotalPrice()\n        set totalPrice to 0\n        repeat with anItem in items\n            set totalPrice to totalPrice + (itemPrice of anItem)\n        end repeat\n        return totalPrice\n    end calculateTotalPrice\nend script\n\nscript Item\n    property itemName : \"\"\n    property itemPrice : 0\nend script\n```"
  },
  {
    "task": "Build a class for a social media post with attributes for content, author, and timestamp, and a method to like the post.",
    "code": "```applescript\nscript SocialMediaPost\n    property content : \"\"\n    property author : \"\"\n    property timestamp : \"\"\n    property likes : 0\n\n    on setContent(newContent)\n        set content to newContent\n    end setContent\n\n    on setAuthor(newAuthor)\n        set author to newAuthor\n    end setAuthor\n\n    on setTimestamp(newTimestamp)\n        set timestamp to newTimestamp\n    end setTimestamp\n\n    on likePost()\n        set likes to likes + 1\n    end likePost\nend script\n```"
  },
  {
    "task": "Create a class for a computer with properties for processor, RAM, and storage, and a method to display system specifications.",
    "code": "```applescript\nproperty processor : \"\"\nproperty ram : \"\"\nproperty storage : \"\"\n\nscript Computer\n    property processor : \"\"\n    property ram : \"\"\n    property storage : \"\"\n    \n    on init(processorSpec, ramSpec, storageSpec)\n        set processor to processorSpec\n        set ram to ramSpec\n        set storage to storageSpec\n    end init\n    \n    on displaySpecifications()\n        return \"Processor: \" & processor & \", RAM: \" & ram & \", Storage: \" & storage\n    end displaySpecifications\nend script\n\n-- Example usage\nset myComputer to Computer's init(\"Intel i7\", \"16GB\", \"512GB SSD\")\ndisplay dialog myComputer's displaySpecifications()\n```"
  },
  {
    "task": "Implement a class for a restaurant menu item with attributes for name, price, and description, and a method to update the price.",
    "code": "```applescript\nscript MenuItem\n    property name : \"\"\n    property price : 0.0\n    property description : \"\"\n    \n    on setName(newName)\n        set name to newName\n    end setName\n    \n    on setPrice(newPrice)\n        set price to newPrice\n    end setPrice\n    \n    on setDescription(newDescription)\n        set description to newDescription\n    end setDescription\n    \n    on updatePrice(newPrice)\n        set price to newPrice\n    end updatePrice\nend script\n```"
  },
  {
    "task": "Design a class for a package delivery with attributes for tracking number, destination, and status, and a method to update the status.",
    "code": "```applescript\nproperty trackingNumber : \"\"\nproperty destination : \"\"\nproperty status : \"\"\n\nscript PackageDelivery\n    property parent : class \"NSObject\"\n    property trackingNumber : \"\"\n    property destination : \"\"\n    property status : \"\"\n    \n    on initWithTrackingNumber_andDestination_(trackingNumber, destination)\n        set my trackingNumber to trackingNumber\n        set my destination to destination\n        set my status to \"Pending\"\n        return me\n    end initWithTrackingNumber_andDestination_\n    \n    on updateStatus_(newStatus)\n        set my status to newStatus\n    end updateStatus_\nend script\n```"
  },
  {
    "task": "Construct a class representing a pet with attributes for species, age, and name, and a method to display its details.",
    "code": "```applescript\nscript Pet\n    property species : \"\"\n    property age : 0\n    property name : \"\"\n\n    on displayDetails()\n        return \"Species: \" & species & \", Age: \" & age & \", Name: \" & name\n    end displayDetails\nend script\n```"
  },
  {
    "task": "Formulate a class for a product in a store with properties for SKU, name, and price, and a method to apply a discount.",
    "code": "```applescript\nscript Product\n    property sku : \"\"\n    property name : \"\"\n    property price : 0.0\n\n    on applyDiscount(discountPercentage)\n        set price to price - (price * discountPercentage / 100)\n    end applyDiscount\nend script\n```"
  },
  {
    "task": "Develop a class for a university course with attributes for course code, title, and credits, and a method to enroll a student.",
    "code": "```applescript\nscript UniversityCourse\n    property courseCode : \"\"\n    property title : \"\"\n    property credits : 0\n    property enrolledStudents : {}\n\n    on enrollStudent(studentName)\n        copy studentName to the end of enrolledStudents\n    end enrollStudent\nend script\n```"
  },
  {
    "task": "Create a class for a smart light bulb with attributes for color, brightness, and state (on/off), and a method to change the color.",
    "code": "```applescript\nscript SmartLightBulb\n    property color : \"white\"\n    property brightness : 100\n    property state : \"off\"\n    \n    on changeColor(newColor)\n        set color to newColor\n    end changeColor\nend script\n```"
  },
  {
    "task": "Design a class for a blog post with properties for title, content, and date published, and a method to edit the content.",
    "code": "```applescript\nscript BlogPost\n    property title : \"\"\n    property content : \"\"\n    property datePublished : \"\"\n\n    on editContent(newContent)\n        set content to newContent\n    end editContent\nend script\n```"
  },
  {
    "task": "Build a class for a bank transaction with attributes for transaction ID, amount, and type, and a method to reverse the transaction.",
    "code": "```applescript\nscript BankTransaction\n    property transactionID : \"\"\n    property amount : 0.0\n    property transactionType : \"\"\n\n    on reverseTransaction()\n        set amount to amount * -1\n        if transactionType is \"credit\" then\n            set transactionType to \"debit\"\n        else if transactionType is \"debit\" then\n            set transactionType to \"credit\"\n        end if\n    end reverseTransaction\nend script\n```"
  },
  {
    "task": "Implement a class for a city with properties for name, population, and area, and a method to calculate population density.",
    "code": "```applescript\nscript City\n    property cityName : \"\"\n    property population : 0\n    property area : 0.0\n\n    on calculatePopulationDensity()\n        if area is not equal to 0 then\n            return population / area\n        else\n            return \"Area cannot be zero\"\n        end if\n    end calculatePopulationDensity\nend script\n```"
  },
  {
    "task": "Construct a class for a library member with attributes for member ID, name, and borrowed books, and a method to borrow a book.",
    "code": "```applescript\nproperty memberID : \"\"\nproperty memberName : \"\"\nproperty borrowedBooks : {}\n\non init(theID, theName)\n    set memberID to theID\n    set memberName to theName\n    set borrowedBooks to {}\nend init\n\non borrowBook(book)\n    copy book to the end of borrowedBooks\nend borrowBook\n\n-- Example usage:\nset libraryMember to script\n    property parent : class \"NSObject\"\n    scriptInstance\nend script\n\ntell libraryMember\n    init(\"123\", \"John Doe\")\n    borrowBook(\"The Great Gatsby\")\nend tell\n```"
  },
  {
    "task": "Create a class for a flight reservation with attributes for flight number, passenger name, and seat number, and a method to change the seat.",
    "code": "```applescript\nscript FlightReservation\n    property flightNumber : \"\"\n    property passengerName : \"\"\n    property seatNumber : \"\"\n\n    on setFlightNumber(number)\n        set flightNumber to number\n    end setFlightNumber\n\n    on setPassengerName(name)\n        set passengerName to name\n    end setPassengerName\n\n    on setSeatNumber(seat)\n        set seatNumber to seat\n    end setSeatNumber\n\n    on changeSeat(newSeat)\n        set seatNumber to newSeat\n    end changeSeat\nend script\n```"
  },
  {
    "task": "Develop a class for a digital photo album with properties for album name, photos, and a method to add a new photo.",
    "code": "```applescript\nproperty albumName : \"\"\nproperty photos : {}\n\non setAlbumName(newName)\n    set albumName to newName\nend setAlbumName\n\non getAlbumName()\n    return albumName\nend getAlbumName\n\non addPhoto(newPhoto)\n    set end of photos to newPhoto\nend addPhoto\n\non getPhotos()\n    return photos\nend getPhotos\n\n-- Usage\nset myAlbum to {albumName:\"\", photos:{}}\nmyAlbum's setAlbumName(\"Vacation Photos\")\nmyAlbum's addPhoto(\"beach.jpg\")\nmyAlbum's addPhoto(\"mountains.jpg\")\ndisplay dialog \"Album Name: \" & (myAlbum's getAlbumName()) & return & \"Photos: \" & (myAlbum's getPhotos() as text)\n```"
  },
  {
    "task": "Design a class for a task in a to-do list with attributes for description, deadline, and status, and a method to mark it as complete.",
    "code": "```applescript\nscript Task\n    property description : \"\"\n    property deadline : \"\"\n    property status : \"incomplete\"\n    \n    on initTask(taskDescription, taskDeadline)\n        set description to taskDescription\n        set deadline to taskDeadline\n    end initTask\n    \n    on markAsComplete()\n        set status to \"complete\"\n    end markAsComplete\nend script\n```"
  },
  {
    "task": "Formulate a class for a conference speaker with attributes for name, topic, and time slot, and a method to update the time slot.",
    "code": "```applescript\nscript ConferenceSpeaker\n    property speakerName : \"\"\n    property topic : \"\"\n    property timeSlot : \"\"\n\n    on setSpeakerDetails(name, topic, slot)\n        set speakerName to name\n        set topic to topic\n        set timeSlot to slot\n    end setSpeakerDetails\n\n    on updateTimeSlot(newTimeSlot)\n        set timeSlot to newTimeSlot\n    end updateTimeSlot\nend script\n```"
  },
  {
    "task": "Construct a class for a real estate property with attributes for address, price, and square footage, and a method to change the price.",
    "code": "```applescript\nscript RealEstateProperty\n    property address : \"\"\n    property price : 0\n    property squareFootage : 0\n    \n    on setAddress(theAddress)\n        set address to theAddress\n    end setAddress\n    \n    on setPrice(thePrice)\n        set price to thePrice\n    end setPrice\n    \n    on setSquareFootage(theSquareFootage)\n        set squareFootage to theSquareFootage\n    end setSquareFootage\n    \n    on changePrice(newPrice)\n        set price to newPrice\n    end changePrice\nend script\n```"
  },
  {
    "task": "Create a class for a weather forecast with properties for temperature, humidity, and condition, and a method to update the forecast.",
    "code": "```applescript\nscript WeatherForecast\n    property temperature : 0\n    property humidity : 0\n    property condition : \"\"\n\n    on updateForecast(newTemperature, newHumidity, newCondition)\n        set temperature to newTemperature\n        set humidity to newHumidity\n        set condition to newCondition\n    end updateForecast\nend script\n```"
  },
  {
    "task": "Build a class for a musical instrument with attributes for type, brand, and model, and a method to play a note.",
    "code": "```applescript\nscript MusicalInstrument\n    property instrumentType : \"\"\n    property brand : \"\"\n    property model : \"\"\n\n    on setProperties(theType, theBrand, theModel)\n        set instrumentType to theType\n        set brand to theBrand\n        set model to theModel\n    end setProperties\n\n    on playNote(note)\n        display dialog \"Playing note \" & note & \" on \" & instrumentType & \" \" & brand & \" \" & model\n    end playNote\nend script\n```"
  },
  {
    "task": "Design a class for a sports team with attributes for team name, players, and coach, and a method to add a new player.",
    "code": "```applescript\nscript SportsTeam\n    property teamName : \"\"\n    property players : {}\n    property coach : \"\"\n\n    on addPlayer(newPlayer)\n        set end of players to newPlayer\n    end addPlayer\nend script\n```"
  },
  {
    "task": "Implement a class for a podcast episode with attributes for title, duration, and host, and a method to play the episode.",
    "code": "```applescript\nscript PodcastEpisode\n    property title : \"\"\n    property duration : \"\"\n    property host : \"\"\n\n    on playEpisode()\n        display dialog \"Now playing: \" & title & \" hosted by \" & host & \" with a duration of \" & duration\n    end playEpisode\n\nend script\n\n-- Example usage:\nset myEpisode to PodcastEpisode\nset myEpisode's title to \"The Great Adventure\"\nset myEpisode's duration to \"45 minutes\"\nset myEpisode's host to \"John Doe\"\nmyEpisode's playEpisode()\n```"
  },
  {
    "task": "Develop a class for a space mission with properties for mission name, crew, and launch date, and a method to launch the mission.",
    "code": "```applescript\n-- Define a class for a space mission\nscript SpaceMission\n    property missionName : \"\"\n    property crew : {}\n    property launchDate : date\n\n    -- Method to launch the mission\n    on launchMission()\n        display dialog \"Mission \" & missionName & \" is launching with crew \" & crew & \" on \" & launchDate\n    end launchMission\nend script\n```"
  },
  {
    "task": "Create a class for a virtual assistant with attributes for name, language, and skills, and a method to add a new skill.",
    "code": "```applescript\nscript VirtualAssistant\n    property assistantName : \"\"\n    property assistantLanguage : \"\"\n    property assistantSkills : {}\n\n    on createAssistant(name, language)\n        set assistantName to name\n        set assistantLanguage to language\n        set assistantSkills to {}\n    end createAssistant\n\n    on addSkill(skill)\n        set end of assistantSkills to skill\n    end addSkill\nend script\n```"
  },
  {
    "task": "Formulate a class for a news article with attributes for headline, content, and author, and a method to publish the article.",
    "code": "```applescript\nscript NewsArticle\n    property headline : \"\"\n    property content : \"\"\n    property author : \"\"\n\n    on publish()\n        display dialog \"Publishing Article:\" & return & return & \"Headline: \" & headline & return & \"By: \" & author & return & return & content\n    end publish\nend script\n```"
  },
  {
    "task": "Construct a class for a hiking trail with attributes for trail name, length, and difficulty, and a method to update the difficulty.",
    "code": "```applescript\nscript HikingTrail\n    property trailName : \"\"\n    property trailLength : 0\n    property trailDifficulty : \"\"\n\n    on setTrailProperties(name, length, difficulty)\n        set trailName to name\n        set trailLength to length\n        set trailDifficulty to difficulty\n    end setTrailProperties\n\n    on updateDifficulty(newDifficulty)\n        set trailDifficulty to newDifficulty\n    end updateDifficulty\nend script\n```"
  },
  {
    "task": "Design a class for a subscription service with properties for service name, subscriber count, and subscription fee, and a method to update the fee.",
    "code": "```applescript\nscript SubscriptionService\n    property serviceName : \"\"\n    property subscriberCount : 0\n    property subscriptionFee : 0.0\n\n    on updateFee(newFee)\n        set subscriptionFee to newFee\n    end updateFee\nend script\n```"
  },
  {
    "task": "Build a class for a digital wallet with attributes for balance, transaction history, and a method to add funds.",
    "code": "```applescript\nscript DigitalWallet\n    property balance : 0\n    property transactionHistory : {}\n\n    on addFunds(amount)\n        set balance to balance + amount\n        set end of transactionHistory to \"Added \" & amount\n    end addFunds\nend script\n```"
  },
  {
    "task": "Implement a class for a cooking recipe with attributes for name, ingredients, and instructions, and a method to update the instructions.",
    "code": "```applescript\nproperty recipeName : \"\"\nproperty ingredients : {}\nproperty instructions : \"\"\n\nscript Recipe\n    property parent : Recipe\n    property recipeName : \"\"\n    property ingredients : {}\n    property instructions : \"\"\n    \n    on setRecipeName(name)\n        set recipeName to name\n    end setRecipeName\n    \n    on setIngredients(ingList)\n        set ingredients to ingList\n    end setIngredients\n    \n    on setInstructions(instr)\n        set instructions to instr\n    end setInstructions\n    \n    on updateInstructions(newInstructions)\n        set instructions to newInstructions\n    end updateInstructions\n    \n    on getRecipeName()\n        return recipeName\n    end getRecipeName\n    \n    on getIngredients()\n        return ingredients\n    end getIngredients\n    \n    on getInstructions()\n        return instructions\n    end getInstructions\n    \nend script\n```"
  },
  {
    "task": "Develop a class for a time zone with properties for zone name, offset, and a method to convert time from another time zone.",
    "code": "```applescript\nscript TimeZone\n    property zoneName : \"\"\n    property offset : 0\n\n    on setZoneName(theZoneName)\n        set zoneName to theZoneName\n    end setZoneName\n\n    on setOffset(theOffset)\n        set offset to theOffset\n    end setOffset\n\n    on convertTime(sourceTime, sourceOffset)\n        set convertedTime to sourceTime + (offset - sourceOffset) * hours\n        return convertedTime\n    end convertTime\nend script\n```"
  },
  {
    "task": "Create a class for a camera with attributes for resolution, brand, and model, and a method to take a picture.",
    "code": "```applescript\nscript Camera\n    property resolution : \"\"\n    property brand : \"\"\n    property model : \"\"\n    \n    on takePicture()\n        display dialog \"Taking a picture with \" & brand & \" \" & model & \" at \" & resolution & \" resolution.\"\n    end takePicture\nend script\n```"
  },
  {
    "task": "Design a class for a gaming console with properties for brand, model, and storage capacity, and a method to install a game.",
    "code": "```applescript\nscript GamingConsole\n    property brand : \"\"\n    property model : \"\"\n    property storageCapacity : 0\n\n    on installGame(gameName)\n        display dialog \"Installing \" & gameName & \" on \" & brand & \" \" & model & \" with \" & storageCapacity & \"GB storage.\"\n    end installGame\nend script\n```"
  },
  {
    "task": "Formulate a class for a museum exhibit with attributes for exhibit name, artist, and year, and a method to update the year.",
    "code": "```applescript\nscript MuseumExhibit\n    property exhibitName : \"\"\n    property artist : \"\"\n    property year : 0\n\n    on setExhibitName(newName)\n        set exhibitName to newName\n    end setExhibitName\n\n    on setArtist(newArtist)\n        set artist to newArtist\n    end setArtist\n\n    on setYear(newYear)\n        set year to newYear\n    end setYear\n\n    on updateYear(newYear)\n        set year to newYear\n    end updateYear\nend script\n```"
  },
  {
    "task": "Construct a class for a fitness tracker with attributes for steps, calories burned, and heart rate, and a method to add steps.",
    "code": "```applescript\nscript FitnessTracker\n    property steps : 0\n    property caloriesBurned : 0\n    property heartRate : 0\n\n    on addSteps(newSteps)\n        set steps to steps + newSteps\n    end addSteps\nend script\n```"
  },
  {
    "task": "Build a class for an aquarium with properties for tank size, fish species, and water temperature, and a method to add a new fish.",
    "code": "```applescript\nscript Aquarium\n    property tankSize : \"\"\n    property fishSpecies : {}\n    property waterTemperature : 0\n\n    on addFish(newFish)\n        set end of fishSpecies to newFish\n    end addFish\nend script\n```"
  },
  {
    "task": "Create a class for a chat message with attributes for sender, content, and timestamp, and a method to edit the content.",
    "code": "```applescript\nscript ChatMessage\n    property sender : \"\"\n    property content : \"\"\n    property timestamp : \"\"\n    \n    on init(senderName, messageContent, messageTimestamp)\n        set sender to senderName\n        set content to messageContent\n        set timestamp to messageTimestamp\n    end init\n    \n    on editContent(newContent)\n        set content to newContent\n    end editContent\n    \nend script\n```"
  },
  {
    "task": "Design a class for a vending machine with properties for items available, prices, and a method to dispense an item.",
    "code": "```applescript\nproperty itemList : {\"Soda\", \"Chips\", \"Candy\"}\nproperty itemPriceList : {1.25, 0.75, 0.50}\n\nscript VendingMachine\n    property items : itemList\n    property prices : itemPriceList\n\n    on dispenseItem(itemName)\n        set itemIndex to my findItemIndex(itemName)\n        if itemIndex is not missing value then\n            return \"Dispensing \" & itemName & \" for $\" & (itemPriceList's item itemIndex)\n        else\n            return \"Item not available\"\n        end if\n    end dispenseItem\n\n    on findItemIndex(itemName)\n        repeat with i from 1 to count of items\n            if (items's item i) is equal to itemName then\n                return i\n            end if\n        end repeat\n        return missing value\n    end findItemIndex\nend script\n```"
  },
  {
    "task": "Implement a class for a digital clock with attributes for current time, time zone, and a method to set an alarm.",
    "code": "```applescript\nscript DigitalClock\n    property currentTime : \"\"\n    property timeZone : \"\"\n    property alarmTime : \"\"\n\n    on setAlarm(newAlarmTime)\n        set alarmTime to newAlarmTime\n    end setAlarm\nend script\n```"
  },
  {
    "task": "Develop a class for a historical figure with attributes for name, birthdate, and achievements, and a method to add an achievement.",
    "code": "```applescript\nproperty name : \"\"\nproperty birthdate : \"\"\nproperty achievements : {}\n\non makeHistoricalFigure(aName, aBirthdate)\n\tscript HistoricalFigure\n\t\tproperty parent : class \"NSObject\"\n\t\tproperty name : aName\n\t\tproperty birthdate : aBirthdate\n\t\tproperty achievements : {}\n\t\t\n\t\ton addAchievement(achievement)\n\t\t\tcopy achievement to end of achievements\n\t\tend addAchievement\n\tend script\n\treturn HistoricalFigure\nend makeHistoricalFigure\n```"
  },
  {
    "task": "Formulate a class for a travel itinerary with attributes for destinations, travel dates, and activities, and a method to add a destination.",
    "code": "```applescript\nscript TravelItinerary\n    property destinations : {}\n    property travelDates : {}\n    property activities : {}\n    \n    on addDestination(newDestination)\n        set end of destinations to newDestination\n    end addDestination\nend script\n```"
  },
  {
    "task": "Construct a class for a fashion brand with properties for brand name, founder, and product lines, and a method to launch a new product line.",
    "code": "```applescript\nscript FashionBrand\n    property brandName : \"\"\n    property founder : \"\"\n    property productLines : {}\n\n    on launchNewProductLine(newLine)\n        set end of productLines to newLine\n    end launchNewProductLine\nend script\n```"
  },
  {
    "task": "Create a class for a video game with attributes for title, genre, and rating, and a method to update the rating.",
    "code": "```applescript\nscript Game\n    property title : \"\"\n    property genre : \"\"\n    property rating : 0\n\n    on setTitle(newTitle)\n        set title to newTitle\n    end setTitle\n\n    on setGenre(newGenre)\n        set genre to newGenre\n    end setGenre\n\n    on setRating(newRating)\n        set rating to newRating\n    end setRating\n\n    on updateRating(newRating)\n        set rating to newRating\n    end updateRating\nend script\n```"
  },
  {
    "task": "Build a class for a scientific experiment with attributes for experiment name, hypothesis, and results, and a method to record results.",
    "code": "```applescript\nscript ScientificExperiment\n    property experimentName : \"\"\n    property hypothesis : \"\"\n    property results : \"\"\n\n    on initWithParameters(expName, hypo)\n        set experimentName to expName\n        set hypothesis to hypo\n        return me\n    end initWithParameters\n\n    on recordResults(newResults)\n        set results to newResults\n    end recordResults\nend script\n\n-- Example usage\nset myExperiment to ScientificExperiment's initWithParameters(\"Photosynthesis\", \"Plants release oxygen during photosynthesis.\")\nmyExperiment's recordResults(\"Oxygen detected in the presence of light.\")\n```"
  },
  {
    "task": "Design a class for a gourmet dish with properties for dish name, ingredients, and cooking time, and a method to change cooking time.",
    "code": "```applescript\nscript GourmetDish\n    property dishName : \"\"\n    property ingredients : {}\n    property cookingTime : 0\n    \n    on setDishName(newName)\n        set dishName to newName\n    end setDishName\n    \n    on setIngredients(newIngredients)\n        set ingredients to newIngredients\n    end setIngredients\n    \n    on setCookingTime(newCookingTime)\n        set cookingTime to newCookingTime\n    end setCookingTime\n    \n    on changeCookingTime(newTime)\n        set cookingTime to newTime\n    end changeCookingTime\nend script\n```"
  },
  {
    "task": "Implement a class for a political office with attributes for office title, holder, and term length, and a method to change the holder.",
    "code": "```applescript\nscript PoliticalOffice\n    property officeTitle : \"\"\n    property holder : \"\"\n    property termLength : 0\n\n    on changeHolder(newHolder)\n        set holder to newHolder\n    end changeHolder\nend script\n```"
  },
  {
    "task": "Develop a class for an astronomical object with properties for name, type, and distance from Earth, and a method to update the distance.",
    "code": "```applescript\nscript AstronomicalObject\n    property name : \"\"\n    property type : \"\"\n    property distanceFromEarth : 0\n    \n    on updateDistance(newDistance)\n        set distanceFromEarth to newDistance\n    end updateDistance\nend script\n```"
  },
  {
    "task": "Formulate a class for a public transportation route with attributes for route number, stops, and schedule, and a method to add a stop.",
    "code": "```applescript\nscript TransportationRoute\n    property routeNumber : \"\"\n    property stops : {}\n    property schedule : \"\"\n\n    on new(routeNum, stopList, sched)\n        set routeNumber to routeNum\n        set stops to stopList\n        set schedule to sched\n    end new\n\n    on addStop(newStop)\n        set end of stops to newStop\n    end addStop\nend script\n```"
  },
  {
    "task": "Construct a class for a board game with properties for game name, player count, and rules, and a method to change the rules.",
    "code": "```applescript\nscript BoardGame\n    property gameName : \"\"\n    property playerCount : 0\n    property rules : \"\"\n\n    on setGameName(newName)\n        set gameName to newName\n    end setGameName\n\n    on setPlayerCount(newCount)\n        set playerCount to newCount\n    end setPlayerCount\n\n    on setRules(newRules)\n        set rules to newRules\n    end setRules\n\n    on changeRules(newRules)\n        set rules to newRules\n    end changeRules\nend script\n```"
  },
  {
    "task": "Create a class for a customer loyalty program with attributes for program name, points, and rewards, and a method to redeem points.",
    "code": "```applescript\nscript CustomerLoyaltyProgram\n    property programName : \"\"\n    property points : 0\n    property rewards : \"\"\n    \n    on redeemPoints(pointsToRedeem)\n        if pointsToRedeem \u2264 points then\n            set points to points - pointsToRedeem\n            return \"Points redeemed successfully. Remaining points: \" & points\n        else\n            return \"Insufficient points to redeem.\"\n        end if\n    end redeemPoints\nend script\n```"
  },
  {
    "task": "Design a class for an art gallery with properties for gallery name, location, and exhibitions, and a method to add a new exhibition.",
    "code": "```applescript\nproperty galleryName : \"\"\nproperty location : \"\"\nproperty exhibitions : {}\n\nscript ArtGallery\n    property parent : class \"NSObject\"\n    property galleryName : \"\"\n    property location : \"\"\n    property exhibitions : {}\n\n    on initGallery(name, loc)\n        set galleryName to name\n        set location to loc\n        set exhibitions to {}\n    end initGallery\n\n    on addExhibition(exhibitionName)\n        copy exhibitionName to end of exhibitions\n    end addExhibition\nend script\n```"
  },
  {
    "task": "Build a class for a personal blog with attributes for blog name, posts, and a method to add a new post.",
    "code": "```applescript\nscript Blog\n    property blogName : \"\"\n    property posts : {}\n    \n    on init(theName)\n        set blogName to theName\n    end init\n    \n    on addPost(thePost)\n        copy thePost to the end of posts\n    end addPost\nend script\n\n-- Example of usage:\nset myBlog to script Blog\ntell myBlog\n    init(\"My Personal Blog\")\n    addPost(\"My first post\")\nend tell\n```"
  },
  {
    "task": "Implement a class for a mobile application with properties for app name, version, and developer, and a method to update the version.",
    "code": "```applescript\nscript MobileApp\n    property appName : \"\"\n    property appVersion : \"\"\n    property appDeveloper : \"\"\n    \n    on updateVersion(newVersion)\n        set appVersion to newVersion\n    end updateVersion\nend script\n```"
  },
  {
    "task": "Develop a class for a language translator with attributes for source language, target language, and translation method, and a method to translate a text.",
    "code": "```applescript\nscript LanguageTranslator\n    property sourceLanguage : \"\"\n    property targetLanguage : \"\"\n    property translationMethod : \"\"\n    \n    on translateText(textToTranslate)\n        -- Add translation logic here\n        return \"Translated text\"\n    end translateText\nend script\n```"
  },
  {
    "task": "Formulate a class for a culinary school with properties for school name, courses offered, and a method to add a new course.",
    "code": "```applescript\nscript CulinarySchool\n    property schoolName : \"\"\n    property coursesOffered : {}\n\n    on setSchoolName(name)\n        set schoolName to name\n    end setSchoolName\n\n    on setCoursesOffered(courses)\n        set coursesOffered to courses\n    end setCoursesOffered\n\n    on addCourse(newCourse)\n        set end of coursesOffered to newCourse\n    end addCourse\n\nend script\n```"
  },
  {
    "task": "Construct a class for a musical band with attributes for band name, members, and genre, and a method to add a new member.",
    "code": "```applescript\nscript Band\n    property bandName : \"\"\n    property members : {}\n    property genre : \"\"\n\n    on addMember(newMember)\n        set end of members to newMember\n    end addMember\nend script\n```"
  },
  {
    "task": "Create a class for a television series with properties for series title, episodes, and network, and a method to add a new episode.",
    "code": "```applescript\nscript TelevisionSeries\n    property seriesTitle : \"\"\n    property episodes : {}\n    property network : \"\"\n\n    on addEpisode(newEpisode)\n        set end of episodes to newEpisode\n    end addEpisode\nend script\n```"
  },
  {
    "task": "Design a class for a wildlife reserve with attributes for reserve name, species protected, and area size, and a method to expand the area.",
    "code": "```applescript\nscript WildlifeReserve\n    property reserveName : \"\"\n    property speciesProtected : {}\n    property areaSize : 0\n\n    on setReserveName(name)\n        set reserveName to name\n    end setReserveName\n\n    on setSpeciesProtected(speciesList)\n        set speciesProtected to speciesList\n    end setSpeciesProtected\n\n    on setAreaSize(size)\n        set areaSize to size\n    end setAreaSize\n\n    on expandArea(additionalSize)\n        set areaSize to areaSize + additionalSize\n    end expandArea\nend script\n```"
  },
  {
    "task": "Build a class for a luxury car with properties for brand, model, and price, and a method to update the price.",
    "code": "```applescript\nscript LuxuryCar\n    property brand : \"\"\n    property model : \"\"\n    property price : 0.0\n    \n    on updatePrice(newPrice)\n        set price to newPrice\n    end updatePrice\nend script\n```"
  },
  {
    "task": "Implement a class for a scientific journal with attributes for journal name, articles, and impact factor, and a method to add a new article.",
    "code": "```applescript\nscript ScientificJournal\n    property journalName : \"\"\n    property articles : {}\n    property impactFactor : 0.0\n\n    on initJournal(name, factor)\n        set journalName to name\n        set impactFactor to factor\n    end initJournal\n\n    on addArticle(article)\n        set end of articles to article\n    end addArticle\nend script\n```"
  },
  {
    "task": "Develop a class for a historical monument with properties for monument name, location, and year established, and a method to update the location.",
    "code": "```applescript\nscript Monument\n    property monumentName : \"\"\n    property location : \"\"\n    property yearEstablished : \"\"\n\n    on setMonumentName(newName)\n        set monumentName to newName\n    end setMonumentName\n\n    on setLocation(newLocation)\n        set location to newLocation\n    end setLocation\n\n    on setYearEstablished(newYear)\n        set yearEstablished to newYear\n    end setYearEstablished\n\n    on updateLocation(newLocation)\n        set location to newLocation\n    end updateLocation\nend script\n```"
  },
  {
    "task": "Formulate a class for an educational course with attributes for course title, instructor, and syllabus, and a method to update the syllabus.",
    "code": "```applescript\nscript EducationalCourse\n    property courseTitle : \"\"\n    property instructor : \"\"\n    property syllabus : \"\"\n\n    on updateSyllabus(newSyllabus)\n        set syllabus to newSyllabus\n    end updateSyllabus\nend script\n```"
  },
  {
    "task": "Construct a class for a city park with properties for park name, facilities, and opening hours, and a method to add a new facility.",
    "code": "```applescript\nscript CityPark\n    property parkName : \"\"\n    property facilities : {}\n    property openingHours : \"\"\n\n    on addFacility(newFacility)\n        set end of facilities to newFacility\n    end addFacility\nend script\n```"
  },
  {
    "task": "Create a class for a fitness class with attributes for class name, instructor, and schedule, and a method to update the schedule.",
    "code": "```applescript\nscript FitnessClass\n    property className : \"\"\n    property instructor : \"\"\n    property schedule : \"\"\n\n    on updateSchedule(newSchedule)\n        set schedule to newSchedule\n    end updateSchedule\nend script\n```"
  },
  {
    "task": "Design a class for a virtual reality game with properties for game name, platform, and VR compatibility, and a method to change the platform.",
    "code": "```applescript\nscript VirtualRealityGame\n    property gameName : \"\"\n    property platform : \"\"\n    property vrCompatible : false\n    \n    on changePlatform(newPlatform)\n        set platform to newPlatform\n    end changePlatform\nend script\n```"
  },
  {
    "task": "Build a class for a mountain range with attributes for range name, highest peak, and countries covered, and a method to add a new peak.",
    "code": "```applescript\nscript MountainRange\n    property rangeName : \"\"\n    property highestPeak : \"\"\n    property countriesCovered : {}\n    property peaks : {}\n\n    on initialize(name, peak, countries)\n        set rangeName to name\n        set highestPeak to peak\n        set countriesCovered to countries\n    end initialize\n\n    on addPeak(newPeak)\n        copy newPeak to end of peaks\n    end addPeak\nend script\n```"
  },
  {
    "task": "Implement a class for a documentary film with properties for title, director, and subject, and a method to update the subject.",
    "code": "```applescript\nscript DocumentaryFilm\n    property title : \"\"\n    property director : \"\"\n    property subject : \"\"\n\n    on updateSubject(newSubject)\n        set subject to newSubject\n    end updateSubject\nend script\n```"
  },
  {
    "task": "Develop a class for a classical music composition with attributes for composition name, composer, and duration, and a method to change the duration.",
    "code": "```applescript\nscript ClassicalMusicComposition\n    property compositionName : \"\"\n    property composer : \"\"\n    property duration : 0\n\n    on setCompositionName(newName)\n        set compositionName to newName\n    end setCompositionName\n\n    on setComposer(newComposer)\n        set composer to newComposer\n    end setComposer\n\n    on setDuration(newDuration)\n        set duration to newDuration\n    end setDuration\n\n    on changeDuration(newDuration)\n        set duration to newDuration\n    end changeDuration\nend script\n```"
  },
  {
    "task": "Formulate a class for a public library with properties for library name, books available, and membership, and a method to add a new book.",
    "code": "```applescript\nproperty libraryName : \"\"\nproperty booksAvailable : {}\nproperty membership : {}\n\non setLibraryName(newName)\n    set libraryName to newName\nend setLibraryName\n\non setBooksAvailable(newBooksAvailable)\n    set booksAvailable to newBooksAvailable\nend setBooksAvailable\n\non setMembership(newMembership)\n    set membership to newMembership\nend setMembership\n\non addNewBook(newBook)\n    copy newBook to end of booksAvailable\nend addNewBook\n\nscript PublicLibrary\n    property libraryName : \"\"\n    property booksAvailable : {}\n    property membership : {}\n    \n    on setLibraryName(newName)\n        set libraryName to newName\n    end setLibraryName\n    \n    on setBooksAvailable(newBooksAvailable)\n        set booksAvailable to newBooksAvailable\n    end setBooksAvailable\n    \n    on setMembership(newMembership)\n        set membership to newMembership\n    end setMembership\n    \n    on addNewBook(newBook)\n        copy newBook to end of booksAvailable\n    end addNewBook\nend script\n```"
  },
  {
    "task": "Construct a class for a tech startup with attributes for startup name, founder, and funding, and a method to raise additional funding.",
    "code": "```applescript\nscript TechStartup\n    property startupName : \"\"\n    property founder : \"\"\n    property funding : 0\n\n    on raiseFunding(additionalAmount)\n        set funding to funding + additionalAmount\n    end raiseFunding\nend script\n```"
  }
]