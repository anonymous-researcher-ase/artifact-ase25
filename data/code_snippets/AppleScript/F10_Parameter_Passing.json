[
  {
    "task": "Create a function that modifies the first element of an array passed to it. Explain how the changes are reflected in the original array.",
    "code": "```applescript\non modifyFirstElement(myList)\n    if (count of myList) > 0 then\n        set item 1 of myList to \"modified\"\n    end if\nend modifyFirstElement\n\nset originalArray to {\"original\", \"value\", \"another\"}\nmodifyFirstElement(originalArray)\nreturn originalArray\n```"
  },
  {
    "task": "Design a function that swaps the values of two variables using pass-by-reference. Demonstrate how the swap affects the original variables.",
    "code": "```applescript\non swapValues(value1, value2)\n\tset tempValue to item 1 of value1\n\tset item 1 of value1 to item 1 of value2\n\tset item 1 of value2 to tempValue\nend swapValues\n\nset x to {10}\nset y to {20}\n\nlog \"Before swap: x = \" & (item 1 of x) & \", y = \" & (item 1 of y)\n\nswapValues(x, y)\n\nlog \"After swap: x = \" & (item 1 of x) & \", y = \" & (item 1 of y)\n```"
  },
  {
    "task": "Write a program that passes a large data structure to a function by value and by reference. Compare the performance and memory usage for both approaches.",
    "code": "```applescript\n-- Function to modify array by reference\non modifyArrayByReference(theArray)\n\tset item 1 of theArray to \"modified\"\nend modifyArrayByReference\n\n-- Function to modify array by value\non modifyArrayByValue(theArray)\n\tset newArray to theArray\n\tset item 1 of newArray to \"modified\"\nend modifyArrayByValue\n\n-- Create a large data structure\nset largeArray to {}\nrepeat 10000 times\n\tset end of largeArray to \"original\"\nend repeat\n\n-- Measure performance and memory for by reference\nset startTime to current date\nmodifyArrayByReference(largeArray)\nset endTime to current date\nset timeByReference to (endTime - startTime)\n\n-- Measure performance and memory for by value\nset startTime to current date\nmodifyArrayByValue(largeArray)\nset endTime to current date\nset timeByValue to (endTime - startTime)\n\n-- Display results\ndisplay dialog \"Time by reference: \" & timeByReference & \" seconds\" & return & \"Time by value: \" & timeByValue & \" seconds\"\n```"
  },
  {
    "task": "Implement a function that accepts an integer and doubles its value. Show the difference in the original variable when using pass-by-value versus pass-by-reference.",
    "code": "```applescript\n-- Define a function to double the value using pass-by-value\non doubleValueByValue(x)\n\tset x to x * 2\n\treturn x\nend doubleValueByValue\n\n-- Define a function to double the value using pass-by-reference\non doubleValueByReference(xRef)\n\tset xRef's contents to xRef's contents * 2\nend doubleValueByReference\n\n-- Initialize a variable\nset originalValue to 5\n\n-- Use pass-by-value\nset newValueByValue to doubleValueByValue(originalValue)\ndisplay dialog \"Original value after pass-by-value: \" & originalValue\ndisplay dialog \"New value after pass-by-value: \" & newValueByValue\n\n-- Use pass-by-reference\nset originalValueRef to a reference to originalValue\ndoubleValueByReference(originalValueRef)\ndisplay dialog \"Original value after pass-by-reference: \" & originalValue\n```"
  },
  {
    "task": "Create a function that takes a list and returns a new list with elements doubled. Ensure the original list remains unchanged.",
    "code": "```applescript\non doubleElements(inputList)\n\tset doubledList to {}\n\trepeat with anItem in inputList\n\t\tset end of doubledList to anItem * 2\n\tend repeat\n\treturn doubledList\nend doubleElements\n\n-- Example usage:\nset originalList to {1, 2, 3, 4}\nset newList to doubleElements(originalList)\ndisplay dialog \"Original List: \" & originalList & return & \"Doubled List: \" & newList\n```"
  },
  {
    "task": "Design a function that takes a string argument and appends a character to it. Illustrate the result when the string is passed by value.",
    "code": "```applescript\non appendCharacter(originalString)\n\tset appendedString to originalString & \"X\"\n\treturn appendedString\nend appendCharacter\n\n-- Example usage\nset myString to \"Hello\"\nset result to appendCharacter(myString)\ndisplay dialog \"Original: \" & myString & \", Appended: \" & result\n```"
  },
  {
    "task": "Write a function that increments a counter variable. Pass the variable by reference to see changes in the original variable.",
    "code": "```applescript\non incrementCounter(counterRef)\n\tset contents of counterRef to (contents of counterRef) + 1\nend incrementCounter\n\nset counter to 0\nincrementCounter(counter)\ndisplay dialog \"Counter: \" & counter\n```"
  },
  {
    "task": "Develop a function that removes an item from a dictionary passed to it. Demonstrate how pass-by-reference affects the original dictionary.",
    "code": "```applescript\non removeItem(theDict, theKey)\n\tset theDict's theKey to missing value\nend removeItem\n\nset myDict to {name:\"Alice\", age:30, location:\"Wonderland\"}\nremoveItem(myDict, \"age\")\n\nreturn myDict\n```"
  },
  {
    "task": "Create a program that passes a matrix to a function, which transposes it. Explain how the transposition affects the original matrix with pass-by-reference.",
    "code": "```applescript\non transposeMatrix(theMatrix)\n\tset transposedMatrix to {}\n\tset numRows to count of theMatrix\n\tset numCols to count of item 1 of theMatrix\n\t\n\trepeat with col from 1 to numCols\n\t\tset newRow to {}\n\t\trepeat with row from 1 to numRows\n\t\t\tset end of newRow to item col of item row of theMatrix\n\t\tend repeat\n\t\tset end of transposedMatrix to newRow\n\tend repeat\n\t\n\treturn transposedMatrix\nend transposeMatrix\n\nset originalMatrix to {{1, 2, 3}, {4, 5, 6}, {7, 8, 9}}\nset transposedMatrix to transposeMatrix(originalMatrix)\nreturn transposedMatrix\n```"
  },
  {
    "task": "Implement a function that takes a float number and rounds it. Discuss the implications of passing the number by value.",
    "code": "```applescript\non roundFloat(theNumber)\n    set roundedNumber to round theNumber\n    return roundedNumber\nend roundFloat\n\nset exampleNumber to 3.14159\nset result to roundFloat(exampleNumber)\ndisplay dialog \"Rounded number: \" & result\n```"
  },
  {
    "task": "Design a function that accepts a dictionary and adds a key-value pair to it. Show the changes when the dictionary is passed by reference.",
    "code": "```applescript\non addKeyValuePair(theDict)\n    set theDict's end to {newKey:\"newValue\"}\nend addKeyValuePair\n\nset myDict to {key1:\"value1\", key2:\"value2\"}\naddKeyValuePair(myDict)\nreturn myDict\n```"
  },
  {
    "task": "Write a program that passes a string to a function that converts it to uppercase. Explain how this affects the original string with pass-by-value.",
    "code": "```applescript\non run\n    set originalString to \"hello world\"\n    set uppercasedString to convertToUpper(originalString)\n    display dialog \"Original String: \" & originalString & return & \"Uppercased String: \" & uppercasedString\nend run\n\non convertToUpper(someString)\n    return (someString as string)'s uppercaseString\nend convertToUpper\n```"
  },
  {
    "task": "Create a function that receives a tuple and attempts to modify one of its elements. Discuss the outcome of using pass-by-value.",
    "code": "```applescript\non modifyTuple(inputTuple)\n\ttry\n\t\tset item 1 of inputTuple to \"New Value\"\n\ton error errMsg\n\t\treturn \"Error: \" & errMsg\n\tend try\n\treturn inputTuple\nend modifyTuple\n\nset myTuple to {\"Original\", \"Value\"}\nset result to modifyTuple(myTuple)\nreturn result\n```"
  },
  {
    "task": "Develop a function that accepts an object and modifies one of its attributes. Illustrate how pass-by-reference alters the original object.",
    "code": "```applescript\non modifyAttribute(someObject)\n\tset someObject's attribute to \"New Value\"\nend modifyAttribute\n\n-- Example usage\nset myObject to {attribute:\"Old Value\"}\nmodifyAttribute(myObject)\ndisplay dialog (\"Object's attribute is now: \" & myObject's attribute)\n```"
  },
  {
    "task": "Design a function that outputs the sum of all elements in an array passed by value. Confirm the original array remains unchanged.",
    "code": "```applescript\non sumArrayPassedByValue(theArray)\n\tset sum to 0\n\trepeat with i from 1 to count of theArray\n\t\tset sum to sum + (item i of theArray)\n\tend repeat\n\treturn sum\nend sumArrayPassedByValue\n\n-- Example usage\nset originalArray to {1, 2, 3, 4, 5}\nset result to sumArrayPassedByValue(originalArray)\nreturn {result, originalArray} -- returns {15, {1, 2, 3, 4, 5}}\n```"
  },
  {
    "task": "Write a function that takes a boolean flag and toggles its value. Demonstrate the effect of pass-by-reference on the original flag.",
    "code": "```applescript\non toggleFlag(flagRef)\n\tset flagValue to contents of flagRef\n\tset contents of flagRef to not flagValue\nend toggleFlag\n\n-- Demonstration\nset myFlag to true\nset myFlagRef to a reference to myFlag\n\ntoggleFlag(myFlagRef)\ndisplay dialog \"After toggling: \" & myFlag\n```"
  },
  {
    "task": "Create a function that takes an object and clones it. Modify the clone and show that the original object remains unaffected.",
    "code": "```applescript\non cloneAndModify(originalObject)\n    -- Clone the object\n    set clonedObject to originalObject\n    \n    -- Modify the clone\n    set item 1 of clonedObject to \"Modified\"\n    \n    -- Return both objects for comparison\n    return {originalObject, clonedObject}\nend cloneAndModify\n\n-- Example usage\nset originalList to {\"Original\", \"Data\"}\nset {originalAfter, clone} to cloneAndModify(originalList)\n\n-- Display results\ndisplay dialog \"Original: \" & (originalAfter as string) & return & \"Clone: \" & (clone as string)\n```"
  },
  {
    "task": "Implement a function that accepts a list of integers and removes all even numbers. Describe the difference in behavior when using pass-by-value and pass-by-reference.",
    "code": "```applescript\non removeEvenNumbersByValue(numbers)\n\tset oddNumbers to {}\n\trepeat with num in numbers\n\t\tif num mod 2 is not 0 then\n\t\t\tcopy num to end of oddNumbers\n\t\tend if\n\tend repeat\n\treturn oddNumbers\nend removeEvenNumbersByValue\n\non removeEvenNumbersByReference(numbers)\n\trepeat with i from (count numbers) to 1 by -1\n\t\tif item i of numbers mod 2 is 0 then\n\t\t\tset numbers to remove item i from numbers\n\t\tend if\n\tend repeat\nend removeEvenNumbersByReference\n\non remove item index from list\n\tset itemList to {}\n\trepeat with i from 1 to (count list)\n\t\tif i is not index then\n\t\t\tcopy item i of list to end of itemList\n\t\tend if\n\tend repeat\n\treturn itemList\nend remove\n\n-- Example Usage:\nset myList to {1, 2, 3, 4, 5, 6, 7, 8, 9, 10}\n\n-- Pass-by-value\nset newList to removeEvenNumbersByValue(myList)\ndisplay dialog \"Original List (Pass-by-Value): \" & myList\ndisplay dialog \"Modified List (Pass-by-Value): \" & newList\n\n-- Pass-by-reference\nremoveEvenNumbersByReference(myList)\ndisplay dialog \"Modified Original List (Pass-by-Reference): \" & myList\n```"
  },
  {
    "task": "Develop a function that takes a complex number and returns its conjugate. Explain how pass-by-value affects the original complex number.",
    "code": "```applescript\non conjugateComplexNumber(realPart, imaginaryPart)\n\tset conjugateImaginaryPart to -1 * imaginaryPart\n\treturn {real: realPart, imaginary: conjugateImaginaryPart}\nend conjugateComplexNumber\n\n-- Example usage\nset complexNumber to {real: 3, imaginary: 4}\nset result to conjugateComplexNumber(real of complexNumber, imaginary of complexNumber)\ndisplay dialog \"Original: \" & real of complexNumber & \" + \" & imaginary of complexNumber & \"i\"\ndisplay dialog \"Conjugate: \" & real of result & \" + \" & imaginary of result & \"i\"\n```"
  },
  {
    "task": "Design a program where a function receives a binary tree and inverts it. Discuss how pass-by-reference impacts the original tree structure.",
    "code": "```applescript\n-- Define a record to represent a tree node\nrecord TreeNode\n    property value : integer\n    property leftNode : record\n    property rightNode : record\nend record\n\n-- Function to invert the binary tree\non invertBinaryTree(treeNode)\n    if treeNode is not missing value then\n        -- Swap the left and right nodes\n        set tempNode to treeNode's leftNode\n        set treeNode's leftNode to treeNode's rightNode\n        set treeNode's rightNode to tempNode\n        \n        -- Recursively invert the left and right subtrees\n        my invertBinaryTree(treeNode's leftNode)\n        my invertBinaryTree(treeNode's rightNode)\n    end if\nend invertBinaryTree\n\n-- Example to use the function\nset rootNode to {value:1, leftNode:{value:2, leftNode:missing value, rightNode:missing value}, rightNode:{value:3, leftNode:missing value, rightNode:missing value}}\nmy invertBinaryTree(rootNode)\n```"
  },
  {
    "task": "Write a function that adds an element to a set passed to it. Show how pass-by-reference affects the original set.",
    "code": "```applescript\non addElementToSet(theSet, theElement)\n    if theSet does not contain theElement then\n        set end of theSet to theElement\n    end if\nend addElementToSet\n\nset mySet to {1, 2, 3}\naddElementToSet(mySet, 4)\nreturn mySet\n```"
  },
  {
    "task": "Create a function that accepts an integer array and sorts it. Demonstrate the difference when the array is passed by value.",
    "code": "```applescript\non sortArray(passedArray)\n\tset sortedArray to my mySort(passedArray)\n\treturn sortedArray\nend sortArray\n\non mySort(arr)\n\tset arrCopy to arr\n\tset arrLen to length of arrCopy\n\trepeat with i from 1 to arrLen\n\t\trepeat with j from 1 to (arrLen - i)\n\t\t\tif item j of arrCopy > item (j + 1) of arrCopy then\n\t\t\t\tset temp to item j of arrCopy\n\t\t\t\tset item j of arrCopy to item (j + 1) of arrCopy\n\t\t\t\tset item (j + 1) of arrCopy to temp\n\t\t\tend if\n\t\tend repeat\n\tend repeat\n\treturn arrCopy\nend mySort\n\n-- Example usage to demonstrate parameter passing by value\nset originalArray to {5, 3, 8, 4, 2}\nset sortedArray to sortArray(originalArray)\n\ndisplay dialog \"Original Array: \" & originalArray\ndisplay dialog \"Sorted Array: \" & sortedArray\n```"
  },
  {
    "task": "Implement a function that takes a configuration object and toggles a setting. Illustrate the changes with pass-by-reference.",
    "code": "```applescript\non toggleSetting(config)\n    set currentSetting to setting of config\n    if currentSetting is true then\n        set setting of config to false\n    else\n        set setting of config to true\n    end if\nend toggleSetting\n\n-- Example usage\nset myConfig to {setting:true}\ntoggleSetting(myConfig)\nlog myConfig\n```"
  },
  {
    "task": "Design a function that receives a file path and reads its content. Explain how passing the path by value affects the outcome.",
    "code": "```applescript\non readFileContent(filePath)\n\ttell application \"System Events\"\n\t\tset fileContent to read file filePath\n\tend tell\n\treturn fileContent\nend readFileContent\n\nset filePath to (POSIX path of (path to desktop)) & \"example.txt\"\nset content to readFileContent(filePath)\ndisplay dialog content\n```"
  },
  {
    "task": "Write a program in which a function takes a stack and reverses its elements. Discuss the impact of pass-by-reference on the stack.",
    "code": "```applescript\non reverseStack(theStack)\n\tset reversedStack to {}\n\trepeat with i from (count of theStack) to 1 by -1\n\t\tset end of reversedStack to item i of theStack\n\tend repeat\n\tcopy reversedStack to theStack\nend reverseStack\n\nset myStack to {1, 2, 3, 4, 5}\ndisplay dialog \"Original Stack: \" & myStack\nreverseStack(myStack)\ndisplay dialog \"Reversed Stack: \" & myStack\n```"
  },
  {
    "task": "Create a function that takes a queue and dequeues an element. Show the result when the queue is passed by reference.",
    "code": "```applescript\n-- Define a handler to dequeue an element from a queue\non dequeueElement(theQueue)\n    if (count of theQueue) > 0 then\n        set firstElement to item 1 of theQueue\n        set theQueue to rest of theQueue\n        return {firstElement, theQueue}\n    else\n        return {\"Queue is empty\", theQueue}\n    end if\nend dequeueElement\n\n-- Example usage\nset myQueue to {\"apple\", \"banana\", \"cherry\"}\nset {element, myQueue} to dequeueElement(myQueue)\ndisplay dialog \"Dequeued element: \" & element & \"; Remaining queue: \" & myQueue\n```"
  },
  {
    "task": "Develop a function that accepts a hashmap and updates a value for a specific key. Illustrate the effects of pass-by-reference.",
    "code": "```applescript\non updateHashmap(hashmap, key, newValue)\n\tset hashmap's item key to newValue\nend updateHashmap\n\n-- Example usage\nset myHashmap to {foo:\"bar\", hello:\"world\"}\nupdateHashmap(myHashmap, \"foo\", \"newBar\")\nreturn myHashmap\n```"
  },
  {
    "task": "Design a function that receives a JSON object and adds a new property. Discuss the implications of modifying the object by reference.",
    "code": "```applescript\non addPropertyToJSON(jsonStr, newKey, newValue)\n\ttell application \"System Events\"\n\t\tset jsonData to do shell script \"echo \" & quoted form of jsonStr & \" | /usr/bin/plutil -convert json -o - --\"\n\t\tset jsonRecord to value of (run script jsonData)\n\t\tset jsonRecord's newKey to newValue\n\t\tset modifiedJsonStr to do shell script \"echo \" & quoted form of (jsonRecord as string) & \" | /usr/bin/plutil -convert json -o - --\"\n\t\treturn modifiedJsonStr\n\tend tell\nend addPropertyToJSON\n\n-- Example usage:\nset jsonStr to \"{\\\"name\\\": \\\"John Doe\\\", \\\"age\\\": 30}\"\nset newJsonStr to addPropertyToJSON(jsonStr, \"occupation\", \"Engineer\")\ndisplay dialog newJsonStr\n```"
  },
  {
    "task": "Write a program where a function accepts a graph and adds a node. Explain how pass-by-reference affects the original graph structure.",
    "code": "```applescript\non addNodeToGraph(graph, node)\n    copy node to end of graph\nend addNodeToGraph\n\n-- Example usage\nset myGraph to {{\"A\", \"B\"}, {\"B\", \"C\"}}\nset newNode to {\"C\", \"D\"}\naddNodeToGraph(myGraph, newNode)\n\nmyGraph\n```"
  },
  {
    "task": "Create a function that accepts a set of coordinates and shifts them. Demonstrate how pass-by-value ensures the original set is unchanged.",
    "code": "```applescript\non shiftCoordinates(x, y, dx, dy)\n\tset newX to x + dx\n\tset newY to y + dy\n\treturn {newX, newY}\nend shiftCoordinates\n\nset originalCoordinates to {5, 10}\nset shiftedCoordinates to shiftCoordinates(item 1 of originalCoordinates, item 2 of originalCoordinates, 3, 4)\n\n-- Output the results\ndisplay dialog \"Original Coordinates: {\" & item 1 of originalCoordinates & \", \" & item 2 of originalCoordinates & \"}\"\ndisplay dialog \"Shifted Coordinates: {\" & item 1 of shiftedCoordinates & \", \" & item 2 of shiftedCoordinates & \"}\"\n```"
  },
  {
    "task": "Implement a function that takes a date object and sets it to the next day. Discuss the effects of pass-by-reference on the date object.",
    "code": "```applescript\non setToNextDay(theDate)\n\tset day of theDate to (day of theDate) + 1\nend setToNextDay\n\nset currentDate to current date\nsetToNextDay(currentDate)\ncurrentDate\n```"
  },
  {
    "task": "Develop a function that receives a polynomial represented as a list of coefficients and differentiates it. Show how the original list remains unchanged with pass-by-value.",
    "code": "```applescript\non differentiatePolynomial(coefficients)\n\tset derivative to {}\n\tset degree to length of coefficients\n\trepeat with i from 2 to degree\n\t\tset currentCoefficient to item i of coefficients\n\t\tset newCoefficient to currentCoefficient * (i - 1)\n\t\tset end of derivative to newCoefficient\n\tend repeat\n\treturn derivative\nend differentiatePolynomial\n\nset originalPolynomial to {3, 2, 1} -- Represents 3 + 2x + x^2\nset derivativePolynomial to differentiatePolynomial(originalPolynomial)\n\nreturn {originalPolynomial, derivativePolynomial}\n```"
  },
  {
    "task": "Design a function that accepts a stack and clears it. Explain how pass-by-reference affects the original stack.",
    "code": "```applescript\non clearStack(stackRef)\n\ttell stackRef\n\t\tset contents to {}\n\tend tell\nend clearStack\n\n-- Example usage\nset myStack to {1, 2, 3, 4, 5}\nclearStack(myStack)\nreturn myStack\n```"
  },
  {
    "task": "Write a function that takes a linked list and appends a new node. Demonstrate the impact of pass-by-reference on the list.",
    "code": "```applescript\non appendNode(theList, newValue)\n    set newNode to {value:newValue, nextNode:{}}\n    if (theList's nextNode is {}) then\n        set theList's nextNode to newNode\n    else\n        my appendNode(theList's nextNode, newValue)\n    end if\nend appendNode\n\non demoPassByReference()\n    set head to {value:1, nextNode:{}}\n    my appendNode(head, 2)\n    my appendNode(head, 3)\n    return head\nend demoPassByReference\n\ndemoPassByReference()\n```"
  },
  {
    "task": "Create a function that receives a URL and extracts the domain name. Discuss the effects of pass-by-value on the URL string.",
    "code": "```applescript\non extractDomainName(givenURL)\n    set AppleScript's text item delimiters to {\"//\"}\n    set theItems to text items of givenURL\n    set AppleScript's text item delimiters to {\"/\"}\n    set domainName to text item 1 of text item 2 of theItems\n    return domainName\nend extractDomainName\n\n-- Example of calling the function\nset url to \"https://www.example.com/path/to/page\"\nset domain to extractDomainName(url)\ndisplay dialog \"Domain: \" & domain\n```"
  },
  {
    "task": "Implement a function that takes a priority queue and changes the priority of an element. Illustrate the effects using pass-by-reference.",
    "code": "```applescript\non changePriority(q, element, newPriority)\n\trepeat with i from 1 to count of q\n\t\tif item i of q is element then\n\t\t\tset item i of q to newPriority\n\t\t\texit repeat\n\t\tend if\n\tend repeat\nend changePriority\n\nset priorityQueue to {{\"taskA\", 1}, {\"taskB\", 2}, {\"taskC\", 3}}\nchangePriority(priorityQueue, {\"taskB\", 2}, {\"taskB\", 5})\n\npriorityQueue\n```"
  },
  {
    "task": "Develop a function that accepts a circular buffer and reads an element. Explain how pass-by-reference influences the buffer.",
    "code": "```applescript\non readElementFromBuffer(buffer)\n    set element to item 1 of buffer\n    set buffer to rest of buffer & {element}\n    return element\nend readElementFromBuffer\n\n-- Example usage:\nset circularBuffer to {1, 2, 3, 4, 5}\nset readElement to readElementFromBuffer(circularBuffer)\n```"
  },
  {
    "task": "Design a program where a function receives a record and updates a field. Show how pass-by-reference affects the original record.",
    "code": "```applescript\n-- Define a record\nset myRecord to {name:\"Alice\", age:30}\n\n-- Define a function that updates a field in the record\non updateRecord(theRecord)\n    set age of theRecord to (age of theRecord) + 1\nend updateRecord\n\n-- Call the function and pass the record by reference\nupdateRecord(myRecord)\n\n-- Output the updated record\nreturn myRecord\n```"
  },
  {
    "task": "Write a function that takes a frequency list and normalizes it. Describe how pass-by-value ensures the original list remains unchanged.",
    "code": "```applescript\non normalizeFrequencyList(frequencyList)\n\tset total to 0\n\tset normalizedList to {}\n\t-- Calculate the total sum of the frequency list\n\trepeat with value in frequencyList\n\t\tset total to total + value\n\tend repeat\n\t-- Normalize each value in the list\n\trepeat with value in frequencyList\n\t\tset end of normalizedList to (value / total)\n\tend repeat\n\treturn normalizedList\nend normalizeFrequencyList\n\n-- Example usage\nset myFrequencyList to {10, 20, 30}\nset myNormalizedList to normalizeFrequencyList(myFrequencyList)\n\n-- Output myNormalizedList\nmyNormalizedList\n```"
  },
  {
    "task": "Create a function that accepts a chessboard and makes a move. Discuss how pass-by-reference alters the original board setup.",
    "code": "```applescript\non makeMove(chessboard, fromSquare, toSquare)\n\tset pieceToMove to item fromSquare of chessboard\n\tset item fromSquare of chessboard to missing value\n\tset item toSquare of chessboard to pieceToMove\nend makeMove\n\nset chessboard to {\"R\", \"N\", \"B\", \"Q\", \"K\", \"B\", \"N\", \"R\", \"P\", \"P\", \"P\", \"P\", \"P\", \"P\", \"P\", \"P\", missing value, missing value, missing value, missing value, missing value, missing value, missing value, missing value, missing value, missing value, missing value, missing value, missing value, missing value, missing value, missing value, missing value, missing value, missing value, missing value, missing value, missing value, missing value, missing value, \"p\", \"p\", \"p\", \"p\", \"p\", \"p\", \"p\", \"p\", \"r\", \"n\", \"b\", \"q\", \"k\", \"b\", \"n\", \"r\"}\n\nmakeMove(chessboard, 10, 18)\ndisplay dialog (chessboard as string)\n```"
  },
  {
    "task": "Implement a function that takes a decimal number and converts it to binary. Explain the effects of pass-by-value on the original number.",
    "code": "```applescript\non decimalToBinary(decimalNumber)\n\tset binaryString to \"\"\n\tset originalNumber to decimalNumber\n\trepeat while decimalNumber > 0\n\t\tset remainder to decimalNumber mod 2\n\t\tset binaryString to (remainder as string) & binaryString\n\t\tset decimalNumber to decimalNumber div 2\n\tend repeat\n\treturn {binaryString, originalNumber}\nend decimalToBinary\n\nset {binary, original} to decimalToBinary(10)\ndisplay dialog \"Original number: \" & original & \", Binary: \" & binary\n```"
  },
  {
    "task": "Develop a function that receives a DNA sequence and counts nucleotides. Illustrate how pass-by-value ensures the original sequence remains intact.",
    "code": "```applescript\non countNucleotides(dnaSequence)\n\tset nucleotideCount to {A:0, C:0, G:0, T:0}\n\trepeat with i from 1 to length of dnaSequence\n\t\tset nucleotide to character i of dnaSequence\n\t\tif nucleotide is \"A\" then\n\t\t\tset A of nucleotideCount to (A of nucleotideCount) + 1\n\t\telse if nucleotide is \"C\" then\n\t\t\tset C of nucleotideCount to (C of nucleotideCount) + 1\n\t\telse if nucleotide is \"G\" then\n\t\t\tset G of nucleotideCount to (G of nucleotideCount) + 1\n\t\telse if nucleotide is \"T\" then\n\t\t\tset T of nucleotideCount to (T of nucleotideCount) + 1\n\t\tend if\n\tend repeat\n\treturn nucleotideCount\nend countNucleotides\n\nset originalSequence to \"ACGTACGTACGT\"\nset countResult to countNucleotides(originalSequence)\ndisplay dialog \"Original Sequence: \" & originalSequence & return & \"Nucleotide Count: \" & countResult as string\n```"
  },
  {
    "task": "Design a function that accepts a shopping cart object and applies a discount. Show the changes with pass-by-reference.",
    "code": "```applescript\non applyDiscountToCart(cart)\n    set itemCount to count of cart\n    repeat with i from 1 to itemCount\n        set itemPrice to item price of item i of cart\n        set newPrice to itemPrice * 0.9 -- Apply a 10% discount\n        set item price of item i of cart to newPrice\n    end repeat\nend applyDiscountToCart\n\n-- Example usage:\nset myCart to {{name:\"Apple\", item price:1.00}, {name:\"Banana\", item price:0.50}}\napplyDiscountToCart(myCart)\nreturn myCart\n```"
  },
  {
    "task": "Write a program where a function receives a playlist and adds a song. Discuss how pass-by-reference affects the original playlist.",
    "code": "```applescript\non addSongToPlaylist(thePlaylist, theSong)\n    set end of thePlaylist to theSong\nend addSongToPlaylist\n\nset myPlaylist to {\"Song 1\", \"Song 2\", \"Song 3\"}\naddSongToPlaylist(myPlaylist, \"New Song\")\n\nreturn myPlaylist\n```"
  },
  {
    "task": "Create a function that takes a sprite in a game and moves it. Demonstrate the result when the sprite is passed by reference.",
    "code": "```applescript\non moveSprite(spritePosition)\n    set spritePosition's item 1 to spritePosition's item 1 + 10\n    set spritePosition's item 2 to spritePosition's item 2 + 10\nend moveSprite\n\nset sprite to {50, 100} -- initial position {x, y}\nmoveSprite(sprite)\n-- sprite is now {60, 110}\n```"
  },
  {
    "task": "Implement a function that accepts a book object and updates the title. Illustrate the impact of pass-by-reference on the original object.",
    "code": "```applescript\non updateBookTitle(book, newTitle)\n    set title of book to newTitle\nend updateBookTitle\n\n-- Usage\nset myBook to {title:\"Old Title\", author:\"Author Name\"}\nupdateBookTitle(myBook, \"New Title\")\n\n-- Now myBook's title is \"New Title\"\ndisplay dialog (title of myBook)\n```"
  },
  {
    "task": "Develop a function that receives a sound wave and normalizes it. Explain how pass-by-value affects the original sound wave.",
    "code": "```applescript\non normalizeSoundWave(soundWave)\n\tset maxAmplitude to 0\n\trepeat with amplitude in soundWave\n\t\tif (amplitude as number) > maxAmplitude then\n\t\t\tset maxAmplitude to (amplitude as number)\n\t\tend if\n\tend repeat\n\t\n\tset normalizedWave to {}\n\trepeat with amplitude in soundWave\n\t\tset end of normalizedWave to (amplitude as number) / maxAmplitude\n\tend repeat\n\t\n\treturn normalizedWave\nend normalizeSoundWave\n\n-- Example Usage\nset originalWave to {0.2, 0.5, 0.8, 1.0, 0.9}\nset resultWave to normalizeSoundWave(originalWave)\n\n-- Display the results\ndisplay dialog \"Original Wave: \" & originalWave as string\ndisplay dialog \"Normalized Wave: \" & resultWave as string\n```"
  },
  {
    "task": "Design a program where a function receives a bank account object and credits an amount. Discuss the effects of pass-by-reference.",
    "code": "```applescript\n-- Define a bank account object with properties\nproperty bankAccount : {balance:0}\n\n-- Function to credit an amount to the bank account\non creditAccount(account, amount)\n    set currentBalance to balance of account\n    set balance of account to currentBalance + amount\nend creditAccount\n\n-- Example usage\nset myAccount to {balance:100}\ncreditAccount(myAccount, 50)\n\n-- Display the updated balance\ndisplay dialog \"Updated Balance: \" & (balance of myAccount)\n```"
  },
  {
    "task": "Write a function that takes an email list and filters out invalid addresses. Show the difference in the list when using pass-by-value.",
    "code": "```applescript\non filterInvalidEmails(emailList)\n    set validEmails to {}\n    repeat with email in emailList\n        if email contains \"@\" then\n            copy email to end of validEmails\n        end if\n    end repeat\n    return validEmails\nend filterInvalidEmails\n\non demonstratePassByValue()\n    set originalList to {\"test@example.com\", \"invalid-email\", \"user@domain.com\"}\n    set filteredList to filterInvalidEmails(originalList)\n    \n    display dialog \"Original List: \" & originalList as string\n    display dialog \"Filtered List: \" & filteredList as string\nend demonstratePassByValue\n\ndemonstratePassByValue()\n```"
  },
  {
    "task": "Create a function that accepts a 3D model and scales it. Demonstrate how pass-by-reference affects the original model.",
    "code": "```applescript\non scaleModel3D(model, scaleFactor)\n\ttell model\n\t\tset its width to (its width) * scaleFactor\n\t\tset its height to (its height) * scaleFactor\n\t\tset its depth to (its depth) * scaleFactor\n\tend tell\nend scaleModel3D\n\n-- Example usage\nset myModel to {width:5, height:10, depth:15}\nscaleModel3D(myModel, 2)\n-- myModel is now {width:10, height:20, depth:30}\n```"
  },
  {
    "task": "Implement a function that receives a text document and redacts sensitive information. Explain the impact of pass-by-reference.",
    "code": "```applescript\non redactSensitiveInfo(docPath)\n\ttell application \"Finder\"\n\t\tset docFile to POSIX file docPath as alias\n\tend tell\n\t\n\tset textData to read file docFile\n\t\n\tset redactedData to my redactInfo(textData)\n\t\n\tset writeFile to open for access docFile with write permission\n\tset eof of writeFile to 0\n\twrite redactedData to writeFile\n\tclose access writeFile\nend redactSensitiveInfo\n\non redactInfo(sensitiveText)\n\tset sensitiveWords to {\"password\", \"secret\", \"confidential\"}\n\tset replacementText to \"REDACTED\"\n\t\n\trepeat with word in sensitiveWords\n\t\tset sensitiveText to my replaceWord(sensitiveText, word, replacementText)\n\tend repeat\n\t\n\treturn sensitiveText\nend redactInfo\n\non replaceWord(textData, targetWord, replacement)\n\tset {TID, text item delimiters} to {text item delimiters, targetWord}\n\tset textData to text items of textData\n\tset text item delimiters to replacement\n\tset textData to textData as text\n\tset text item delimiters to TID\n\treturn textData\nend replaceWord\n```"
  },
  {
    "task": "Develop a function that takes a temperature reading and adjusts for calibration. Discuss how pass-by-value ensures the original reading is unchanged.",
    "code": "```applescript\non adjustTemperature(reading)\n\tset adjustmentFactor to 1.05 -- example calibration factor\n\tset adjustedReading to reading * adjustmentFactor\n\treturn adjustedReading\nend adjustTemperature\n\n-- Example usage\nset originalReading to 100\nset newReading to adjustTemperature(originalReading)\n\n-- Output original and new reading\ndisplay dialog \"Original Reading: \" & originalReading\ndisplay dialog \"Adjusted Reading: \" & newReading\n```"
  },
  {
    "task": "Design a function that accepts a bug report and updates its status. Show the changes with pass-by-reference.",
    "code": "```applescript\non updateBugReport(bugReport)\n    set status of bugReport to \"Updated\"\nend updateBugReport\n\n-- Example usage\nset myBugReport to {id: 1, title: \"Sample Bug\", status: \"Open\"}\nupdateBugReport(myBugReport)\ndisplay dialog status of myBugReport\n```"
  },
  {
    "task": "Write a program where a function receives a sensor array and calibrates it. Demonstrate the effect of pass-by-reference on the array.",
    "code": "```applescript\non calibrateSensorArray(sensorArray)\n\trepeat with i from 1 to length of sensorArray\n\t\tset item i of sensorArray to (item i of sensorArray) + 10\n\tend repeat\nend calibrateSensorArray\n\nset sensorArray to {100, 200, 300, 400}\nlog \"Before calibration: \" & sensorArray\n\ncalibrateSensorArray(sensorArray)\nlog \"After calibration: \" & sensorArray\n```"
  },
  {
    "task": "Create a function that takes a vector and rotates it. Explain how pass-by-value ensures the original vector remains unchanged.",
    "code": "```applescript\non rotateVector(originalVector)\n\tset rotatedVector to {}\n\tset vectorSize to (count of originalVector)\n\t\n\trepeat with i from 1 to vectorSize\n\t\tset end of rotatedVector to item (i mod vectorSize + 1) of originalVector\n\tend repeat\n\t\n\treturn rotatedVector\nend rotateVector\n\n-- Example usage\nset myVector to {1, 2, 3, 4, 5}\nset newVector to rotateVector(myVector)\ndisplay dialog \"Original Vector: \" & myVector & return & \"Rotated Vector: \" & newVector\n```"
  },
  {
    "task": "Implement a function that accepts an operation log and compresses it. Discuss the impact of pass-by-reference on the log.",
    "code": "```applescript\non compressLog(operationLog)\n\tset compressedLog to {}\n\tset currentEntry to item 1 of operationLog\n\tset currentCount to 0\n\t\n\trepeat with entry in operationLog\n\t\tif entry is equal to currentEntry then\n\t\t\tset currentCount to currentCount + 1\n\t\telse\n\t\t\tset end of compressedLog to {currentEntry, currentCount}\n\t\t\tset currentEntry to entry\n\t\t\tset currentCount to 1\n\t\tend if\n\tend repeat\n\t\n\tset end of compressedLog to {currentEntry, currentCount}\n\t\n\treturn compressedLog\nend compressLog\n\nset operationLog to {\"start\", \"start\", \"process\", \"process\", \"process\", \"end\", \"end\"}\nset compressedOperationLog to compressLog(operationLog)\nreturn compressedOperationLog\n```"
  },
  {
    "task": "Develop a function that receives a neural network model and updates its weights. Illustrate the effects of pass-by-reference.",
    "code": "```applescript\non updateWeights(neuralNetwork)\n    set weights to getWeights(neuralNetwork)\n    \n    -- Update weights logic\n    repeat with i from 1 to count of weights\n        set item i of weights to (item i of weights) + 0.1\n    end repeat\n    \n    setWeights(neuralNetwork, weights)\nend updateWeights\n\non getWeights(neuralNetwork)\n    -- Assuming neuralNetwork is a record with a key \"weights\"\n    return weights of neuralNetwork\nend getWeights\n\non setWeights(neuralNetwork, weights)\n    -- Update the neural network's weights in place\n    tell neuralNetwork\n        set its weights to weights\n    end tell\nend setWeights\n\n-- Example usage\nset neuralNetModel to {weights:{0.5, 0.3, 0.2}}\nupdateWeights(neuralNetModel)\n```"
  },
  {
    "task": "Design a function that accepts a command history and reverts the last command. Show the changes with pass-by-reference.",
    "code": "```applescript\non revertLastCommand(commandHistory)\n    if (count of commandHistory) > 0 then\n        set lastCommand to last item of commandHistory\n        set commandHistory to items 1 thru -2 of commandHistory\n        return lastCommand\n    else\n        return \"No command to revert\"\n    end if\nend revertLastCommand\n\n-- Example usage\nset commandHistory to {\"command1\", \"command2\", \"command3\"}\nset revertedCommand to revertLastCommand(commandHistory)\n\n-- Output results\ndisplay dialog \"Reverted Command: \" & revertedCommand & return & \"Updated Command History: \" & (commandHistory as string)\n```"
  },
  {
    "task": "Write a function that takes a user profile and anonymizes it. Discuss how pass-by-reference affects the original profile.",
    "code": "```applescript\non anonymizeProfile(profile)\n\ttell profile\n\t\tset firstName to \"Anonymous\"\n\t\tset lastName to \"User\"\n\t\tset email to \"\"\n\t\tset phone to \"\"\n\tend tell\nend anonymizeProfile\n\n-- Example usage\nset userProfile to {firstName:\"John\", lastName:\"Doe\", email:\"john.doe@example.com\", phone:\"123-456-7890\"}\n\nanonymizeProfile(userProfile)\n\nreturn userProfile\n```"
  },
  {
    "task": "Create a function that accepts a polynomial and evaluates it at a given point. Explain how pass-by-value ensures the polynomial remains unchanged.",
    "code": "```applescript\non evaluatePolynomial(coefficients, xValue)\n\tset result to 0\n\trepeat with i from 1 to count of coefficients\n\t\tset coefficient to item i of coefficients\n\t\tset result to result + coefficient * (xValue ^ (i - 1))\n\tend repeat\n\treturn result\nend evaluatePolynomial\n\nset polynomialCoefficients to {3, -2, 5} -- Represents 3 - 2x + 5x^2\nset point to 2\nset evaluationResult to evaluatePolynomial(polynomialCoefficients, point)\ndisplay dialog \"The polynomial evaluated at the point is: \" & evaluationResult\n```"
  },
  {
    "task": "Implement a function that receives a video stream and applies a filter. Demonstrate the effects of pass-by-reference on the stream.",
    "code": "```applescript\non applyFilterToStream(theStream)\n    set theStream's filter to \"grayscale\"\nend applyFilterToStream\n\n-- Assuming `videoStream` is a reference to a video stream object\nset videoStream to {filter:\"none\"}\n\n-- Apply the filter function\napplyFilterToStream(videoStream)\n\n-- Output to check the effect of pass-by-reference\nvideoStream's filter\n```"
  },
  {
    "task": "Develop a function that takes a task queue and reorders tasks based on priority. Illustrate the impact of pass-by-reference.",
    "code": "```applescript\non reorderTasksByPriority(taskQueue)\n    set taskQueue to my sortTasks(taskQueue)\nend reorderTasksByPriority\n\non sortTasks(taskList)\n    set sortedTasks to {}\n    repeat with aTask in taskList\n        set priorityLevel to item 2 of aTask\n        set taskName to item 1 of aTask\n        set currentList to {}\n        repeat with i from 1 to count of sortedTasks\n            set currentPriority to item 2 of item i of sortedTasks\n            if currentPriority > priorityLevel then\n                exit repeat\n            end if\n        end repeat\n        if i > count of sortedTasks then\n            set end of sortedTasks to aTask\n        else\n            set sortedTasks to (items 1 thru (i - 1) of sortedTasks) & aTask & (items i thru -1 of sortedTasks)\n        end if\n    end repeat\n    return sortedTasks\nend sortTasks\n\n-- Example usage\nset myTasks to {{\"Task 1\", 3}, {\"Task 2\", 1}, {\"Task 3\", 2}}\nreorderTasksByPriority(myTasks)\nreturn myTasks\n```"
  },
  {
    "task": "Design a program where a function receives a blockchain and verifies a transaction. Discuss how pass-by-reference affects the blockchain.",
    "code": "```applescript\non verifyTransaction(blockchain, transaction)\n    repeat with block in blockchain\n        set transactionsList to transactions of block\n        if transaction is in transactionsList then\n            return true\n        end if\n    end repeat\n    return false\nend verifyTransaction\n\n-- Example usage\nset myBlockchain to {\u00ac\n    {transactions: {\"tx1\", \"tx2\"}}, \u00ac\n    {transactions: {\"tx3\", \"tx4\"}}}\n\nset myTransaction to \"tx3\"\n\nset isVerified to verifyTransaction(myBlockchain, myTransaction)\n\ndisplay dialog \"Transaction verified: \" & (isVerified as string)\n```"
  },
  {
    "task": "Write a function that takes a game leaderboard and updates scores. Show the changes with pass-by-reference.",
    "code": "```applescript\non updateScores(leaderboard)\n\trepeat with i from 1 to count of leaderboard\n\t\tset score to item i of leaderboard\n\t\tset item i of leaderboard to score + 10\n\tend repeat\nend updateScores\n\nset gameLeaderboard to {50, 40, 60, 30}\nupdateScores(gameLeaderboard)\n\nreturn gameLeaderboard\n```"
  },
  {
    "task": "Create a function that accepts a project timeline and adjusts for delays. Explain how pass-by-reference influences the timeline.",
    "code": "```applescript\non adjustTimeline(timelineList)\n\trepeat with i from 1 to count of timelineList\n\t\tset item i of timelineList to (item i of timelineList) + 7\n\tend repeat\nend adjustTimeline\n\nset projectTimeline to {10, 20, 30, 40, 50}\nadjustTimeline(projectTimeline)\nprojectTimeline -- Output will show changes due to pass-by-reference\n```"
  },
  {
    "task": "Implement a function that receives a to-do list and completes a task. Demonstrate the effect of pass-by-reference on the list.",
    "code": "```applescript\non completeTask(todoList, taskIndex)\n    set item taskIndex of todoList to \"Completed: \" & (item taskIndex of todoList)\nend completeTask\n\nset myTodoList to {\"Buy groceries\", \"Call mom\", \"Finish report\"}\ncompleteTask(myTodoList, 2)\nreturn myTodoList\n```"
  },
  {
    "task": "Develop a function that takes a paint canvas and adds a layer. Discuss the impact of pass-by-reference on the canvas.",
    "code": "```applescript\non addLayerToCanvas(canvas)\n    tell canvas\n        make new layer at end of layers\n    end tell\nend addLayerToCanvas\n\n-- Example usage\nset myCanvas to make new document\naddLayerToCanvas(myCanvas)\n```"
  },
  {
    "task": "Design a function that accepts a URL list and fetches content. Show the difference in the list when using pass-by-value.",
    "code": "```applescript\non fetchContent(urlList)\n    set originalList to urlList\n    repeat with i from 1 to count of urlList\n        set item i of urlList to \"Fetched content for \" & item i of urlList\n    end repeat\n    return {originalList, urlList}\nend fetchContent\n\n-- Example usage\nset urls to {\"http://example.com\", \"http://example.org\"}\nset {original, fetched} to fetchContent(urls)\n\ndisplay dialog \"Original List: \" & original\ndisplay dialog \"Fetched Content List: \" & fetched\n```"
  },
  {
    "task": "Write a program where a function receives a game board and resets it. Illustrate the effects of pass-by-reference.",
    "code": "```applescript\non resetBoard(gameBoard)\n\trepeat with i from 1 to count of gameBoard\n\t\tset item i of gameBoard to 0\n\tend repeat\nend resetBoard\n\n-- Example usage\nset myBoard to {1, 2, 3, 4, 5}\nresetBoard(myBoard)\nreturn myBoard\n```"
  },
  {
    "task": "Create a function that takes a sound effect and increases its volume. Explain how pass-by-reference affects the original sound.",
    "code": "```applescript\non increaseVolume(soundEffect)\n    set volume of soundEffect to (volume of soundEffect) + 10\nend increaseVolume\n\n-- Example usage:\nset soundEffect to {name:\"ding\", volume:50}\nincreaseVolume(soundEffect)\nreturn soundEffect\n```"
  },
  {
    "task": "Implement a function that accepts a weather forecast and updates temperature predictions. Discuss the impact of pass-by-reference.",
    "code": "```applescript\non updateTemperaturePredictions(weatherForecast)\n    tell application \"Script Editor\"\n        set item 1 of weatherForecast to item 1 of weatherForecast + 5\n    end tell\nend updateTemperaturePredictions\n\nset myWeatherForecast to {15, 20, 25}\nupdateTemperaturePredictions(myWeatherForecast)\nmyWeatherForecast\n```"
  },
  {
    "task": "Develop a function that receives a system log and extracts error messages. Show how pass-by-value ensures the original log remains unchanged.",
    "code": "```applescript\non extractErrorMessages(systemLog)\n\tset errorMessages to {}\n\tset logEntries to paragraphs of systemLog\n\t\n\trepeat with entry in logEntries\n\t\tif entry contains \"ERROR\" then\n\t\t\tset end of errorMessages to entry\n\t\tend if\n\tend repeat\n\t\n\treturn errorMessages\nend extractErrorMessages\n\n-- Example usage:\nset originalLog to \"INFO: System started\nERROR: Disk not found\nWARNING: Low memory\nERROR: Network timeout\"\nset errors to extractErrorMessages(originalLog)\n\ndisplay dialog \"Original Log:\" & return & originalLog\ndisplay dialog \"Extracted Errors:\" & return & (errors as string)\n```"
  },
  {
    "task": "Design a function that accepts a data packet and encrypts it. Demonstrate the effect of pass-by-value on the packet.",
    "code": "```applescript\non encryptPacket(originalPacket)\n\tset encryptedPacket to \"ENCRYPTED:\" & originalPacket\n\treturn encryptedPacket\nend encryptPacket\n\nset dataPacket to \"SensitiveData\"\nset encryptedData to encryptPacket(dataPacket)\n\ndisplay dialog \"Original Packet: \" & dataPacket\ndisplay dialog \"Encrypted Packet: \" & encryptedData\n```"
  },
  {
    "task": "Write a function that takes a website theme and applies a color change. Explain how pass-by-reference affects the original theme.",
    "code": "```applescript\non applyColorChange(theme)\n    set theme's color to \"blue\"\nend applyColorChange\n\n-- Example usage\nset myTheme to {name:\"Default\", color:\"red\"}\napplyColorChange(myTheme)\nreturn myTheme\n```"
  },
  {
    "task": "Create a function that accepts a digital signature and verifies it. Discuss the implications of pass-by-value on the signature.",
    "code": "```applescript\non verifySignature(signature)\n    set isValid to false\n    -- Assuming a verification process\n    if signature is not \"\" then\n        set isValid to true\n    end if\n    return isValid\nend verifySignature\n\nset sampleSignature to \"example_signature\"\nset result to verifySignature(sampleSignature)\ndisplay dialog \"Signature is valid: \" & result\n```"
  },
  {
    "task": "Implement a function that receives a robot's path and optimizes it. Illustrate the effects of pass-by-reference on the path.",
    "code": "```applescript\non optimizePath(robotPath)\n    repeat with i from (count robotPath) to 2 by -1\n        if item i of robotPath is equal to item (i - 1) of robotPath then\n            set robotPath to (items 1 through (i - 1) of robotPath) & (items (i + 1) through end of robotPath)\n        end if\n    end repeat\nend optimizePath\n\nset robotPath to {\"N\", \"N\", \"E\", \"E\", \"S\", \"S\", \"W\", \"W\", \"N\", \"E\"}\noptimizePath(robotPath)\nreturn robotPath\n```"
  },
  {
    "task": "Develop a function that takes a music playlist and shuffles it. Demonstrate the impact of pass-by-reference on the playlist.",
    "code": "```applescript\non run\n\tset myPlaylist to {\"Song1\", \"Song2\", \"Song3\", \"Song4\", \"Song5\"}\n\t\n\t-- Display original playlist\n\tdisplay dialog \"Original Playlist: \" & (myPlaylist as string)\n\t\n\t-- Shuffle playlist\n\tshufflePlaylist(myPlaylist)\n\t\n\t-- Display shuffled playlist\n\tdisplay dialog \"Shuffled Playlist: \" & (myPlaylist as string)\nend run\n\non shufflePlaylist(playlistRef)\n\tset playlistRef to my shuffle(playlistRef)\nend shufflePlaylist\n\non shuffle(listToShuffle)\n\tset shuffledList to {}\n\trepeat with i from (count listToShuffle) to 1 by -1\n\t\tset randIndex to (random number from 1 to i)\n\t\tset end of shuffledList to item randIndex of listToShuffle\n\t\tset listToShuffle to (items 1 thru (randIndex - 1) of listToShuffle) & (items (randIndex + 1) thru -1 of listToShuffle)\n\tend repeat\n\treturn shuffledList\nend shuffle\n```"
  },
  {
    "task": "Design a program where a function receives a social media feed and removes duplicates. Show the changes with pass-by-reference.",
    "code": "```applescript\non removeDuplicates(feedList)\n    set uniqueFeed to {}\n    repeat with post in feedList\n        if post is not in uniqueFeed then\n            copy post to end of uniqueFeed\n        end if\n    end repeat\n    -- Using pass-by-reference to modify the original list\n    set feedList's contents to uniqueFeed\nend removeDuplicates\n\nset socialMediaFeed to {\"Post1\", \"Post2\", \"Post1\", \"Post3\", \"Post2\"}\nremoveDuplicates(socialMediaFeed)\nreturn socialMediaFeed\n```"
  },
  {
    "task": "Write a function that takes a coding challenge and adds test cases. Discuss the effects of pass-by-reference on the challenge.",
    "code": "```applescript\non addTestCases(challengeRef)\n    set testCases to {\"Test Case 1\", \"Test Case 2\", \"Test Case 3\"}\n    copy testCases to the end of challengeRef\nend addTestCases\n\nset myChallenge to {\"Original Challenge\"}\naddTestCases(myChallenge)\nreturn myChallenge\n```"
  },
  {
    "task": "Create a function that accepts an animation sequence and reverses it. Explain how pass-by-value ensures the sequence remains unchanged.",
    "code": "```applescript\non reverseAnimationSequence(animationSequence)\n\tset reversedSequence to {}\n\trepeat with i from (count of animationSequence) to 1 by -1\n\t\tset end of reversedSequence to item i of animationSequence\n\tend repeat\n\treturn reversedSequence\nend reverseAnimationSequence\n\n-- Example usage\nset originalSequence to {\"Frame1\", \"Frame2\", \"Frame3\"}\nset reversedSequence to reverseAnimationSequence(originalSequence)\n\ndisplay dialog \"Original: \" & originalSequence & return & \"Reversed: \" & reversedSequence\n```"
  },
  {
    "task": "Implement a function that receives a GPS route and recalculates it. Illustrate the impact of pass-by-reference on the route.",
    "code": "```applescript\non recalculateRoute(route)\n\tset item 1 of route to {latitude: 37.7749, longitude: -122.4194}\nend recalculateRoute\n\nset gpsRoute to {{latitude: 34.0522, longitude: -118.2437}}\nrecalculateRoute(gpsRoute)\ngpsRoute\n```"
  },
  {
    "task": "Develop a function that takes a chat history and censors inappropriate language. Show the effect of pass-by-reference on the history.",
    "code": "```applescript\non censorLanguage(chatHistory)\n\tset inappropriateWords to {\"badword1\", \"badword2\", \"badword3\"}\n\trepeat with i from 1 to count of chatHistory\n\t\tset currentMessage to item i of chatHistory\n\t\trepeat with word in inappropriateWords\n\t\t\tset currentMessage to my replaceWord(currentMessage, word, \"****\")\n\t\tend repeat\n\t\tset item i of chatHistory to currentMessage\n\tend repeat\nend censorLanguage\n\non replaceWord(theText, theWord, theReplacement)\n\tset AppleScript's text item delimiters to theWord\n\tset textItems to text items of theText\n\tset AppleScript's text item delimiters to theReplacement\n\tset theText to textItems as text\n\tset AppleScript's text item delimiters to \"\"\n\treturn theText\nend replaceWord\n\n-- Example usage\nset chatHistory to {\"This is a badword1\", \"Another badword2 here\", \"Clean message\"}\ncensorLanguage(chatHistory)\nreturn chatHistory\n```"
  },
  {
    "task": "Design a function that accepts a lighting setup and adjusts brightness. Discuss the changes when the setup is passed by reference.",
    "code": "```applescript\non adjustBrightness(lightingSetup)\n\ttell lightingSetup\n\t\tset brightness to brightness + 20\n\tend tell\nend adjustBrightness\n\n-- Example usage\nset myLightingSetup to {brightness: 50}\nadjustBrightness(myLightingSetup)\nreturn myLightingSetup\n```"
  },
  {
    "task": "Write a program where a function receives a VR environment and changes the scenery. Demonstrate the effects of pass-by-reference.",
    "code": "```applescript\non changeScenery(vrEnvironment)\n    set vrEnvironment's scenery to \"Tropical Beach\"\nend changeScenery\n\n-- Example VR Environment object\nscript VRWorld\n    property scenery : \"Mountain Range\"\nend script\n\n-- Pass by reference\nchangeScenery(VRWorld)\ndisplay dialog \"New scenery: \" & VRWorld's scenery\n```"
  },
  {
    "task": "Create a function that takes a blockchain ledger and adds a block. Explain how pass-by-reference affects the ledger.",
    "code": "```applescript\non addBlockToLedger(theLedger, theBlock)\n\tset end of theLedger to theBlock\nend addBlockToLedger\n\n-- Example usage\nset myLedger to {\"Block1\", \"Block2\"}\nset newBlock to \"Block3\"\naddBlockToLedger(myLedger, newBlock)\n\nreturn myLedger\n```"
  },
  {
    "task": "Implement a function that accepts a network packet and alters its headers. Discuss the implications of pass-by-value on the packet.",
    "code": "```applescript\non alterPacketHeaders(packet)\n    set newPacket to packet\n    set headerList to {\"header1\", \"header2\", \"header3\"}\n    repeat with i from 1 to count of headerList\n        set item i of newPacket to \"Altered \" & item i of newPacket\n    end repeat\n    return newPacket\nend alterPacketHeaders\n\n-- Example usage\nset originalPacket to {\"header1\", \"header2\", \"header3\", \"data\"}\nset modifiedPacket to alterPacketHeaders(originalPacket)\n\n-- Output the results\ndisplay dialog \"Original Packet: \" & originalPacket as string\ndisplay dialog \"Modified Packet: \" & modifiedPacket as string\n```"
  }
]