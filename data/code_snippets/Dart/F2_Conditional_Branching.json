[
  {
    "task": "Write a program that checks if a number is even or odd and outputs the result.",
    "code": "```dart\nimport 'dart:io';\n\nvoid main() {\n  print('Enter a number:');\n  int? number = int.tryParse(stdin.readLineSync()!);\n\n  if (number == null) {\n    print('Invalid input');\n  } else if (number % 2 == 0) {\n    print('The number is even.');\n  } else {\n    print('The number is odd.');\n  }\n}\n```"
  },
  {
    "task": "Create a function that determines if a given year is a leap year.",
    "code": "```dart\nbool isLeapYear(int year) {\n  if ((year % 4 == 0 && year % 100 != 0) || year % 400 == 0) {\n    return true;\n  } else {\n    return false;\n  }\n}\n```"
  },
  {
    "task": "Develop a script that categorizes an input number as positive, negative, or zero.",
    "code": "```dart\nvoid categorizeNumber(int number) {\n  if (number > 0) {\n    print('Positive');\n  } else if (number < 0) {\n    print('Negative');\n  } else {\n    print('Zero');\n  }\n}\n\nvoid main() {\n  int number = 5; // Example input\n  categorizeNumber(number);\n}\n```"
  },
  {
    "task": "Implement a system that grants access only if a correct password and username are provided.",
    "code": "```dart\nvoid main() {\n  const correctUsername = 'user123';\n  const correctPassword = 'pass123';\n\n  String inputUsername = 'user123'; // Example input\n  String inputPassword = 'pass123'; // Example input\n\n  if (inputUsername == correctUsername && inputPassword == correctPassword) {\n    print('Access granted');\n  } else {\n    print('Access denied');\n  }\n}\n```"
  },
  {
    "task": "Design a program that outputs 'Fizz' for numbers divisible by 3, 'Buzz' for numbers divisible by 5, and 'FizzBuzz' for numbers divisible by both.",
    "code": "```dart\nvoid main() {\n  for (int i = 1; i <= 100; i++) {\n    if (i % 3 == 0 && i % 5 == 0) {\n      print('FizzBuzz');\n    } else if (i % 3 == 0) {\n      print('Fizz');\n    } else if (i % 5 == 0) {\n      print('Buzz');\n    } else {\n      print(i);\n    }\n  }\n}\n```"
  },
  {
    "task": "Write a function to determine if a character is a vowel or a consonant.",
    "code": "```dart\nString checkVowelOrConsonant(String character) {\n  if (character.length != 1 || !RegExp(r'^[a-zA-Z]$').hasMatch(character)) {\n    return 'Invalid input';\n  }\n  \n  switch (character.toLowerCase()) {\n    case 'a':\n    case 'e':\n    case 'i':\n    case 'o':\n    case 'u':\n      return 'Vowel';\n    default:\n      return 'Consonant';\n  }\n}\n```"
  },
  {
    "task": "Create a program that assigns letter grades based on numerical scores.",
    "code": "```dart\nvoid main() {\n  int score = 85;\n  String grade;\n\n  if (score >= 90) {\n    grade = 'A';\n  } else if (score >= 80) {\n    grade = 'B';\n  } else if (score >= 70) {\n    grade = 'C';\n  } else if (score >= 60) {\n    grade = 'D';\n  } else {\n    grade = 'F';\n  }\n\n  print('The grade is: $grade');\n}\n```"
  },
  {
    "task": "Develop a routine that suggests clothing based on the current temperature.",
    "code": "```dart\nString suggestClothing(int temperature) {\n  if (temperature < 0) {\n    return \"Wear a heavy coat, gloves, and a hat.\";\n  } else if (temperature < 10) {\n    return \"Wear a coat and a sweater.\";\n  } else if (temperature < 20) {\n    return \"Wear a sweater or a light jacket.\";\n  } else if (temperature < 30) {\n    return \"Wear a t-shirt and jeans.\";\n  } else {\n    return \"Wear shorts and a t-shirt.\";\n  }\n}\n\nvoid main() {\n  int currentTemperature = 15; // Example temperature\n  print(suggestClothing(currentTemperature));\n}\n```"
  },
  {
    "task": "Implement a system that checks if a user is an adult or a minor based on their age.",
    "code": "```dart\nvoid main() {\n  int age = 17; // Example age\n  String status = checkAdultOrMinor(age);\n  print('The user is an $status.');\n}\n\nString checkAdultOrMinor(int age) {\n  if (age >= 18) {\n    return 'adult';\n  } else {\n    return 'minor';\n  }\n}\n```"
  },
  {
    "task": "Design a program that validates if a triangle can exist based on its side lengths.",
    "code": "```dart\nbool isTriangleValid(double a, double b, double c) {\n  if (a <= 0 || b <= 0 || c <= 0) {\n    return false;\n  }\n  if (a + b > c && a + c > b && b + c > a) {\n    return true;\n  }\n  return false;\n}\n\nvoid main() {\n  double side1 = 3;\n  double side2 = 4;\n  double side3 = 5;\n  \n  if (isTriangleValid(side1, side2, side3)) {\n    print('The triangle is valid.');\n  } else {\n    print('The triangle is not valid.');\n  }\n}\n```"
  },
  {
    "task": "Write a function that determines the largest of three input numbers.",
    "code": "```dart\nint largestOfThree(int a, int b, int c) {\n  if (a >= b && a >= c) {\n    return a;\n  } else if (b >= a && b >= c) {\n    return b;\n  } else {\n    return c;\n  }\n}\n```"
  },
  {
    "task": "Create a program that checks if a string is a palindrome.",
    "code": "```dart\nbool isPalindrome(String input) {\n  String normalized = input.toLowerCase().replaceAll(RegExp(r'[\\W_]+'), '');\n  String reversed = normalized.split('').reversed.join('');\n  return normalized == reversed;\n}\n\nvoid main() {\n  String testString = \"A man, a plan, a canal, Panama\";\n  if (isPalindrome(testString)) {\n    print('The string is a palindrome.');\n  } else {\n    print('The string is not a palindrome.');\n  }\n}\n```"
  },
  {
    "task": "Develop a routine that calculates the total cost with a discount applied if applicable.",
    "code": "```dart\ndouble calculateTotalCost(double originalCost, bool applyDiscount) {\n  double discountRate = 0.1; // 10% discount\n  if (applyDiscount) {\n    return originalCost * (1 - discountRate);\n  } else {\n    return originalCost;\n  }\n}\n```"
  },
  {
    "task": "Implement a system that checks if a person is eligible to vote based on age and citizenship.",
    "code": "```dart\nvoid checkVotingEligibility(int age, bool isCitizen) {\n  if (age >= 18 && isCitizen) {\n    print('The person is eligible to vote.');\n  } else {\n    print('The person is not eligible to vote.');\n  }\n}\n\nvoid main() {\n  checkVotingEligibility(20, true);  // Eligible\n  checkVotingEligibility(17, true);  // Not eligible\n  checkVotingEligibility(20, false); // Not eligible\n}\n```"
  },
  {
    "task": "Design a function that returns the day of the week given a number from 1 to 7.",
    "code": "```dart\nString getDayOfWeek(int dayNumber) {\n  switch (dayNumber) {\n    case 1:\n      return 'Monday';\n    case 2:\n      return 'Tuesday';\n    case 3:\n      return 'Wednesday';\n    case 4:\n      return 'Thursday';\n    case 5:\n      return 'Friday';\n    case 6:\n      return 'Saturday';\n    case 7:\n      return 'Sunday';\n    default:\n      return 'Invalid day';\n  }\n}\n```"
  },
  {
    "task": "Write a program that determines if a word is found within a given sentence.",
    "code": "```dart\nvoid main() {\n  String sentence = \"The quick brown fox jumps over the lazy dog\";\n  String word = \"fox\";\n\n  if (sentence.contains(word)) {\n    print(\"Word found in the sentence.\");\n  } else {\n    print(\"Word not found in the sentence.\");\n  }\n}\n```"
  },
  {
    "task": "Create a script that checks if a number is within a specified range.",
    "code": "```dart\nvoid main() {\n  int number = 5;\n  int lowerBound = 1;\n  int upperBound = 10;\n\n  if (number >= lowerBound && number <= upperBound) {\n    print('Number is within the range.');\n  } else {\n    print('Number is out of range.');\n  }\n}\n```"
  },
  {
    "task": "Develop a routine to decide if a user input is a valid email address.",
    "code": "```dart\nimport 'dart:io';\n\nbool isValidEmail(String email) {\n  // Basic check for email validity using a regular expression\n  final RegExp emailRegex = RegExp(\n    r'^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$',\n  );\n  return emailRegex.hasMatch(email);\n}\n\nvoid main() {\n  stdout.write('Enter an email address: ');\n  String? input = stdin.readLineSync();\n  if (input != null) {\n    if (isValidEmail(input)) {\n      print('The email address is valid.');\n    } else {\n      print('The email address is invalid.');\n    }\n  } else {\n    print('No input provided.');\n  }\n}\n```"
  },
  {
    "task": "Implement a program that categorizes a number as small, medium, or large.",
    "code": "```dart\nvoid categorizeNumber(int number) {\n  if (number < 10) {\n    print('small');\n  } else if (number < 100) {\n    print('medium');\n  } else {\n    print('large');\n  }\n}\n\nvoid main() {\n  categorizeNumber(5);    // Output: small\n  categorizeNumber(50);   // Output: medium\n  categorizeNumber(500);  // Output: large\n}\n```"
  },
  {
    "task": "Design a function that outputs the season based on the month provided.",
    "code": "```dart\nString getSeason(String month) {\n  month = month.toLowerCase();\n  if (month == 'december' || month == 'january' || month == 'february') {\n    return 'Winter';\n  } else if (month == 'march' || month == 'april' || month == 'may') {\n    return 'Spring';\n  } else if (month == 'june' || month == 'july' || month == 'august') {\n    return 'Summer';\n  } else if (month == 'september' || month == 'october' || month == 'november') {\n    return 'Fall';\n  } else {\n    return 'Invalid month';\n  }\n}\n```"
  },
  {
    "task": "Write a program that checks if a string contains only alphabetic characters.",
    "code": "```dart\nbool containsOnlyAlphabetic(String input) {\n  for (int i = 0; i < input.length; i++) {\n    if (!((input.codeUnitAt(i) >= 65 && input.codeUnitAt(i) <= 90) ||\n        (input.codeUnitAt(i) >= 97 && input.codeUnitAt(i) <= 122))) {\n      return false;\n    }\n  }\n  return true;\n}\n\nvoid main() {\n  String testString = \"HelloWorld\";\n  if (containsOnlyAlphabetic(testString)) {\n    print(\"The string contains only alphabetic characters.\");\n  } else {\n    print(\"The string contains non-alphabetic characters.\");\n  }\n}\n```"
  },
  {
    "task": "Create a routine that decides the type of triangle based on its angles.",
    "code": "```dart\nString triangleType(int angle1, int angle2, int angle3) {\n  if (angle1 + angle2 + angle3 != 180 || angle1 <= 0 || angle2 <= 0 || angle3 <= 0) {\n    return 'Invalid';\n  }\n  if (angle1 == 90 || angle2 == 90 || angle3 == 90) {\n    return 'Right';\n  }\n  if (angle1 < 90 && angle2 < 90 && angle3 < 90) {\n    return 'Acute';\n  }\n  return 'Obtuse';\n}\n```"
  },
  {
    "task": "Develop a program that suggests a meal based on the time of day.",
    "code": "```dart\nvoid main() {\n  int hour = DateTime.now().hour;\n\n  if (hour >= 5 && hour < 12) {\n    print('How about some breakfast?');\n  } else if (hour >= 12 && hour < 17) {\n    print('Time for lunch!');\n  } else if (hour >= 17 && hour < 21) {\n    print('Dinner is served.');\n  } else {\n    print('Maybe a late-night snack?');\n  }\n}\n```"
  },
  {
    "task": "Implement a function that determines if a point lies within a circle given its radius.",
    "code": "```dart\nbool isPointInCircle(double pointX, double pointY, double circleCenterX, double circleCenterY, double radius) {\n  double distanceSquared = (pointX - circleCenterX) * (pointX - circleCenterX) +\n                           (pointY - circleCenterY) * (pointY - circleCenterY);\n  double radiusSquared = radius * radius;\n  if (distanceSquared <= radiusSquared) {\n    return true;\n  } else {\n    return false;\n  }\n}\n```"
  },
  {
    "task": "Design a script that calculates overtime pay based on hours worked.",
    "code": "```dart\nvoid main() {\n  double calculateOvertimePay(int hoursWorked, double hourlyRate) {\n    const int regularHours = 40;\n    double overtimePay = 0.0;\n    \n    if (hoursWorked > regularHours) {\n      int overtimeHours = hoursWorked - regularHours;\n      overtimePay = overtimeHours * hourlyRate * 1.5;\n    }\n    \n    return overtimePay;\n  }\n\n  int hoursWorked = 45;\n  double hourlyRate = 20.0;\n  double overtimePay = calculateOvertimePay(hoursWorked, hourlyRate);\n  \n  print('Overtime pay is: \\$${overtimePay.toStringAsFixed(2)}');\n}\n```"
  },
  {
    "task": "Write a program that checks if two strings are anagrams of each other.",
    "code": "```dart\nbool areAnagrams(String str1, String str2) {\n  if (str1.length != str2.length) return false;\n  \n  List<String> sortedStr1 = str1.split('')..sort();\n  List<String> sortedStr2 = str2.split('')..sort();\n  \n  return sortedStr1.join() == sortedStr2.join();\n}\n\nvoid main() {\n  String string1 = \"listen\";\n  String string2 = \"silent\";\n  \n  if (areAnagrams(string1, string2)) {\n    print(\"The strings are anagrams.\");\n  } else {\n    print(\"The strings are not anagrams.\");\n  }\n}\n```"
  },
  {
    "task": "Create a function that classifies numbers as prime or composite.",
    "code": "```dart\nbool isPrime(int num) {\n  if (num <= 1) return false;\n  if (num <= 3) return true;\n  if (num % 2 == 0 || num % 3 == 0) return false;\n  for (int i = 5; i * i <= num; i += 6) {\n    if (num % i == 0 || num % (i + 2) == 0) return false;\n  }\n  return true;\n}\n\nString classifyNumber(int num) {\n  return isPrime(num) ? 'Prime' : 'Composite';\n}\n```"
  },
  {
    "task": "Develop a routine to determine if a number is a power of two.",
    "code": "```dart\nbool isPowerOfTwo(int number) {\n  if (number <= 0) {\n    return false;\n  }\n  return (number & (number - 1)) == 0;\n}\n```"
  },
  {
    "task": "Implement a program that checks if a list is sorted in ascending order.",
    "code": "```dart\nbool isSorted(List<int> list) {\n  for (int i = 0; i < list.length - 1; i++) {\n    if (list[i] > list[i + 1]) {\n      return false;\n    }\n  }\n  return true;\n}\n\nvoid main() {\n  List<int> numbers = [1, 2, 3, 4, 5];\n  print(isSorted(numbers)); // Outputs: true\n\n  List<int> numbers2 = [1, 3, 2, 4, 5];\n  print(isSorted(numbers2)); // Outputs: false\n}\n```"
  },
  {
    "task": "Design a function that suggests a sport based on the weather conditions.",
    "code": "```dart\nString suggestSport(String weatherCondition) {\n  if (weatherCondition == 'sunny') {\n    return 'Soccer';\n  } else if (weatherCondition == 'rainy') {\n    return 'Indoor Basketball';\n  } else if (weatherCondition == 'snowy') {\n    return 'Skiing';\n  } else if (weatherCondition == 'windy') {\n    return 'Kite Flying';\n  } else {\n    return 'Gym Workout';\n  }\n}\n```"
  },
  {
    "task": "Write a program that determines if an entered date is valid.",
    "code": "```dart\nimport 'dart:io';\n\nbool isValidDate(int year, int month, int day) {\n  if (year < 1 || month < 1 || month > 12 || day < 1) return false;\n\n  List<int> daysInMonth = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\n  if (month == 2 && (year % 400 == 0 || (year % 100 != 0 && year % 4 == 0))) {\n    daysInMonth[1] = 29; // Leap year adjustment\n  }\n\n  return day <= daysInMonth[month - 1];\n}\n\nvoid main() {\n  print('Enter year:');\n  int year = int.parse(stdin.readLineSync()!);\n\n  print('Enter month:');\n  int month = int.parse(stdin.readLineSync()!);\n\n  print('Enter day:');\n  int day = int.parse(stdin.readLineSync()!);\n\n  if (isValidDate(year, month, day)) {\n    print('The date is valid.');\n  } else {\n    print('The date is invalid.');\n  }\n}\n```"
  },
  {
    "task": "Create a script to decide which of two products to buy based on price and reviews.",
    "code": "```dart\nvoid main() {\n  var productA = {'price': 100, 'reviews': 4.5};\n  var productB = {'price': 120, 'reviews': 4.8};\n\n  if (productA['price'] < productB['price'] && productA['reviews'] >= productB['reviews']) {\n    print('Buy Product A');\n  } else if (productB['price'] < productA['price'] && productB['reviews'] >= productA['reviews']) {\n    print('Buy Product B');\n  } else if (productA['reviews'] > productB['reviews']) {\n    print('Buy Product A');\n  } else if (productB['reviews'] > productA['reviews']) {\n    print('Buy Product B');\n  } else {\n    if (productA['price'] < productB['price']) {\n      print('Buy Product A');\n    } else {\n      print('Buy Product B');\n    }\n  }\n}\n```"
  },
  {
    "task": "Develop a function that categorizes a person\u2019s BMI as underweight, normal, overweight, or obese.",
    "code": "```dart\nString categorizeBMI(double bmi) {\n  if (bmi < 18.5) {\n    return 'underweight';\n  } else if (bmi >= 18.5 && bmi < 24.9) {\n    return 'normal';\n  } else if (bmi >= 25 && bmi < 29.9) {\n    return 'overweight';\n  } else {\n    return 'obese';\n  }\n}\n```"
  },
  {
    "task": "Implement a program that checks if a credit card number is valid using the Luhn algorithm.",
    "code": "```dart\nbool isValidCreditCard(String cardNumber) {\n  List<int> digits = cardNumber.replaceAll(RegExp(r'\\D'), '').split('').map(int.parse).toList();\n\n  if (digits.isEmpty) return false;\n\n  int sum = 0;\n  bool isSecond = false;\n\n  for (int i = digits.length - 1; i >= 0; i--) {\n    int digit = digits[i];\n    if (isSecond) {\n      digit *= 2;\n      if (digit > 9) {\n        digit -= 9;\n      }\n    }\n    sum += digit;\n    isSecond = !isSecond;\n  }\n\n  return sum % 10 == 0;\n}\n\nvoid main() {\n  String cardNumber = \"4532015112830366\"; // Example credit card number\n  if (isValidCreditCard(cardNumber)) {\n    print(\"Valid credit card number\");\n  } else {\n    print(\"Invalid credit card number\");\n  }\n}\n```"
  },
  {
    "task": "Design a routine that outputs a greeting based on the current time of day.",
    "code": "```dart\nimport 'package:intl/intl.dart';\n\nvoid main() {\n  DateTime now = DateTime.now();\n  int hour = int.parse(DateFormat('HH').format(now));\n  \n  if (hour >= 5 && hour < 12) {\n    print('Good Morning');\n  } else if (hour >= 12 && hour < 17) {\n    print('Good Afternoon');\n  } else if (hour >= 17 && hour < 21) {\n    print('Good Evening');\n  } else {\n    print('Good Night');\n  }\n}\n```"
  },
  {
    "task": "Write a program that determines if a given word can be formed with a set of letters.",
    "code": "```dart\nbool canFormWord(String word, List<String> letters) {\n  Map<String, int> letterCount = {};\n\n  for (var letter in letters) {\n    letterCount[letter] = (letterCount[letter] ?? 0) + 1;\n  }\n\n  for (var char in word.split('')) {\n    if (letterCount[char] == null || letterCount[char] == 0) {\n      return false;\n    } else {\n      letterCount[char] = letterCount[char]! - 1;\n    }\n  }\n\n  return true;\n}\n\nvoid main() {\n  String word = \"hello\";\n  List<String> letters = [\"e\", \"l\", \"h\", \"o\", \"l\"];\n  print(canFormWord(word, letters)); // true\n\n  letters = [\"e\", \"l\", \"h\", \"o\"];\n  print(canFormWord(word, letters)); // false\n}\n```"
  },
  {
    "task": "Create a function that outputs the appropriate greeting based on the day of the week.",
    "code": "```dart\nString getGreeting(String dayOfWeek) {\n  switch (dayOfWeek.toLowerCase()) {\n    case 'monday':\n      return 'Hello, it\\'s Monday!';\n    case 'tuesday':\n      return 'Hello, it\\'s Tuesday!';\n    case 'wednesday':\n      return 'Hello, it\\'s Wednesday!';\n    case 'thursday':\n      return 'Hello, it\\'s Thursday!';\n    case 'friday':\n      return 'Hello, it\\'s Friday!';\n    case 'saturday':\n      return 'Hello, it\\'s Saturday!';\n    case 'sunday':\n      return 'Hello, it\\'s Sunday!';\n    default:\n      return 'Invalid day!';\n  }\n}\n\nvoid main() {\n  print(getGreeting('Monday'));\n  print(getGreeting('Sunday'));\n  print(getGreeting('Funday'));\n}\n```"
  },
  {
    "task": "Develop a system to determine if a person qualifies for a senior citizen discount.",
    "code": "```dart\nString checkSeniorDiscount(int age) {\n  if (age >= 65) {\n    return 'Eligible for senior citizen discount';\n  } else {\n    return 'Not eligible for senior citizen discount';\n  }\n}\n\nvoid main() {\n  int age = 70; // Example age\n  String result = checkSeniorDiscount(age);\n  print(result);\n}\n```"
  },
  {
    "task": "Implement a function that checks if a number is a perfect square.",
    "code": "```dart\nbool isPerfectSquare(int number) {\n  if (number < 0) return false;\n  int root = number ~/ (number).sqrt().toInt();\n  return root * root == number;\n}\n\nextension on int {\n  double sqrt() => this.toDouble().sqrt();\n}\n\nextension on double {\n  double sqrt() => this == 0.0 ? 0.0 : this / 2.0;\n}\n```"
  },
  {
    "task": "Design a program that outputs the correct shipping cost based on weight and distance.",
    "code": "```dart\ndouble calculateShippingCost(double weight, double distance) {\n  double cost;\n\n  if (weight < 5) {\n    if (distance < 50) {\n      cost = 5.0;\n    } else if (distance < 200) {\n      cost = 10.0;\n    } else {\n      cost = 20.0;\n    }\n  } else if (weight < 20) {\n    if (distance < 50) {\n      cost = 10.0;\n    } else if (distance < 200) {\n      cost = 20.0;\n    } else {\n      cost = 30.0;\n    }\n  } else {\n    if (distance < 50) {\n      cost = 20.0;\n    } else if (distance < 200) {\n      cost = 30.0;\n    } else {\n      cost = 50.0;\n    }\n  }\n\n  return cost;\n}\n\nvoid main() {\n  double weight = 10.0; // Example weight\n  double distance = 120.0; // Example distance\n\n  double shippingCost = calculateShippingCost(weight, distance);\n  print('The shipping cost is: \\$${shippingCost.toStringAsFixed(2)}');\n}\n```"
  },
  {
    "task": "Write a routine that chooses the correct pronoun based on gender input.",
    "code": "```dart\nString choosePronoun(String gender) {\n  if (gender.toLowerCase() == 'male') {\n    return 'he';\n  } else if (gender.toLowerCase() == 'female') {\n    return 'she';\n  } else {\n    return 'they';\n  }\n}\n```"
  },
  {
    "task": "Create a program that checks if a user input is a palindrome number.",
    "code": "```dart\nimport 'dart:io';\n\nvoid main() {\n  print('Enter a number:');\n  String? input = stdin.readLineSync();\n  if (input != null && input.isNotEmpty) {\n    String reversedInput = input.split('').reversed.join('');\n    if (input == reversedInput) {\n      print('$input is a palindrome number.');\n    } else {\n      print('$input is not a palindrome number.');\n    }\n  } else {\n    print('Invalid input.');\n  }\n}\n```"
  },
  {
    "task": "Develop a script to decide if a number is a perfect number.",
    "code": "```dart\nbool isPerfectNumber(int number) {\n  if (number <= 1) return false;\n  int sum = 0;\n  for (int i = 1; i <= number ~/ 2; i++) {\n    if (number % i == 0) {\n      sum += i;\n    }\n  }\n  return sum == number;\n}\n\nvoid main() {\n  int number = 28; // Example number\n  if (isPerfectNumber(number)) {\n    print('$number is a perfect number.');\n  } else {\n    print('$number is not a perfect number.');\n  }\n}\n```"
  },
  {
    "task": "Implement a system that determines the winner in a rock-paper-scissors game.",
    "code": "```dart\nString determineWinner(String player1, String player2) {\n  if (player1 == player2) {\n    return 'Draw';\n  } else if ((player1 == 'rock' && player2 == 'scissors') ||\n             (player1 == 'scissors' && player2 == 'paper') ||\n             (player1 == 'paper' && player2 == 'rock')) {\n    return 'Player 1 wins';\n  } else {\n    return 'Player 2 wins';\n  }\n}\n\nvoid main() {\n  print(determineWinner('rock', 'scissors'));  // Player 1 wins\n  print(determineWinner('rock', 'paper'));     // Player 2 wins\n  print(determineWinner('paper', 'paper'));    // Draw\n}\n```"
  },
  {
    "task": "Design a function that suggests a movie genre based on user mood.",
    "code": "```dart\nString suggestMovieGenre(String mood) {\n  if (mood.toLowerCase() == 'happy') {\n    return 'Comedy';\n  } else if (mood.toLowerCase() == 'sad') {\n    return 'Drama';\n  } else if (mood.toLowerCase() == 'excited') {\n    return 'Action';\n  } else if (mood.toLowerCase() == 'romantic') {\n    return 'Romance';\n  } else if (mood.toLowerCase() == 'scared') {\n    return 'Horror';\n  } else {\n    return 'Documentary';\n  }\n}\n```"
  },
  {
    "task": "Write a program that checks if a file extension is valid for an image file.",
    "code": "```dart\nvoid main() {\n  String fileName = 'example.png';\n  List<String> validExtensions = ['jpg', 'jpeg', 'png', 'gif', 'bmp', 'tiff'];\n\n  bool isValidImageFile(String fileName) {\n    String extension = fileName.split('.').last.toLowerCase();\n    return validExtensions.contains(extension);\n  }\n\n  if (isValidImageFile(fileName)) {\n    print('The file is a valid image.');\n  } else {\n    print('The file is not a valid image.');\n  }\n}\n```"
  },
  {
    "task": "Create a routine that decides the appropriate currency symbol based on country.",
    "code": "```dart\nString getCurrencySymbol(String country) {\n  switch (country.toLowerCase()) {\n    case 'united states':\n      return '\\$';\n    case 'eurozone':\n      return '\u20ac';\n    case 'united kingdom':\n      return '\u00a3';\n    case 'japan':\n      return '\u00a5';\n    case 'india':\n      return '\u20b9';\n    case 'china':\n      return '\u00a5';\n    default:\n      return '';\n  }\n}\n```"
  },
  {
    "task": "Develop a function that determines if a string is a valid palindrome ignoring spaces and punctuation.",
    "code": "```dart\nbool isValidPalindrome(String s) {\n  String cleanString = s.replaceAll(RegExp(r'[^A-Za-z0-9]'), '').toLowerCase();\n  int left = 0;\n  int right = cleanString.length - 1;\n  \n  while (left < right) {\n    if (cleanString[left] != cleanString[right]) {\n      return false;\n    }\n    left++;\n    right--;\n  }\n  \n  return true;\n}\n```"
  },
  {
    "task": "Implement a program that checks if a number is in the Fibonacci sequence.",
    "code": "```dart\nbool isFibonacci(int n) {\n  if (n < 0) return false;\n  int a = 0, b = 1;\n  while (b < n) {\n    int temp = a + b;\n    a = b;\n    b = temp;\n  }\n  return b == n || a == n;\n}\n\nvoid main() {\n  int number = 21;\n  if (isFibonacci(number)) {\n    print('$number is in the Fibonacci sequence.');\n  } else {\n    print('$number is not in the Fibonacci sequence.');\n  }\n}\n```"
  },
  {
    "task": "Design a script to calculate the correct tip based on service quality rating.",
    "code": "```dart\nvoid main() {\n  double calculateTip(double billAmount, String serviceQuality) {\n    double tipPercentage;\n    \n    switch (serviceQuality.toLowerCase()) {\n      case 'excellent':\n        tipPercentage = 0.20;\n        break;\n      case 'good':\n        tipPercentage = 0.15;\n        break;\n      case 'average':\n        tipPercentage = 0.10;\n        break;\n      case 'poor':\n        tipPercentage = 0.05;\n        break;\n      default:\n        tipPercentage = 0.0;\n    }\n    \n    return billAmount * tipPercentage;\n  }\n\n  double billAmount = 100.0;\n  String serviceQuality = 'excellent';\n  double tip = calculateTip(billAmount, serviceQuality);\n\n  print('The tip for a service rated as $serviceQuality on a bill of \\$${billAmount.toStringAsFixed(2)} is \\$${tip.toStringAsFixed(2)}');\n}\n```"
  },
  {
    "task": "Write a function that determines if a year is a century year.",
    "code": "```dart\nbool isCenturyYear(int year) {\n  if (year % 100 == 0) {\n    return true;\n  } else {\n    return false;\n  }\n}\n```"
  },
  {
    "task": "Create a program that checks if a date falls on a weekend.",
    "code": "```dart\nimport 'package:intl/intl.dart';\n\nbool isWeekend(DateTime date) {\n  int dayOfWeek = date.weekday;\n  return dayOfWeek == DateTime.saturday || dayOfWeek == DateTime.sunday;\n}\n\nvoid main() {\n  DateTime date = DateTime.now(); // You can replace this with any date\n  if (isWeekend(date)) {\n    print('The date falls on a weekend.');\n  } else {\n    print('The date is a weekday.');\n  }\n}\n```"
  },
  {
    "task": "Develop a routine that suggests a book based on genre preference.",
    "code": "```dart\nString suggestBook(String genre) {\n  if (genre.toLowerCase() == 'fantasy') {\n    return 'The Hobbit by J.R.R. Tolkien';\n  } else if (genre.toLowerCase() == 'science fiction') {\n    return 'Dune by Frank Herbert';\n  } else if (genre.toLowerCase() == 'mystery') {\n    return 'The Girl with the Dragon Tattoo by Stieg Larsson';\n  } else if (genre.toLowerCase() == 'romance') {\n    return 'Pride and Prejudice by Jane Austen';\n  } else if (genre.toLowerCase() == 'horror') {\n    return 'The Shining by Stephen King';\n  } else {\n    return 'Genre not recognized. Try another genre.';\n  }\n}\n\nvoid main() {\n  print(suggestBook('fantasy')); // Output: The Hobbit by J.R.R. Tolkien\n  print(suggestBook('science fiction')); // Output: Dune by Frank Herbert\n  print(suggestBook('romance')); // Output: Pride and Prejudice by Jane Austen\n  print(suggestBook('unknown')); // Output: Genre not recognized. Try another genre.\n}\n```"
  },
  {
    "task": "Implement a system that determines if a student passes or fails based on their grades.",
    "code": "```dart\nvoid main() {\n  int grade = 75; // Example grade\n  String result = determinePassOrFail(grade);\n  print('The student has $result.');\n}\n\nString determinePassOrFail(int grade) {\n  if (grade >= 50) {\n    return 'passed';\n  } else {\n    return 'failed';\n  }\n}\n```"
  },
  {
    "task": "Design a function to validate if a string is a valid URL.",
    "code": "```dart\nbool isValidUrl(String url) {\n  Uri? parsedUrl;\n  try {\n    parsedUrl = Uri.parse(url);\n  } catch (e) {\n    return false;\n  }\n\n  if (parsedUrl.scheme.isEmpty || parsedUrl.host.isEmpty) {\n    return false;\n  }\n\n  return parsedUrl.isAbsolute;\n}\n```"
  },
  {
    "task": "Write a program that checks if a point is inside a rectangle given its coordinates.",
    "code": "```dart\nvoid main() {\n  double pointX = 5.0;\n  double pointY = 3.0;\n  \n  double rectLeft = 2.0;\n  double rectTop = 2.0;\n  double rectRight = 8.0;\n  double rectBottom = 5.0;\n  \n  if (pointX >= rectLeft && pointX <= rectRight && pointY >= rectTop && pointY <= rectBottom) {\n    print('The point is inside the rectangle.');\n  } else {\n    print('The point is outside the rectangle.');\n  }\n}\n```"
  },
  {
    "task": "Create a script to determine if a word can be constructed from a given set of letters.",
    "code": "```dart\nbool canConstruct(String word, String letters) {\n  Map<String, int> letterCount = {};\n\n  for (var letter in letters.split('')) {\n    letterCount[letter] = (letterCount[letter] ?? 0) + 1;\n  }\n\n  for (var letter in word.split('')) {\n    if (letterCount[letter] == null || letterCount[letter]! <= 0) {\n      return false;\n    }\n    letterCount[letter] = letterCount[letter]! - 1;\n  }\n\n  return true;\n}\n\nvoid main() {\n  String word = 'hello';\n  String letters = 'lloeh';\n\n  bool result = canConstruct(word, letters);\n  print(result); // Output: true\n}\n```"
  },
  {
    "task": "Develop a routine that calculates insurance premiums based on age and driving record.",
    "code": "```dart\ndouble calculateInsurancePremium(int age, bool hasGoodDrivingRecord) {\n  double premium;\n\n  if (age < 25) {\n    if (hasGoodDrivingRecord) {\n      premium = 1500.0;\n    } else {\n      premium = 2000.0;\n    }\n  } else {\n    if (hasGoodDrivingRecord) {\n      premium = 1000.0;\n    } else {\n      premium = 1200.0;\n    }\n  }\n\n  return premium;\n}\n```"
  },
  {
    "task": "Implement a program that checks for palindrome sentences.",
    "code": "```dart\nbool isPalindrome(String sentence) {\n  String cleaned = sentence.replaceAll(RegExp(r'[\\W_]'), '').toLowerCase();\n  int start = 0;\n  int end = cleaned.length - 1;\n  \n  while (start < end) {\n    if (cleaned[start] != cleaned[end]) {\n      return false;\n    }\n    start++;\n    end--;\n  }\n  return true;\n}\n\nvoid main() {\n  String sentence = \"A man, a plan, a canal, Panama\";\n  if (isPalindrome(sentence)) {\n    print(\"The sentence is a palindrome.\");\n  } else {\n    print(\"The sentence is not a palindrome.\");\n  }\n}\n```"
  },
  {
    "task": "Design a function to evaluate if a string contains balanced parentheses.",
    "code": "```dart\nbool isBalanced(String input) {\n  int balance = 0;\n  for (int i = 0; i < input.length; i++) {\n    if (input[i] == '(') {\n      balance++;\n    } else if (input[i] == ')') {\n      balance--;\n      if (balance < 0) {\n        return false;\n      }\n    }\n  }\n  return balance == 0;\n}\n```"
  },
  {
    "task": "Write a program that suggests a pet based on living conditions and preferences.",
    "code": "```dart\nimport 'dart:io';\n\nvoid main() {\n  print('Do you live in an apartment? (yes/no): ');\n  String? livingCondition = stdin.readLineSync()?.toLowerCase();\n\n  print('Do you prefer a low maintenance pet? (yes/no): ');\n  String? maintenancePreference = stdin.readLineSync()?.toLowerCase();\n\n  if (livingCondition == 'yes' && maintenancePreference == 'yes') {\n    print('Suggestion: Cat');\n  } else if (livingCondition == 'yes' && maintenancePreference == 'no') {\n    print('Suggestion: Dog');\n  } else if (livingCondition == 'no' && maintenancePreference == 'yes') {\n    print('Suggestion: Fish');\n  } else if (livingCondition == 'no' && maintenancePreference == 'no') {\n    print('Suggestion: Horse');\n  } else {\n    print('Invalid input. Please answer with \"yes\" or \"no\".');\n  }\n}\n```"
  },
  {
    "task": "Create a routine that determines if a phone number is valid based on format.",
    "code": "```dart\nbool isValidPhoneNumber(String phoneNumber) {\n  if (phoneNumber.length != 10) {\n    return false;\n  }\n  for (int i = 0; i < phoneNumber.length; i++) {\n    if (!RegExp(r'\\d').hasMatch(phoneNumber[i])) {\n      return false;\n    }\n  }\n  return true;\n}\n\nvoid main() {\n  String phoneNumber = \"1234567890\";\n  if (isValidPhoneNumber(phoneNumber)) {\n    print(\"Valid phone number\");\n  } else {\n    print(\"Invalid phone number\");\n  }\n}\n```"
  },
  {
    "task": "Develop a function that checks if two rectangles overlap.",
    "code": "```dart\nbool doRectanglesOverlap(\n    int rect1X, int rect1Y, int rect1Width, int rect1Height,\n    int rect2X, int rect2Y, int rect2Width, int rect2Height) {\n  \n  if (rect1X >= rect2X + rect2Width || rect2X >= rect1X + rect1Width) {\n    return false;\n  }\n\n  if (rect1Y >= rect2Y + rect2Height || rect2Y >= rect1Y + rect1Height) {\n    return false;\n  }\n\n  return true;\n}\n```"
  },
  {
    "task": "Implement a program that chooses a beverage based on user input time.",
    "code": "```dart\nimport 'dart:io';\n\nvoid main() {\n  print('Enter the current hour (0-23):');\n  int hour = int.parse(stdin.readLineSync()!);\n\n  String beverage;\n  if (hour >= 0 && hour < 12) {\n    beverage = 'Coffee';\n  } else if (hour >= 12 && hour < 18) {\n    beverage = 'Tea';\n  } else if (hour >= 18 && hour <= 23) {\n    beverage = 'Juice';\n  } else {\n    beverage = 'Invalid hour';\n  }\n\n  print('Recommended beverage: $beverage');\n}\n```"
  },
  {
    "task": "Design a script to determine if a URL is secure (HTTPS).",
    "code": "```dart\nbool isSecureUrl(String url) {\n  if (url.startsWith('https://')) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nvoid main() {\n  String url = 'https://example.com';\n  if (isSecureUrl(url)) {\n    print('The URL is secure.');\n  } else {\n    print('The URL is not secure.');\n  }\n}\n```"
  },
  {
    "task": "Write a function that outputs different messages based on the input number's divisibility.",
    "code": "```dart\nvoid checkDivisibility(int number) {\n  if (number % 3 == 0 && number % 5 == 0) {\n    print('Divisible by both 3 and 5');\n  } else if (number % 3 == 0) {\n    print('Divisible by 3');\n  } else if (number % 5 == 0) {\n    print('Divisible by 5');\n  } else {\n    print('Not divisible by 3 or 5');\n  }\n}\n```"
  },
  {
    "task": "Create a program to decide if a person should bring an umbrella based on the weather forecast.",
    "code": "```dart\nvoid main() {\n  String weatherForecast = 'rainy';\n\n  if (weatherForecast == 'rainy' || weatherForecast == 'stormy') {\n    print('Bring an umbrella.');\n  } else {\n    print('No need for an umbrella.');\n  }\n}\n```"
  },
  {
    "task": "Develop a routine that checks if a chess move is valid.",
    "code": "```dart\nclass ChessBoard {\n  static const int boardSize = 8;\n\n  bool isValidMove(String piece, String from, String to) {\n    int fromRow = from.codeUnitAt(1) - '1'.codeUnitAt(0);\n    int fromCol = from.codeUnitAt(0) - 'a'.codeUnitAt(0);\n    int toRow = to.codeUnitAt(1) - '1'.codeUnitAt(0);\n    int toCol = to.codeUnitAt(0) - 'a'.codeUnitAt(0);\n\n    if (!_isWithinBounds(fromRow, fromCol) || !_isWithinBounds(toRow, toCol)) {\n      return false;\n    }\n\n    switch (piece.toLowerCase()) {\n      case 'pawn':\n        return _isValidPawnMove(fromRow, fromCol, toRow, toCol);\n      case 'rook':\n        return _isValidRookMove(fromRow, fromCol, toRow, toCol);\n      case 'knight':\n        return _isValidKnightMove(fromRow, fromCol, toRow, toCol);\n      case 'bishop':\n        return _isValidBishopMove(fromRow, fromCol, toRow, toCol);\n      case 'queen':\n        return _isValidQueenMove(fromRow, fromCol, toRow, toCol);\n      case 'king':\n        return _isValidKingMove(fromRow, fromCol, toRow, toCol);\n      default:\n        return false;\n    }\n  }\n\n  bool _isWithinBounds(int row, int col) {\n    return row >= 0 && row < boardSize && col >= 0 && col < boardSize;\n  }\n\n  bool _isValidPawnMove(int fromRow, int fromCol, int toRow, int toCol) {\n    return fromCol == toCol && (toRow == fromRow + 1 || toRow == fromRow - 1);\n  }\n\n  bool _isValidRookMove(int fromRow, int fromCol, int toRow, int toCol) {\n    return fromRow == toRow || fromCol == toCol;\n  }\n\n  bool _isValidKnightMove(int fromRow, int fromCol, int toRow, int toCol) {\n    int rowDiff = (fromRow - toRow).abs();\n    int colDiff = (fromCol - toCol).abs();\n    return (rowDiff == 2 && colDiff == 1) || (rowDiff == 1 && colDiff == 2);\n  }\n\n  bool _isValidBishopMove(int fromRow, int fromCol, int toRow, int toCol) {\n    return (fromRow - toRow).abs() == (fromCol - toCol).abs();\n  }\n\n  bool _isValidQueenMove(int fromRow, int fromCol, int toRow, int toCol) {\n    return _isValidRookMove(fromRow, fromCol, toRow, toCol) || \n           _isValidBishopMove(fromRow, fromCol, toRow, toCol);\n  }\n\n  bool _isValidKingMove(int fromRow, int fromCol, int toRow, int toCol) {\n    int rowDiff = (fromRow - toRow).abs();\n    int colDiff = (fromCol - toCol).abs();\n    return rowDiff <= 1 && colDiff <= 1;\n  }\n}\n```"
  },
  {
    "task": "Implement a program that outputs the number of days in a given month.",
    "code": "```dart\nimport 'dart:io';\n\nvoid main() {\n  print('Enter a month (1-12):');\n  int month = int.parse(stdin.readLineSync()!);\n\n  int daysInMonth;\n\n  if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n    daysInMonth = 31;\n  } else if (month == 4 || month == 6 || month == 9 || month == 11) {\n    daysInMonth = 30;\n  } else if (month == 2) {\n    daysInMonth = 28; // Assuming it's not a leap year\n  } else {\n    print('Invalid month');\n    return;\n  }\n\n  print('Number of days: $daysInMonth');\n}\n```"
  },
  {
    "task": "Design a function that validates if a string is a valid hexadecimal number.",
    "code": "```dart\nbool isValidHexadecimal(String input) {\n  if (input.isEmpty) return false;\n  for (var char in input.split('')) {\n    if (!(('0'.compareTo(char) <= 0 && '9'.compareTo(char) >= 0) ||\n          ('a'.compareTo(char) <= 0 && 'f'.compareTo(char) >= 0) ||\n          ('A'.compareTo(char) <= 0 && 'F'.compareTo(char) >= 0))) {\n      return false;\n    }\n  }\n  return true;\n}\n```"
  },
  {
    "task": "Write a script that checks if a word is present in a list of predefined words.",
    "code": "```dart\nvoid main() {\n  List<String> predefinedWords = ['apple', 'banana', 'cherry'];\n  String wordToCheck = 'banana';\n\n  if (predefinedWords.contains(wordToCheck)) {\n    print('The word is present in the list.');\n  } else {\n    print('The word is not present in the list.');\n  }\n}\n```"
  },
  {
    "task": "Create a routine to decide the correct tax bracket for a given income.",
    "code": "```dart\nString taxBracket(double income) {\n  if (income <= 9875) {\n    return '10%';\n  } else if (income <= 40125) {\n    return '12%';\n  } else if (income <= 85525) {\n    return '22%';\n  } else if (income <= 163300) {\n    return '24%';\n  } else if (income <= 207350) {\n    return '32%';\n  } else if (income <= 518400) {\n    return '35%';\n  } else {\n    return '37%';\n  }\n}\n```"
  },
  {
    "task": "Develop a function that determines if a point is within a triangle.",
    "code": "```dart\nbool isPointInTriangle(double px, double py, double ax, double ay, double bx, double by, double cx, double cy) {\n  double sign(double x1, double y1, double x2, double y2, double x3, double y3) {\n    return (x1 - x3) * (y2 - y3) - (x2 - x3) * (y1 - y3);\n  }\n\n  bool b1, b2, b3;\n\n  b1 = sign(px, py, ax, ay, bx, by) < 0.0;\n  b2 = sign(px, py, bx, by, cx, cy) < 0.0;\n  b3 = sign(px, py, cx, cy, ax, ay) < 0.0;\n\n  return ((b1 == b2) && (b2 == b3));\n}\n```"
  },
  {
    "task": "Implement a program that checks if a given string is a valid binary number.",
    "code": "```dart\nbool isValidBinary(String input) {\n  for (var char in input.split('')) {\n    if (char != '0' && char != '1') {\n      return false;\n    }\n  }\n  return true;\n}\n\nvoid main() {\n  String test1 = \"101010\";\n  String test2 = \"10201\";\n  \n  print(isValidBinary(test1)); // true\n  print(isValidBinary(test2)); // false\n}\n```"
  },
  {
    "task": "Design a system to evaluate the risk level of an investment based on criteria.",
    "code": "```dart\nString evaluateRiskLevel(double investmentAmount, double volatility, double marketTrend) {\n  if (investmentAmount > 1000000 && volatility < 0.2 && marketTrend > 0.5) {\n    return \"Low Risk\";\n  } else if (investmentAmount > 500000 && volatility < 0.5 && marketTrend > 0) {\n    return \"Medium Risk\";\n  } else {\n    return \"High Risk\";\n  }\n}\n\nvoid main() {\n  double investmentAmount = 750000;\n  double volatility = 0.3;\n  double marketTrend = 0.4;\n  \n  String riskLevel = evaluateRiskLevel(investmentAmount, volatility, marketTrend);\n  print(\"The investment risk level is: $riskLevel\");\n}\n```"
  },
  {
    "task": "Write a program that suggests a vacation destination based on budget and preferences.",
    "code": "```dart\nimport 'dart:io';\n\nvoid main() {\n  print('Enter your budget: ');\n  double budget = double.parse(stdin.readLineSync()!);\n\n  print('Do you prefer a beach or mountain vacation? (beach/mountain): ');\n  String preference = stdin.readLineSync()!.toLowerCase();\n\n  if (budget < 500) {\n    if (preference == 'beach') {\n      print('Suggesting a local beach destination.');\n    } else if (preference == 'mountain') {\n      print('Suggesting a local mountain destination.');\n    } else {\n      print('Invalid preference.');\n    }\n  } else if (budget < 1500) {\n    if (preference == 'beach') {\n      print('Suggesting a national beach destination.');\n    } else if (preference == 'mountain') {\n      print('Suggesting a national mountain destination.');\n    } else {\n      print('Invalid preference.');\n    }\n  } else {\n    if (preference == 'beach') {\n      print('Suggesting an international beach destination.');\n    } else if (preference == 'mountain') {\n      print('Suggesting an international mountain destination.');\n    } else {\n      print('Invalid preference.');\n    }\n  }\n}\n```"
  },
  {
    "task": "Create a routine that checks if a username is already taken in a database.",
    "code": "```dart\nbool isUsernameTaken(String username, List<String> database) {\n  for (var existingUsername in database) {\n    if (username == existingUsername) {\n      return true;\n    }\n  }\n  return false;\n}\n\nvoid main() {\n  List<String> database = ['alice', 'bob', 'charlie'];\n  String usernameToCheck = 'bob';\n  \n  if (isUsernameTaken(usernameToCheck, database)) {\n    print('Username is already taken.');\n  } else {\n    print('Username is available.');\n  }\n}\n```"
  },
  {
    "task": "Develop a function that determines if a string is a valid IPv4 address.",
    "code": "```dart\nbool isValidIPv4(String ip) {\n  final parts = ip.split('.');\n  if (parts.length != 4) return false;\n  \n  for (final part in parts) {\n    final num = int.tryParse(part);\n    if (num == null || num < 0 || num > 255 || (part.length > 1 && part.startsWith('0'))) {\n      return false;\n    }\n  }\n  \n  return true;\n}\n```"
  },
  {
    "task": "Implement a program to decide which transportation method is quickest based on distance.",
    "code": "```dart\nvoid main() {\n  int distance = 15; // Example distance in kilometers\n  String transportMethod = quickestTransportMethod(distance);\n  print('The quickest transportation method for $distance km is $transportMethod.');\n}\n\nString quickestTransportMethod(int distance) {\n  if (distance <= 1) {\n    return 'Walking';\n  } else if (distance <= 5) {\n    return 'Bicycle';\n  } else if (distance <= 20) {\n    return 'Car';\n  } else {\n    return 'Train';\n  }\n}\n```"
  },
  {
    "task": "Design a script to validate if a number is a prime number.",
    "code": "```dart\nbool isPrime(int number) {\n  if (number <= 1) return false;\n  if (number <= 3) return true;\n  if (number % 2 == 0 || number % 3 == 0) return false;\n  for (int i = 5; i * i <= number; i += 6) {\n    if (number % i == 0 || number % (i + 2) == 0) return false;\n  }\n  return true;\n}\n\nvoid main() {\n  int number = 29; // Example number\n  if (isPrime(number)) {\n    print('$number is a prime number.');\n  } else {\n    print('$number is not a prime number.');\n  }\n}\n```"
  },
  {
    "task": "Write a function that checks if a number is divisible by another number without remainder.",
    "code": "```dart\nbool isDivisible(int num, int divisor) {\n  if (divisor == 0) {\n    throw ArgumentError('Divisor cannot be zero');\n  }\n  return num % divisor == 0;\n}\n```"
  },
  {
    "task": "Create a program that determines the type of a quadrilateral based on side lengths.",
    "code": "```dart\nvoid main() {\n  print(determineQuadrilateralType(5, 5, 5, 5)); // Square\n  print(determineQuadrilateralType(5, 5, 8, 8)); // Rectangle\n  print(determineQuadrilateralType(5, 5, 5, 8)); // Rhombus\n  print(determineQuadrilateralType(5, 6, 7, 8)); // Irregular Quadrilateral\n}\n\nString determineQuadrilateralType(int a, int b, int c, int d) {\n  if (a == b && b == c && c == d) {\n    return \"Square\";\n  } else if ((a == c && b == d) || (a == b && c == d)) {\n    return \"Rectangle\";\n  } else if (a == b || b == c || c == d || a == d) {\n    return \"Rhombus\";\n  } else {\n    return \"Irregular Quadrilateral\";\n  }\n}\n```"
  },
  {
    "task": "Develop a routine to check if a sentence contains all letters of the alphabet.",
    "code": "```dart\nbool containsAllLetters(String sentence) {\n  String alphabet = 'abcdefghijklmnopqrstuvwxyz';\n  sentence = sentence.toLowerCase();\n  for (int i = 0; i < alphabet.length; i++) {\n    if (!sentence.contains(alphabet[i])) {\n      return false;\n    }\n  }\n  return true;\n}\n```"
  },
  {
    "task": "Implement a program that outputs the appropriate error message based on an error code.",
    "code": "```dart\nvoid main() {\n  int errorCode = 404; // Example error code\n  String errorMessage;\n\n  if (errorCode == 404) {\n    errorMessage = 'Not Found';\n  } else if (errorCode == 500) {\n    errorMessage = 'Internal Server Error';\n  } else if (errorCode == 403) {\n    errorMessage = 'Forbidden';\n  } else if (errorCode == 401) {\n    errorMessage = 'Unauthorized';\n  } else {\n    errorMessage = 'Unknown Error';\n  }\n\n  print('Error: $errorMessage');\n}\n```"
  },
  {
    "task": "Design a function that categorizes a movie rating as G, PG, PG-13, or R.",
    "code": "```dart\nString categorizeMovieRating(int age) {\n  if (age < 10) {\n    return 'G';\n  } else if (age < 13) {\n    return 'PG';\n  } else if (age < 17) {\n    return 'PG-13';\n  } else {\n    return 'R';\n  }\n}\n```"
  },
  {
    "task": "Write a script to check if a string is a valid Roman numeral.",
    "code": "```dart\nbool isValidRomanNumeral(String s) {\n  final romanRegex = RegExp(r'^M{0,4}(CM|CD|D?C{0,3})(XC|XL|L?X{0,3})(IX|IV|V?I{0,3})$');\n  return romanRegex.hasMatch(s);\n}\n\nvoid main() {\n  String input = \"MCMXCIV\";\n  if (isValidRomanNumeral(input)) {\n    print('$input is a valid Roman numeral.');\n  } else {\n    print('$input is not a valid Roman numeral.');\n  }\n}\n```"
  },
  {
    "task": "Create a routine that decides if a person can retire based on age and years worked.",
    "code": "```dart\nbool canRetire(int age, int yearsWorked) {\n  if (age >= 65 || yearsWorked >= 30) {\n    return true;\n  }\n  return false;\n}\n```"
  },
  {
    "task": "Develop a function that outputs a different emoji based on user mood input.",
    "code": "```dart\nString getEmojiBasedOnMood(String mood) {\n  switch (mood.toLowerCase()) {\n    case 'happy':\n      return '\ud83d\ude0a';\n    case 'sad':\n      return '\ud83d\ude22';\n    case 'angry':\n      return '\ud83d\ude21';\n    case 'excited':\n      return '\ud83d\ude03';\n    case 'nervous':\n      return '\ud83d\ude2c';\n    default:\n      return '\ud83e\udd14';\n  }\n}\n\nvoid main() {\n  print(getEmojiBasedOnMood('happy')); // \ud83d\ude0a\n  print(getEmojiBasedOnMood('sad')); // \ud83d\ude22\n  print(getEmojiBasedOnMood('angry')); // \ud83d\ude21\n  print(getEmojiBasedOnMood('excited')); // \ud83d\ude03\n  print(getEmojiBasedOnMood('nervous')); // \ud83d\ude2c\n  print(getEmojiBasedOnMood('confused')); // \ud83e\udd14\n}\n```"
  },
  {
    "task": "Implement a program that checks if a password meets security requirements.",
    "code": "```dart\nbool isPasswordSecure(String password) {\n  if (password.length < 8) {\n    return false;\n  }\n  bool hasUpperCase = false;\n  bool hasLowerCase = false;\n  bool hasDigit = false;\n  bool hasSpecialChar = false;\n  String specialChars = '!@#\\$%^&*()-_=+[]{}|;:\",.<>?/`~';\n  \n  for (int i = 0; i < password.length; i++) {\n    String char = password[i];\n    if (char.contains(RegExp(r'[A-Z]'))) {\n      hasUpperCase = true;\n    } else if (char.contains(RegExp(r'[a-z]'))) {\n      hasLowerCase = true;\n    } else if (char.contains(RegExp(r'\\d'))) {\n      hasDigit = true;\n    } else if (specialChars.contains(char)) {\n      hasSpecialChar = true;\n    }\n  }\n  \n  return hasUpperCase && hasLowerCase && hasDigit && hasSpecialChar;\n}\n\nvoid main() {\n  String password = 'ExamplePassword1!';\n  if (isPasswordSecure(password)) {\n    print('The password is secure.');\n  } else {\n    print('The password is not secure.');\n  }\n}\n```"
  },
  {
    "task": "Design a script to determine if a number is a palindrome when reversed.",
    "code": "```dart\nbool isPalindrome(int number) {\n  String original = number.toString();\n  String reversed = original.split('').reversed.join('');\n  return original == reversed;\n}\n\nvoid main() {\n  int number = 12321;\n  if (isPalindrome(number)) {\n    print('$number is a palindrome.');\n  } else {\n    print('$number is not a palindrome.');\n  }\n}\n```"
  },
  {
    "task": "Write a function that evaluates if a given day is a holiday.",
    "code": "```dart\nbool isHoliday(String day) {\n  switch (day.toLowerCase()) {\n    case 'saturday':\n    case 'sunday':\n      return true;\n    default:\n      return false;\n  }\n}\n```"
  },
  {
    "task": "Create a program to decide if a library book is overdue based on the due date.",
    "code": "```dart\nimport 'dart:io';\n\nvoid main() {\n  print('Enter the due date (yyyy-mm-dd):');\n  String? dueDateInput = stdin.readLineSync();\n  \n  if (dueDateInput != null) {\n    DateTime dueDate = DateTime.parse(dueDateInput);\n    DateTime currentDate = DateTime.now();\n    \n    if (currentDate.isAfter(dueDate)) {\n      print('The library book is overdue.');\n    } else {\n      print('The library book is not overdue.');\n    }\n  } else {\n    print('Invalid input.');\n  }\n}\n```"
  },
  {
    "task": "Develop a routine that checks if a given year is part of a leap century.",
    "code": "```dart\nbool isLeapCentury(int year) {\n  if (year % 400 == 0) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nvoid main() {\n  int year = 2000;\n  if (isLeapCentury(year)) {\n    print('$year is part of a leap century.');\n  } else {\n    print('$year is not part of a leap century.');\n  }\n}\n```"
  },
  {
    "task": "Implement a system to determine the correct category for a product based on user input.",
    "code": "```dart\nimport 'dart:io';\n\nvoid main() {\n  print('Enter the product type (e.g., electronics, clothing, food): ');\n  String? productType = stdin.readLineSync()?.toLowerCase();\n\n  if (productType == null) {\n    print('Invalid input.');\n    return;\n  }\n\n  String category;\n\n  if (productType == 'electronics') {\n    category = 'Technology';\n  } else if (productType == 'clothing') {\n    category = 'Apparel';\n  } else if (productType == 'food') {\n    category = 'Grocery';\n  } else {\n    category = 'Miscellaneous';\n  }\n\n  print('The product category is: $category');\n}\n```"
  }
]