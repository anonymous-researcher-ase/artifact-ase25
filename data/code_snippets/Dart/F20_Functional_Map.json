[
  {
    "task": "Convert a list of temperatures from Celsius to Fahrenheit using a map function.",
    "code": "```dart\nvoid main() {\n  List<double> celsiusTemperatures = [0.0, 20.0, 37.0, 100.0];\n  List<double> fahrenheitTemperatures = celsiusTemperatures.map((c) => (c * 9 / 5) + 32).toList();\n  print(fahrenheitTemperatures);\n}\n```"
  },
  {
    "task": "Use map to convert a list of lowercase words to uppercase.",
    "code": "```dart\nvoid main() {\n  List<String> words = ['apple', 'banana', 'cherry'];\n  List<String> uppercasedWords = words.map((word) => word.toUpperCase()).toList();\n  print(uppercasedWords);\n}\n```"
  },
  {
    "task": "Apply map to add a prefix to each string in a list of filenames.",
    "code": "```dart\nvoid main() {\n  List<String> filenames = ['file1.txt', 'file2.txt', 'file3.txt'];\n  String prefix = 'prefix_';\n  List<String> updatedFilenames = filenames.map((filename) => '$prefix$filename').toList();\n  print(updatedFilenames);\n}\n```"
  },
  {
    "task": "Transform a list of numbers by squaring each element with a map function.",
    "code": "```dart\nvoid main() {\n  List<int> numbers = [1, 2, 3, 4, 5];\n  List<int> squaredNumbers = numbers.map((number) => number * number).toList();\n  print(squaredNumbers);\n}\n```"
  },
  {
    "task": "Convert a list of integers to their string representations using map.",
    "code": "```dart\nvoid main() {\n  List<int> numbers = [1, 2, 3, 4, 5];\n  List<String> strings = numbers.map((number) => number.toString()).toList();\n  print(strings);\n}\n```"
  },
  {
    "task": "Use map to compute the length of each string in a list of sentences.",
    "code": "```dart\nvoid main() {\n  List<String> sentences = [\n    \"Hello, world!\",\n    \"Dart is fun.\",\n    \"Functional programming with map.\"\n  ];\n\n  List<int> lengths = sentences.map((sentence) => sentence.length).toList();\n\n  print(lengths);\n}\n```"
  },
  {
    "task": "Apply a discount to a list of prices using a map function.",
    "code": "```dart\nvoid main() {\n  List<double> prices = [100.0, 200.0, 300.0];\n  double discountRate = 0.1; // 10% discount\n\n  List<double> discountedPrices = prices.map((price) => price * (1 - discountRate)).toList();\n\n  print(discountedPrices);\n}\n```"
  },
  {
    "task": "Extract the first element from each tuple in a list of tuples with map.",
    "code": "```dart\nvoid main() {\n  var tuples = [(1, 'a'), (2, 'b'), (3, 'c')];\n  var firstElements = tuples.map((tuple) => tuple.item1).toList();\n  print(firstElements); // Output: [1, 2, 3]\n}\n```"
  },
  {
    "task": "Use map to round a list of floating-point numbers to two decimal places.",
    "code": "```dart\nvoid main() {\n  List<double> numbers = [3.14159, 2.71828, 1.61803];\n  List<double> roundedNumbers = numbers.map((num) => double.parse(num.toStringAsFixed(2))).toList();\n  print(roundedNumbers);\n}\n```"
  },
  {
    "task": "Capitalize the first letter of each word in a list of names using map.",
    "code": "```dart\nvoid main() {\n  List<String> names = ['alice', 'bob', 'charlie'];\n  List<String> capitalizedNames = names.map((name) {\n    return name.split(' ').map((word) {\n      return word[0].toUpperCase() + word.substring(1);\n    }).join(' ');\n  }).toList();\n\n  print(capitalizedNames);\n}\n```"
  },
  {
    "task": "Convert a list of JSON strings to corresponding dictionary objects with map.",
    "code": "```dart\nimport 'dart:convert';\n\nvoid main() {\n  List<String> jsonStrings = [\n    '{\"name\": \"Alice\", \"age\": 25}',\n    '{\"name\": \"Bob\", \"age\": 30}',\n    '{\"name\": \"Charlie\", \"age\": 35}'\n  ];\n\n  List<Map<String, dynamic>> dictionaries = jsonStrings.map((jsonString) {\n    return jsonDecode(jsonString);\n  }).toList();\n\n  print(dictionaries);\n}\n```"
  },
  {
    "task": "Use map to double the value of each number in a list.",
    "code": "```dart\nvoid main() {\n  List<int> numbers = [1, 2, 3, 4, 5];\n  List<int> doubledNumbers = numbers.map((number) => number * 2).toList();\n  print(doubledNumbers);\n}\n```"
  },
  {
    "task": "Transform a list of RGB tuples to hexadecimal color codes using map.",
    "code": "```dart\nvoid main() {\n  List<List<int>> rgbList = [\n    [255, 0, 0],\n    [0, 255, 0],\n    [0, 0, 255],\n    [255, 255, 0]\n  ];\n\n  List<String> hexColors = rgbList.map((rgb) {\n    return '#' +\n        rgb.map((color) {\n          return color.toRadixString(16).padLeft(2, '0').toUpperCase();\n        }).join('');\n  }).toList();\n\n  print(hexColors);\n}\n```"
  },
  {
    "task": "Use map to compute the factorial of each number in a list.",
    "code": "```dart\nList<int> numbers = [1, 2, 3, 4, 5];\n\nint factorial(int n) => n <= 1 ? 1 : n * factorial(n - 1);\n\nList<int> factorials = numbers.map(factorial).toList();\n\nprint(factorials);\n```"
  },
  {
    "task": "Translate a list of English words to Spanish using a map function.",
    "code": "```dart\nvoid main() {\n  List<String> englishWords = ['hello', 'world', 'apple', 'orange'];\n  Map<String, String> dictionary = {\n    'hello': 'hola',\n    'world': 'mundo',\n    'apple': 'manzana',\n    'orange': 'naranja'\n  };\n\n  List<String> spanishWords = englishWords.map((word) => dictionary[word] ?? word).toList();\n  print(spanishWords);\n}\n```"
  },
  {
    "task": "Apply a map function to format a list of dates from one format to another.",
    "code": "```dart\nimport 'package:intl/intl.dart';\n\nvoid main() {\n  List<String> dateList = [\n    '2023-10-05',\n    '2022-03-15',\n    '2021-07-20',\n  ];\n\n  DateFormat inputFormat = DateFormat('yyyy-MM-dd');\n  DateFormat outputFormat = DateFormat('MMM dd, yyyy');\n\n  List<String> formattedDates = dateList.map((date) {\n    DateTime parsedDate = inputFormat.parse(date);\n    return outputFormat.format(parsedDate);\n  }).toList();\n\n  print(formattedDates);\n}\n```"
  },
  {
    "task": "Use map to check if each number in a list is even, returning a list of booleans.",
    "code": "```dart\nvoid main() {\n  List<int> numbers = [1, 2, 3, 4, 5, 6];\n  List<bool> isEvenList = numbers.map((number) => number % 2 == 0).toList();\n  print(isEvenList);\n}\n```"
  },
  {
    "task": "Convert a list of binary strings to decimal numbers using map.",
    "code": "```dart\nvoid main() {\n  List<String> binaryStrings = ['101', '110', '111'];\n  List<int> decimalNumbers = binaryStrings.map((binary) => int.parse(binary, radix: 2)).toList();\n  print(decimalNumbers);\n}\n```"
  },
  {
    "task": "Use map to append a domain name to a list of user names to create email addresses.",
    "code": "```dart\nvoid main() {\n  List<String> userNames = ['alice', 'bob', 'charlie'];\n  String domain = '@example.com';\n\n  List<String> emailAddresses = userNames.map((userName) => '$userName$domain').toList();\n\n  print(emailAddresses);\n}\n```"
  },
  {
    "task": "Calculate the area of each circle in a list of radii using a map function.",
    "code": "```dart\nvoid main() {\n  List<double> radii = [3.0, 4.5, 6.0, 2.5];\n  List<double> areas = radii.map((radius) => 3.14159 * radius * radius).toList();\n  print(areas);\n}\n```"
  },
  {
    "task": "Use map to strip whitespace from the start and end of each string in a list.",
    "code": "```dart\nvoid main() {\n  List<String> originalList = ['  hello  ', ' world ', '  dart '];\n  List<String> trimmedList = originalList.map((s) => s.trim()).toList();\n  print(trimmedList);\n}\n```"
  },
  {
    "task": "Apply map to replace spaces with underscores in a list of file paths.",
    "code": "```dart\nvoid main() {\n  List<String> filePaths = [\n    'path/to file',\n    'another path/to file',\n    'yet another path/file'\n  ];\n\n  List<String> updatedFilePaths = filePaths.map((path) => path.replaceAll(' ', '_')).toList();\n\n  print(updatedFilePaths);\n}\n```"
  },
  {
    "task": "Convert a list of mixed-case strings to title case using map.",
    "code": "```dart\nvoid main() {\n  List<String> mixedCaseStrings = ['hello world', 'dart programming', 'map function'];\n  List<String> titleCaseStrings = mixedCaseStrings.map((str) {\n    return str.split(' ').map((word) {\n      return word[0].toUpperCase() + word.substring(1).toLowerCase();\n    }).join(' ');\n  }).toList();\n  \n  print(titleCaseStrings);\n}\n```"
  },
  {
    "task": "Use map to filter out only the digits from a list of mixed alphanumeric strings.",
    "code": "```dart\nvoid main() {\n  List<String> mixedList = ['abc123', 'def456', 'ghi789', 'jkl0'];\n  List<String> digitList = mixedList.map((str) {\n    return str.replaceAll(RegExp(r'\\D'), '');\n  }).toList();\n  print(digitList); // Output: ['123', '456', '789', '0']\n}\n```"
  },
  {
    "task": "Apply map to convert a list of Unix timestamps to readable date strings.",
    "code": "```dart\nimport 'package:intl/intl.dart';\n\nvoid main() {\n  List<int> timestamps = [1638316800, 1638403200, 1638489600];\n  DateFormat formatter = DateFormat('yyyy-MM-dd HH:mm:ss');\n\n  List<String> readableDates = timestamps.map((timestamp) {\n    DateTime date = DateTime.fromMillisecondsSinceEpoch(timestamp * 1000, isUtc: true);\n    return formatter.format(date);\n  }).toList();\n\n  print(readableDates);\n}\n```"
  },
  {
    "task": "Transform a list of dictionary objects by extracting a specific key's value using map.",
    "code": "```dart\nvoid main() {\n  List<Map<String, dynamic>> listOfDicts = [\n    {'name': 'Alice', 'age': 30},\n    {'name': 'Bob', 'age': 25},\n    {'name': 'Charlie', 'age': 35},\n  ];\n\n  List<String> names = listOfDicts.map((dict) => dict['name'] as String).toList();\n\n  print(names); // Output: [Alice, Bob, Charlie]\n}\n```"
  },
  {
    "task": "Use map to compute the cube of each number in a list.",
    "code": "```dart\nvoid main() {\n  List<int> numbers = [1, 2, 3, 4, 5];\n  List<int> cubes = numbers.map((number) => number * number * number).toList();\n  print(cubes);\n}\n```"
  },
  {
    "task": "Translate a list of URLs to their respective domain names using a map function.",
    "code": "```dart\nvoid main() {\n  List<String> urls = [\n    'https://www.example.com/path',\n    'http://anotherexample.org',\n    'https://subdomain.example.net'\n  ];\n\n  List<String> domains = urls.map((url) {\n    Uri uri = Uri.parse(url);\n    return uri.host;\n  }).toList();\n\n  print(domains);\n}\n```"
  },
  {
    "task": "Use map to generate HTML list items from a list of text strings.",
    "code": "```dart\nvoid main() {\n  List<String> texts = ['Apple', 'Banana', 'Cherry'];\n  List<String> htmlListItems = texts.map((text) => '<li>$text</li>').toList();\n  \n  for (var item in htmlListItems) {\n    print(item);\n  }\n}\n```"
  },
  {
    "task": "Convert a list of polar coordinates to Cartesian coordinates using map.",
    "code": "```dart\nvoid main() {\n  List<Map<String, double>> polarCoordinates = [\n    {'r': 5.0, 'theta': 0.0},\n    {'r': 10.0, 'theta': 1.57},\n    {'r': 15.0, 'theta': 3.14}\n  ];\n\n  List<Map<String, double>> cartesianCoordinates = polarCoordinates.map((coord) {\n    double r = coord['r']!;\n    double theta = coord['theta']!;\n    double x = r * cos(theta);\n    double y = r * sin(theta);\n    return {'x': x, 'y': y};\n  }).toList();\n\n  print(cartesianCoordinates);\n}\n```"
  },
  {
    "task": "Use map to decode a list of Base64 encoded strings.",
    "code": "```dart\nimport 'dart:convert';\n\nvoid main() {\n  List<String> encodedStrings = [\n    'SGVsbG8sIFdvcmxkIQ==',\n    'RGFydCBpcyBmdW4h',\n    'QmFzZTY0IGRlY29kaW5n'\n  ];\n\n  List<String> decodedStrings = encodedStrings.map((encoded) {\n    return utf8.decode(base64.decode(encoded));\n  }).toList();\n\n  print(decodedStrings);\n}\n```"
  },
  {
    "task": "Convert a list of English sentences to Pig Latin using a map function.",
    "code": "```dart\nString toPigLatin(String sentence) {\n  return sentence.split(' ').map((word) {\n    final firstVowelIndex = word.indexOf(RegExp(r'[aeiouAEIOU]'));\n    if (firstVowelIndex == 0) {\n      return word + 'way';\n    } else if (firstVowelIndex > 0) {\n      return word.substring(firstVowelIndex) + word.substring(0, firstVowelIndex) + 'ay';\n    }\n    return word;\n  }).join(' ');\n}\n\nvoid main() {\n  List<String> sentences = [\n    'Hello world',\n    'This is a test',\n    'Functional programming is powerful'\n  ];\n  \n  List<String> pigLatinSentences = sentences.map(toPigLatin).toList();\n  \n  print(pigLatinSentences);\n}\n```"
  },
  {
    "task": "Use map to anonymize a list of email addresses by masking them.",
    "code": "```dart\nvoid main() {\n  List<String> emails = ['user1@example.com', 'user2@example.com', 'user3@example.com'];\n\n  List<String> anonymizedEmails = emails.map((email) {\n    int atIndex = email.indexOf('@');\n    return '*' * atIndex + email.substring(atIndex);\n  }).toList();\n\n  print(anonymizedEmails);\n}\n```"
  },
  {
    "task": "Apply map to reverse each string in a list of words.",
    "code": "```dart\nvoid main() {\n  List<String> words = ['hello', 'world', 'dart', 'flutter'];\n  List<String> reversedWords = words.map((word) => word.split('').reversed.join('')).toList();\n  print(reversedWords);\n}\n```"
  },
  {
    "task": "Convert a list of hexadecimal color codes to RGB tuples using map.",
    "code": "```dart\nList<String> hexColors = ['#FF5733', '#33FF57', '#3357FF'];\n\nList<List<int>> rgbColors = hexColors.map((hex) {\n  hex = hex.replaceFirst('#', '');\n  int r = int.parse(hex.substring(0, 2), radix: 16);\n  int g = int.parse(hex.substring(2, 4), radix: 16);\n  int b = int.parse(hex.substring(4, 6), radix: 16);\n  return [r, g, b];\n}).toList();\n\nprint(rgbColors);\n```"
  },
  {
    "task": "Use map to increment each integer in a list by a constant value.",
    "code": "```dart\nvoid main() {\n  List<int> numbers = [1, 2, 3, 4, 5];\n  int incrementValue = 3;\n  \n  List<int> incrementedNumbers = numbers.map((number) => number + incrementValue).toList();\n  \n  print(incrementedNumbers);\n}\n```"
  },
  {
    "task": "Calculate the square root of each number in a list using a map function.",
    "code": "```dart\nvoid main() {\n  List<double> numbers = [4.0, 9.0, 16.0, 25.0];\n  List<double> squareRoots = numbers.map((number) => number.sqrt()).toList();\n  print(squareRoots);\n}\n```"
  },
  {
    "task": "Use map to convert a list of currency amounts from dollars to euros.",
    "code": "```dart\nvoid main() {\n  const dollarToEuroRate = 0.85;\n  List<double> dollarAmounts = [10.0, 20.0, 30.0, 40.0];\n  \n  List<double> euroAmounts = dollarAmounts.map((amount) => amount * dollarToEuroRate).toList();\n  \n  print(euroAmounts);\n}\n```"
  },
  {
    "task": "Extract the domain from each email address in a list using map.",
    "code": "```dart\nvoid main() {\n  List<String> emails = ['user1@example.com', 'user2@test.com', 'user3@domain.org'];\n  List<String> domains = emails.map((email) => email.split('@').last).toList();\n  print(domains);\n}\n```"
  },
  {
    "task": "Use map to serialize a list of objects into JSON strings.",
    "code": "```dart\nimport 'dart:convert';\n\nclass Item {\n  final String name;\n  final int value;\n\n  Item(this.name, this.value);\n\n  Map<String, dynamic> toJson() => {\n        'name': name,\n        'value': value,\n      };\n}\n\nvoid main() {\n  List<Item> items = [\n    Item('Item1', 10),\n    Item('Item2', 20),\n    Item('Item3', 30),\n  ];\n\n  List<String> jsonStrings = items.map((item) => jsonEncode(item.toJson())).toList();\n\n  jsonStrings.forEach(print);\n}\n```"
  },
  {
    "task": "Transform a list of file sizes from bytes to kilobytes using map.",
    "code": "```dart\nvoid main() {\n  List<int> fileSizesInBytes = [1024, 2048, 5120, 10240];\n  List<double> fileSizesInKilobytes = fileSizesInBytes.map((size) => size / 1024).toList();\n  print(fileSizesInKilobytes);\n}\n```"
  },
  {
    "task": "Use map to append a suffix to each string in a list of identifiers.",
    "code": "```dart\nvoid main() {\n  List<String> identifiers = ['id1', 'id2', 'id3'];\n  List<String> updatedIdentifiers = identifiers.map((id) => '${id}_suffix').toList();\n  print(updatedIdentifiers);\n}\n```"
  },
  {
    "task": "Apply map to convert measurements from inches to centimeters in a list.",
    "code": "```dart\nvoid main() {\n  List<double> inches = [10.0, 20.5, 30.1, 40.7, 50.3];\n  List<double> centimeters = inches.map((inch) => inch * 2.54).toList();\n  print(centimeters);\n}\n```"
  },
  {
    "task": "Use map to encrypt a list of plaintext messages using a simple cipher.",
    "code": "```dart\nvoid main() {\n  List<String> plaintextMessages = ['hello', 'world', 'dart'];\n  int shift = 3;\n\n  List<String> encryptedMessages = plaintextMessages.map((message) {\n    return message.split('').map((char) {\n      int encryptedCharCode = char.codeUnitAt(0) + shift;\n      return String.fromCharCode(encryptedCharCode);\n    }).join('');\n  }).toList();\n\n  print(encryptedMessages); // Encrypted messages\n}\n```"
  },
  {
    "task": "Transform a list of date strings to day of the week names using a map function.",
    "code": "```dart\nimport 'package:intl/intl.dart';\n\nvoid main() {\n  List<String> dateStrings = ['2023-10-10', '2023-10-11', '2023-10-12'];\n  \n  List<String> daysOfWeek = dateStrings.map((dateString) {\n    DateTime date = DateTime.parse(dateString);\n    return DateFormat('EEEE').format(date);\n  }).toList();\n  \n  print(daysOfWeek);\n}\n```"
  },
  {
    "task": "Use map to derive the absolute value of each number in a list.",
    "code": "```dart\nvoid main() {\n  List<int> numbers = [-10, -5, 0, 5, 10];\n  List<int> absoluteValues = numbers.map((number) => number.abs()).toList();\n  print(absoluteValues);\n}\n```"
  },
  {
    "task": "Convert a list of lowercase hexadecimal strings to uppercase using map.",
    "code": "```dart\nvoid main() {\n  List<String> hexStrings = ['a1b2', 'c3d4', 'e5f6'];\n  List<String> upperHexStrings = hexStrings.map((hex) => hex.toUpperCase()).toList();\n  print(upperHexStrings);\n}\n```"
  },
  {
    "task": "Use map to find the maximum value in a list of lists of numbers.",
    "code": "```dart\nvoid main() {\n  List<List<num>> listOfLists = [\n    [1, 2, 3],\n    [4, 5, 6],\n    [7, 8, 9]\n  ];\n\n  num maxInEachList = listOfLists.map((list) => list.reduce((a, b) => a > b ? a : b)).reduce((a, b) => a > b ? a : b);\n\n  print(maxInEachList);\n}\n```"
  },
  {
    "task": "Apply map to extract the year from each date in a list of date objects.",
    "code": "```dart\nvoid main() {\n  List<DateTime> dates = [\n    DateTime(2023, 10, 5),\n    DateTime(2022, 6, 15),\n    DateTime(2021, 1, 20),\n  ];\n\n  List<int> years = dates.map((date) => date.year).toList();\n\n  print(years);\n}\n```"
  },
  {
    "task": "Use map to prepend a country code to each phone number in a list.",
    "code": "```dart\nvoid main() {\n  List<String> phoneNumbers = ['1234567890', '9876543210', '5555555555'];\n  String countryCode = '+1';\n\n  List<String> formattedNumbers = phoneNumbers.map((number) => '$countryCode$number').toList();\n\n  print(formattedNumbers);\n}\n```"
  },
  {
    "task": "Capitalize the last letter of each word in a list using a map function.",
    "code": "```dart\nvoid main() {\n  List<String> words = ['hello', 'world', 'dart', 'language'];\n  \n  List<String> capitalizedWords = words.map((word) {\n    if (word.isNotEmpty) {\n      return word.substring(0, word.length - 1) +\n          word[word.length - 1].toUpperCase();\n    }\n    return word;\n  }).toList();\n  \n  print(capitalizedWords);\n}\n```"
  },
  {
    "task": "Use map to transform a list of strings by removing all vowels.",
    "code": "```dart\nvoid main() {\n  List<String> words = ['hello', 'world', 'dart', 'programming'];\n  List<String> transformedWords = words.map((word) {\n    return word.replaceAll(RegExp(r'[aeiouAEIOU]'), '');\n  }).toList();\n  \n  print(transformedWords);\n}\n```"
  },
  {
    "task": "Convert a list of music notes to their corresponding frequencies using map.",
    "code": "```dart\nvoid main() {\n  List<String> notes = ['A', 'B', 'C', 'D', 'E', 'F', 'G'];\n  Map<String, double> noteFrequencies = {\n    'A': 440.0,\n    'B': 493.88,\n    'C': 261.63,\n    'D': 293.66,\n    'E': 329.63,\n    'F': 349.23,\n    'G': 392.00,\n  };\n\n  List<double> frequencies = notes.map((note) => noteFrequencies[note] ?? 0.0).toList();\n\n  print(frequencies);\n}\n```"
  },
  {
    "task": "Use map to find the reciprocal of each number in a list.",
    "code": "```dart\nvoid main() {\n  List<double> numbers = [1.0, 2.0, 4.0, 5.0];\n  List<double> reciprocals = numbers.map((number) => 1 / number).toList();\n  print(reciprocals);\n}\n```"
  },
  {
    "task": "Transform a list of URLs to their shortened versions using a map function.",
    "code": "```dart\nvoid main() {\n  List<String> urls = [\n    'https://example.com/very/long/url/1',\n    'https://example.com/very/long/url/2',\n    'https://example.com/very/long/url/3',\n  ];\n\n  List<String> shortenedUrls = urls.map((url) => shortenUrl(url)).toList();\n\n  print(shortenedUrls);\n}\n\nString shortenUrl(String url) {\n  // Dummy implementation of URL shortening\n  return 'short.ly/' + url.split('/').last;\n}\n```"
  },
  {
    "task": "Use map to generate a list of initials from a list of full names.",
    "code": "```dart\nvoid main() {\n  List<String> fullNames = ['John Doe', 'Jane Smith', 'Alice Johnson'];\n  List<String> initials = fullNames.map((name) {\n    return name.split(' ').map((part) => part[0]).join();\n  }).toList();\n\n  print(initials); // Output: ['JD', 'JS', 'AJ']\n}\n```"
  },
  {
    "task": "Convert a list of decimal numbers to their binary string representations using map.",
    "code": "```dart\nvoid main() {\n  List<double> decimals = [2.5, 3.7, 4.1, 5.9];\n  List<String> binaryStrings = decimals.map((num) => num.toInt().toRadixString(2)).toList();\n  print(binaryStrings);\n}\n```"
  },
  {
    "task": "Use map to adjust the brightness of each color in a list of RGB tuples.",
    "code": "```dart\nList<List<int>> adjustBrightness(List<List<int>> colors, double factor) {\n  return colors.map((color) {\n    return color.map((component) {\n      return (component * factor).clamp(0, 255).toInt();\n    }).toList();\n  }).toList();\n}\n\nvoid main() {\n  var colors = [\n    [255, 200, 100],\n    [123, 50, 75],\n    [0, 255, 255]\n  ];\n  var factor = 1.2;\n  var brighterColors = adjustBrightness(colors, factor);\n  print(brighterColors);\n}\n```"
  },
  {
    "task": "Apply map to filter out only alphabetic characters from a list of strings.",
    "code": "```dart\nvoid main() {\n  List<String> strings = ['abc123', 'hello!', 'world123', 'dart#'];\n  List<String> filteredStrings = strings.map((s) => s.replaceAll(RegExp(r'[^a-zA-Z]'), '')).toList();\n  print(filteredStrings);\n}\n```"
  },
  {
    "task": "Use map to compute the prime factorization of each number in a list.",
    "code": "```dart\nList<int> primeFactors(int n) {\n  List<int> factors = [];\n  for (int i = 2; i <= n ~/ i; i++) {\n    while (n % i == 0) {\n      factors.add(i);\n      n ~/= i;\n    }\n  }\n  if (n > 1) factors.add(n);\n  return factors;\n}\n\nList<List<int>> computePrimeFactorizations(List<int> numbers) {\n  return numbers.map((number) => primeFactors(number)).toList();\n}\n\nvoid main() {\n  List<int> numbers = [12, 15, 21, 26];\n  List<List<int>> result = computePrimeFactorizations(numbers);\n  print(result);\n}\n```"
  },
  {
    "task": "Calculate the exponential of each number in a list using a map function.",
    "code": "```dart\nvoid main() {\n  List<double> numbers = [1.0, 2.0, 3.0, 4.0];\n  List<double> exponentials = numbers.map((num) => num.exp()).toList();\n  print(exponentials);\n}\n```"
  },
  {
    "task": "Use map to convert a list of text messages to morse code.",
    "code": "```dart\nvoid main() {\n  final messages = ['hello', 'world'];\n  final morseCodeMap = {\n    'a': '.-', 'b': '-...', 'c': '-.-.', 'd': '-..', 'e': '.', \n    'f': '..-.', 'g': '--.', 'h': '....', 'i': '..', 'j': '.---', \n    'k': '-.-', 'l': '.-..', 'm': '--', 'n': '-.', 'o': '---', \n    'p': '.--.', 'q': '--.-', 'r': '.-.', 's': '...', 't': '-', \n    'u': '..-', 'v': '...-', 'w': '.--', 'x': '-..-', 'y': '-.--', \n    'z': '--..', ' ': '/'\n  };\n\n  final morseMessages = messages.map((message) {\n    return message.split('').map((char) => morseCodeMap[char] ?? '').join(' ');\n  }).toList();\n\n  print(morseMessages);\n}\n```"
  },
  {
    "task": "Transform a list of JSON objects to XML strings using a map function.",
    "code": "```dart\nimport 'dart:convert';\nimport 'package:xml/xml.dart';\n\nList<String> jsonToXml(List<String> jsonList) {\n  return jsonList.map((jsonString) {\n    final Map<String, dynamic> jsonObject = jsonDecode(jsonString);\n    final builder = XmlBuilder();\n    builder.element('root', nest: () {\n      jsonObject.forEach((key, value) {\n        builder.element(key, nest: value.toString());\n      });\n    });\n    return builder.buildDocument().toXmlString();\n  }).toList();\n}\n\nvoid main() {\n  List<String> jsonList = [\n    '{\"name\": \"John\", \"age\": 30}',\n    '{\"name\": \"Doe\", \"age\": 25}'\n  ];\n  List<String> xmlList = jsonToXml(jsonList);\n  xmlList.forEach(print);\n}\n```"
  },
  {
    "task": "Use map to extract the extension from each filename in a list.",
    "code": "```dart\nvoid main() {\n  List<String> filenames = ['document.txt', 'photo.jpg', 'presentation.pptx'];\n  List<String> extensions = filenames.map((filename) {\n    return filename.split('.').last;\n  }).toList();\n  \n  print(extensions);\n}\n```"
  },
  {
    "task": "Convert a list of temperatures from Fahrenheit to Kelvin using map.",
    "code": "```dart\nvoid main() {\n  List<double> fahrenheitTemps = [32.0, 68.0, 212.0, 104.0];\n  List<double> kelvinTemps = fahrenheitTemps.map((f) => (f - 32) * 5 / 9 + 273.15).toList();\n  print(kelvinTemps);\n}\n```"
  },
  {
    "task": "Use map to calculate the perimeter of each rectangle in a list of dimensions.",
    "code": "```dart\nvoid main() {\n  List<Map<String, int>> dimensions = [\n    {'length': 5, 'width': 3},\n    {'length': 10, 'width': 2},\n    {'length': 7, 'width': 4}\n  ];\n\n  List<int> perimeters = dimensions.map((rect) {\n    return 2 * (rect['length']! + rect['width']!);\n  }).toList();\n\n  print(perimeters);\n}\n```"
  },
  {
    "task": "Apply map to format a list of phone numbers into a standard format.",
    "code": "```dart\nvoid main() {\n  List<String> phoneNumbers = ['1234567890', '0987654321', '5551234567'];\n\n  List<String> formattedNumbers = phoneNumbers.map((number) {\n    return '(${number.substring(0, 3)}) ${number.substring(3, 6)}-${number.substring(6)}';\n  }).toList();\n\n  print(formattedNumbers);\n}\n```"
  },
  {
    "task": "Use map to generate a hashed version of passwords from a list.",
    "code": "```dart\nimport 'dart:convert';\nimport 'dart:crypto';\n\nList<String> hashPasswords(List<String> passwords) {\n  return passwords.map((password) {\n    var bytes = utf8.encode(password);\n    var digest = sha256.convert(bytes);\n    return digest.toString();\n  }).toList();\n}\n\nvoid main() {\n  List<String> passwords = ['password123', 'mySecret', 'admin'];\n  List<String> hashedPasswords = hashPasswords(passwords);\n  print(hashedPasswords);\n}\n```"
  },
  {
    "task": "Convert a list of text paragraphs to a word count using map.",
    "code": "```dart\nvoid main() {\n  List<String> paragraphs = [\n    \"Hello world\",\n    \"Dart is great\",\n    \"Functional programming is powerful\"\n  ];\n  \n  List<int> wordCounts = paragraphs.map((paragraph) => paragraph.split(' ').length).toList();\n  \n  print(wordCounts);\n}\n```"
  },
  {
    "task": "Use map to remove punctuation from each string in a list of sentences.",
    "code": "```dart\nvoid main() {\n  List<String> sentences = [\n    \"Hello, world!\",\n    \"Dart is fun.\",\n    \"Let's code: Dart!\"\n  ];\n\n  List<String> cleanedSentences = sentences.map((sentence) {\n    return sentence.replaceAll(RegExp(r'[^\\w\\s]'), '');\n  }).toList();\n\n  print(cleanedSentences);\n}\n```"
  },
  {
    "task": "Transform a list of URLs to their base domain using a map function.",
    "code": "```dart\nvoid main() {\n  List<String> urls = [\n    'https://www.example.com/page1',\n    'https://subdomain.example.com/page2',\n    'http://anotherdomain.org/resource'\n  ];\n\n  List<String> domains = urls.map((url) {\n    Uri uri = Uri.parse(url);\n    return uri.host;\n  }).toList();\n\n  print(domains);\n}\n```"
  },
  {
    "task": "Use map to translate a list of expressions to their symbolic algebraic forms.",
    "code": "```dart\nvoid main() {\n  List<String> expressions = ['x^2', '2*x', 'x+1'];\n  List<String> algebraicForms = expressions.map((expression) {\n    switch (expression) {\n      case 'x^2':\n        return 'x * x';\n      case '2*x':\n        return '2 * x';\n      case 'x+1':\n        return 'x + 1';\n      default:\n        return expression;\n    }\n  }).toList();\n\n  print(algebraicForms);\n}\n```"
  },
  {
    "task": "Apply map to convert a list of ASCII codes to corresponding characters.",
    "code": "```dart\nvoid main() {\n  List<int> asciiCodes = [65, 66, 67, 68];\n  List<String> characters = asciiCodes.map((code) => String.fromCharCode(code)).toList();\n  print(characters);\n}\n```"
  },
  {
    "task": "Use map to transform a list of text strings to their lemmatized forms.",
    "code": "```dart\nimport 'package:lemmatizerx/lemmatizerx.dart';\n\nvoid main() {\n  final lemmatizer = Lemmatizer();\n  final texts = ['running', 'swimming', 'easily', 'better'];\n  \n  final lemmatizedTexts = texts.map((text) => lemmatizer.lemmatize(text)).toList();\n  \n  print(lemmatizedTexts);\n}\n```"
  },
  {
    "task": "Convert a list of HTML strings to plain text using map.",
    "code": "```dart\nimport 'package:html/parser.dart'; // Import the html parser package\n\nvoid main() {\n  List<String> htmlStrings = [\n    '<div>Hello, <b>world</b>!</div>',\n    '<p>This is a <a href=\"#\">link</a>.</p>',\n    '<span>Sample <i>text</i></span>'\n  ];\n\n  List<String> plainTexts = htmlStrings.map((html) {\n    var document = parse(html);\n    return document.body?.text ?? '';\n  }).toList();\n\n  print(plainTexts);\n}\n```"
  },
  {
    "task": "Use map to create a summary of each article in a list of texts.",
    "code": "```dart\nvoid main() {\n  List<String> articles = [\n    \"Dart is an open-source, general-purpose programming language.\",\n    \"Flutter is an open-source UI software development toolkit created by Google.\",\n    \"Dart is optimized for UI, developed by Google, and is used to build mobile, desktop, server, and web applications.\"\n  ];\n\n  List<String> summaries = articles.map((article) => \"Summary: ${article.split('.').first}\").toList();\n\n  summaries.forEach((summary) => print(summary));\n}\n```"
  },
  {
    "task": "Transform a list of paths to their absolute paths using a map function.",
    "code": "```dart\nimport 'dart:io';\n\nvoid main() {\n  List<String> paths = ['relative/path/1', './relative/path/2', '../relative/path/3'];\n  \n  List<String> absolutePaths = paths.map((path) => File(path).absolute.path).toList();\n  \n  print(absolutePaths);\n}\n```"
  },
  {
    "task": "Use map to generate QR codes from a list of URLs.",
    "code": "```dart\nimport 'package:qr/qr.dart';\n\nList<String> urls = [\n  'https://example.com',\n  'https://example.org',\n  'https://example.net'\n];\n\nList<QrCode> qrCodes = urls.map((url) {\n  QrCode qr = QrCode(4, QrErrorCorrectLevel.L);\n  qr.addData(url);\n  qr.make();\n  return qr;\n}).toList();\n```"
  },
  {
    "task": "Convert a list of angles from degrees to radians using map.",
    "code": "```dart\nvoid main() {\n  List<double> degrees = [0, 30, 45, 60, 90, 180, 270, 360];\n  List<double> radians = degrees.map((angle) => angle * (3.141592653589793 / 180)).toList();\n  print(radians);\n}\n```"
  },
  {
    "task": "Use map to anonymize a list of IP addresses by masking parts of them.",
    "code": "```dart\nvoid main() {\n  List<String> ipAddresses = [\n    '192.168.1.1',\n    '10.0.0.1',\n    '172.16.0.1',\n    '8.8.8.8'\n  ];\n\n  List<String> anonymizedIPs = ipAddresses.map((ip) {\n    List<String> segments = ip.split('.');\n    if (segments.length == 4) {\n      segments[2] = 'xxx';\n      segments[3] = 'xxx';\n    }\n    return segments.join('.');\n  }).toList();\n\n  print(anonymizedIPs);\n}\n```"
  },
  {
    "task": "Transform a list of tuples by swapping their elements using a map function.",
    "code": "```dart\nvoid main() {\n  var tuples = [(1, 'a'), (2, 'b'), (3, 'c')];\n  var swapped = tuples.map((tuple) => (tuple.item2, tuple.item1)).toList();\n  print(swapped);\n}\n```"
  },
  {
    "task": "Use map to compute the greatest common divisor of pairs in a list of number pairs.",
    "code": "```dart\nint gcd(int a, int b) {\n  while (b != 0) {\n    int t = b;\n    b = a % b;\n    a = t;\n  }\n  return a;\n}\n\nvoid main() {\n  List<List<int>> pairs = [\n    [48, 18],\n    [56, 98],\n    [101, 103],\n    [27, 36]\n  ];\n\n  List<int> gcds = pairs.map((pair) => gcd(pair[0], pair[1])).toList();\n  print(gcds);\n}\n```"
  },
  {
    "task": "Convert a list of file paths to their directory names using map.",
    "code": "```dart\nvoid main() {\n  List<String> filePaths = [\n    '/home/user/documents/file1.txt',\n    '/var/log/syslog',\n    '/usr/local/bin/executable'\n  ];\n\n  List<String> directoryNames = filePaths.map((path) {\n    return path.substring(0, path.lastIndexOf('/'));\n  }).toList();\n\n  print(directoryNames);\n}\n```"
  },
  {
    "task": "Use map to replace each vowel in a list of strings with a specific character.",
    "code": "```dart\nvoid main() {\n  List<String> strings = ['apple', 'banana', 'cherry'];\n  String replacementCharacter = '*';\n  \n  List<String> transformedStrings = strings.map((str) {\n    return str.replaceAllMapped(RegExp('[aeiouAEIOU]'), (match) => replacementCharacter);\n  }).toList();\n  \n  print(transformedStrings);\n}\n```"
  },
  {
    "task": "Transform a list of integers to their hexadecimal representations using map.",
    "code": "```dart\nvoid main() {\n  List<int> numbers = [10, 15, 255, 1024];\n  List<String> hexNumbers = numbers.map((num) => num.toRadixString(16)).toList();\n  print(hexNumbers);\n}\n```"
  },
  {
    "task": "Use map to apply a transformation matrix to a list of 2D vectors.",
    "code": "```dart\nList<List<double>> applyTransformationMatrix(\n    List<List<double>> vectors, List<List<double>> matrix) {\n  return vectors.map((vector) {\n    return [\n      vector[0] * matrix[0][0] + vector[1] * matrix[0][1],\n      vector[0] * matrix[1][0] + vector[1] * matrix[1][1]\n    ];\n  }).toList();\n}\n\nvoid main() {\n  List<List<double>> vectors = [\n    [1.0, 2.0],\n    [3.0, 4.0],\n    [5.0, 6.0]\n  ];\n\n  List<List<double>> transformationMatrix = [\n    [0.0, 1.0],\n    [1.0, 0.0]\n  ];\n\n  List<List<double>> transformedVectors =\n      applyTransformationMatrix(vectors, transformationMatrix);\n\n  print(transformedVectors);\n}\n```"
  },
  {
    "task": "Convert a list of text strings to their phonetic alphabet equivalents using map.",
    "code": "```dart\nvoid main() {\n  List<String> words = ['hello', 'world'];\n  Map<String, String> phoneticAlphabet = {\n    'a': 'Alfa', 'b': 'Bravo', 'c': 'Charlie', 'd': 'Delta', 'e': 'Echo',\n    'f': 'Foxtrot', 'g': 'Golf', 'h': 'Hotel', 'i': 'India', 'j': 'Juliett',\n    'k': 'Kilo', 'l': 'Lima', 'm': 'Mike', 'n': 'November', 'o': 'Oscar',\n    'p': 'Papa', 'q': 'Quebec', 'r': 'Romeo', 's': 'Sierra', 't': 'Tango',\n    'u': 'Uniform', 'v': 'Victor', 'w': 'Whiskey', 'x': 'X-ray', 'y': 'Yankee',\n    'z': 'Zulu'\n  };\n\n  List<List<String>> phoneticList = words.map((word) {\n    return word.split('').map((char) {\n      return phoneticAlphabet[char.toLowerCase()] ?? char;\n    }).toList();\n  }).toList();\n\n  for (var phoneticWord in phoneticList) {\n    print(phoneticWord.join(' '));\n  }\n}\n```"
  },
  {
    "task": "Use map to determine if each word in a list is a palindrome, returning booleans.",
    "code": "```dart\nvoid main() {\n  List<String> words = ['level', 'hello', 'racecar', 'world', 'madam'];\n  List<bool> isPalindrome = words.map((word) {\n    String reversed = word.split('').reversed.join('');\n    return word == reversed;\n  }).toList();\n\n  print(isPalindrome);\n}\n```"
  },
  {
    "task": "Transform a list of dictionaries by renaming a specified key using a map function.",
    "code": "```dart\nvoid main() {\n  List<Map<String, dynamic>> data = [\n    {'oldKey': 'value1', 'anotherKey': 42},\n    {'oldKey': 'value2', 'anotherKey': 21},\n  ];\n\n  List<Map<String, dynamic>> transformedData = data.map((item) {\n    Map<String, dynamic> newItem = Map.from(item);\n    if (newItem.containsKey('oldKey')) {\n      newItem['newKey'] = newItem.remove('oldKey');\n    }\n    return newItem;\n  }).toList();\n\n  print(transformedData);\n}\n```"
  },
  {
    "task": "Use map to compute the logarithm of each number in a list.",
    "code": "```dart\nimport 'dart:math';\n\nvoid main() {\n  List<double> numbers = [1, 10, 100, 1000];\n  List<double> logarithms = numbers.map((num) => log(num)).toList();\n  print(logarithms);\n}\n```"
  },
  {
    "task": "Convert a list of image file paths to grayscale versions using map.",
    "code": "```dart\nList<String> convertToGrayscale(List<String> imagePaths) {\n  return imagePaths.map((path) => convertImageToGrayscale(path)).toList();\n}\n\nString convertImageToGrayscale(String path) {\n  // Assume this function takes an image path, processes it to grayscale, and returns the new path.\n  // The implementation details are abstracted here.\n  return 'grayscale_$path';\n}\n\nvoid main() {\n  List<String> imagePaths = ['image1.png', 'image2.jpg', 'image3.bmp'];\n  List<String> grayscalePaths = convertToGrayscale(imagePaths);\n  print(grayscalePaths);\n}\n```"
  },
  {
    "task": "Use map to flatten a list of lists of strings into a single list of strings.",
    "code": "```dart\nvoid main() {\n  List<List<String>> listOfLists = [\n    ['apple', 'banana'],\n    ['cherry', 'date'],\n    ['elderberry', 'fig']\n  ];\n\n  List<String> flattenedList = listOfLists.expand((list) => list).toList();\n  \n  print(flattenedList);\n}\n```"
  },
  {
    "task": "Transform a list of temperature readings to temperature anomalies using a map function.",
    "code": "```dart\nvoid main() {\n  List<double> temperatureReadings = [15.5, 18.3, 20.1, 22.4, 17.0];\n  double average = temperatureReadings.reduce((a, b) => a + b) / temperatureReadings.length;\n  \n  List<double> temperatureAnomalies = temperatureReadings.map((temp) => temp - average).toList();\n  \n  print(temperatureAnomalies);\n}\n```"
  }
]