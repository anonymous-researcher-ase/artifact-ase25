[
  {
    "task": "Define a class representing a book with attributes for title, author, and number of pages, and a method to display the book's information.",
    "code": "```dart\nclass Book {\n  String title;\n  String author;\n  int numberOfPages;\n\n  Book(this.title, this.author, this.numberOfPages);\n\n  void displayInfo() {\n    print('Title: $title');\n    print('Author: $author');\n    print('Number of Pages: $numberOfPages');\n  }\n}\n```"
  },
  {
    "task": "Create a class for a bank account that includes attributes for account number, balance, and a method to deposit funds.",
    "code": "```dart\nclass BankAccount {\n  String accountNumber;\n  double balance;\n\n  BankAccount(this.accountNumber, this.balance);\n\n  void deposit(double amount) {\n    balance += amount;\n  }\n}\n```"
  },
  {
    "task": "Design a class for a vehicle with properties for make, model, and year, and a method to start the engine.",
    "code": "```dart\nclass Vehicle {\n  String make;\n  String model;\n  int year;\n\n  Vehicle(this.make, this.model, this.year);\n\n  void startEngine() {\n    print('Engine started for $make $model, year $year.');\n  }\n}\n```"
  },
  {
    "task": "Implement a class that models a student with attributes for name, ID, and grades, and a method to calculate the GPA.",
    "code": "```dart\nclass Student {\n  String name;\n  int id;\n  List<double> grades;\n\n  Student(this.name, this.id, this.grades);\n\n  double calculateGPA() {\n    if (grades.isEmpty) return 0.0;\n    double sum = grades.reduce((a, b) => a + b);\n    return sum / grades.length;\n  }\n}\n```"
  },
  {
    "task": "Construct a class for a rectangle that has attributes for width and height, and methods to calculate area and perimeter.",
    "code": "```dart\nclass Rectangle {\n  double width;\n  double height;\n\n  Rectangle(this.width, this.height);\n\n  double calculateArea() {\n    return width * height;\n  }\n\n  double calculatePerimeter() {\n    return 2 * (width + height);\n  }\n}\n```"
  },
  {
    "task": "Formulate a class for a smartphone with properties for brand, model, and battery life, and a method to make a call.",
    "code": "```dart\nclass Smartphone {\n  String brand;\n  String model;\n  int batteryLife;\n\n  Smartphone(this.brand, this.model, this.batteryLife);\n\n  void makeCall(String number) {\n    print('Calling $number...');\n  }\n}\n```"
  },
  {
    "task": "Build a class representing a movie with attributes for title, director, and duration, and a method to play the movie.",
    "code": "```dart\nclass Movie {\n  String title;\n  String director;\n  int duration;\n\n  Movie(this.title, this.director, this.duration);\n\n  void play() {\n    print('Playing $title directed by $director');\n  }\n}\n```"
  },
  {
    "task": "Create a class for an employee with attributes for name, position, and salary, and a method to display their profile.",
    "code": "```dart\nclass Employee {\n  String name;\n  String position;\n  double salary;\n\n  Employee(this.name, this.position, this.salary);\n\n  void displayProfile() {\n    print('Name: $name');\n    print('Position: $position');\n    print('Salary: \\$${salary.toStringAsFixed(2)}');\n  }\n}\n```"
  },
  {
    "task": "Design a class for a library that includes attributes for name, location, and books available, and a method to add a new book.",
    "code": "```dart\nclass Library {\n  String name;\n  String location;\n  List<String> booksAvailable;\n\n  Library(this.name, this.location, this.booksAvailable);\n\n  void addBook(String newBook) {\n    booksAvailable.add(newBook);\n  }\n}\n\nvoid main() {\n  Library myLibrary = Library('City Library', 'Downtown', ['1984', 'Brave New World']);\n  myLibrary.addBook('Fahrenheit 451');\n  print(myLibrary.booksAvailable);\n}\n```"
  },
  {
    "task": "Develop a class for a shopping cart with properties for items and total cost, and methods to add and remove items.",
    "code": "```dart\nclass ShoppingCart {\n  List<String> items = [];\n  double totalCost = 0.0;\n\n  void addItem(String item, double cost) {\n    items.add(item);\n    totalCost += cost;\n  }\n\n  void removeItem(String item, double cost) {\n    if (items.contains(item)) {\n      items.remove(item);\n      totalCost -= cost;\n    }\n  }\n}\n```"
  },
  {
    "task": "Implement a class for a thermostat with attributes for current temperature and desired temperature, and a method to adjust the temperature.",
    "code": "```dart\nclass Thermostat {\n  double currentTemperature;\n  double desiredTemperature;\n\n  Thermostat(this.currentTemperature, this.desiredTemperature);\n\n  void adjustTemperature() {\n    if (currentTemperature < desiredTemperature) {\n      currentTemperature++;\n    } else if (currentTemperature > desiredTemperature) {\n      currentTemperature--;\n    }\n  }\n}\n```"
  },
  {
    "task": "Formulate a class for a person with attributes for first name, last name, and age, and a method to return the full name.",
    "code": "```dart\nclass Person {\n  String firstName;\n  String lastName;\n  int age;\n\n  Person(this.firstName, this.lastName, this.age);\n\n  String getFullName() {\n    return '$firstName $lastName';\n  }\n}\n```"
  },
  {
    "task": "Construct a class for a game character with properties for health, strength, and inventory, and a method to attack.",
    "code": "```dart\nclass GameCharacter {\n  int health;\n  int strength;\n  List<String> inventory;\n\n  GameCharacter(this.health, this.strength, this.inventory);\n\n  void attack(GameCharacter target) {\n    target.health -= this.strength;\n  }\n}\n```"
  },
  {
    "task": "Create a class for a calendar event with attributes for title, date, and location, and a method to reschedule the event.",
    "code": "```dart\nclass CalendarEvent {\n  String title;\n  DateTime date;\n  String location;\n\n  CalendarEvent(this.title, this.date, this.location);\n\n  void reschedule(DateTime newDate) {\n    date = newDate;\n  }\n}\n```"
  },
  {
    "task": "Design a class representing a song with properties for title, artist, and duration, and a method to play the song.",
    "code": "```dart\nclass Song {\n  String title;\n  String artist;\n  Duration duration;\n\n  Song(this.title, this.artist, this.duration);\n\n  void play() {\n    print('Playing: $title by $artist');\n  }\n}\n```"
  },
  {
    "task": "Develop a class for an order in an e-commerce system with attributes for order ID, customer, and items, and a method to calculate total price.",
    "code": "```dart\nclass Order {\n  String orderId;\n  String customer;\n  List<Item> items;\n  \n  Order(this.orderId, this.customer, this.items);\n  \n  double calculateTotalPrice() {\n    double totalPrice = 0.0;\n    for (var item in items) {\n      totalPrice += item.price;\n    }\n    return totalPrice;\n  }\n}\n\nclass Item {\n  String name;\n  double price;\n  \n  Item(this.name, this.price);\n}\n```"
  },
  {
    "task": "Build a class for a social media post with attributes for content, author, and timestamp, and a method to like the post.",
    "code": "```dart\nclass SocialMediaPost {\n  String content;\n  String author;\n  DateTime timestamp;\n  int likes;\n\n  SocialMediaPost({\n    required this.content,\n    required this.author,\n    required this.timestamp,\n  }) : likes = 0;\n\n  void likePost() {\n    likes++;\n  }\n}\n```"
  },
  {
    "task": "Create a class for a computer with properties for processor, RAM, and storage, and a method to display system specifications.",
    "code": "```dart\nclass Computer {\n  String processor;\n  int ram;\n  int storage;\n\n  Computer(this.processor, this.ram, this.storage);\n\n  void displaySpecifications() {\n    print('Processor: $processor');\n    print('RAM: ${ram}GB');\n    print('Storage: ${storage}GB');\n  }\n}\n```"
  },
  {
    "task": "Implement a class for a restaurant menu item with attributes for name, price, and description, and a method to update the price.",
    "code": "```dart\nclass MenuItem {\n  String name;\n  double price;\n  String description;\n\n  MenuItem(this.name, this.price, this.description);\n\n  void updatePrice(double newPrice) {\n    price = newPrice;\n  }\n}\n```"
  },
  {
    "task": "Design a class for a package delivery with attributes for tracking number, destination, and status, and a method to update the status.",
    "code": "```dart\nclass PackageDelivery {\n  String trackingNumber;\n  String destination;\n  String status;\n  \n  PackageDelivery(this.trackingNumber, this.destination, this.status);\n  \n  void updateStatus(String newStatus) {\n    status = newStatus;\n  }\n}\n```"
  },
  {
    "task": "Construct a class representing a pet with attributes for species, age, and name, and a method to display its details.",
    "code": "```dart\nclass Pet {\n  String species;\n  int age;\n  String name;\n\n  Pet(this.species, this.age, this.name);\n\n  void displayDetails() {\n    print('Species: $species, Age: $age, Name: $name');\n  }\n}\n```"
  },
  {
    "task": "Formulate a class for a product in a store with properties for SKU, name, and price, and a method to apply a discount.",
    "code": "```dart\nclass Product {\n  String sku;\n  String name;\n  double price;\n\n  Product(this.sku, this.name, this.price);\n\n  void applyDiscount(double discountPercent) {\n    price -= price * (discountPercent / 100);\n  }\n}\n```"
  },
  {
    "task": "Develop a class for a university course with attributes for course code, title, and credits, and a method to enroll a student.",
    "code": "```dart\nclass UniversityCourse {\n  String courseCode;\n  String title;\n  int credits;\n\n  UniversityCourse(this.courseCode, this.title, this.credits);\n\n  void enrollStudent(String studentName) {\n    print('$studentName has been enrolled in $title.');\n  }\n}\n```"
  },
  {
    "task": "Create a class for a smart light bulb with attributes for color, brightness, and state (on/off), and a method to change the color.",
    "code": "```dart\nclass SmartLightBulb {\n  String color;\n  int brightness;\n  bool isOn;\n\n  SmartLightBulb({required this.color, required this.brightness, this.isOn = false});\n\n  void changeColor(String newColor) {\n    color = newColor;\n  }\n}\n```"
  },
  {
    "task": "Design a class for a blog post with properties for title, content, and date published, and a method to edit the content.",
    "code": "```dart\nclass BlogPost {\n  String title;\n  String content;\n  DateTime datePublished;\n\n  BlogPost(this.title, this.content, this.datePublished);\n\n  void editContent(String newContent) {\n    content = newContent;\n  }\n}\n```"
  },
  {
    "task": "Build a class for a bank transaction with attributes for transaction ID, amount, and type, and a method to reverse the transaction.",
    "code": "```dart\nclass BankTransaction {\n  String transactionId;\n  double amount;\n  String type;\n\n  BankTransaction(this.transactionId, this.amount, this.type);\n\n  void reverseTransaction() {\n    amount = -amount;\n  }\n}\n```"
  },
  {
    "task": "Implement a class for a city with properties for name, population, and area, and a method to calculate population density.",
    "code": "```dart\nclass City {\n  String name;\n  int population;\n  double area;\n\n  City(this.name, this.population, this.area);\n\n  double populationDensity() {\n    return population / area;\n  }\n}\n```"
  },
  {
    "task": "Construct a class for a library member with attributes for member ID, name, and borrowed books, and a method to borrow a book.",
    "code": "```dart\nclass LibraryMember {\n  int memberId;\n  String name;\n  List<String> borrowedBooks;\n\n  LibraryMember(this.memberId, this.name) : borrowedBooks = [];\n\n  void borrowBook(String bookTitle) {\n    borrowedBooks.add(bookTitle);\n  }\n}\n```"
  },
  {
    "task": "Create a class for a flight reservation with attributes for flight number, passenger name, and seat number, and a method to change the seat.",
    "code": "```dart\nclass FlightReservation {\n  String flightNumber;\n  String passengerName;\n  String seatNumber;\n\n  FlightReservation(this.flightNumber, this.passengerName, this.seatNumber);\n\n  void changeSeat(String newSeatNumber) {\n    seatNumber = newSeatNumber;\n  }\n}\n```"
  },
  {
    "task": "Develop a class for a digital photo album with properties for album name, photos, and a method to add a new photo.",
    "code": "```dart\nclass DigitalPhotoAlbum {\n  String albumName;\n  List<String> photos;\n\n  DigitalPhotoAlbum(this.albumName) : photos = [];\n\n  void addPhoto(String photo) {\n    photos.add(photo);\n  }\n}\n```"
  },
  {
    "task": "Design a class for a task in a to-do list with attributes for description, deadline, and status, and a method to mark it as complete.",
    "code": "```dart\nclass Task {\n  String description;\n  DateTime deadline;\n  bool isComplete;\n\n  Task(this.description, this.deadline, {this.isComplete = false});\n\n  void markAsComplete() {\n    isComplete = true;\n  }\n}\n```"
  },
  {
    "task": "Formulate a class for a conference speaker with attributes for name, topic, and time slot, and a method to update the time slot.",
    "code": "```dart\nclass ConferenceSpeaker {\n  String name;\n  String topic;\n  String timeSlot;\n\n  ConferenceSpeaker(this.name, this.topic, this.timeSlot);\n\n  void updateTimeSlot(String newTimeSlot) {\n    timeSlot = newTimeSlot;\n  }\n}\n```"
  },
  {
    "task": "Construct a class for a real estate property with attributes for address, price, and square footage, and a method to change the price.",
    "code": "```dart\nclass RealEstateProperty {\n  String address;\n  double price;\n  double squareFootage;\n\n  RealEstateProperty({\n    required this.address,\n    required this.price,\n    required this.squareFootage,\n  });\n\n  void changePrice(double newPrice) {\n    price = newPrice;\n  }\n}\n```"
  },
  {
    "task": "Create a class for a weather forecast with properties for temperature, humidity, and condition, and a method to update the forecast.",
    "code": "```dart\nclass WeatherForecast {\n  double temperature;\n  double humidity;\n  String condition;\n\n  WeatherForecast(this.temperature, this.humidity, this.condition);\n\n  void updateForecast(double newTemperature, double newHumidity, String newCondition) {\n    temperature = newTemperature;\n    humidity = newHumidity;\n    condition = newCondition;\n  }\n}\n```"
  },
  {
    "task": "Build a class for a musical instrument with attributes for type, brand, and model, and a method to play a note.",
    "code": "```dart\nclass MusicalInstrument {\n  String type;\n  String brand;\n  String model;\n  \n  MusicalInstrument(this.type, this.brand, this.model);\n  \n  void playNote() {\n    print('Playing a note on the $brand $model $type.');\n  }\n}\n```"
  },
  {
    "task": "Design a class for a sports team with attributes for team name, players, and coach, and a method to add a new player.",
    "code": "```dart\nclass SportsTeam {\n  String teamName;\n  List<String> players;\n  String coach;\n\n  SportsTeam(this.teamName, this.players, this.coach);\n\n  void addPlayer(String player) {\n    players.add(player);\n  }\n}\n```"
  },
  {
    "task": "Implement a class for a podcast episode with attributes for title, duration, and host, and a method to play the episode.",
    "code": "```dart\nclass PodcastEpisode {\n  String title;\n  int duration; // Duration in seconds\n  String host;\n\n  PodcastEpisode(this.title, this.duration, this.host);\n\n  void play() {\n    print('Playing episode: $title by $host');\n  }\n}\n```"
  },
  {
    "task": "Develop a class for a space mission with properties for mission name, crew, and launch date, and a method to launch the mission.",
    "code": "```dart\nclass SpaceMission {\n  String missionName;\n  List<String> crew;\n  DateTime launchDate;\n\n  SpaceMission(this.missionName, this.crew, this.launchDate);\n\n  void launchMission() {\n    print('Launching mission: $missionName');\n  }\n}\n```"
  },
  {
    "task": "Create a class for a virtual assistant with attributes for name, language, and skills, and a method to add a new skill.",
    "code": "```dart\nclass VirtualAssistant {\n  String name;\n  String language;\n  List<String> skills;\n\n  VirtualAssistant(this.name, this.language, this.skills);\n\n  void addSkill(String skill) {\n    skills.add(skill);\n  }\n}\n```"
  },
  {
    "task": "Formulate a class for a news article with attributes for headline, content, and author, and a method to publish the article.",
    "code": "```dart\nclass NewsArticle {\n  String headline;\n  String content;\n  String author;\n\n  NewsArticle(this.headline, this.content, this.author);\n\n  void publish() {\n    print(\"Publishing Article:\");\n    print(\"Headline: $headline\");\n    print(\"Content: $content\");\n    print(\"Author: $author\");\n  }\n}\n```"
  },
  {
    "task": "Construct a class for a hiking trail with attributes for trail name, length, and difficulty, and a method to update the difficulty.",
    "code": "```dart\nclass HikingTrail {\n  String trailName;\n  double length;\n  String difficulty;\n\n  HikingTrail(this.trailName, this.length, this.difficulty);\n\n  void updateDifficulty(String newDifficulty) {\n    difficulty = newDifficulty;\n  }\n}\n```"
  },
  {
    "task": "Design a class for a subscription service with properties for service name, subscriber count, and subscription fee, and a method to update the fee.",
    "code": "```dart\nclass SubscriptionService {\n  String serviceName;\n  int subscriberCount;\n  double subscriptionFee;\n\n  SubscriptionService(this.serviceName, this.subscriberCount, this.subscriptionFee);\n\n  void updateFee(double newFee) {\n    subscriptionFee = newFee;\n  }\n}\n```"
  },
  {
    "task": "Build a class for a digital wallet with attributes for balance, transaction history, and a method to add funds.",
    "code": "```dart\nclass DigitalWallet {\n  double balance;\n  List<String> transactionHistory;\n\n  DigitalWallet() : balance = 0.0, transactionHistory = [];\n\n  void addFunds(double amount) {\n    balance += amount;\n    transactionHistory.add('Added \\$${amount.toStringAsFixed(2)}');\n  }\n}\n```"
  },
  {
    "task": "Implement a class for a cooking recipe with attributes for name, ingredients, and instructions, and a method to update the instructions.",
    "code": "```dart\nclass Recipe {\n  String name;\n  List<String> ingredients;\n  String instructions;\n\n  Recipe(this.name, this.ingredients, this.instructions);\n\n  void updateInstructions(String newInstructions) {\n    instructions = newInstructions;\n  }\n}\n```"
  },
  {
    "task": "Develop a class for a time zone with properties for zone name, offset, and a method to convert time from another time zone.",
    "code": "```dart\nclass TimeZone {\n  String zoneName;\n  int offset; // Offset in hours from UTC\n\n  TimeZone(this.zoneName, this.offset);\n\n  DateTime convertTime(DateTime time, TimeZone fromZone) {\n    int utcHour = time.toUtc().hour;\n    int convertedHour = utcHour + this.offset - fromZone.offset;\n    DateTime convertedTime = DateTime.utc(\n      time.year,\n      time.month,\n      time.day,\n      convertedHour,\n      time.minute,\n      time.second,\n    );\n    return convertedTime.toLocal();\n  }\n}\n```"
  },
  {
    "task": "Create a class for a camera with attributes for resolution, brand, and model, and a method to take a picture.",
    "code": "```dart\nclass Camera {\n  String resolution;\n  String brand;\n  String model;\n\n  Camera(this.resolution, this.brand, this.model);\n\n  void takePicture() {\n    print('Picture taken with $brand $model at $resolution resolution.');\n  }\n}\n```"
  },
  {
    "task": "Design a class for a gaming console with properties for brand, model, and storage capacity, and a method to install a game.",
    "code": "```dart\nclass GamingConsole {\n  String brand;\n  String model;\n  int storageCapacity; // in GB\n\n  GamingConsole(this.brand, this.model, this.storageCapacity);\n\n  void installGame(String gameName) {\n    print('Installing $gameName on $brand $model...');\n  }\n}\n\nvoid main() {\n  GamingConsole console = GamingConsole('BrandName', 'ModelX', 512);\n  console.installGame('Adventure Quest');\n}\n```"
  },
  {
    "task": "Formulate a class for a museum exhibit with attributes for exhibit name, artist, and year, and a method to update the year.",
    "code": "```dart\nclass MuseumExhibit {\n  String exhibitName;\n  String artist;\n  int year;\n\n  MuseumExhibit(this.exhibitName, this.artist, this.year);\n\n  void updateYear(int newYear) {\n    year = newYear;\n  }\n}\n```"
  },
  {
    "task": "Construct a class for a fitness tracker with attributes for steps, calories burned, and heart rate, and a method to add steps.",
    "code": "```dart\nclass FitnessTracker {\n  int steps;\n  double caloriesBurned;\n  int heartRate;\n\n  FitnessTracker(this.steps, this.caloriesBurned, this.heartRate);\n\n  void addSteps(int additionalSteps) {\n    steps += additionalSteps;\n  }\n}\n```"
  },
  {
    "task": "Build a class for an aquarium with properties for tank size, fish species, and water temperature, and a method to add a new fish.",
    "code": "```dart\nclass Aquarium {\n  double tankSize;\n  List<String> fishSpecies;\n  double waterTemperature;\n\n  Aquarium(this.tankSize, this.fishSpecies, this.waterTemperature);\n\n  void addFish(String species) {\n    fishSpecies.add(species);\n  }\n}\n```"
  },
  {
    "task": "Create a class for a chat message with attributes for sender, content, and timestamp, and a method to edit the content.",
    "code": "```dart\nclass ChatMessage {\n  String sender;\n  String content;\n  DateTime timestamp;\n\n  ChatMessage(this.sender, this.content, this.timestamp);\n\n  void editContent(String newContent) {\n    content = newContent;\n  }\n}\n```"
  },
  {
    "task": "Design a class for a vending machine with properties for items available, prices, and a method to dispense an item.",
    "code": "```dart\nclass VendingMachine {\n  Map<String, double> items;\n\n  VendingMachine(this.items);\n\n  String dispenseItem(String itemName) {\n    if (items.containsKey(itemName)) {\n      return 'Dispensing $itemName for \\$${items[itemName]}';\n    } else {\n      return 'Item not available';\n    }\n  }\n}\n\nvoid main() {\n  var vendingMachine = VendingMachine({\n    'Soda': 1.50,\n    'Chips': 1.00,\n    'Candy': 0.75,\n  });\n\n  print(vendingMachine.dispenseItem('Soda'));\n  print(vendingMachine.dispenseItem('Water'));\n}\n```"
  },
  {
    "task": "Implement a class for a digital clock with attributes for current time, time zone, and a method to set an alarm.",
    "code": "```dart\nclass DigitalClock {\n  DateTime currentTime;\n  String timeZone;\n  DateTime? alarmTime;\n\n  DigitalClock(this.currentTime, this.timeZone);\n\n  void setAlarm(DateTime alarmTime) {\n    this.alarmTime = alarmTime;\n  }\n}\n```"
  },
  {
    "task": "Develop a class for a historical figure with attributes for name, birthdate, and achievements, and a method to add an achievement.",
    "code": "```dart\nclass HistoricalFigure {\n  String name;\n  DateTime birthdate;\n  List<String> achievements;\n\n  HistoricalFigure(this.name, this.birthdate, this.achievements);\n\n  void addAchievement(String achievement) {\n    achievements.add(achievement);\n  }\n}\n```"
  },
  {
    "task": "Formulate a class for a travel itinerary with attributes for destinations, travel dates, and activities, and a method to add a destination.",
    "code": "```dart\nclass TravelItinerary {\n  List<String> destinations;\n  List<DateTime> travelDates;\n  List<String> activities;\n\n  TravelItinerary({required this.destinations, required this.travelDates, required this.activities});\n\n  void addDestination(String destination) {\n    destinations.add(destination);\n  }\n}\n```"
  },
  {
    "task": "Construct a class for a fashion brand with properties for brand name, founder, and product lines, and a method to launch a new product line.",
    "code": "```dart\nclass FashionBrand {\n  String brandName;\n  String founder;\n  List<String> productLines;\n\n  FashionBrand(this.brandName, this.founder, this.productLines);\n\n  void launchNewProductLine(String newProductLine) {\n    productLines.add(newProductLine);\n  }\n}\n```"
  },
  {
    "task": "Create a class for a video game with attributes for title, genre, and rating, and a method to update the rating.",
    "code": "```dart\nclass VideoGame {\n  String title;\n  String genre;\n  double rating;\n  \n  VideoGame(this.title, this.genre, this.rating);\n  \n  void updateRating(double newRating) {\n    rating = newRating;\n  }\n}\n```"
  },
  {
    "task": "Build a class for a scientific experiment with attributes for experiment name, hypothesis, and results, and a method to record results.",
    "code": "```dart\nclass ScientificExperiment {\n  String experimentName;\n  String hypothesis;\n  String results;\n\n  ScientificExperiment(this.experimentName, this.hypothesis);\n\n  void recordResults(String newResults) {\n    results = newResults;\n  }\n}\n```"
  },
  {
    "task": "Design a class for a gourmet dish with properties for dish name, ingredients, and cooking time, and a method to change cooking time.",
    "code": "```dart\nclass GourmetDish {\n  String dishName;\n  List<String> ingredients;\n  int cookingTime;\n\n  GourmetDish(this.dishName, this.ingredients, this.cookingTime);\n\n  void changeCookingTime(int newCookingTime) {\n    cookingTime = newCookingTime;\n  }\n}\n```"
  },
  {
    "task": "Implement a class for a political office with attributes for office title, holder, and term length, and a method to change the holder.",
    "code": "```dart\nclass PoliticalOffice {\n  String officeTitle;\n  String holder;\n  int termLength;\n\n  PoliticalOffice(this.officeTitle, this.holder, this.termLength);\n\n  void changeHolder(String newHolder) {\n    holder = newHolder;\n  }\n}\n```"
  },
  {
    "task": "Develop a class for an astronomical object with properties for name, type, and distance from Earth, and a method to update the distance.",
    "code": "```dart\nclass AstronomicalObject {\n  String name;\n  String type;\n  double distanceFromEarth;\n\n  AstronomicalObject(this.name, this.type, this.distanceFromEarth);\n\n  void updateDistance(double newDistance) {\n    distanceFromEarth = newDistance;\n  }\n}\n```"
  },
  {
    "task": "Formulate a class for a public transportation route with attributes for route number, stops, and schedule, and a method to add a stop.",
    "code": "```dart\nclass PublicTransportationRoute {\n  int routeNumber;\n  List<String> stops;\n  Map<String, String> schedule;\n\n  PublicTransportationRoute(this.routeNumber, this.stops, this.schedule);\n\n  void addStop(String stop) {\n    stops.add(stop);\n  }\n}\n```"
  },
  {
    "task": "Construct a class for a board game with properties for game name, player count, and rules, and a method to change the rules.",
    "code": "```dart\nclass BoardGame {\n  String gameName;\n  int playerCount;\n  List<String> rules;\n\n  BoardGame(this.gameName, this.playerCount, this.rules);\n\n  void changeRules(List<String> newRules) {\n    rules = newRules;\n  }\n}\n```"
  },
  {
    "task": "Create a class for a customer loyalty program with attributes for program name, points, and rewards, and a method to redeem points.",
    "code": "```dart\nclass LoyaltyProgram {\n  String programName;\n  int points;\n  List<String> rewards;\n\n  LoyaltyProgram(this.programName, this.points, this.rewards);\n\n  void redeemPoints(int pointsToRedeem) {\n    if (pointsToRedeem <= points) {\n      points -= pointsToRedeem;\n      print('Redeemed $pointsToRedeem points. Remaining points: $points');\n    } else {\n      print('Not enough points to redeem.');\n    }\n  }\n}\n```"
  },
  {
    "task": "Design a class for an art gallery with properties for gallery name, location, and exhibitions, and a method to add a new exhibition.",
    "code": "```dart\nclass ArtGallery {\n  String galleryName;\n  String location;\n  List<String> exhibitions;\n\n  ArtGallery(this.galleryName, this.location, this.exhibitions);\n\n  void addExhibition(String exhibition) {\n    exhibitions.add(exhibition);\n  }\n}\n```"
  },
  {
    "task": "Build a class for a personal blog with attributes for blog name, posts, and a method to add a new post.",
    "code": "```dart\nclass PersonalBlog {\n  String blogName;\n  List<String> posts;\n\n  PersonalBlog(this.blogName) : posts = [];\n\n  void addPost(String post) {\n    posts.add(post);\n  }\n}\n```"
  },
  {
    "task": "Implement a class for a mobile application with properties for app name, version, and developer, and a method to update the version.",
    "code": "```dart\nclass MobileApp {\n  String appName;\n  String version;\n  String developer;\n\n  MobileApp(this.appName, this.version, this.developer);\n\n  void updateVersion(String newVersion) {\n    version = newVersion;\n  }\n}\n```"
  },
  {
    "task": "Develop a class for a language translator with attributes for source language, target language, and translation method, and a method to translate a text.",
    "code": "```dart\nclass LanguageTranslator {\n  String sourceLanguage;\n  String targetLanguage;\n  String translationMethod;\n\n  LanguageTranslator(this.sourceLanguage, this.targetLanguage, this.translationMethod);\n\n  String translate(String text) {\n    // Placeholder for translation logic\n    return \"$text translated from $sourceLanguage to $targetLanguage using $translationMethod\";\n  }\n}\n```"
  },
  {
    "task": "Formulate a class for a culinary school with properties for school name, courses offered, and a method to add a new course.",
    "code": "```dart\nclass CulinarySchool {\n  String schoolName;\n  List<String> coursesOffered;\n\n  CulinarySchool(this.schoolName, this.coursesOffered);\n\n  void addCourse(String newCourse) {\n    coursesOffered.add(newCourse);\n  }\n}\n```"
  },
  {
    "task": "Construct a class for a musical band with attributes for band name, members, and genre, and a method to add a new member.",
    "code": "```dart\nclass Band {\n  String bandName;\n  List<String> members;\n  String genre;\n  \n  Band(this.bandName, this.members, this.genre);\n  \n  void addMember(String newMember) {\n    members.add(newMember);\n  }\n}\n```"
  },
  {
    "task": "Create a class for a television series with properties for series title, episodes, and network, and a method to add a new episode.",
    "code": "```dart\nclass TelevisionSeries {\n  String seriesTitle;\n  List<String> episodes;\n  String network;\n\n  TelevisionSeries(this.seriesTitle, this.episodes, this.network);\n\n  void addEpisode(String episode) {\n    episodes.add(episode);\n  }\n}\n```"
  },
  {
    "task": "Design a class for a wildlife reserve with attributes for reserve name, species protected, and area size, and a method to expand the area.",
    "code": "```dart\nclass WildlifeReserve {\n  String reserveName;\n  List<String> speciesProtected;\n  double areaSize;\n\n  WildlifeReserve(this.reserveName, this.speciesProtected, this.areaSize);\n\n  void expandArea(double additionalSize) {\n    areaSize += additionalSize;\n  }\n}\n```"
  },
  {
    "task": "Build a class for a luxury car with properties for brand, model, and price, and a method to update the price.",
    "code": "```dart\nclass LuxuryCar {\n  String brand;\n  String model;\n  double price;\n\n  LuxuryCar(this.brand, this.model, this.price);\n\n  void updatePrice(double newPrice) {\n    price = newPrice;\n  }\n}\n```"
  },
  {
    "task": "Implement a class for a scientific journal with attributes for journal name, articles, and impact factor, and a method to add a new article.",
    "code": "```dart\nclass ScientificJournal {\n  String journalName;\n  List<String> articles;\n  double impactFactor;\n\n  ScientificJournal(this.journalName, this.articles, this.impactFactor);\n\n  void addArticle(String article) {\n    articles.add(article);\n  }\n}\n```"
  },
  {
    "task": "Develop a class for a historical monument with properties for monument name, location, and year established, and a method to update the location.",
    "code": "```dart\nclass HistoricalMonument {\n  String name;\n  String location;\n  int yearEstablished;\n\n  HistoricalMonument(this.name, this.location, this.yearEstablished);\n\n  void updateLocation(String newLocation) {\n    location = newLocation;\n  }\n}\n```"
  },
  {
    "task": "Formulate a class for an educational course with attributes for course title, instructor, and syllabus, and a method to update the syllabus.",
    "code": "```dart\nclass Course {\n  String courseTitle;\n  String instructor;\n  String syllabus;\n\n  Course(this.courseTitle, this.instructor, this.syllabus);\n\n  void updateSyllabus(String newSyllabus) {\n    syllabus = newSyllabus;\n  }\n}\n```"
  },
  {
    "task": "Construct a class for a city park with properties for park name, facilities, and opening hours, and a method to add a new facility.",
    "code": "```dart\nclass CityPark {\n  String parkName;\n  List<String> facilities;\n  String openingHours;\n\n  CityPark(this.parkName, this.facilities, this.openingHours);\n\n  void addFacility(String facility) {\n    facilities.add(facility);\n  }\n}\n```"
  },
  {
    "task": "Create a class for a fitness class with attributes for class name, instructor, and schedule, and a method to update the schedule.",
    "code": "```dart\nclass FitnessClass {\n  String className;\n  String instructor;\n  String schedule;\n\n  FitnessClass(this.className, this.instructor, this.schedule);\n\n  void updateSchedule(String newSchedule) {\n    schedule = newSchedule;\n  }\n}\n```"
  },
  {
    "task": "Design a class for a virtual reality game with properties for game name, platform, and VR compatibility, and a method to change the platform.",
    "code": "```dart\nclass VirtualRealityGame {\n  String gameName;\n  String platform;\n  bool vrCompatible;\n\n  VirtualRealityGame(this.gameName, this.platform, this.vrCompatible);\n\n  void changePlatform(String newPlatform) {\n    platform = newPlatform;\n  }\n}\n```"
  },
  {
    "task": "Build a class for a mountain range with attributes for range name, highest peak, and countries covered, and a method to add a new peak.",
    "code": "```dart\nclass MountainRange {\n  String rangeName;\n  String highestPeak;\n  List<String> countriesCovered;\n  List<String> peaks;\n\n  MountainRange(this.rangeName, this.highestPeak, this.countriesCovered) {\n    peaks = [highestPeak];\n  }\n\n  void addNewPeak(String peak) {\n    peaks.add(peak);\n  }\n}\n```"
  },
  {
    "task": "Implement a class for a documentary film with properties for title, director, and subject, and a method to update the subject.",
    "code": "```dart\nclass DocumentaryFilm {\n  String title;\n  String director;\n  String subject;\n\n  DocumentaryFilm(this.title, this.director, this.subject);\n\n  void updateSubject(String newSubject) {\n    subject = newSubject;\n  }\n}\n```"
  },
  {
    "task": "Develop a class for a classical music composition with attributes for composition name, composer, and duration, and a method to change the duration.",
    "code": "```dart\nclass ClassicalComposition {\n  String compositionName;\n  String composer;\n  int duration; // Duration in minutes\n\n  ClassicalComposition(this.compositionName, this.composer, this.duration);\n\n  void changeDuration(int newDuration) {\n    duration = newDuration;\n  }\n}\n```"
  },
  {
    "task": "Formulate a class for a public library with properties for library name, books available, and membership, and a method to add a new book.",
    "code": "```dart\nclass PublicLibrary {\n  String libraryName;\n  List<String> booksAvailable;\n  bool membership;\n\n  PublicLibrary(this.libraryName, this.booksAvailable, this.membership);\n\n  void addBook(String newBook) {\n    booksAvailable.add(newBook);\n  }\n}\n```"
  },
  {
    "task": "Construct a class for a tech startup with attributes for startup name, founder, and funding, and a method to raise additional funding.",
    "code": "```dart\nclass TechStartup {\n  String startupName;\n  String founder;\n  double funding;\n\n  TechStartup(this.startupName, this.founder, this.funding);\n\n  void raiseFunding(double additionalFunding) {\n    funding += additionalFunding;\n  }\n}\n```"
  }
]