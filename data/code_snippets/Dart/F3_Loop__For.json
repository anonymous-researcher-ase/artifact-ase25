[
  {
    "task": "Write a program that prints numbers from 1 to 10 using a for loop.",
    "code": "```dart\nvoid main() {\n  for (int i = 1; i <= 10; i++) {\n    print(i);\n  }\n}\n```"
  },
  {
    "task": "Create a loop that iterates over an array of names and prints each name.",
    "code": "```dart\nvoid main() {\n  List<String> names = ['Alice', 'Bob', 'Charlie'];\n  for (String name in names) {\n    print(name);\n  }\n}\n```"
  },
  {
    "task": "Design a for loop to calculate the factorial of a given number.",
    "code": "```dart\nint factorial(int n) {\n  int result = 1;\n  for (int i = 1; i <= n; i++) {\n    result *= i;\n  }\n  return result;\n}\n```"
  },
  {
    "task": "Implement a program that uses a for loop to sum all even numbers between 1 and 100.",
    "code": "```dart\nvoid main() {\n  int sum = 0;\n  for (int i = 2; i <= 100; i += 2) {\n    sum += i;\n  }\n  print(sum);\n}\n```"
  },
  {
    "task": "Use a for loop to generate and print the Fibonacci sequence up to 20 terms.",
    "code": "```dart\nvoid main() {\n  int n1 = 0, n2 = 1, n3;\n  int terms = 20;\n  print(n1);\n  print(n2);\n  for (int i = 2; i < terms; i++) {\n    n3 = n1 + n2;\n    print(n3);\n    n1 = n2;\n    n2 = n3;\n  }\n}\n```"
  },
  {
    "task": "Construct a for loop that prints the multiplication table for a given number.",
    "code": "```dart\nvoid printMultiplicationTable(int number) {\n  for (int i = 1; i <= 10; i++) {\n    print('$number * $i = ${number * i}');\n  }\n}\n\nvoid main() {\n  int number = 5; // Example number\n  printMultiplicationTable(number);\n}\n```"
  },
  {
    "task": "Write code to iterate through a list of student grades and print only those above a certain threshold.",
    "code": "```dart\nvoid main() {\n  List<int> grades = [85, 92, 78, 90, 88];\n  int threshold = 80;\n  \n  for (int grade in grades) {\n    if (grade > threshold) {\n      print(grade);\n    }\n  }\n}\n```"
  },
  {
    "task": "Create a for loop that appends the square of numbers 1 to 10 to a list.",
    "code": "```dart\nvoid main() {\n  List<int> squares = [];\n  for (int i = 1; i <= 10; i++) {\n    squares.add(i * i);\n  }\n  print(squares);\n}\n```"
  },
  {
    "task": "Develop a for loop that reverses a given string.",
    "code": "```dart\nString reverseString(String input) {\n  String reversed = '';\n  for (int i = input.length - 1; i >= 0; i--) {\n    reversed += input[i];\n  }\n  return reversed;\n}\n\nvoid main() {\n  String str = 'hello';\n  String reversedStr = reverseString(str);\n  print(reversedStr);\n}\n```"
  },
  {
    "task": "Build a program that uses a for loop to print all elements in a 2D matrix.",
    "code": "```dart\nvoid main() {\n  List<List<int>> matrix = [\n    [1, 2, 3],\n    [4, 5, 6],\n    [7, 8, 9],\n  ];\n\n  for (int i = 0; i < matrix.length; i++) {\n    for (int j = 0; j < matrix[i].length; j++) {\n      print(matrix[i][j]);\n    }\n  }\n}\n```"
  },
  {
    "task": "Use a for loop to find the maximum value in an array of integers.",
    "code": "```dart\nvoid main() {\n  List<int> numbers = [3, 7, 2, 9, 4];\n  int maxValue = numbers[0];\n  \n  for (int i = 1; i < numbers.length; i++) {\n    if (numbers[i] > maxValue) {\n      maxValue = numbers[i];\n    }\n  }\n  \n  print('The maximum value is: $maxValue');\n}\n```"
  },
  {
    "task": "Write a program that uses a for loop to print the characters of a string, one per line.",
    "code": "```dart\nvoid main() {\n  String text = \"Hello, World!\";\n  for (int i = 0; i < text.length; i++) {\n    print(text[i]);\n  }\n}\n```"
  },
  {
    "task": "Create a for loop that counts the number of vowels in a given sentence.",
    "code": "```dart\nvoid main() {\n  String sentence = \"This is an example sentence.\";\n  int vowelCount = 0;\n  String vowels = \"aeiouAEIOU\";\n\n  for (int i = 0; i < sentence.length; i++) {\n    if (vowels.contains(sentence[i])) {\n      vowelCount++;\n    }\n  }\n\n  print(\"Number of vowels: $vowelCount\");\n}\n```"
  },
  {
    "task": "Implement a for loop to check if a number is prime by testing divisibility.",
    "code": "```dart\nbool isPrime(int number) {\n  if (number <= 1) return false;\n  for (int i = 2; i <= number ~/ 2; i++) {\n    if (number % i == 0) return false;\n  }\n  return true;\n}\n```"
  },
  {
    "task": "Design a for loop that prints a pyramid pattern of asterisks with a given height.",
    "code": "```dart\nvoid printPyramid(int height) {\n  for (int i = 1; i <= height; i++) {\n    // Print leading spaces\n    for (int j = 0; j < height - i; j++) {\n      stdout.write(' ');\n    }\n    // Print asterisks\n    for (int k = 0; k < 2 * i - 1; k++) {\n      stdout.write('*');\n    }\n    // Move to the next line\n    print('');\n  }\n}\n\nvoid main() {\n  int height = 5;\n  printPyramid(height);\n}\n```"
  },
  {
    "task": "Write a program that uses a for loop to calculate the sum of digits of a number.",
    "code": "```dart\nvoid main() {\n  int number = 12345;\n  int sum = 0;\n\n  for (int n = number; n > 0; n ~/= 10) {\n    sum += n % 10;\n  }\n\n  print('Sum of digits: $sum');\n}\n```"
  },
  {
    "task": "Construct a for loop to flatten a list of lists into a single list.",
    "code": "```dart\nvoid main() {\n  List<List<int>> listOfLists = [\n    [1, 2, 3],\n    [4, 5],\n    [6, 7, 8, 9]\n  ];\n\n  List<int> flattenedList = [];\n  \n  for (var sublist in listOfLists) {\n    for (var item in sublist) {\n      flattenedList.add(item);\n    }\n  }\n\n  print(flattenedList);\n}\n```"
  },
  {
    "task": "Use a for loop to generate a list of random numbers and print them.",
    "code": "```dart\nimport 'dart:math';\n\nvoid main() {\n  List<int> randomNumbers = [];\n  Random random = Random();\n\n  for (int i = 0; i < 10; i++) {\n    randomNumbers.add(random.nextInt(100));\n  }\n\n  for (int number in randomNumbers) {\n    print(number);\n  }\n}\n```"
  },
  {
    "task": "Create a for loop that iterates through a dictionary and prints its keys and values.",
    "code": "```dart\nvoid main() {\n  var myMap = {'apple': 1, 'banana': 2, 'cherry': 3};\n  for (var key in myMap.keys) {\n    print('Key: $key, Value: ${myMap[key]}');\n  }\n}\n```"
  },
  {
    "task": "Develop a for loop that counts down from 10 to 1 and prints each number.",
    "code": "```dart\nvoid main() {\n  for (int i = 10; i >= 1; i--) {\n    print(i);\n  }\n}\n```"
  },
  {
    "task": "Write code to multiply each element in an array by 2 using a for loop.",
    "code": "```dart\nvoid main() {\n  List<int> numbers = [1, 2, 3, 4, 5];\n  for (int i = 0; i < numbers.length; i++) {\n    numbers[i] *= 2;\n  }\n  print(numbers);\n}\n```"
  },
  {
    "task": "Create a for loop that calculates the average of numbers in a list.",
    "code": "```dart\nvoid main() {\n  List<num> numbers = [10, 20, 30, 40, 50];\n  num sum = 0;\n  \n  for (int i = 0; i < numbers.length; i++) {\n    sum += numbers[i];\n  }\n  \n  num average = sum / numbers.length;\n  print('Average: $average');\n}\n```"
  },
  {
    "task": "Implement a for loop to find duplicate elements in an array.",
    "code": "```dart\nvoid findDuplicates(List<int> array) {\n  for (int i = 0; i < array.length; i++) {\n    for (int j = i + 1; j < array.length; j++) {\n      if (array[i] == array[j]) {\n        print('Duplicate found: ${array[i]}');\n      }\n    }\n  }\n}\n\nvoid main() {\n  List<int> numbers = [1, 2, 3, 4, 5, 3, 2, 6];\n  findDuplicates(numbers);\n}\n```"
  },
  {
    "task": "Design a for loop that removes all occurrences of a specific element from a list.",
    "code": "```dart\nvoid main() {\n  List<int> numbers = [1, 2, 3, 4, 3, 5, 3];\n  int elementToRemove = 3;\n  List<int> filteredNumbers = [];\n\n  for (int number in numbers) {\n    if (number != elementToRemove) {\n      filteredNumbers.add(number);\n    }\n  }\n\n  print(filteredNumbers);\n}\n```"
  },
  {
    "task": "Use a for loop to simulate rolling a dice 100 times and count the occurrences of each face.",
    "code": "```dart\nimport 'dart:math';\n\nvoid main() {\n  var rng = Random();\n  var occurrences = List<int>.filled(6, 0);\n\n  for (var i = 0; i < 100; i++) {\n    var roll = rng.nextInt(6) + 1;\n    occurrences[roll - 1]++;\n  }\n\n  for (var i = 0; i < occurrences.length; i++) {\n    print('Face ${i + 1}: ${occurrences[i]} times');\n  }\n}\n```"
  },
  {
    "task": "Write a for loop that prints all the prime numbers between 1 and 50.",
    "code": "```dart\nvoid main() {\n  for (int number = 2; number <= 50; number++) {\n    bool isPrime = true;\n    for (int i = 2; i <= number ~/ 2; i++) {\n      if (number % i == 0) {\n        isPrime = false;\n        break;\n      }\n    }\n    if (isPrime) {\n      print(number);\n    }\n  }\n}\n```"
  },
  {
    "task": "Develop a for loop that extracts all the uppercase letters from a string.",
    "code": "```dart\nvoid main() {\n  String input = \"Hello World!\";\n  String uppercaseLetters = \"\";\n\n  for (int i = 0; i < input.length; i++) {\n    if (input[i].toUpperCase() == input[i] && input[i].toLowerCase() != input[i]) {\n      uppercaseLetters += input[i];\n    }\n  }\n\n  print(uppercaseLetters);\n}\n```"
  },
  {
    "task": "Create a for loop that checks if a list is sorted in ascending order.",
    "code": "```dart\nbool isSorted(List<int> list) {\n  for (int i = 0; i < list.length - 1; i++) {\n    if (list[i] > list[i + 1]) {\n      return false;\n    }\n  }\n  return true;\n}\n```"
  },
  {
    "task": "Implement a for loop to generate a list of the first 10 square numbers.",
    "code": "```dart\nvoid main() {\n  List<int> squareNumbers = [];\n  for (int i = 1; i <= 10; i++) {\n    squareNumbers.add(i * i);\n  }\n  print(squareNumbers);\n}\n```"
  },
  {
    "task": "Write code to print all the elements of a list that are greater than a given number using a for loop.",
    "code": "```dart\nvoid printGreaterThan(List<int> numbers, int threshold) {\n  for (int number in numbers) {\n    if (number > threshold) {\n      print(number);\n    }\n  }\n}\n\nvoid main() {\n  List<int> myNumbers = [1, 4, 6, 8, 10, 3, 7];\n  int threshold = 5;\n  printGreaterThan(myNumbers, threshold);\n}\n```"
  },
  {
    "task": "Construct a for loop that finds the smallest number in an array.",
    "code": "```dart\nvoid main() {\n  List<int> numbers = [34, 15, 88, 2, 99, 7];\n  int smallest = numbers[0];\n\n  for (int i = 1; i < numbers.length; i++) {\n    if (numbers[i] < smallest) {\n      smallest = numbers[i];\n    }\n  }\n\n  print('The smallest number is $smallest');\n}\n```"
  },
  {
    "task": "Develop a for loop that prints the first N lines of Pascal's Triangle.",
    "code": "```dart\nvoid printPascalsTriangle(int n) {\n  for (int line = 0; line < n; line++) {\n    int c = 1;\n    for (int i = 0; i <= line; i++) {\n      stdout.write('$c ');\n      c = c * (line - i) ~/ (i + 1);\n    }\n    print('');\n  }\n}\n\nvoid main() {\n  int N = 5; // You can change this value to print more or fewer lines\n  printPascalsTriangle(N);\n}\n```"
  },
  {
    "task": "Create a for loop that calculates the product of all elements in a list.",
    "code": "```dart\nvoid main() {\n  List<int> numbers = [2, 3, 4, 5];\n  int product = 1;\n  \n  for (int number in numbers) {\n    product *= number;\n  }\n  \n  print(product);\n}\n```"
  },
  {
    "task": "Use a for loop to print numbers from 1 to 100, but replace multiples of 3 with 'Fizz'.",
    "code": "```dart\nvoid main() {\n  for (int i = 1; i <= 100; i++) {\n    if (i % 3 == 0) {\n      print('Fizz');\n    } else {\n      print(i);\n    }\n  }\n}\n```"
  },
  {
    "task": "Write a for loop that iterates over a string and counts the number of words.",
    "code": "```dart\nvoid main() {\n  String text = \"This is an example sentence with several words.\";\n  int wordCount = 0;\n\n  for (int i = 0; i < text.length; i++) {\n    if (text[i] == ' ' || i == text.length - 1) {\n      wordCount++;\n    }\n  }\n\n  print(\"Number of words: $wordCount\");\n}\n```"
  },
  {
    "task": "Design a for loop that prints numbers from 1 to 50, but skips numbers divisible by 5.",
    "code": "```dart\nvoid main() {\n  for (int i = 1; i <= 50; i++) {\n    if (i % 5 == 0) continue;\n    print(i);\n  }\n}\n```"
  },
  {
    "task": "Implement a for loop that prints a checkerboard pattern of asterisks.",
    "code": "```dart\nvoid main() {\n  int size = 8; // Define the size of the checkerboard\n  for (int row = 0; row < size; row++) {\n    for (int col = 0; col < size; col++) {\n      if ((row + col) % 2 == 0) {\n        stdout.write('*');\n      } else {\n        stdout.write(' ');\n      }\n    }\n    stdout.writeln();\n  }\n}\n```"
  },
  {
    "task": "Create a for loop that finds the index of a target value in a list.",
    "code": "```dart\nint findIndex(List<int> list, int target) {\n  for (int i = 0; i < list.length; i++) {\n    if (list[i] == target) {\n      return i;\n    }\n  }\n  return -1; // Return -1 if the target is not found\n}\n```"
  },
  {
    "task": "Use a for loop to concatenate a list of strings into a single string.",
    "code": "```dart\nvoid main() {\n  List<String> strings = ['Hello', ' ', 'World', '!'];\n  String result = '';\n  for (int i = 0; i < strings.length; i++) {\n    result += strings[i];\n  }\n  print(result);\n}\n```"
  },
  {
    "task": "Develop a for loop that rotates a list to the right by a given number of positions.",
    "code": "```dart\nList<int> rotateRight(List<int> list, int positions) {\n  int len = list.length;\n  List<int> rotatedList = List<int>.filled(len, 0);\n\n  for (int i = 0; i < len; i++) {\n    rotatedList[(i + positions) % len] = list[i];\n  }\n\n  return rotatedList;\n}\n\nvoid main() {\n  List<int> originalList = [1, 2, 3, 4, 5];\n  int positions = 2;\n  List<int> rotatedList = rotateRight(originalList, positions);\n\n  print(rotatedList); // Output: [4, 5, 1, 2, 3]\n}\n```"
  },
  {
    "task": "Write code that uses a for loop to insert an element into a sorted list while maintaining order.",
    "code": "```dart\nvoid insertIntoSortedList(List<int> sortedList, int element) {\n  for (int i = 0; i < sortedList.length; i++) {\n    if (element < sortedList[i]) {\n      sortedList.insert(i, element);\n      return;\n    }\n  }\n  sortedList.add(element); // If element is larger than all existing elements\n}\n\nvoid main() {\n  List<int> sortedList = [1, 3, 5, 7, 9];\n  int element = 6;\n  insertIntoSortedList(sortedList, element);\n  print(sortedList); // Output: [1, 3, 5, 6, 7, 9]\n}\n```"
  },
  {
    "task": "Implement a for loop that counts the frequency of each character in a string.",
    "code": "```dart\nvoid main() {\n  String text = \"example string\";\n  Map<String, int> frequency = {};\n\n  for (int i = 0; i < text.length; i++) {\n    String char = text[i];\n    if (frequency.containsKey(char)) {\n      frequency[char] = frequency[char]! + 1;\n    } else {\n      frequency[char] = 1;\n    }\n  }\n\n  print(frequency);\n}\n```"
  },
  {
    "task": "Create a for loop that prints all subsets of a given set.",
    "code": "```dart\nvoid printSubsets(List<int> set) {\n  int n = set.length;\n  int subsetCount = 1 << n; // 2^n subsets\n\n  for (int i = 0; i < subsetCount; i++) {\n    List<int> subset = [];\n    for (int j = 0; j < n; j++) {\n      if ((i & (1 << j)) != 0) {\n        subset.add(set[j]);\n      }\n    }\n    print(subset);\n  }\n}\n\nvoid main() {\n  List<int> set = [1, 2, 3];\n  printSubsets(set);\n}\n```"
  },
  {
    "task": "Design a for loop to generate all permutations of a string.",
    "code": "```dart\nvoid main() {\n  String str = \"abc\";\n  List<String> result = [];\n  _permute(str.split(''), 0, str.length - 1, result);\n  print(result);\n}\n\nvoid _permute(List<String> chars, int left, int right, List<String> result) {\n  if (left == right) {\n    result.add(chars.join());\n  } else {\n    for (int i = left; i <= right; i++) {\n      _swap(chars, left, i);\n      _permute(chars, left + 1, right, result);\n      _swap(chars, left, i); // backtrack\n    }\n  }\n}\n\nvoid _swap(List<String> chars, int i, int j) {\n  String temp = chars[i];\n  chars[i] = chars[j];\n  chars[j] = temp;\n}\n```"
  },
  {
    "task": "Write a for loop that sorts an array in descending order.",
    "code": "```dart\nvoid main() {\n  List<int> array = [5, 2, 9, 1, 5, 6];\n  \n  for (int i = 0; i < array.length - 1; i++) {\n    for (int j = 0; j < array.length - i - 1; j++) {\n      if (array[j] < array[j + 1]) {\n        int temp = array[j];\n        array[j] = array[j + 1];\n        array[j + 1] = temp;\n      }\n    }\n  }\n  \n  print(array);\n}\n```"
  },
  {
    "task": "Use a for loop to generate a sequence of random characters and print them.",
    "code": "```dart\nimport 'dart:math';\n\nvoid main() {\n  const int sequenceLength = 10;\n  const String chars = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\n  final Random random = Random();\n\n  for (int i = 0; i < sequenceLength; i++) {\n    final int randomIndex = random.nextInt(chars.length);\n    print(chars[randomIndex]);\n  }\n}\n```"
  },
  {
    "task": "Construct a for loop that finds the common elements between two lists.",
    "code": "```dart\nvoid main() {\n  List<int> list1 = [1, 2, 3, 4, 5];\n  List<int> list2 = [4, 5, 6, 7, 8];\n  List<int> commonElements = [];\n\n  for (int i = 0; i < list1.length; i++) {\n    for (int j = 0; j < list2.length; j++) {\n      if (list1[i] == list2[j]) {\n        commonElements.add(list1[i]);\n      }\n    }\n  }\n  \n  print(commonElements);\n}\n```"
  },
  {
    "task": "Develop a for loop to calculate and print the cumulative sum of a list.",
    "code": "```dart\nvoid main() {\n  List<int> numbers = [1, 2, 3, 4, 5];\n  int cumulativeSum = 0;\n  \n  for (int i = 0; i < numbers.length; i++) {\n    cumulativeSum += numbers[i];\n    print('Cumulative sum after index $i: $cumulativeSum');\n  }\n}\n```"
  },
  {
    "task": "Create a for loop that prints a diamond pattern using asterisks.",
    "code": "```dart\nvoid main() {\n  int n = 5; // height of the diamond\n\n  // Upper half of the diamond\n  for (int i = 1; i <= n; i++) {\n    for (int j = i; j < n; j++) {\n      stdout.write(' ');\n    }\n    for (int k = 1; k <= (2 * i - 1); k++) {\n      stdout.write('*');\n    }\n    stdout.writeln();\n  }\n\n  // Lower half of the diamond\n  for (int i = n - 1; i >= 1; i--) {\n    for (int j = n; j > i; j--) {\n      stdout.write(' ');\n    }\n    for (int k = 1; k <= (2 * i - 1); k++) {\n      stdout.write('*');\n    }\n    stdout.writeln();\n  }\n}\n```"
  },
  {
    "task": "Write a for loop that simulates a countdown timer from a specified number of seconds.",
    "code": "```dart\nvoid countdownTimer(int seconds) {\n  for (int i = seconds; i >= 0; i--) {\n    print('Time remaining: $i seconds');\n  }\n}\n\nvoid main() {\n  countdownTimer(10); // Start countdown from 10 seconds\n}\n```"
  },
  {
    "task": "Use a for loop to print the transpose of a matrix.",
    "code": "```dart\nvoid main() {\n  List<List<int>> matrix = [\n    [1, 2, 3],\n    [4, 5, 6],\n    [7, 8, 9]\n  ];\n  \n  int rows = matrix.length;\n  int cols = matrix[0].length;\n  \n  for (int i = 0; i < cols; i++) {\n    for (int j = 0; j < rows; j++) {\n      stdout.write('${matrix[j][i]} ');\n    }\n    print('');\n  }\n}\n```"
  },
  {
    "task": "Implement a for loop that reverses the order of words in a sentence.",
    "code": "```dart\nvoid main() {\n  String sentence = \"The quick brown fox jumps over the lazy dog\";\n  List<String> words = sentence.split(' ');\n  String reversedSentence = '';\n\n  for (int i = words.length - 1; i >= 0; i--) {\n    reversedSentence += words[i];\n    if (i != 0) {\n      reversedSentence += ' ';\n    }\n  }\n\n  print(reversedSentence);\n}\n```"
  },
  {
    "task": "Create a for loop that deletes elements from a list that are less than a given value.",
    "code": "```dart\nvoid main() {\n  List<int> numbers = [1, 2, 3, 4, 5, 6];\n  int threshold = 3;\n  \n  for (int i = 0; i < numbers.length; i++) {\n    if (numbers[i] < threshold) {\n      numbers.removeAt(i);\n      i--; // Adjust index after removal\n    }\n  }\n  \n  print(numbers);\n}\n```"
  },
  {
    "task": "Design a for loop to merge two sorted lists into a single sorted list.",
    "code": "```dart\nList<int> mergeSortedLists(List<int> list1, List<int> list2) {\n  List<int> mergedList = [];\n  int i = 0, j = 0;\n\n  while (i < list1.length && j < list2.length) {\n    if (list1[i] < list2[j]) {\n      mergedList.add(list1[i]);\n      i++;\n    } else {\n      mergedList.add(list2[j]);\n      j++;\n    }\n  }\n\n  for (; i < list1.length; i++) {\n    mergedList.add(list1[i]);\n  }\n\n  for (; j < list2.length; j++) {\n    mergedList.add(list2[j]);\n  }\n\n  return mergedList;\n}\n```"
  },
  {
    "task": "Write a for loop that calculates the power of a number using repeated multiplication.",
    "code": "```dart\nint calculatePower(int base, int exponent) {\n  int result = 1;\n  for (int i = 0; i < exponent; i++) {\n    result *= base;\n  }\n  return result;\n}\n\nvoid main() {\n  int base = 2;\n  int exponent = 3;\n  int power = calculatePower(base, exponent);\n  print('$base^$exponent = $power');\n}\n```"
  },
  {
    "task": "Use a for loop to find the longest word in a list of words.",
    "code": "```dart\nvoid main() {\n  List<String> words = ['apple', 'banana', 'strawberry', 'kiwi', 'pineapple'];\n  String longestWord = '';\n  \n  for (String word in words) {\n    if (word.length > longestWord.length) {\n      longestWord = word;\n    }\n  }\n  \n  print('The longest word is: $longestWord');\n}\n```"
  },
  {
    "task": "Develop a for loop that sorts a list of tuples based on the second element.",
    "code": "```dart\nvoid main() {\n  List<List<int>> tuples = [\n    [1, 3],\n    [4, 2],\n    [6, 5],\n    [7, 1]\n  ];\n\n  for (int i = 0; i < tuples.length - 1; i++) {\n    for (int j = 0; j < tuples.length - i - 1; j++) {\n      if (tuples[j][1] > tuples[j+1][1]) {\n        var temp = tuples[j];\n        tuples[j] = tuples[j+1];\n        tuples[j+1] = temp;\n      }\n    }\n  }\n\n  print(tuples);\n}\n```"
  },
  {
    "task": "Create a for loop that replicates each character in a string a given number of times.",
    "code": "```dart\nString replicateCharacters(String input, int times) {\n  StringBuffer result = StringBuffer();\n  for (int i = 0; i < input.length; i++) {\n    for (int j = 0; j < times; j++) {\n      result.write(input[i]);\n    }\n  }\n  return result.toString();\n}\n\nvoid main() {\n  String text = \"abc\";\n  int times = 3;\n  String replicatedText = replicateCharacters(text, times);\n  print(replicatedText); // Output: aaabbbccc\n}\n```"
  },
  {
    "task": "Construct a for loop that replaces spaces in a string with hyphens.",
    "code": "```dart\nString replaceSpacesWithHyphens(String input) {\n  String result = '';\n  for (int i = 0; i < input.length; i++) {\n    if (input[i] == ' ') {\n      result += '-';\n    } else {\n      result += input[i];\n    }\n  }\n  return result;\n}\n```"
  },
  {
    "task": "Design a for loop to find the intersection of two sets.",
    "code": "```dart\nvoid main() {\n  Set<int> set1 = {1, 2, 3, 4, 5};\n  Set<int> set2 = {3, 4, 5, 6, 7};\n  Set<int> intersection = {};\n\n  for (var element in set1) {\n    if (set2.contains(element)) {\n      intersection.add(element);\n    }\n  }\n\n  print(intersection);\n}\n```"
  },
  {
    "task": "Write a for loop that generates a list of prime numbers up to a given number.",
    "code": "```dart\nList<int> generatePrimes(int max) {\n  List<int> primes = [];\n  for (int num = 2; num <= max; num++) {\n    bool isPrime = true;\n    for (int i = 2; i <= num / 2; i++) {\n      if (num % i == 0) {\n        isPrime = false;\n        break;\n      }\n    }\n    if (isPrime) {\n      primes.add(num);\n    }\n  }\n  return primes;\n}\n```"
  },
  {
    "task": "Use a for loop to implement a simple text-based progress bar.",
    "code": "```dart\nvoid main() {\n  int total = 10;\n  for (int i = 0; i <= total; i++) {\n    String progress = ('#' * i).padRight(total, '-');\n    print('[$progress] ${i * 10}%');\n  }\n}\n```"
  },
  {
    "task": "Implement a for loop that finds and prints all palindromic numbers between 10 and 200.",
    "code": "```dart\nvoid main() {\n  for (int number = 10; number <= 200; number++) {\n    if (isPalindrome(number.toString())) {\n      print(number);\n    }\n  }\n}\n\nbool isPalindrome(String s) {\n  return s == s.split('').reversed.join('');\n}\n```"
  },
  {
    "task": "Create a for loop that multiplies corresponding elements of two lists and stores the result.",
    "code": "```dart\nvoid main() {\n  List<int> list1 = [1, 2, 3, 4, 5];\n  List<int> list2 = [6, 7, 8, 9, 10];\n  List<int> result = [];\n\n  for (int i = 0; i < list1.length && i < list2.length; i++) {\n    result.add(list1[i] * list2[i]);\n  }\n\n  print(result);\n}\n```"
  },
  {
    "task": "Develop a for loop that finds the difference between the largest and smallest numbers in a list.",
    "code": "```dart\nvoid main() {\n  List<int> numbers = [4, 2, 8, 6, 1, 9];\n  int min = numbers[0];\n  int max = numbers[0];\n\n  for (int i = 1; i < numbers.length; i++) {\n    if (numbers[i] < min) {\n      min = numbers[i];\n    }\n    if (numbers[i] > max) {\n      max = numbers[i];\n    }\n  }\n\n  int difference = max - min;\n  print('Difference: $difference');\n}\n```"
  },
  {
    "task": "Write a for loop that prints numbers from 1 to 100, replacing multiples of 5 with 'Buzz'.",
    "code": "```dart\nvoid main() {\n  for (int i = 1; i <= 100; i++) {\n    if (i % 5 == 0) {\n      print('Buzz');\n    } else {\n      print(i);\n    }\n  }\n}\n```"
  },
  {
    "task": "Use a for loop to convert a list of integers into their binary representation.",
    "code": "```dart\nvoid main() {\n  List<int> numbers = [5, 8, 15, 23];\n  List<String> binaryRepresentations = [];\n\n  for (int number in numbers) {\n    binaryRepresentations.add(number.toRadixString(2));\n  }\n\n  print(binaryRepresentations);\n}\n```"
  },
  {
    "task": "Design a for loop that fills a 2D array with consecutive numbers in a spiral pattern.",
    "code": "```dart\nList<List<int>> fillSpiral(int n) {\n  List<List<int>> matrix = List.generate(n, (_) => List.filled(n, 0));\n  int num = 1, top = 0, bottom = n - 1, left = 0, right = n - 1;\n  \n  while (top <= bottom && left <= right) {\n    for (int i = left; i <= right; i++) matrix[top][i] = num++;\n    top++;\n    for (int i = top; i <= bottom; i++) matrix[i][right] = num++;\n    right--;\n    if (top <= bottom) {\n      for (int i = right; i >= left; i--) matrix[bottom][i] = num++;\n      bottom--;\n    }\n    if (left <= right) {\n      for (int i = bottom; i >= top; i--) matrix[i][left] = num++;\n      left++;\n    }\n  }\n  \n  return matrix;\n}\n```"
  },
  {
    "task": "Create a for loop that iterates over a list and removes duplicates.",
    "code": "```dart\nvoid main() {\n  List<int> numbers = [1, 2, 3, 2, 4, 1, 5];\n  List<int> uniqueNumbers = [];\n\n  for (var number in numbers) {\n    if (!uniqueNumbers.contains(number)) {\n      uniqueNumbers.add(number);\n    }\n  }\n\n  print(uniqueNumbers);\n}\n```"
  },
  {
    "task": "Implement a for loop to calculate the dot product of two vectors.",
    "code": "```dart\nvoid main() {\n  List<int> vectorA = [1, 2, 3];\n  List<int> vectorB = [4, 5, 6];\n  \n  int dotProduct = 0;\n  for (int i = 0; i < vectorA.length; i++) {\n    dotProduct += vectorA[i] * vectorB[i];\n  }\n  \n  print('Dot product: $dotProduct');\n}\n```"
  },
  {
    "task": "Write a for loop that prints a sequence of numbers in reverse order.",
    "code": "```dart\nvoid main() {\n  for (int i = 10; i >= 1; i--) {\n    print(i);\n  }\n}\n```"
  },
  {
    "task": "Develop a for loop that computes the greatest common divisor (GCD) of two numbers.",
    "code": "```dart\nint gcd(int a, int b) {\n  for (int i = a < b ? a : b; i > 0; i--) {\n    if (a % i == 0 && b % i == 0) {\n      return i;\n    }\n  }\n  return 1;\n}\n\nvoid main() {\n  int num1 = 48;\n  int num2 = 18;\n  print('GCD of $num1 and $num2 is ${gcd(num1, num2)}');\n}\n```"
  },
  {
    "task": "Construct a for loop that prints a square pattern of numbers with a given side length.",
    "code": "```dart\nvoid printSquarePattern(int sideLength) {\n  for (int i = 0; i < sideLength; i++) {\n    for (int j = 0; j < sideLength; j++) {\n      stdout.write('$j ');\n    }\n    print('');\n  }\n}\n\nvoid main() {\n  int sideLength = 5; // Example side length\n  printSquarePattern(sideLength);\n}\n```"
  },
  {
    "task": "Create a for loop that shifts all elements of a list to the left by one position.",
    "code": "```dart\nvoid main() {\n  List<int> list = [1, 2, 3, 4, 5];\n  if (list.isNotEmpty) {\n    int firstElement = list.first;\n    for (int i = 0; i < list.length - 1; i++) {\n      list[i] = list[i + 1];\n    }\n    list[list.length - 1] = firstElement;\n  }\n  print(list);\n}\n```"
  },
  {
    "task": "Use a for loop to print the first 20 triangular numbers.",
    "code": "```dart\nvoid main() {\n  for (int n = 1; n <= 20; n++) {\n    int triangularNumber = n * (n + 1) ~/ 2;\n    print(triangularNumber);\n  }\n}\n```"
  },
  {
    "task": "Write a for loop that finds the first repeating character in a string.",
    "code": "```dart\nString findFirstRepeatingCharacter(String input) {\n  Set<characters> seenCharacters = <characters>{};\n\n  for (int i = 0; i < input.length; i++) {\n    if (seenCharacters.contains(input[i])) {\n      return input[i];\n    }\n    seenCharacters.add(input[i]);\n  }\n  return '';\n}\n\nvoid main() {\n  String input = 'example';\n  print(findFirstRepeatingCharacter(input));\n}\n```"
  },
  {
    "task": "Design a for loop that transforms a list of temperatures from Celsius to Fahrenheit.",
    "code": "```dart\nvoid main() {\n  List<double> celsiusTemps = [0.0, 20.0, 37.0, 100.0];\n  List<double> fahrenheitTemps = [];\n\n  for (int i = 0; i < celsiusTemps.length; i++) {\n    double fahrenheit = (celsiusTemps[i] * 9 / 5) + 32;\n    fahrenheitTemps.add(fahrenheit);\n  }\n\n  print(fahrenheitTemps);\n}\n```"
  },
  {
    "task": "Implement a for loop to determine if a string is an isogram.",
    "code": "```dart\nbool isIsogram(String str) {\n  str = str.toLowerCase();\n  for (int i = 0; i < str.length; i++) {\n    for (int j = i + 1; j < str.length; j++) {\n      if (str[i] == str[j]) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n```"
  },
  {
    "task": "Use a for loop to create a histogram from a list of integers.",
    "code": "```dart\nvoid main() {\n  List<int> numbers = [1, 2, 2, 3, 3, 3, 4, 4, 4, 4];\n  Map<int, int> histogram = {};\n\n  for (int number in numbers) {\n    if (histogram.containsKey(number)) {\n      histogram[number] = histogram[number]! + 1;\n    } else {\n      histogram[number] = 1;\n    }\n  }\n\n  histogram.forEach((key, value) {\n    print('$key: ${'*' * value}');\n  });\n}\n```"
  },
  {
    "task": "Create a for loop that prints the indexes of all occurrences of a particular element in a list.",
    "code": "```dart\nvoid main() {\n  List<int> numbers = [1, 2, 3, 4, 2, 5, 2];\n  int target = 2;\n  \n  for (int i = 0; i < numbers.length; i++) {\n    if (numbers[i] == target) {\n      print(i);\n    }\n  }\n}\n```"
  },
  {
    "task": "Write a for loop that checks if a given string is a palindrome.",
    "code": "```dart\nbool isPalindrome(String input) {\n  for (int i = 0; i < input.length ~/ 2; i++) {\n    if (input[i] != input[input.length - 1 - i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\nvoid main() {\n  String str = \"racecar\";\n  print(isPalindrome(str)); // Output: true\n}\n```"
  },
  {
    "task": "Develop a for loop to simulate the behavior of a simple finite state machine.",
    "code": "```dart\nvoid simulateFiniteStateMachine() {\n  List<String> states = ['State1', 'State2', 'State3'];\n  String currentState = states[0];\n\n  for (int i = 0; i < states.length; i++) {\n    print('Current State: $currentState');\n    currentState = states[(i + 1) % states.length];\n  }\n}\n\nvoid main() {\n  simulateFiniteStateMachine();\n}\n```"
  },
  {
    "task": "Design a for loop that finds the sum of all odd numbers in a list.",
    "code": "```dart\nvoid main() {\n  List<int> numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n  int sumOfOdds = 0;\n\n  for (int number in numbers) {\n    if (number % 2 != 0) {\n      sumOfOdds += number;\n    }\n  }\n\n  print('Sum of odd numbers: $sumOfOdds');\n}\n```"
  },
  {
    "task": "Use a for loop to count how many words start with a vowel in a given sentence.",
    "code": "```dart\nvoid main() {\n  String sentence = \"An example of a sentence with mixed words\";\n  List<String> words = sentence.split(' ');\n  int vowelCount = 0;\n  for (String word in words) {\n    if (word.isNotEmpty && 'AEIOUaeiou'.contains(word[0])) {\n      vowelCount++;\n    }\n  }\n  print('Number of words starting with a vowel: $vowelCount');\n}\n```"
  },
  {
    "task": "Implement a for loop that sorts a list of strings by their length.",
    "code": "```dart\nvoid main() {\n  List<String> strings = ['apple', 'banana', 'kiwi', 'grape', 'peach'];\n  \n  for (int i = 0; i < strings.length - 1; i++) {\n    for (int j = 0; j < strings.length - i - 1; j++) {\n      if (strings[j].length > strings[j + 1].length) {\n        String temp = strings[j];\n        strings[j] = strings[j + 1];\n        strings[j + 1] = temp;\n      }\n    }\n  }\n  \n  print(strings);\n}\n```"
  },
  {
    "task": "Write a for loop that prints the factorial of numbers from 1 to 10.",
    "code": "```dart\nvoid main() {\n  for (int i = 1; i <= 10; i++) {\n    int factorial = 1;\n    for (int j = 1; j <= i; j++) {\n      factorial *= j;\n    }\n    print('Factorial of $i is $factorial');\n  }\n}\n```"
  },
  {
    "task": "Create a for loop that replaces all instances of a substring in a string with another substring.",
    "code": "```dart\nString replaceSubstring(String original, String toReplace, String replacement) {\n  String result = original;\n  for (int i = 0; i <= result.length - toReplace.length; i++) {\n    if (result.substring(i, i + toReplace.length) == toReplace) {\n      result = result.substring(0, i) + replacement + result.substring(i + toReplace.length);\n      i += replacement.length - 1;\n    }\n  }\n  return result;\n}\n\nvoid main() {\n  String original = \"hello world, hello everyone\";\n  String replaced = replaceSubstring(original, \"hello\", \"hi\");\n  print(replaced); // Output: hi world, hi everyone\n}\n```"
  },
  {
    "task": "Develop a for loop that squares each element in a list of numbers.",
    "code": "```dart\nvoid main() {\n  List<int> numbers = [1, 2, 3, 4, 5];\n  List<int> squaredNumbers = [];\n  \n  for (int i = 0; i < numbers.length; i++) {\n    squaredNumbers.add(numbers[i] * numbers[i]);\n  }\n  \n  print(squaredNumbers);\n}\n```"
  },
  {
    "task": "Use a for loop to reverse the order of elements in an array.",
    "code": "```dart\nvoid main() {\n  List<int> array = [1, 2, 3, 4, 5];\n  List<int> reversedArray = [];\n\n  for (int i = array.length - 1; i >= 0; i--) {\n    reversedArray.add(array[i]);\n  }\n\n  print(reversedArray);\n}\n```"
  },
  {
    "task": "Implement a for loop that tests if two strings are anagrams of each other.",
    "code": "```dart\nbool areAnagrams(String s1, String s2) {\n  if (s1.length != s2.length) return false;\n\n  List<int> charCount = List.filled(256, 0);\n\n  for (int i = 0; i < s1.length; i++) {\n    charCount[s1.codeUnitAt(i)]++;\n    charCount[s2.codeUnitAt(i)]--;\n  }\n\n  for (int count in charCount) {\n    if (count != 0) return false;\n  }\n\n  return true;\n}\n```"
  },
  {
    "task": "Design a for loop to find and print all Armstrong numbers between 100 and 999.",
    "code": "```dart\nvoid main() {\n  for (int number = 100; number <= 999; number++) {\n    int sum = 0;\n    int temp = number;\n    while (temp > 0) {\n      int digit = temp % 10;\n      sum += digit * digit * digit;\n      temp ~/= 10;\n    }\n    if (sum == number) {\n      print(number);\n    }\n  }\n}\n```"
  }
]