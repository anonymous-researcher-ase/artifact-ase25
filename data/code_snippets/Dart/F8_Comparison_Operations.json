[
  {
    "task": "Write a function that checks if two strings are equal, ignoring case sensitivity.",
    "code": "```dart\nbool areStringsEqualIgnoreCase(String str1, String str2) {\n  return str1.toLowerCase() == str2.toLowerCase();\n}\n```"
  },
  {
    "task": "Create a program that determines if a number is greater than 10.",
    "code": "```dart\nvoid main() {\n  int number = 12; // Example number\n  if (number > 10) {\n    print('The number is greater than 10.');\n  } else {\n    print('The number is not greater than 10.');\n  }\n}\n```"
  },
  {
    "task": "Implement a feature that compares the current date to a given date and returns if it is in the future.",
    "code": "```dart\nbool isFutureDate(DateTime givenDate) {\n  DateTime currentDate = DateTime.now();\n  return givenDate.isAfter(currentDate);\n}\n```"
  },
  {
    "task": "Design a system that checks if a user's age is less than 18 and restricts access if true.",
    "code": "```dart\nvoid checkAccess(int age) {\n  if (age < 18) {\n    print('Access restricted');\n  } else {\n    print('Access granted');\n  }\n}\n\nvoid main() {\n  int userAge = 17; // Example age\n  checkAccess(userAge);\n}\n```"
  },
  {
    "task": "Build an algorithm that finds the maximum of three given integers.",
    "code": "```dart\nint findMaximum(int a, int b, int c) {\n  int max = a;\n  if (b > max) {\n    max = b;\n  }\n  if (c > max) {\n    max = c;\n  }\n  return max;\n}\n\nvoid main() {\n  int a = 10;\n  int b = 20;\n  int c = 15;\n  int maximum = findMaximum(a, b, c);\n  print('The maximum value is: $maximum');\n}\n```"
  },
  {
    "task": "Write a function that verifies if two arrays contain the same elements in the same order.",
    "code": "```dart\nbool areArraysEqual(List<dynamic> array1, List<dynamic> array2) {\n  if (array1.length != array2.length) {\n    return false;\n  }\n  for (int i = 0; i < array1.length; i++) {\n    if (array1[i] != array2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n```"
  },
  {
    "task": "Create a script that checks if a product's price is within a specified range.",
    "code": "```dart\nvoid main() {\n  double productPrice = 150.0;\n  double minPrice = 100.0;\n  double maxPrice = 200.0;\n\n  if (productPrice >= minPrice && productPrice <= maxPrice) {\n    print('The product price is within the specified range.');\n  } else {\n    print('The product price is not within the specified range.');\n  }\n}\n```"
  },
  {
    "task": "Develop a tool that compares two versions of a software application and determines which is newer.",
    "code": "```dart\nclass Version {\n  final int major;\n  final int minor;\n  final int patch;\n\n  Version(this.major, this.minor, this.patch);\n\n  bool operator >(Version other) {\n    if (major > other.major) return true;\n    if (major == other.major && minor > other.minor) return true;\n    if (major == other.major && minor == other.minor && patch > other.patch) return true;\n    return false;\n  }\n\n  bool operator <(Version other) {\n    return other > this;\n  }\n\n  bool operator ==(Object other) {\n    if (identical(this, other)) return true;\n    if (other is! Version) return false;\n    return major == other.major && minor == other.minor && patch == other.patch;\n  }\n\n  @override\n  int get hashCode => major.hashCode ^ minor.hashCode ^ patch.hashCode;\n}\n\nString compareVersions(Version v1, Version v2) {\n  if (v1 > v2) {\n    return 'Version 1 is newer';\n  } else if (v1 < v2) {\n    return 'Version 2 is newer';\n  } else {\n    return 'Both versions are the same';\n  }\n}\n\nvoid main() {\n  Version version1 = Version(1, 0, 0);\n  Version version2 = Version(1, 1, 0);\n  \n  print(compareVersions(version1, version2));\n}\n```"
  },
  {
    "task": "Implement a test to see if a given year is a leap year.",
    "code": "```dart\nbool isLeapYear(int year) {\n  if (year % 4 == 0) {\n    if (year % 100 == 0) {\n      if (year % 400 == 0) {\n        return true;\n      } else {\n        return false;\n      }\n    } else {\n      return true;\n    }\n  } else {\n    return false;\n  }\n}\n\nvoid main() {\n  int year = 2024;\n  print('$year is a leap year: ${isLeapYear(year)}');\n}\n```"
  },
  {
    "task": "Design a feature that tells if a student\u2019s grade is passing or failing based on a threshold.",
    "code": "```dart\nbool isPassingGrade(int grade, int threshold) {\n  return grade >= threshold;\n}\n\nvoid main() {\n  int studentGrade = 75;\n  int passingThreshold = 60;\n  \n  if (isPassingGrade(studentGrade, passingThreshold)) {\n    print('Passing');\n  } else {\n    print('Failing');\n  }\n}\n```"
  },
  {
    "task": "Write a function to compare two file sizes and return the larger one.",
    "code": "```dart\nimport 'dart:io';\n\nFile getLargerFile(File file1, File file2) {\n  final size1 = file1.lengthSync();\n  final size2 = file2.lengthSync();\n  return size1 > size2 ? file1 : file2;\n}\n```"
  },
  {
    "task": "Build a program that checks if the temperature is below freezing point.",
    "code": "```dart\nvoid main() {\n  double temperature = -5.0; // Example temperature value\n\n  if (temperature < 0) {\n    print('The temperature is below the freezing point.');\n  } else {\n    print('The temperature is above the freezing point.');\n  }\n}\n```"
  },
  {
    "task": "Create a logic that determines if a number is within the Fibonacci sequence.",
    "code": "```dart\nbool isFibonacci(int number) {\n  if (number < 0) return false;\n  int a = 0, b = 1;\n  while (a < number) {\n    int temp = a;\n    a = b;\n    b = temp + b;\n  }\n  return a == number;\n}\n```"
  },
  {
    "task": "Develop a function that checks if a given word is a palindrome.",
    "code": "```dart\nbool isPalindrome(String word) {\n  int length = word.length;\n  for (int i = 0; i < length ~/ 2; i++) {\n    if (word[i] != word[length - 1 - i]) {\n      return false;\n    }\n  }\n  return true;\n}\n```"
  },
  {
    "task": "Write a script to see if a password meets a minimum length requirement.",
    "code": "```dart\nvoid main() {\n  String password = 'examplePassword';\n  int minLength = 8;\n\n  if (password.length >= minLength) {\n    print('Password meets the minimum length requirement.');\n  } else {\n    print('Password does not meet the minimum length requirement.');\n  }\n}\n```"
  },
  {
    "task": "Implement a system that decides if a point is inside a circle based on its coordinates.",
    "code": "```dart\nclass Point {\n  double x, y;\n  Point(this.x, this.y);\n}\n\nclass Circle {\n  Point center;\n  double radius;\n  Circle(this.center, this.radius);\n\n  bool contains(Point point) {\n    double dx = point.x - center.x;\n    double dy = point.y - center.y;\n    return (dx * dx + dy * dy) <= (radius * radius);\n  }\n}\n\nvoid main() {\n  Circle circle = Circle(Point(0, 0), 5);\n  Point point = Point(3, 4);\n  bool isInside = circle.contains(point);\n  print(isInside); // Outputs: true\n}\n```"
  },
  {
    "task": "Design a program that checks if a shopping cart total exceeds a certain budget.",
    "code": "```dart\nvoid main() {\n  double cartTotal = 150.75;  // Example total\n  double budget = 100.00;     // Example budget\n\n  if (cartTotal > budget) {\n    print('Cart total exceeds the budget.');\n  } else {\n    print('Cart total is within the budget.');\n  }\n}\n```"
  },
  {
    "task": "Create a function that compares two players' scores and returns the winner.",
    "code": "```dart\nString determineWinner(int score1, int score2) {\n  if (score1 > score2) {\n    return 'Player 1 wins';\n  } else if (score1 < score2) {\n    return 'Player 2 wins';\n  } else {\n    return 'It\\'s a tie';\n  }\n}\n```"
  },
  {
    "task": "Write a program to determine if one string is a substring of another.",
    "code": "```dart\nvoid main() {\n  String string1 = \"hello world\";\n  String string2 = \"world\";\n  \n  bool isSubstring = string1.contains(string2);\n  print(isSubstring);\n}\n```"
  },
  {
    "task": "Build a utility that checks if a number is a prime number.",
    "code": "```dart\nbool isPrime(int number) {\n  if (number <= 1) return false;\n  for (int i = 2; i * i <= number; i++) {\n    if (number % i == 0) return false;\n  }\n  return true;\n}\n```"
  },
  {
    "task": "Write a function that checks if a given number is a perfect square.",
    "code": "```dart\nbool isPerfectSquare(int number) {\n  if (number < 0) return false;\n  int root = number ~/ 2;\n  int lastRoot = 0;\n  \n  while (root != lastRoot) {\n    lastRoot = root;\n    root = ((number ~/ root) + root) ~/ 2;\n  }\n  \n  return root * root == number;\n}\n```"
  },
  {
    "task": "Create a system that determines if a person is eligible for a senior citizen discount based on their age.",
    "code": "```dart\nbool isEligibleForSeniorDiscount(int age) {\n  return age >= 65;\n}\n\nvoid main() {\n  int age = 70;\n  if (isEligibleForSeniorDiscount(age)) {\n    print(\"Eligible for senior citizen discount.\");\n  } else {\n    print(\"Not eligible for senior citizen discount.\");\n  }\n}\n```"
  },
  {
    "task": "Develop a feature to check if a date falls on a weekend.",
    "code": "```dart\nbool isWeekend(DateTime date) {\n  return date.weekday == DateTime.saturday || date.weekday == DateTime.sunday;\n}\n```"
  },
  {
    "task": "Design a program that sees if a given email address is in the correct format.",
    "code": "```dart\nbool isValidEmail(String email) {\n  // A very basic email validation pattern\n  final emailPattern =\n      r'^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$';\n  final regex = RegExp(emailPattern);\n  return regex.hasMatch(email);\n}\n\nvoid main() {\n  String email = 'example@mail.com';\n  print(isValidEmail(email) ? 'Valid email' : 'Invalid email');\n}\n```"
  },
  {
    "task": "Implement a test to check if a rectangle's area is larger than a triangle's area.",
    "code": "```dart\nvoid main() {\n  double rectangleWidth = 10;\n  double rectangleHeight = 5;\n  double triangleBase = 8;\n  double triangleHeight = 6;\n\n  double rectangleArea = rectangleWidth * rectangleHeight;\n  double triangleArea = 0.5 * triangleBase * triangleHeight;\n\n  if (rectangleArea > triangleArea) {\n    print('Rectangle area is larger than triangle area.');\n  } else {\n    print('Rectangle area is not larger than triangle area.');\n  }\n}\n```"
  },
  {
    "task": "Write a function that verifies if two rectangles overlap each other.",
    "code": "```dart\nclass Rectangle {\n  final double x, y, width, height;\n  \n  Rectangle(this.x, this.y, this.width, this.height);\n  \n  bool overlaps(Rectangle other) {\n    return !(\n      other.x >= x + width ||\n      other.x + other.width <= x ||\n      other.y >= y + height ||\n      other.y + other.height <= y\n    );\n  }\n}\n```"
  },
  {
    "task": "Create a script to compare two strings lexicographically.",
    "code": "```dart\nvoid main() {\n  String string1 = \"apple\";\n  String string2 = \"banana\";\n\n  if (string1.compareTo(string2) < 0) {\n    print('$string1 is less than $string2');\n  } else if (string1.compareTo(string2) > 0) {\n    print('$string1 is greater than $string2');\n  } else {\n    print('$string1 is equal to $string2');\n  }\n}\n```"
  },
  {
    "task": "Build a program that checks if a list of numbers is in ascending order.",
    "code": "```dart\nbool isAscendingOrder(List<int> numbers) {\n  for (int i = 0; i < numbers.length - 1; i++) {\n    if (numbers[i] > numbers[i + 1]) {\n      return false;\n    }\n  }\n  return true;\n}\n\nvoid main() {\n  List<int> numbers = [1, 2, 3, 4, 5];\n  print(isAscendingOrder(numbers)); // Output: true\n\n  List<int> numbers2 = [1, 3, 2, 4, 5];\n  print(isAscendingOrder(numbers2)); // Output: false\n}\n```"
  },
  {
    "task": "Design a system to compare the heights of two buildings.",
    "code": "```dart\nclass Building {\n  final double height;\n\n  Building(this.height);\n}\n\nString compareHeights(Building building1, Building building2) {\n  if (building1.height > building2.height) {\n    return 'Building 1 is taller than Building 2';\n  } else if (building1.height < building2.height) {\n    return 'Building 2 is taller than Building 1';\n  } else {\n    return 'Both buildings are of the same height';\n  }\n}\n\nvoid main() {\n  Building building1 = Building(150.0);\n  Building building2 = Building(145.5);\n\n  print(compareHeights(building1, building2));\n}\n```"
  },
  {
    "task": "Write a feature that determines if a given time is before noon.",
    "code": "```dart\nbool isBeforeNoon(DateTime time) {\n  return time.hour < 12;\n}\n```"
  },
  {
    "task": "Implement a function to check if a given number is a power of two.",
    "code": "```dart\nbool isPowerOfTwo(int number) {\n  if (number <= 0) return false;\n  return (number & (number - 1)) == 0;\n}\n```"
  },
  {
    "task": "Create a program that determines if a word is longer than another word.",
    "code": "```dart\nvoid main() {\n  String word1 = \"example\";\n  String word2 = \"test\";\n\n  if (word1.length > word2.length) {\n    print(\"The word '$word1' is longer than '$word2'.\");\n  } else if (word1.length < word2.length) {\n    print(\"The word '$word2' is longer than '$word1'.\");\n  } else {\n    print(\"The words '$word1' and '$word2' are of equal length.\");\n  }\n}\n```"
  },
  {
    "task": "Develop a function to compare the lengths of two lists and return the longer one.",
    "code": "```dart\nList<T> longerList<T>(List<T> list1, List<T> list2) {\n  return list1.length >= list2.length ? list1 : list2;\n}\n```"
  },
  {
    "task": "Write a script to see if a user's input matches a pre-defined secret code.",
    "code": "```dart\nimport 'dart:io';\n\nvoid main() {\n  const secretCode = 'flutter123';\n  print('Enter the secret code:');\n  String userInput = stdin.readLineSync() ?? '';\n\n  if (userInput == secretCode) {\n    print('Access granted.');\n  } else {\n    print('Access denied.');\n  }\n}\n```"
  },
  {
    "task": "Build a utility that checks if a given year is in the 21st century.",
    "code": "```dart\nbool isIn21stCentury(int year) {\n  return year >= 2001 && year <= 2100;\n}\n```"
  },
  {
    "task": "Create a logic that determines if a book's publication year is after 2000.",
    "code": "```dart\nbool isPublishedAfter2000(int publicationYear) {\n  return publicationYear > 2000;\n}\n```"
  },
  {
    "task": "Design a feature to see if a number is divisible by both 3 and 5.",
    "code": "```dart\nbool isDivisibleBy3And5(int number) {\n  return number % 3 == 0 && number % 5 == 0;\n}\n```"
  },
  {
    "task": "Implement a system that checks if a student's GPA is above a certain threshold.",
    "code": "```dart\nclass Student {\n  String name;\n  double gpa;\n\n  Student(this.name, this.gpa);\n\n  bool isAboveThreshold(double threshold) {\n    return gpa > threshold;\n  }\n}\n\nvoid main() {\n  Student student = Student('John Doe', 3.5);\n  double threshold = 3.0;\n\n  if (student.isAboveThreshold(threshold)) {\n    print('Student GPA is above the threshold.');\n  } else {\n    print('Student GPA is below the threshold.');\n  }\n}\n```"
  },
  {
    "task": "Write a function to determine if a given angle is acute, right, or obtuse.",
    "code": "```dart\nString determineAngleType(int angle) {\n  if (angle < 90) {\n    return 'acute';\n  } else if (angle == 90) {\n    return 'right';\n  } else if (angle > 90 && angle < 180) {\n    return 'obtuse';\n  } else {\n    return 'invalid';\n  }\n}\n```"
  },
  {
    "task": "Develop a program that compares the lengths of two strings and returns the shorter one.",
    "code": "```dart\nString shorterString(String str1, String str2) {\n  return str1.length < str2.length ? str1 : str2;\n}\n\nvoid main() {\n  String result = shorterString(\"hello\", \"world!\");\n  print(\"The shorter string is: $result\");\n}\n```"
  },
  {
    "task": "Create a script to verify if a username is unique within a list.",
    "code": "```dart\nvoid main() {\n  List<String> usernames = ['alice', 'bob', 'charlie'];\n  String newUsername = 'dave';\n\n  bool isUnique = !usernames.contains(newUsername);\n\n  print('Is the username \"$newUsername\" unique? $isUnique');\n}\n```"
  },
  {
    "task": "Build a tool that checks if a job applicant meets all the listed qualifications.",
    "code": "```dart\nclass Applicant {\n  final int yearsOfExperience;\n  final String educationLevel;\n  final bool hasCertification;\n\n  Applicant({\n    required this.yearsOfExperience,\n    required this.educationLevel,\n    required this.hasCertification,\n  });\n}\n\nclass JobQualifications {\n  final int minYearsOfExperience;\n  final String requiredEducationLevel;\n  final bool requiresCertification;\n\n  JobQualifications({\n    required this.minYearsOfExperience,\n    required this.requiredEducationLevel,\n    required this.requiresCertification,\n  });\n}\n\nbool meetsQualifications(Applicant applicant, JobQualifications qualifications) {\n  return applicant.yearsOfExperience >= qualifications.minYearsOfExperience &&\n         applicant.educationLevel == qualifications.requiredEducationLevel &&\n         applicant.hasCertification == qualifications.requiresCertification;\n}\n\nvoid main() {\n  Applicant applicant = Applicant(\n    yearsOfExperience: 5,\n    educationLevel: 'Bachelor',\n    hasCertification: true,\n  );\n\n  JobQualifications qualifications = JobQualifications(\n    minYearsOfExperience: 3,\n    requiredEducationLevel: 'Bachelor',\n    requiresCertification: true,\n  );\n\n  bool isQualified = meetsQualifications(applicant, qualifications);\n  print('Applicant meets qualifications: $isQualified');\n}\n```"
  },
  {
    "task": "Write a feature to see if a vehicle's speed exceeds the speed limit.",
    "code": "```dart\nbool isSpeeding(int vehicleSpeed, int speedLimit) {\n  return vehicleSpeed > speedLimit;\n}\n```"
  },
  {
    "task": "Design a system that determines whether a given point is above or below the x-axis.",
    "code": "```dart\nvoid determinePointPosition(double x, double y) {\n  if (y > 0) {\n    print('The point ($x, $y) is above the x-axis.');\n  } else if (y < 0) {\n    print('The point ($x, $y) is below the x-axis.');\n  } else {\n    print('The point ($x, $y) is on the x-axis.');\n  }\n}\n\nvoid main() {\n  determinePointPosition(3, 4); // Example usage\n  determinePointPosition(3, -4);\n  determinePointPosition(3, 0);\n}\n```"
  },
  {
    "task": "Create a function that checks if a given word appears in a sentence.",
    "code": "```dart\nbool doesWordAppearInSentence(String word, String sentence) {\n  return sentence.contains(word);\n}\n```"
  },
  {
    "task": "Implement a program that identifies whether a given number is negative or positive.",
    "code": "```dart\nvoid main() {\n  int number = -5; // Example number\n  if (number > 0) {\n    print('The number is positive.');\n  } else if (number < 0) {\n    print('The number is negative.');\n  } else {\n    print('The number is zero.');\n  }\n}\n```"
  },
  {
    "task": "Write a script to see if the sum of two numbers is greater than 100.",
    "code": "```dart\nvoid main() {\n  int num1 = 60;\n  int num2 = 45;\n  int sum = num1 + num2;\n  bool isGreaterThan100 = sum > 100;\n  print(isGreaterThan100);\n}\n```"
  },
  {
    "task": "Build a utility that checks if a file exists in a specified directory.",
    "code": "```dart\nimport 'dart:io';\n\nbool fileExistsInDirectory(String directoryPath, String fileName) {\n  final directory = Directory(directoryPath);\n  final file = File('${directory.path}/$fileName');\n  return file.existsSync();\n}\n```"
  },
  {
    "task": "Develop a system to compare the weights of two different objects.",
    "code": "```dart\nclass Object {\n  final double weight;\n\n  Object(this.weight);\n}\n\nString compareWeights(Object obj1, Object obj2) {\n  if (obj1.weight > obj2.weight) {\n    return \"Object 1 is heavier than Object 2.\";\n  } else if (obj1.weight < obj2.weight) {\n    return \"Object 1 is lighter than Object 2.\";\n  } else {\n    return \"Both objects have the same weight.\";\n  }\n}\n\nvoid main() {\n  Object object1 = Object(10.5);\n  Object object2 = Object(12.3);\n\n  String result = compareWeights(object1, object2);\n  print(result);\n}\n```"
  },
  {
    "task": "Create a logic to determine if a number falls within a defined range.",
    "code": "```dart\nbool isNumberInRange(int number, int lowerBound, int upperBound) {\n  return number >= lowerBound && number <= upperBound;\n}\n```"
  },
  {
    "task": "Design a program that checks if an employee worked overtime based on hours worked.",
    "code": "```dart\nvoid main() {\n  int hoursWorked = 45;\n  int standardHours = 40;\n\n  bool isOvertime = hoursWorked > standardHours;\n\n  if (isOvertime) {\n    print('The employee worked overtime.');\n  } else {\n    print('The employee did not work overtime.');\n  }\n}\n```"
  },
  {
    "task": "Write a function to compare two dates and determine which is earlier.",
    "code": "```dart\nDateTime? compareDates(DateTime date1, DateTime date2) {\n  if (date1.isBefore(date2)) {\n    return date1;\n  } else if (date1.isAfter(date2)) {\n    return date2;\n  } else {\n    return null; // dates are equal\n  }\n}\n```"
  },
  {
    "task": "Create a script that verifies if a given word starts with a vowel.",
    "code": "```dart\nbool startsWithVowel(String word) {\n  if (word.isEmpty) return false;\n  String firstLetter = word[0].toLowerCase();\n  return 'aeiou'.contains(firstLetter);\n}\n\nvoid main() {\n  String word = 'Apple';\n  print(startsWithVowel(word)); // Output: true\n}\n```"
  },
  {
    "task": "Build a utility that checks if a number is even or odd.",
    "code": "```dart\nbool isEven(int number) {\n  return number % 2 == 0;\n}\n\nbool isOdd(int number) {\n  return number % 2 != 0;\n}\n```"
  },
  {
    "task": "Implement a system that determines if a string contains only numeric characters.",
    "code": "```dart\nbool isNumeric(String str) {\n  for (int i = 0; i < str.length; i++) {\n    if (str.codeUnitAt(i) < 48 || str.codeUnitAt(i) > 57) {\n      return false;\n    }\n  }\n  return true;\n}\n```"
  },
  {
    "task": "Write a function to see if a given character is a vowel or consonant.",
    "code": "```dart\nbool isVowel(String char) {\n  if (char.length != 1) return false; // Ensure single character input\n  char = char.toLowerCase();\n  return char == 'a' || char == 'e' || char == 'i' || char == 'o' || char == 'u';\n}\n\nvoid main() {\n  String character = 'a';\n  if (isVowel(character)) {\n    print('$character is a vowel.');\n  } else {\n    print('$character is a consonant.');\n  }\n}\n```"
  },
  {
    "task": "Create a program that checks if a point lies within a specified rectangle.",
    "code": "```dart\nclass Point {\n  final double x;\n  final double y;\n\n  Point(this.x, this.y);\n}\n\nclass Rectangle {\n  final double x;\n  final double y;\n  final double width;\n  final double height;\n\n  Rectangle(this.x, this.y, this.width, this.height);\n\n  bool contains(Point point) {\n    return point.x >= x &&\n           point.x <= x + width &&\n           point.y >= y &&\n           point.y <= y + height;\n  }\n}\n\nvoid main() {\n  var rect = Rectangle(0, 0, 10, 10);\n  var point1 = Point(5, 5);\n  var point2 = Point(15, 5);\n\n  print(rect.contains(point1)); // true\n  print(rect.contains(point2)); // false\n}\n```"
  },
  {
    "task": "Develop a feature to compare two lists and return the common elements.",
    "code": "```dart\nList<T> findCommonElements<T>(List<T> list1, List<T> list2) {\n  return list1.where((element) => list2.contains(element)).toList();\n}\n\nvoid main() {\n  List<int> list1 = [1, 2, 3, 4, 5];\n  List<int> list2 = [4, 5, 6, 7, 8];\n  List<int> commonElements = findCommonElements(list1, list2);\n  print(commonElements); // Output: [4, 5]\n}\n```"
  },
  {
    "task": "Design a function that determines if a text contains any uppercase letters.",
    "code": "```dart\nbool containsUppercase(String text) {\n  for (int i = 0; i < text.length; i++) {\n    if (text[i].toUpperCase() == text[i] && text[i].toLowerCase() != text[i]) {\n      return true;\n    }\n  }\n  return false;\n}\n```"
  },
  {
    "task": "Implement a script to check if a given sentence is a question.",
    "code": "```dart\nbool isQuestion(String sentence) {\n  return sentence.trim().endsWith('?');\n}\n\nvoid main() {\n  String sentence1 = \"Is this a question?\";\n  String sentence2 = \"This is not a question.\";\n  \n  print(\"Sentence 1 is a question: ${isQuestion(sentence1)}\");\n  print(\"Sentence 2 is a question: ${isQuestion(sentence2)}\");\n}\n```"
  },
  {
    "task": "Write a program to determine if a temperature is measured in Celsius or Fahrenheit.",
    "code": "```dart\nString determineTemperatureUnit(double temperature) {\n  if (temperature < -273.15) {\n    return \"Invalid temperature\";\n  } else if (temperature >= -273.15 && temperature <= 100) {\n    return \"Celsius\";\n  } else {\n    return \"Fahrenheit\";\n  }\n}\n\nvoid main() {\n  double temp1 = 25.0;\n  double temp2 = 212.0;\n  double temp3 = -300.0;\n\n  print('Temp1 is measured in: ${determineTemperatureUnit(temp1)}');\n  print('Temp2 is measured in: ${determineTemperatureUnit(temp2)}');\n  print('Temp3 is measured in: ${determineTemperatureUnit(temp3)}');\n}\n```"
  },
  {
    "task": "Create a system that verifies if a student is enrolled in a particular course.",
    "code": "```dart\nclass Student {\n  String name;\n  List<String> courses;\n\n  Student(this.name, this.courses);\n\n  bool isEnrolled(String course) {\n    return courses.contains(course);\n  }\n}\n\nvoid main() {\n  var student = Student('Alice', ['Math', 'Science', 'History']);\n  var courseToCheck = 'Math';\n\n  if (student.isEnrolled(courseToCheck)) {\n    print('Student is enrolled in the course.');\n  } else {\n    print('Student is not enrolled in the course.');\n  }\n}\n```"
  },
  {
    "task": "Build a utility to check if a given string is a valid hexadecimal number.",
    "code": "```dart\nbool isValidHexadecimal(String input) {\n  final hexPattern = RegExp(r'^[0-9a-fA-F]+$');\n  return hexPattern.hasMatch(input);\n}\n```"
  },
  {
    "task": "Write a function to see if two circles intersect based on their radii and center points.",
    "code": "```dart\nclass Circle {\n  final double x;\n  final double y;\n  final double radius;\n\n  Circle(this.x, this.y, this.radius);\n}\n\nbool doCirclesIntersect(Circle c1, Circle c2) {\n  double dx = c2.x - c1.x;\n  double dy = c2.y - c1.y;\n  double distanceSquared = dx * dx + dy * dy;\n  double radiusSum = c1.radius + c2.radius;\n  return distanceSquared <= radiusSum * radiusSum;\n}\n```"
  },
  {
    "task": "Develop a program that checks if a given number is within 10% of another number.",
    "code": "```dart\nbool isWithinTenPercent(double number, double reference) {\n  double lowerBound = reference * 0.9;\n  double upperBound = reference * 1.1;\n  return number >= lowerBound && number <= upperBound;\n}\n\nvoid main() {\n  double number = 95.0;\n  double reference = 100.0;\n  print(isWithinTenPercent(number, reference)); // Output: true\n}\n```"
  },
  {
    "task": "Create a feature to determine if a character is alphanumeric.",
    "code": "```dart\nbool isAlphanumeric(String character) {\n  if (character.length != 1) return false;\n  int codeUnit = character.codeUnitAt(0);\n  return (codeUnit >= 48 && codeUnit <= 57) ||  // 0-9\n         (codeUnit >= 65 && codeUnit <= 90) ||  // A-Z\n         (codeUnit >= 97 && codeUnit <= 122);   // a-z\n}\n```"
  },
  {
    "task": "Implement a system to compare the profit margins of two products.",
    "code": "```dart\nclass Product {\n  final String name;\n  final double cost;\n  final double sellingPrice;\n\n  Product(this.name, this.cost, this.sellingPrice);\n\n  double get profitMargin => (sellingPrice - cost) / sellingPrice;\n}\n\nvoid compareProfitMargins(Product product1, Product product2) {\n  if (product1.profitMargin > product2.profitMargin) {\n    print('${product1.name} has a higher profit margin than ${product2.name}.');\n  } else if (product1.profitMargin < product2.profitMargin) {\n    print('${product2.name} has a higher profit margin than ${product1.name}.');\n  } else {\n    print('${product1.name} and ${product2.name} have the same profit margin.');\n  }\n}\n\nvoid main() {\n  var productA = Product('Product A', 50.0, 100.0);\n  var productB = Product('Product B', 30.0, 80.0);\n\n  compareProfitMargins(productA, productB);\n}\n```"
  },
  {
    "task": "Design a script to check if a given string contains any special characters.",
    "code": "```dart\nbool containsSpecialCharacters(String input) {\n  final specialCharsPattern = RegExp(r'[!@#\\$%\\^&\\*\\(\\)_\\+\\-=\\[\\]{};:\"\\\\|,.<>\\/?]');\n  return specialCharsPattern.hasMatch(input);\n}\n\nvoid main() {\n  String testString = \"Hello, World!\";\n  bool result = containsSpecialCharacters(testString);\n  print(\"Contains special characters: $result\");\n}\n```"
  },
  {
    "task": "Write a function to verify if a number is a multiple of another number.",
    "code": "```dart\nbool isMultiple(int a, int b) {\n  return b != 0 && a % b == 0;\n}\n```"
  },
  {
    "task": "Create a program that checks if a date is a holiday based on a list of holidays.",
    "code": "```dart\nvoid main() {\n  DateTime dateToCheck = DateTime(2023, 12, 25);\n  List<DateTime> holidays = [\n    DateTime(2023, 1, 1),\n    DateTime(2023, 12, 25),\n    DateTime(2023, 7, 4),\n  ];\n  \n  bool isHoliday = holidays.any((holiday) => holiday.isAtSameMomentAs(dateToCheck));\n  \n  if (isHoliday) {\n    print('The date is a holiday.');\n  } else {\n    print('The date is not a holiday.');\n  }\n}\n```"
  },
  {
    "task": "Build a utility to compare two text files and highlight the differences.",
    "code": "```dart\nimport 'dart:io';\n\nvoid main() async {\n  final file1 = File('file1.txt');\n  final file2 = File('file2.txt');\n\n  final content1 = await file1.readAsLines();\n  final content2 = await file2.readAsLines();\n\n  final maxLength = content1.length > content2.length ? content1.length : content2.length;\n\n  for (var i = 0; i < maxLength; i++) {\n    final line1 = i < content1.length ? content1[i] : '';\n    final line2 = i < content2.length ? content2[i] : '';\n\n    if (line1 != line2) {\n      print('Difference at line ${i + 1}:');\n      print('File1: $line1');\n      print('File2: $line2');\n      print('-' * 40);\n    }\n  }\n}\n```"
  },
  {
    "task": "Develop a function to determine if a given password is strong based on length and character diversity.",
    "code": "```dart\nbool isStrongPassword(String password) {\n  if (password.length < 8) return false;\n\n  bool hasUpperCase = false;\n  bool hasLowerCase = false;\n  bool hasDigit = false;\n  bool hasSpecialChar = false;\n\n  for (int i = 0; i < password.length; i++) {\n    String char = password[i];\n    if ('A'.compareTo(char) <= 0 && char.compareTo('Z') <= 0) {\n      hasUpperCase = true;\n    } else if ('a'.compareTo(char) <= 0 && char.compareTo('z') <= 0) {\n      hasLowerCase = true;\n    } else if ('0'.compareTo(char) <= 0 && char.compareTo('9') <= 0) {\n      hasDigit = true;\n    } else {\n      hasSpecialChar = true;\n    }\n\n    if (hasUpperCase && hasLowerCase && hasDigit && hasSpecialChar) {\n      return true;\n    }\n  }\n  return false;\n}\n```"
  },
  {
    "task": "Write a script to see if a number is within a specified distance from zero.",
    "code": "```dart\nvoid main() {\n  int number = 5; // Example number\n  int distance = 10; // Specified distance\n\n  if (number.abs() <= distance) {\n    print('The number is within the specified distance from zero.');\n  } else {\n    print('The number is not within the specified distance from zero.');\n  }\n}\n```"
  },
  {
    "task": "Create a system to check if a book title is available in a library database.",
    "code": "```dart\nclass Library {\n  final List<String> bookTitles;\n\n  Library(this.bookTitles);\n\n  bool isBookAvailable(String title) {\n    return bookTitles.contains(title);\n  }\n}\n\nvoid main() {\n  var library = Library(['1984', 'Pride and Prejudice', 'The Great Gatsby']);\n  var titleToCheck = '1984';\n\n  if (library.isBookAvailable(titleToCheck)) {\n    print('The book \"$titleToCheck\" is available.');\n  } else {\n    print('The book \"$titleToCheck\" is not available.');\n  }\n}\n```"
  },
  {
    "task": "Implement a feature that determines if a user has administrator privileges.",
    "code": "```dart\nclass User {\n  final String role;\n\n  User(this.role);\n\n  bool isAdmin() {\n    return role == 'admin';\n  }\n}\n\nvoid main() {\n  User user1 = User('admin');\n  User user2 = User('guest');\n\n  print(user1.isAdmin()); // true\n  print(user2.isAdmin()); // false\n}\n```"
  },
  {
    "task": "Design a function to compare the brightness of two colors.",
    "code": "```dart\nimport 'dart:ui';\n\ndouble calculateBrightness(Color color) {\n  return (color.red * 299 + color.green * 587 + color.blue * 114) / 1000;\n}\n\nString compareBrightness(Color color1, Color color2) {\n  double brightness1 = calculateBrightness(color1);\n  double brightness2 = calculateBrightness(color2);\n\n  if (brightness1 > brightness2) {\n    return 'Color 1 is brighter';\n  } else if (brightness1 < brightness2) {\n    return 'Color 2 is brighter';\n  } else {\n    return 'Both colors have the same brightness';\n  }\n}\n```"
  },
  {
    "task": "Write a program to verify if a number is a valid credit card number using the Luhn algorithm.",
    "code": "```dart\nbool isValidCreditCard(String number) {\n  int sum = 0;\n  bool alternate = false;\n  \n  for (int i = number.length - 1; i >= 0; i--) {\n    int n = int.parse(number[i]);\n\n    if (alternate) {\n      n *= 2;\n      if (n > 9) {\n        n -= 9;\n      }\n    }\n    \n    sum += n;\n    alternate = !alternate;\n  }\n  \n  return sum % 10 == 0;\n}\n\nvoid main() {\n  String creditCardNumber = \"4532015112830366\";\n  if (isValidCreditCard(creditCardNumber)) {\n    print(\"Valid credit card number.\");\n  } else {\n    print(\"Invalid credit card number.\");\n  }\n}\n```"
  },
  {
    "task": "Create a script to determine if a given string is a valid IP address.",
    "code": "```dart\nbool isValidIPAddress(String ip) {\n  final ipPattern =\n      RegExp(r'^(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9]?[0-9])\\.'\n             r'(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9]?[0-9])\\.'\n             r'(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9]?[0-9])\\.'\n             r'(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9]?[0-9])$');\n  return ipPattern.hasMatch(ip);\n}\n\nvoid main() {\n  String ip1 = \"192.168.1.1\";\n  String ip2 = \"256.300.888.999\";\n  \n  print('$ip1 is valid: ${isValidIPAddress(ip1)}');\n  print('$ip2 is valid: ${isValidIPAddress(ip2)}');\n}\n```"
  },
  {
    "task": "Build a utility that checks if a number is part of an arithmetic sequence.",
    "code": "```dart\nclass ArithmeticSequenceChecker {\n  final int start;\n  final int difference;\n\n  ArithmeticSequenceChecker(this.start, this.difference);\n\n  bool isPartOfSequence(int number) {\n    if (difference == 0) return number == start;\n    return (number - start) % difference == 0;\n  }\n}\n\nvoid main() {\n  var checker = ArithmeticSequenceChecker(2, 3);\n  print(checker.isPartOfSequence(8)); // true\n  print(checker.isPartOfSequence(10)); // false\n}\n```"
  },
  {
    "task": "Develop a feature to compare the efficiency of two algorithms based on time complexity.",
    "code": "```dart\nclass Algorithm {\n  final String name;\n  final int complexity; // Lower is better\n\n  Algorithm(this.name, this.complexity);\n}\n\nString compareAlgorithms(Algorithm algo1, Algorithm algo2) {\n  if (algo1.complexity < algo2.complexity) {\n    return '${algo1.name} is more efficient than ${algo2.name}';\n  } else if (algo1.complexity > algo2.complexity) {\n    return '${algo2.name} is more efficient than ${algo1.name}';\n  } else {\n    return '${algo1.name} and ${algo2.name} have the same efficiency';\n  }\n}\n\nvoid main() {\n  Algorithm algorithmA = Algorithm('Algorithm A', 1);\n  Algorithm algorithmB = Algorithm('Algorithm B', 2);\n\n  print(compareAlgorithms(algorithmA, algorithmB));\n}\n```"
  },
  {
    "task": "Write a function to see if a given date falls in a leap year.",
    "code": "```dart\nbool isLeapYear(DateTime date) {\n  int year = date.year;\n  if (year % 4 == 0) {\n    if (year % 100 == 0) {\n      return year % 400 == 0;\n    }\n    return true;\n  }\n  return false;\n}\n```"
  },
  {
    "task": "Create a program that determines if a user's subscription is active based on the current date.",
    "code": "```dart\nimport 'package:intl/intl.dart';\n\nvoid main() {\n  // Example subscription end date\n  String subscriptionEndDateStr = '2023-12-31';\n  DateTime subscriptionEndDate = DateFormat('yyyy-MM-dd').parse(subscriptionEndDateStr);\n\n  // Get current date\n  DateTime currentDate = DateTime.now();\n\n  // Determine if subscription is active\n  bool isActive = currentDate.isBefore(subscriptionEndDate);\n\n  // Output result\n  print('Subscription is active: $isActive');\n}\n```"
  },
  {
    "task": "Design a tool to check if a user\u2019s input is a palindrome phrase, ignoring spaces and punctuation.",
    "code": "```dart\nimport 'dart:io';\n\nbool isPalindrome(String input) {\n  String sanitized = input.replaceAll(RegExp(r'[\\s\\W_]+'), '').toLowerCase();\n  String reversed = sanitized.split('').reversed.join();\n  return sanitized == reversed;\n}\n\nvoid main() {\n  stdout.write('Enter a phrase: ');\n  String? input = stdin.readLineSync();\n  if (input != null) {\n    bool result = isPalindrome(input);\n    print(result ? 'It is a palindrome.' : 'It is not a palindrome.');\n  }\n}\n```"
  },
  {
    "task": "Implement a system to verify if a given number is part of the Fibonacci sequence.",
    "code": "```dart\nbool isFibonacci(int n) {\n  if (n < 0) return false;\n  int a = 0, b = 1;\n  while (b < n) {\n    int temp = a;\n    a = b;\n    b = temp + b;\n  }\n  return b == n || n == 0;\n}\n\nvoid main() {\n  int number = 21;\n  if (isFibonacci(number)) {\n    print(\"$number is a Fibonacci number.\");\n  } else {\n    print(\"$number is not a Fibonacci number.\");\n  }\n}\n```"
  },
  {
    "task": "Write a program to compare the elevation of two geographic locations.",
    "code": "```dart\nvoid main() {\n  double elevation1 = 250.0; // Elevation of first location in meters\n  double elevation2 = 300.0; // Elevation of second location in meters\n\n  if (elevation1 > elevation2) {\n    print('Location 1 is higher than Location 2.');\n  } else if (elevation1 < elevation2) {\n    print('Location 2 is higher than Location 1.');\n  } else {\n    print('Both locations have the same elevation.');\n  }\n}\n```"
  },
  {
    "task": "Create a function to determine if a given string is a valid JSON format.",
    "code": "```dart\nimport 'dart:convert';\n\nbool isValidJson(String input) {\n  try {\n    jsonDecode(input);\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n```"
  },
  {
    "task": "Build a utility that checks if a number is a factorial of any integer.",
    "code": "```dart\nbool isFactorial(int number) {\n  if (number < 0) return false;\n  int factorial = 1;\n  int i = 1;\n  while (factorial < number) {\n    i++;\n    factorial *= i;\n  }\n  return factorial == number;\n}\n```"
  },
  {
    "task": "Develop a feature to compare the widths of two ribbons and return the wider one.",
    "code": "```dart\nString compareRibbons(double width1, double width2) {\n  if (width1 > width2) {\n    return 'Ribbon 1 is wider';\n  } else if (width2 > width1) {\n    return 'Ribbon 2 is wider';\n  } else {\n    return 'Both ribbons are of equal width';\n  }\n}\n```"
  },
  {
    "task": "Write a script to see if a word is present in a list of banned words.",
    "code": "```dart\nvoid main() {\n  List<String> bannedWords = ['forbidden', 'banned', 'prohibited'];\n  String word = 'banned';\n  \n  if (bannedWords.contains(word)) {\n    print('$word is in the list of banned words.');\n  } else {\n    print('$word is not in the list of banned words.');\n  }\n}\n```"
  },
  {
    "task": "Design a system to determine if a patient's temperature is in the normal range.",
    "code": "```dart\nbool isTemperatureNormal(double temperature) {\n  double normalLow = 36.1;\n  double normalHigh = 37.2;\n  return temperature >= normalLow && temperature <= normalHigh;\n}\n\nvoid main() {\n  double patientTemperature = 37.0;\n  if (isTemperatureNormal(patientTemperature)) {\n    print('Temperature is normal.');\n  } else {\n    print('Temperature is not normal.');\n  }\n}\n```"
  },
  {
    "task": "Create a program that checks if a given time is during business hours.",
    "code": "```dart\nbool isDuringBusinessHours(DateTime time) {\n  int openingHour = 9;\n  int closingHour = 17;\n  int dayOfWeek = time.weekday;\n  \n  bool isWeekday = dayOfWeek >= DateTime.monday && dayOfWeek <= DateTime.friday;\n  bool isWithinHours = time.hour >= openingHour && time.hour < closingHour;\n  \n  return isWeekday && isWithinHours;\n}\n\nvoid main() {\n  DateTime now = DateTime.now();\n  if (isDuringBusinessHours(now)) {\n    print(\"The time is during business hours.\");\n  } else {\n    print(\"The time is outside business hours.\");\n  }\n}\n```"
  },
  {
    "task": "Implement a function to see if a number is a triangular number.",
    "code": "```dart\nbool isTriangularNumber(int number) {\n  if (number < 0) return false;\n  int sum = 0;\n  for (int n = 1; sum <= number; n++) {\n    sum += n;\n    if (sum == number) return true;\n  }\n  return false;\n}\n```"
  },
  {
    "task": "Write a feature to compare the number of vowels in two given strings.",
    "code": "```dart\nint countVowels(String s) {\n  final vowels = 'aeiouAEIOU';\n  return s.split('').where((char) => vowels.contains(char)).length;\n}\n\nString compareVowelCount(String str1, String str2) {\n  int count1 = countVowels(str1);\n  int count2 = countVowels(str2);\n\n  if (count1 > count2) {\n    return 'String 1 has more vowels';\n  } else if (count1 < count2) {\n    return 'String 2 has more vowels';\n  } else {\n    return 'Both strings have the same number of vowels';\n  }\n}\n```"
  }
]