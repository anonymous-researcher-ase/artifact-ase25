[
  {
    "task": "Write a function that checks if two strings are equal, ignoring case sensitivity.",
    "code": "```php\nfunction areStringsEqualIgnoreCase($string1, $string2) {\n    return strtolower($string1) === strtolower($string2);\n}\n```"
  },
  {
    "task": "Create a program that determines if a number is greater than 10.",
    "code": "```php\n<?php\n$number = 15; // Example number\n\nif ($number > 10) {\n    echo \"The number is greater than 10.\";\n} else {\n    echo \"The number is not greater than 10.\";\n}\n?>\n```"
  },
  {
    "task": "Implement a feature that compares the current date to a given date and returns if it is in the future.",
    "code": "```php\nfunction isFutureDate($givenDate) {\n    $currentDate = new DateTime();\n    $givenDateTime = new DateTime($givenDate);\n    return $givenDateTime > $currentDate;\n}\n\n// Example usage\n$givenDate = '2023-12-31';\nif (isFutureDate($givenDate)) {\n    echo \"The given date is in the future.\";\n} else {\n    echo \"The given date is not in the future.\";\n}\n```"
  },
  {
    "task": "Design a system that checks if a user's age is less than 18 and restricts access if true.",
    "code": "```php\n<?php\n\nfunction checkAge($age) {\n    if ($age < 18) {\n        return \"Access Restricted\";\n    } else {\n        return \"Access Granted\";\n    }\n}\n\n$userAge = 17; // Example age\necho checkAge($userAge);\n\n?>\n```"
  },
  {
    "task": "Build an algorithm that finds the maximum of three given integers.",
    "code": "```php\nfunction findMaximum($a, $b, $c) {\n    $max = $a;\n    if ($b > $max) {\n        $max = $b;\n    }\n    if ($c > $max) {\n        $max = $c;\n    }\n    return $max;\n}\n\n// Example usage\n$maxValue = findMaximum(10, 20, 30);\necho $maxValue;\n```"
  },
  {
    "task": "Write a function that verifies if two arrays contain the same elements in the same order.",
    "code": "```php\nfunction areArraysEqual($array1, $array2) {\n    return $array1 === $array2;\n}\n```"
  },
  {
    "task": "Create a script that checks if a product's price is within a specified range.",
    "code": "```php\n<?php\n$productPrice = 150; // example price\n$minPrice = 100;\n$maxPrice = 200;\n\nif ($productPrice >= $minPrice && $productPrice <= $maxPrice) {\n    echo \"The product's price is within the specified range.\";\n} else {\n    echo \"The product's price is outside the specified range.\";\n}\n?>\n```"
  },
  {
    "task": "Develop a tool that compares two versions of a software application and determines which is newer.",
    "code": "```php\nfunction compareVersions($version1, $version2) {\n    $parts1 = explode('.', $version1);\n    $parts2 = explode('.', $version2);\n\n    $length = max(count($parts1), count($parts2));\n    for ($i = 0; $i < $length; $i++) {\n        $value1 = $i < count($parts1) ? (int)$parts1[$i] : 0;\n        $value2 = $i < count($parts2) ? (int)$parts2[$i] : 0;\n\n        if ($value1 > $value2) {\n            return \"$version1 is newer than $version2\";\n        } elseif ($value1 < $value2) {\n            return \"$version2 is newer than $version1\";\n        }\n    }\n\n    return \"$version1 and $version2 are the same version\";\n}\n\n// Example usage:\necho compareVersions('1.2.3', '1.2.4');\n```"
  },
  {
    "task": "Implement a test to see if a given year is a leap year.",
    "code": "```php\nfunction isLeapYear($year) {\n    return ($year % 4 == 0 && $year % 100 != 0) || ($year % 400 == 0);\n}\n\n// Example usage\n$year = 2024;\nif (isLeapYear($year)) {\n    echo \"$year is a leap year.\";\n} else {\n    echo \"$year is not a leap year.\";\n}\n```"
  },
  {
    "task": "Design a feature that tells if a student\u2019s grade is passing or failing based on a threshold.",
    "code": "```php\n<?php\n\nfunction isPassingGrade($grade, $threshold) {\n    if ($grade >= $threshold) {\n        return \"Passing\";\n    } else {\n        return \"Failing\";\n    }\n}\n\n// Example usage\n$grade = 75;\n$threshold = 60;\n$result = isPassingGrade($grade, $threshold);\necho $result; // Outputs: Passing\n\n?>\n```"
  },
  {
    "task": "Write a function to compare two file sizes and return the larger one.",
    "code": "```php\nfunction getLargerFileSize($file1, $file2) {\n    $size1 = filesize($file1);\n    $size2 = filesize($file2);\n    return $size1 > $size2 ? $size1 : $size2;\n}\n```"
  },
  {
    "task": "Build a program that checks if the temperature is below freezing point.",
    "code": "```php\n<?php\n\n$temperature = -5; // Example temperature value\n\nif ($temperature < 0) {\n    echo \"The temperature is below freezing point.\";\n} else {\n    echo \"The temperature is above freezing point.\";\n}\n\n?>\n```"
  },
  {
    "task": "Create a logic that determines if a number is within the Fibonacci sequence.",
    "code": "```php\n<?php\n\nfunction isFibonacci($n) {\n    if ($n < 0) return false;\n    $a = 0;\n    $b = 1;\n    while ($b < $n) {\n        $temp = $b;\n        $b = $a + $b;\n        $a = $temp;\n    }\n    return $b === $n || $n === 0;\n}\n\n// Example usage\n$number = 21;\nif (isFibonacci($number)) {\n    echo \"$number is in the Fibonacci sequence.\";\n} else {\n    echo \"$number is not in the Fibonacci sequence.\";\n}\n\n?>\n```"
  },
  {
    "task": "Develop a function that checks if a given word is a palindrome.",
    "code": "```php\nfunction isPalindrome($word) {\n    $reversed = strrev($word);\n    return $word === $reversed;\n}\n```"
  },
  {
    "task": "Write a script to see if a password meets a minimum length requirement.",
    "code": "```php\n<?php\n$password = \"examplePassword\";\n$minLength = 8;\n\nif (strlen($password) >= $minLength) {\n    echo \"Password meets the minimum length requirement.\";\n} else {\n    echo \"Password does not meet the minimum length requirement.\";\n}\n?>\n```"
  },
  {
    "task": "Implement a system that decides if a point is inside a circle based on its coordinates.",
    "code": "```php\nfunction isPointInsideCircle($circleX, $circleY, $radius, $pointX, $pointY) {\n    $distanceSquared = ($pointX - $circleX) ** 2 + ($pointY - $circleY) ** 2;\n    $radiusSquared = $radius ** 2;\n    return $distanceSquared < $radiusSquared;\n}\n\n// Example usage:\n$circleX = 0;\n$circleY = 0;\n$radius = 5;\n$pointX = 3;\n$pointY = 4;\n\nif (isPointInsideCircle($circleX, $circleY, $radius, $pointX, $pointY)) {\n    echo \"The point is inside the circle.\";\n} else {\n    echo \"The point is outside the circle.\";\n}\n```"
  },
  {
    "task": "Design a program that checks if a shopping cart total exceeds a certain budget.",
    "code": "```php\n<?php\n\nfunction isOverBudget($cartTotal, $budget) {\n    return $cartTotal > $budget;\n}\n\n$cartTotal = 150.00;\n$budget = 100.00;\n\nif (isOverBudget($cartTotal, $budget)) {\n    echo \"The cart total exceeds the budget.\";\n} else {\n    echo \"The cart total is within the budget.\";\n}\n\n?>\n```"
  },
  {
    "task": "Create a function that compares two players' scores and returns the winner.",
    "code": "```php\n<?php\n\nfunction determineWinner($player1Score, $player2Score) {\n    if ($player1Score > $player2Score) {\n        return \"Player 1 is the winner!\";\n    } elseif ($player2Score > $player1Score) {\n        return \"Player 2 is the winner!\";\n    } else {\n        return \"It's a tie!\";\n    }\n}\n```"
  },
  {
    "task": "Write a program to determine if one string is a substring of another.",
    "code": "```php\nfunction isSubstring($string, $substring) {\n    return strpos($string, $substring) !== false;\n}\n\n$string = \"Hello, world!\";\n$substring = \"world\";\n$result = isSubstring($string, $substring);\necho $result ? \"Yes, it is a substring.\" : \"No, it is not a substring.\";\n```"
  },
  {
    "task": "Build a utility that checks if a number is a prime number.",
    "code": "```php\nfunction isPrime($number) {\n    if ($number <= 1) return false;\n    if ($number <= 3) return true;\n    if ($number % 2 == 0 || $number % 3 == 0) return false;\n    for ($i = 5; $i * $i <= $number; $i += 6) {\n        if ($number % $i == 0 || $number % ($i + 2) == 0) {\n            return false;\n        }\n    }\n    return true;\n}\n```"
  },
  {
    "task": "Write a function that checks if a given number is a perfect square.",
    "code": "```php\nfunction isPerfectSquare($number) {\n    if ($number < 0) {\n        return false;\n    }\n    $root = sqrt($number);\n    return $root == intval($root);\n}\n```"
  },
  {
    "task": "Create a system that determines if a person is eligible for a senior citizen discount based on their age.",
    "code": "```php\n<?php\n\nfunction isEligibleForSeniorDiscount($age) {\n    return $age >= 65;\n}\n\n$personAge = 70;\n\nif (isEligibleForSeniorDiscount($personAge)) {\n    echo \"Eligible for senior citizen discount.\";\n} else {\n    echo \"Not eligible for senior citizen discount.\";\n}\n\n?>\n```"
  },
  {
    "task": "Develop a feature to check if a date falls on a weekend.",
    "code": "```php\nfunction isWeekend($date) {\n    $timestamp = strtotime($date);\n    $weekday = date('N', $timestamp);\n    return $weekday >= 6;\n}\n\n// Example usage\n$date = '2023-10-14';\nif (isWeekend($date)) {\n    echo \"$date is a weekend.\";\n} else {\n    echo \"$date is not a weekend.\";\n}\n```"
  },
  {
    "task": "Design a program that sees if a given email address is in the correct format.",
    "code": "```php\n<?php\n\nfunction isValidEmail($email) {\n    return filter_var($email, FILTER_VALIDATE_EMAIL) !== false;\n}\n\n$email = \"example@example.com\";\nif (isValidEmail($email)) {\n    echo \"The email address is in the correct format.\";\n} else {\n    echo \"The email address is not in the correct format.\";\n}\n\n?>\n```"
  },
  {
    "task": "Implement a test to check if a rectangle's area is larger than a triangle's area.",
    "code": "```php\n<?php\n\nfunction rectangleArea($width, $height) {\n    return $width * $height;\n}\n\nfunction triangleArea($base, $height) {\n    return 0.5 * $base * $height;\n}\n\nfunction compareAreas($rectWidth, $rectHeight, $triBase, $triHeight) {\n    $rectArea = rectangleArea($rectWidth, $rectHeight);\n    $triArea = triangleArea($triBase, $triHeight);\n    \n    return $rectArea > $triArea;\n}\n\n// Example usage\n$rectWidth = 10;\n$rectHeight = 5;\n$triBase = 8;\n$triHeight = 5;\n\n$isRectangleLarger = compareAreas($rectWidth, $rectHeight, $triBase, $triHeight);\necho $isRectangleLarger ? \"Rectangle's area is larger.\" : \"Triangle's area is larger or equal.\";\n\n?>\n```"
  },
  {
    "task": "Write a function that verifies if two rectangles overlap each other.",
    "code": "```php\nfunction doRectanglesOverlap($rect1, $rect2) {\n    if ($rect1['x2'] <= $rect2['x1'] || $rect2['x2'] <= $rect1['x1']) {\n        return false;\n    }\n    if ($rect1['y2'] <= $rect2['y1'] || $rect2['y2'] <= $rect1['y1']) {\n        return false;\n    }\n    return true;\n}\n\n$rectangle1 = ['x1' => 0, 'y1' => 0, 'x2' => 2, 'y2' => 2];\n$rectangle2 = ['x1' => 1, 'y1' => 1, 'x2' => 3, 'y2' => 3];\n\necho doRectanglesOverlap($rectangle1, $rectangle2) ? 'Overlap' : 'No Overlap';\n```"
  },
  {
    "task": "Create a script to compare two strings lexicographically.",
    "code": "```php\n<?php\n\n$string1 = \"apple\";\n$string2 = \"banana\";\n\nif ($string1 < $string2) {\n    echo \"'$string1' is less than '$string2'.\";\n} elseif ($string1 > $string2) {\n    echo \"'$string1' is greater than '$string2'.\";\n} else {\n    echo \"'$string1' is equal to '$string2'.\";\n}\n\n?>\n```"
  },
  {
    "task": "Build a program that checks if a list of numbers is in ascending order.",
    "code": "```php\nfunction isAscending($numbers) {\n    for ($i = 0; $i < count($numbers) - 1; $i++) {\n        if ($numbers[$i] > $numbers[$i + 1]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$numbers = [1, 2, 3, 4, 5];\nif (isAscending($numbers)) {\n    echo \"The list is in ascending order.\";\n} else {\n    echo \"The list is not in ascending order.\";\n}\n```"
  },
  {
    "task": "Design a system to compare the heights of two buildings.",
    "code": "```php\n<?php\n\nfunction compareBuildingHeights($height1, $height2) {\n    if ($height1 > $height2) {\n        return \"Building 1 is taller than Building 2.\";\n    } elseif ($height1 < $height2) {\n        return \"Building 2 is taller than Building 1.\";\n    } else {\n        return \"Both buildings are of the same height.\";\n    }\n}\n\n$building1Height = 150; // Example height for Building 1\n$building2Height = 200; // Example height for Building 2\n\necho compareBuildingHeights($building1Height, $building2Height);\n\n?>\n```"
  },
  {
    "task": "Write a feature that determines if a given time is before noon.",
    "code": "```php\nfunction isBeforeNoon($time) {\n    $noon = strtotime('12:00:00');\n    return strtotime($time) < $noon;\n}\n\n// Example usage:\n$time = \"10:30:00\";\nif (isBeforeNoon($time)) {\n    echo \"The time is before noon.\";\n} else {\n    echo \"The time is not before noon.\";\n}\n```"
  },
  {
    "task": "Implement a function to check if a given number is a power of two.",
    "code": "```php\nfunction isPowerOfTwo($number) {\n    if ($number <= 0) {\n        return false;\n    }\n    return ($number & ($number - 1)) === 0;\n}\n```"
  },
  {
    "task": "Create a program that determines if a word is longer than another word.",
    "code": "```php\nfunction isLonger($word1, $word2) {\n    return strlen($word1) > strlen($word2);\n}\n\n$word1 = \"elephant\";\n$word2 = \"cat\";\n\n$result = isLonger($word1, $word2);\necho $result ? \"$word1 is longer than $word2\" : \"$word1 is not longer than $word2\";\n```"
  },
  {
    "task": "Develop a function to compare the lengths of two lists and return the longer one.",
    "code": "```php\nfunction getLongerList($list1, $list2) {\n    if (count($list1) > count($list2)) {\n        return $list1;\n    } else {\n        return $list2;\n    }\n}\n```"
  },
  {
    "task": "Write a script to see if a user's input matches a pre-defined secret code.",
    "code": "```php\n<?php\n$secretCode = \"secret123\";\n$userInput = readline(\"Enter the secret code: \");\n\nif ($userInput === $secretCode) {\n    echo \"Access granted\";\n} else {\n    echo \"Access denied\";\n}\n?>\n```"
  },
  {
    "task": "Build a utility that checks if a given year is in the 21st century.",
    "code": "```php\nfunction is21stCentury($year) {\n    return $year >= 2001 && $year <= 2100;\n}\n\n// Example usage\n$year = 2023;\nif (is21stCentury($year)) {\n    echo \"$year is in the 21st century.\";\n} else {\n    echo \"$year is not in the 21st century.\";\n}\n```"
  },
  {
    "task": "Create a logic that determines if a book's publication year is after 2000.",
    "code": "```php\n$publicationYear = 2005; // Example year\n$isAfter2000 = $publicationYear > 2000;\n```"
  },
  {
    "task": "Design a feature to see if a number is divisible by both 3 and 5.",
    "code": "```php\nfunction isDivisibleBy3And5($number) {\n    return ($number % 3 === 0) && ($number % 5 === 0);\n}\n\n// Example usage\n$number = 15;\nif (isDivisibleBy3And5($number)) {\n    echo \"$number is divisible by both 3 and 5.\";\n} else {\n    echo \"$number is not divisible by both 3 and 5.\";\n}\n```"
  },
  {
    "task": "Implement a system that checks if a student's GPA is above a certain threshold.",
    "code": "```php\n<?php\n\nfunction isGpaAboveThreshold($gpa, $threshold) {\n    return $gpa > $threshold;\n}\n\n// Example usage:\n$studentGpa = 3.5;\n$threshold = 3.0;\n\nif (isGpaAboveThreshold($studentGpa, $threshold)) {\n    echo \"The student's GPA is above the threshold.\";\n} else {\n    echo \"The student's GPA is not above the threshold.\";\n}\n\n?>\n```"
  },
  {
    "task": "Write a function to determine if a given angle is acute, right, or obtuse.",
    "code": "```php\nfunction determineAngleType($angle) {\n    if ($angle < 90) {\n        return \"acute\";\n    } elseif ($angle == 90) {\n        return \"right\";\n    } elseif ($angle > 90 && $angle < 180) {\n        return \"obtuse\";\n    } else {\n        return \"invalid\";\n    }\n}\n```"
  },
  {
    "task": "Develop a program that compares the lengths of two strings and returns the shorter one.",
    "code": "```php\n<?php\n\nfunction getShorterString($string1, $string2) {\n    return strlen($string1) < strlen($string2) ? $string1 : $string2;\n}\n\n// Example usage\n$string1 = \"Hello\";\n$string2 = \"World!\";\necho getShorterString($string1, $string2);\n\n?>\n```"
  },
  {
    "task": "Create a script to verify if a username is unique within a list.",
    "code": "```php\n<?php\n\nfunction isUsernameUnique($username, $userList) {\n    foreach ($userList as $user) {\n        if ($username === $user) {\n            return false;\n        }\n    }\n    return true;\n}\n\n// Example usage\n$userList = ['alice', 'bob', 'charlie'];\n$username = 'david';\n\nif (isUsernameUnique($username, $userList)) {\n    echo \"Username is unique.\";\n} else {\n    echo \"Username is already taken.\";\n}\n\n?>\n```"
  },
  {
    "task": "Build a tool that checks if a job applicant meets all the listed qualifications.",
    "code": "```php\n<?php\n\nfunction applicantMeetsQualifications($applicant, $qualifications) {\n    foreach ($qualifications as $key => $value) {\n        if (!isset($applicant[$key]) || $applicant[$key] !== $value) {\n            return false;\n        }\n    }\n    return true;\n}\n\n// Example usage:\n$applicant = [\n    'degree' => 'Bachelor',\n    'experience' => 5,\n    'skills' => ['PHP', 'JavaScript']\n];\n\n$qualifications = [\n    'degree' => 'Bachelor',\n    'experience' => 5,\n    'skills' => ['PHP', 'JavaScript']\n];\n\nif (applicantMeetsQualifications($applicant, $qualifications)) {\n    echo \"The applicant meets all qualifications.\";\n} else {\n    echo \"The applicant does not meet all qualifications.\";\n}\n\n?>\n```"
  },
  {
    "task": "Write a feature to see if a vehicle's speed exceeds the speed limit.",
    "code": "```php\nfunction isSpeeding($vehicleSpeed, $speedLimit) {\n    return $vehicleSpeed > $speedLimit;\n}\n\n// Example usage\n$vehicleSpeed = 80;\n$speedLimit = 70;\n\nif (isSpeeding($vehicleSpeed, $speedLimit)) {\n    echo \"The vehicle is speeding.\";\n} else {\n    echo \"The vehicle is within the speed limit.\";\n}\n```"
  },
  {
    "task": "Design a system that determines whether a given point is above or below the x-axis.",
    "code": "```php\nfunction determinePointPosition($x, $y) {\n    if ($y > 0) {\n        return \"The point is above the x-axis.\";\n    } elseif ($y < 0) {\n        return \"The point is below the x-axis.\";\n    } else {\n        return \"The point is on the x-axis.\";\n    }\n}\n\n// Example usage\n$x = 5;\n$y = -3;\necho determinePointPosition($x, $y);\n```"
  },
  {
    "task": "Create a function that checks if a given word appears in a sentence.",
    "code": "```php\nfunction isWordInSentence($word, $sentence) {\n    return strpos($sentence, $word) !== false;\n}\n```"
  },
  {
    "task": "Implement a program that identifies whether a given number is negative or positive.",
    "code": "```php\n<?php\n\nfunction checkNumber($number) {\n    if ($number > 0) {\n        return \"Positive\";\n    } elseif ($number < 0) {\n        return \"Negative\";\n    } else {\n        return \"Zero\";\n    }\n}\n\necho checkNumber(5);  // Example usage\n```"
  },
  {
    "task": "Write a script to see if the sum of two numbers is greater than 100.",
    "code": "```php\n<?php\n\n$num1 = 45;\n$num2 = 60;\n\nif (($num1 + $num2) > 100) {\n    echo \"The sum is greater than 100.\";\n} else {\n    echo \"The sum is not greater than 100.\";\n}\n\n?>\n```"
  },
  {
    "task": "Build a utility that checks if a file exists in a specified directory.",
    "code": "```php\nfunction fileExistsInDirectory($directory, $filename) {\n    $filePath = rtrim($directory, DIRECTORY_SEPARATOR) . DIRECTORY_SEPARATOR . $filename;\n    return file_exists($filePath);\n}\n```"
  },
  {
    "task": "Develop a system to compare the weights of two different objects.",
    "code": "```php\nfunction compareWeights($weight1, $weight2) {\n    if ($weight1 > $weight2) {\n        return \"Object 1 is heavier than Object 2.\";\n    } elseif ($weight1 < $weight2) {\n        return \"Object 2 is heavier than Object 1.\";\n    } else {\n        return \"Both objects have the same weight.\";\n    }\n}\n\n// Example usage\n$weightOfObject1 = 10;\n$weightOfObject2 = 15;\n\necho compareWeights($weightOfObject1, $weightOfObject2);\n```"
  },
  {
    "task": "Create a logic to determine if a number falls within a defined range.",
    "code": "```php\n<?php\n\nfunction isWithinRange($number, $min, $max) {\n    return $number >= $min && $number <= $max;\n}\n\n// Example usage\n$number = 10;\n$min = 5;\n$max = 15;\n$result = isWithinRange($number, $min, $max);\necho $result ? 'Within range' : 'Out of range';\n\n?>\n```"
  },
  {
    "task": "Design a program that checks if an employee worked overtime based on hours worked.",
    "code": "```php\n<?php\n\nfunction checkOvertime($hoursWorked) {\n    $standardHours = 40;\n    return $hoursWorked > $standardHours;\n}\n\n// Example usage\n$employeeHours = 45;\nif (checkOvertime($employeeHours)) {\n    echo \"Employee worked overtime.\";\n} else {\n    echo \"Employee did not work overtime.\";\n}\n\n?>\n```"
  },
  {
    "task": "Write a function to compare two dates and determine which is earlier.",
    "code": "```php\nfunction compareDates($date1, $date2) {\n    if ($date1 < $date2) {\n        return \"$date1 is earlier than $date2\";\n    } elseif ($date1 > $date2) {\n        return \"$date2 is earlier than $date1\";\n    } else {\n        return \"$date1 and $date2 are the same\";\n    }\n}\n```"
  },
  {
    "task": "Create a script that verifies if a given word starts with a vowel.",
    "code": "```php\n<?php\n\nfunction startsWithVowel($word) {\n    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $firstChar = strtolower($word[0]);\n    return in_array($firstChar, $vowels);\n}\n\n$word = \"Example\";\nif (startsWithVowel($word)) {\n    echo \"The word starts with a vowel.\";\n} else {\n    echo \"The word does not start with a vowel.\";\n}\n\n?>\n```"
  },
  {
    "task": "Build a utility that checks if a number is even or odd.",
    "code": "```php\nfunction isEven($number) {\n    return $number % 2 === 0;\n}\n\nfunction isOdd($number) {\n    return $number % 2 !== 0;\n}\n\n// Example usage:\n$number = 5;\necho $number . \" is \" . (isEven($number) ? \"even\" : \"odd\") . \".\";\n```"
  },
  {
    "task": "Implement a system that determines if a string contains only numeric characters.",
    "code": "```php\nfunction isNumericString($str) {\n    return ctype_digit($str);\n}\n\n// Example usage\n$string = \"12345\";\nif (isNumericString($string)) {\n    echo \"The string contains only numeric characters.\";\n} else {\n    echo \"The string contains non-numeric characters.\";\n}\n```"
  },
  {
    "task": "Write a function to see if a given character is a vowel or consonant.",
    "code": "```php\n<?php\nfunction checkVowelOrConsonant($char) {\n    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $char = strtolower($char);\n    if (!ctype_alpha($char) || strlen($char) !== 1) {\n        return 'Invalid input';\n    }\n    return in_array($char, $vowels) ? 'Vowel' : 'Consonant';\n}\n```"
  },
  {
    "task": "Create a program that checks if a point lies within a specified rectangle.",
    "code": "```php\nfunction isPointInRectangle($px, $py, $rx1, $ry1, $rx2, $ry2) {\n    return $px >= min($rx1, $rx2) && $px <= max($rx1, $rx2) &&\n           $py >= min($ry1, $ry2) && $py <= max($ry1, $ry2);\n}\n\n// Example usage\n$pointX = 5;\n$pointY = 5;\n$rectX1 = 0;\n$rectY1 = 0;\n$rectX2 = 10;\n$rectY2 = 10;\n\nif (isPointInRectangle($pointX, $pointY, $rectX1, $rectY1, $rectX2, $rectY2)) {\n    echo \"The point is inside the rectangle.\";\n} else {\n    echo \"The point is outside the rectangle.\";\n}\n```"
  },
  {
    "task": "Develop a feature to compare two lists and return the common elements.",
    "code": "```php\nfunction findCommonElements($list1, $list2) {\n    return array_values(array_intersect($list1, $list2));\n}\n\n// Example usage\n$list1 = [1, 2, 3, 4, 5];\n$list2 = [4, 5, 6, 7, 8];\n$commonElements = findCommonElements($list1, $list2);\nprint_r($commonElements);\n```"
  },
  {
    "task": "Design a function that determines if a text contains any uppercase letters.",
    "code": "```php\nfunction containsUppercase($text) {\n    for ($i = 0; $i < strlen($text); $i++) {\n        if (ctype_upper($text[$i])) {\n            return true;\n        }\n    }\n    return false;\n}\n```"
  },
  {
    "task": "Implement a script to check if a given sentence is a question.",
    "code": "```php\n<?php\nfunction isQuestion($sentence) {\n    return substr(trim($sentence), -1) === '?';\n}\n\n$sentence = \"Is this a question?\";\nif (isQuestion($sentence)) {\n    echo \"The sentence is a question.\";\n} else {\n    echo \"The sentence is not a question.\";\n}\n?>\n```"
  },
  {
    "task": "Write a program to determine if a temperature is measured in Celsius or Fahrenheit.",
    "code": "```php\nfunction determineTemperatureUnit($temperature) {\n    if (strpos($temperature, 'C') !== false) {\n        return \"Celsius\";\n    } elseif (strpos($temperature, 'F') !== false) {\n        return \"Fahrenheit\";\n    } else {\n        return \"Unknown unit\";\n    }\n}\n\n// Example usage:\necho determineTemperatureUnit(\"30C\"); // Outputs: Celsius\necho determineTemperatureUnit(\"86F\"); // Outputs: Fahrenheit\necho determineTemperatureUnit(\"300\"); // Outputs: Unknown unit\n```"
  },
  {
    "task": "Create a system that verifies if a student is enrolled in a particular course.",
    "code": "```php\n<?php\n\nfunction isStudentEnrolled($student, $course, $enrollmentData) {\n    return isset($enrollmentData[$student]) && in_array($course, $enrollmentData[$student]);\n}\n\n// Example usage\n$enrollmentData = [\n    'Alice' => ['Math', 'Science'],\n    'Bob' => ['History'],\n    'Charlie' => ['Math', 'Art', 'History']\n];\n\n$student = 'Alice';\n$course = 'Science';\n\nif (isStudentEnrolled($student, $course, $enrollmentData)) {\n    echo \"$student is enrolled in $course.\";\n} else {\n    echo \"$student is not enrolled in $course.\";\n}\n\n?>\n```"
  },
  {
    "task": "Build a utility to check if a given string is a valid hexadecimal number.",
    "code": "```php\nfunction isValidHexadecimal($string) {\n    return ctype_xdigit($string);\n}\n\n// Example usage:\n$testString = \"1a2b3c\";\nif (isValidHexadecimal($testString)) {\n    echo \"$testString is a valid hexadecimal number.\";\n} else {\n    echo \"$testString is not a valid hexadecimal number.\";\n}\n```"
  },
  {
    "task": "Write a function to see if two circles intersect based on their radii and center points.",
    "code": "```php\n<?php\n\nfunction doCirclesIntersect($x1, $y1, $r1, $x2, $y2, $r2) {\n    $distanceSquared = ($x2 - $x1) ** 2 + ($y2 - $y1) ** 2;\n    $sumRadii = $r1 + $r2;\n    return $distanceSquared <= $sumRadii ** 2;\n}\n\n?>\n```"
  },
  {
    "task": "Develop a program that checks if a given number is within 10% of another number.",
    "code": "```php\n<?php\n\nfunction isWithinTenPercent($number1, $number2) {\n    $tenPercent = $number2 * 0.10;\n    return $number1 >= $number2 - $tenPercent && $number1 <= $number2 + $tenPercent;\n}\n\n// Example usage\n$number1 = 105;\n$number2 = 100;\n\nif (isWithinTenPercent($number1, $number2)) {\n    echo \"$number1 is within 10% of $number2.\";\n} else {\n    echo \"$number1 is not within 10% of $number2.\";\n}\n\n?>\n```"
  },
  {
    "task": "Create a feature to determine if a character is alphanumeric.",
    "code": "```php\nfunction isAlphanumeric($char) {\n    return ctype_alnum($char);\n}\n\n// Example usage\n$char = 'A';\nif (isAlphanumeric($char)) {\n    echo \"$char is alphanumeric.\";\n} else {\n    echo \"$char is not alphanumeric.\";\n}\n```"
  },
  {
    "task": "Implement a system to compare the profit margins of two products.",
    "code": "```php\n<?php\n\nfunction compareProfitMargins($product1, $product2) {\n    if ($product1['profit_margin'] > $product2['profit_margin']) {\n        return \"Product 1 has a higher profit margin.\";\n    } elseif ($product1['profit_margin'] < $product2['profit_margin']) {\n        return \"Product 2 has a higher profit margin.\";\n    } else {\n        return \"Both products have the same profit margin.\";\n    }\n}\n\n$product1 = ['name' => 'Product A', 'profit_margin' => 0.25];\n$product2 = ['name' => 'Product B', 'profit_margin' => 0.30];\n\necho compareProfitMargins($product1, $product2);\n\n?>\n```"
  },
  {
    "task": "Design a script to check if a given string contains any special characters.",
    "code": "```php\n<?php\n\nfunction containsSpecialCharacters($string) {\n    return preg_match('/[^a-zA-Z0-9]/', $string) > 0;\n}\n\n$input = \"example@string!\";\nif (containsSpecialCharacters($input)) {\n    echo \"The string contains special characters.\";\n} else {\n    echo \"The string does not contain special characters.\";\n}\n\n?>\n```"
  },
  {
    "task": "Write a function to verify if a number is a multiple of another number.",
    "code": "```php\nfunction isMultiple($num, $divisor) {\n    return $divisor != 0 && $num % $divisor == 0;\n}\n```"
  },
  {
    "task": "Create a program that checks if a date is a holiday based on a list of holidays.",
    "code": "```php\n<?php\n\nfunction isHoliday($date, $holidays) {\n    return in_array($date, $holidays);\n}\n\n$holidays = [\n    '2023-01-01', // New Year's Day\n    '2023-12-25', // Christmas Day\n    // Add more holidays as needed\n];\n\n$dateToCheck = '2023-12-25';\n\nif (isHoliday($dateToCheck, $holidays)) {\n    echo \"$dateToCheck is a holiday.\";\n} else {\n    echo \"$dateToCheck is not a holiday.\";\n}\n\n?>\n```"
  },
  {
    "task": "Build a utility to compare two text files and highlight the differences.",
    "code": "```php\n<?php\n\nfunction compareFiles($file1, $file2) {\n    $lines1 = file($file1, FILE_IGNORE_NEW_LINES);\n    $lines2 = file($file2, FILE_IGNORE_NEW_LINES);\n\n    $diffs = [];\n    $maxLines = max(count($lines1), count($lines2));\n\n    for ($i = 0; $i < $maxLines; $i++) {\n        $line1 = $lines1[$i] ?? '';\n        $line2 = $lines2[$i] ?? '';\n\n        if ($line1 !== $line2) {\n            $diffs[] = [\n                'line_number' => $i + 1,\n                'file1' => $line1,\n                'file2' => $line2\n            ];\n        }\n    }\n\n    return $diffs;\n}\n\nfunction highlightDifferences($diffs) {\n    foreach ($diffs as $diff) {\n        echo \"Difference at line {$diff['line_number']}:\\n\";\n        echo \"File1: {$diff['file1']}\\n\";\n        echo \"File2: {$diff['file2']}\\n\";\n        echo str_repeat(\"-\", 20) . \"\\n\";\n    }\n}\n\n$file1 = 'path/to/first/file.txt';\n$file2 = 'path/to/second/file.txt';\n\n$differences = compareFiles($file1, $file2);\nhighlightDifferences($differences);\n\n?>\n```"
  },
  {
    "task": "Develop a function to determine if a given password is strong based on length and character diversity.",
    "code": "```php\n<?php\n\nfunction isStrongPassword($password) {\n    $length = strlen($password);\n    $hasUppercase = preg_match('/[A-Z]/', $password);\n    $hasLowercase = preg_match('/[a-z]/', $password);\n    $hasDigit = preg_match('/[0-9]/', $password);\n    $hasSpecialChar = preg_match('/[\\W_]/', $password);\n\n    if ($length >= 8 && $hasUppercase && $hasLowercase && $hasDigit && $hasSpecialChar) {\n        return true;\n    }\n    return false;\n}\n\n?>\n```"
  },
  {
    "task": "Write a script to see if a number is within a specified distance from zero.",
    "code": "```php\n<?php\n\nfunction isWithinDistanceFromZero($number, $distance) {\n    return abs($number) <= $distance;\n}\n\n$number = 5;\n$distance = 10;\n\nif (isWithinDistanceFromZero($number, $distance)) {\n    echo \"The number is within the specified distance from zero.\";\n} else {\n    echo \"The number is not within the specified distance from zero.\";\n}\n?>\n```"
  },
  {
    "task": "Create a system to check if a book title is available in a library database.",
    "code": "```php\n<?php\n\nfunction isBookAvailable($title, $libraryDatabase) {\n    foreach ($libraryDatabase as $book) {\n        if (strcasecmp($book, $title) == 0) {\n            return true;\n        }\n    }\n    return false;\n}\n\n$libraryDatabase = [\n    \"The Great Gatsby\",\n    \"A Tale of Two Cities\",\n    \"Moby Dick\",\n    \"War and Peace\"\n];\n\n$titleToCheck = \"Moby Dick\";\n$isAvailable = isBookAvailable($titleToCheck, $libraryDatabase);\n\nif ($isAvailable) {\n    echo \"The book is available.\";\n} else {\n    echo \"The book is not available.\";\n}\n\n?>\n```"
  },
  {
    "task": "Implement a feature that determines if a user has administrator privileges.",
    "code": "```php\n<?php\n\nfunction hasAdminPrivileges($userRole) {\n    return $userRole === 'admin';\n}\n\n// Example usage\n$userRole = 'admin';\nif (hasAdminPrivileges($userRole)) {\n    echo \"User has administrator privileges.\";\n} else {\n    echo \"User does not have administrator privileges.\";\n}\n\n?>\n```"
  },
  {
    "task": "Design a function to compare the brightness of two colors.",
    "code": "```php\nfunction compareBrightness($color1, $color2) {\n    $brightness1 = calculateBrightness($color1);\n    $brightness2 = calculateBrightness($color2);\n    \n    if ($brightness1 > $brightness2) {\n        return 1;\n    } elseif ($brightness1 < $brightness2) {\n        return -1;\n    } else {\n        return 0;\n    }\n}\n\nfunction calculateBrightness($color) {\n    // Assuming $color is in the format '#RRGGBB'\n    $r = hexdec(substr($color, 1, 2));\n    $g = hexdec(substr($color, 3, 2));\n    $b = hexdec(substr($color, 5, 2));\n    \n    // Simple brightness formula\n    return ($r * 299 + $g * 587 + $b * 114) / 1000;\n}\n```"
  },
  {
    "task": "Write a program to verify if a number is a valid credit card number using the Luhn algorithm.",
    "code": "```php\nfunction isValidCreditCard($number) {\n    $number = str_replace(' ', '', $number);\n    $sum = 0;\n    $alt = false;\n    \n    for ($i = strlen($number) - 1; $i >= 0; $i--) {\n        $n = (int)$number[$i];\n        if ($alt) {\n            $n *= 2;\n            if ($n > 9) {\n                $n -= 9;\n            }\n        }\n        $sum += $n;\n        $alt = !$alt;\n    }\n    \n    return $sum % 10 == 0;\n}\n\n// Example Usage\n$creditCardNumber = \"4539 1488 0343 6467\";\nif (isValidCreditCard($creditCardNumber)) {\n    echo \"Valid Credit Card Number\";\n} else {\n    echo \"Invalid Credit Card Number\";\n}\n```"
  },
  {
    "task": "Create a script to determine if a given string is a valid IP address.",
    "code": "```php\n<?php\n\nfunction isValidIPAddress($ip) {\n    return filter_var($ip, FILTER_VALIDATE_IP) !== false;\n}\n\n// Example usage\n$ip = '192.168.1.1';\nif (isValidIPAddress($ip)) {\n    echo \"$ip is a valid IP address.\";\n} else {\n    echo \"$ip is not a valid IP address.\";\n}\n?>\n```"
  },
  {
    "task": "Build a utility that checks if a number is part of an arithmetic sequence.",
    "code": "```php\nfunction isInArithmeticSequence($number, $start, $difference, $count) {\n    for ($i = 0; $i < $count; $i++) {\n        if ($number === $start + $i * $difference) {\n            return true;\n        }\n    }\n    return false;\n}\n\n// Example usage\n$number = 15;\n$start = 5;\n$difference = 2;\n$count = 10;\n\necho isInArithmeticSequence($number, $start, $difference, $count) ? 'Yes' : 'No';\n```"
  },
  {
    "task": "Develop a feature to compare the efficiency of two algorithms based on time complexity.",
    "code": "```php\n<?php\n\nfunction compareAlgorithms($algo1, $algo2) {\n    $timeComplexity = [\n        'O(1)' => 1,\n        'O(log n)' => 2,\n        'O(n)' => 3,\n        'O(n log n)' => 4,\n        'O(n^2)' => 5,\n        'O(n^3)' => 6,\n        'O(2^n)' => 7,\n        'O(n!)' => 8\n    ];\n\n    if (!isset($timeComplexity[$algo1]) || !isset($timeComplexity[$algo2])) {\n        return \"Invalid time complexity.\";\n    }\n\n    if ($timeComplexity[$algo1] < $timeComplexity[$algo2]) {\n        return \"Algorithm 1 is more efficient than Algorithm 2.\";\n    } elseif ($timeComplexity[$algo1] > $timeComplexity[$algo2]) {\n        return \"Algorithm 2 is more efficient than Algorithm 1.\";\n    } else {\n        return \"Both algorithms have the same efficiency.\";\n    }\n}\n\necho compareAlgorithms('O(n)', 'O(log n)'); // Example usage\n\n?>\n```"
  },
  {
    "task": "Write a function to see if a given date falls in a leap year.",
    "code": "```php\nfunction isLeapYear($date) {\n    $year = date('Y', strtotime($date));\n    return ($year % 4 == 0 && $year % 100 != 0) || ($year % 400 == 0);\n}\n```"
  },
  {
    "task": "Create a program that determines if a user's subscription is active based on the current date.",
    "code": "```php\n<?php\nfunction isSubscriptionActive($expirationDate) {\n    $currentDate = new DateTime();\n    $expirationDate = new DateTime($expirationDate);\n\n    return $currentDate < $expirationDate;\n}\n\n$expirationDate = '2023-12-31';\nif (isSubscriptionActive($expirationDate)) {\n    echo \"Subscription is active.\";\n} else {\n    echo \"Subscription has expired.\";\n}\n?>\n```"
  },
  {
    "task": "Design a tool to check if a user\u2019s input is a palindrome phrase, ignoring spaces and punctuation.",
    "code": "```php\n<?php\n\nfunction isPalindrome($input) {\n    $processedInput = strtolower(preg_replace('/[^a-z0-9]/', '', $input));\n    return $processedInput === strrev($processedInput);\n}\n\n$input = readline(\"Enter a phrase: \");\nif (isPalindrome($input)) {\n    echo \"The phrase is a palindrome.\";\n} else {\n    echo \"The phrase is not a palindrome.\";\n}\n\n?>\n```"
  },
  {
    "task": "Implement a system to verify if a given number is part of the Fibonacci sequence.",
    "code": "```php\n<?php\n\nfunction isFibonacci($n) {\n    if ($n < 0) return false;\n    $x = 5 * $n * $n;\n    return isPerfectSquare($x + 4) || isPerfectSquare($x - 4);\n}\n\nfunction isPerfectSquare($num) {\n    $s = (int)sqrt($num);\n    return $s * $s === $num;\n}\n\n// Example usage\n$number = 21;\nif (isFibonacci($number)) {\n    echo \"$number is a Fibonacci number.\";\n} else {\n    echo \"$number is not a Fibonacci number.\";\n}\n\n?>\n```"
  },
  {
    "task": "Write a program to compare the elevation of two geographic locations.",
    "code": "```php\n<?php\n\nfunction compareElevation($elevation1, $elevation2) {\n    if ($elevation1 > $elevation2) {\n        return \"The first location is higher.\";\n    } elseif ($elevation1 < $elevation2) {\n        return \"The second location is higher.\";\n    } else {\n        return \"Both locations have the same elevation.\";\n    }\n}\n\n$location1Elevation = 1500; // Example elevation for location 1\n$location2Elevation = 1200; // Example elevation for location 2\n\n$result = compareElevation($location1Elevation, $location2Elevation);\necho $result;\n\n?>\n```"
  },
  {
    "task": "Create a function to determine if a given string is a valid JSON format.",
    "code": "```php\nfunction isValidJson($string) {\n    json_decode($string);\n    return (json_last_error() == JSON_ERROR_NONE);\n}\n```"
  },
  {
    "task": "Build a utility that checks if a number is a factorial of any integer.",
    "code": "```php\nfunction isFactorial($number) {\n    if ($number < 0) {\n        return false;\n    }\n    \n    $factorial = 1;\n    $i = 1;\n    \n    while ($factorial < $number) {\n        $i++;\n        $factorial *= $i;\n    }\n    \n    return $factorial === $number;\n}\n\n// Example usage\n$number = 120;\nif (isFactorial($number)) {\n    echo \"$number is a factorial of an integer.\";\n} else {\n    echo \"$number is not a factorial of any integer.\";\n}\n```"
  },
  {
    "task": "Develop a feature to compare the widths of two ribbons and return the wider one.",
    "code": "```php\n<?php\n\nfunction compareRibbons($width1, $width2) {\n    if ($width1 > $width2) {\n        return $width1;\n    } elseif ($width2 > $width1) {\n        return $width2;\n    } else {\n        return \"Both ribbons have the same width.\";\n    }\n}\n\n$ribbon1 = 5;\n$ribbon2 = 10;\n\necho compareRibbons($ribbon1, $ribbon2);\n\n?>\n```"
  },
  {
    "task": "Write a script to see if a word is present in a list of banned words.",
    "code": "```php\n<?php\nfunction isWordBanned($word, $bannedWords) {\n    return in_array($word, $bannedWords);\n}\n\n$bannedWords = ['badword1', 'badword2', 'badword3'];\n$wordToCheck = 'exampleword';\n\nif (isWordBanned($wordToCheck, $bannedWords)) {\n    echo \"The word '$wordToCheck' is banned.\";\n} else {\n    echo \"The word '$wordToCheck' is not banned.\";\n}\n?>\n```"
  },
  {
    "task": "Design a system to determine if a patient's temperature is in the normal range.",
    "code": "```php\n<?php\n\nfunction isTemperatureNormal($temperature) {\n    $normalMin = 36.1;\n    $normalMax = 37.2;\n    \n    if ($temperature >= $normalMin && $temperature <= $normalMax) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n// Example usage\n$patientTemperature = 36.8;\nif (isTemperatureNormal($patientTemperature)) {\n    echo \"The patient's temperature is normal.\";\n} else {\n    echo \"The patient's temperature is not normal.\";\n}\n\n?>\n```"
  },
  {
    "task": "Create a program that checks if a given time is during business hours.",
    "code": "```php\n<?php\n\nfunction isDuringBusinessHours($time) {\n    $businessStart = strtotime(\"09:00:00\");\n    $businessEnd = strtotime(\"17:00:00\");\n    $givenTime = strtotime($time);\n\n    if ($givenTime >= $businessStart && $givenTime <= $businessEnd) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n// Example usage\n$time = \"14:30:00\";\nif (isDuringBusinessHours($time)) {\n    echo \"The time is during business hours.\";\n} else {\n    echo \"The time is outside business hours.\";\n}\n?>\n```"
  },
  {
    "task": "Implement a function to see if a number is a triangular number.",
    "code": "```php\nfunction isTriangularNumber($num) {\n    if ($num < 0) {\n        return false;\n    }\n    $sum = 0;\n    for ($i = 1; $sum <= $num; $i++) {\n        $sum += $i;\n        if ($sum === $num) {\n            return true;\n        }\n    }\n    return false;\n}\n```"
  },
  {
    "task": "Write a feature to compare the number of vowels in two given strings.",
    "code": "```php\n<?php\n\nfunction countVowels($string) {\n    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $count = 0;\n    $string = strtolower($string);\n    for ($i = 0; $i < strlen($string); $i++) {\n        if (in_array($string[$i], $vowels)) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\nfunction compareVowels($string1, $string2) {\n    $count1 = countVowels($string1);\n    $count2 = countVowels($string2);\n\n    if ($count1 > $count2) {\n        return \"String 1 has more vowels.\";\n    } elseif ($count1 < $count2) {\n        return \"String 2 has more vowels.\";\n    } else {\n        return \"Both strings have the same number of vowels.\";\n    }\n}\n\n$string1 = \"Hello World\";\n$string2 = \"PHP is great\";\n\necho compareVowels($string1, $string2);\n\n?>\n```"
  }
]