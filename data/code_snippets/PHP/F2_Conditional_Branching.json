[
  {
    "task": "Write a program that checks if a number is even or odd and outputs the result.",
    "code": "```php\n<?php\n\nfunction checkEvenOrOdd($number) {\n    if ($number % 2 == 0) {\n        echo \"$number is even.\";\n    } else {\n        echo \"$number is odd.\";\n    }\n}\n\n// Example usage:\ncheckEvenOrOdd(5);\ncheckEvenOrOdd(8);\n\n?>\n```"
  },
  {
    "task": "Create a function that determines if a given year is a leap year.",
    "code": "```php\nfunction isLeapYear($year) {\n    if (($year % 4 == 0 && $year % 100 != 0) || ($year % 400 == 0)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n```"
  },
  {
    "task": "Develop a script that categorizes an input number as positive, negative, or zero.",
    "code": "```php\n<?php\n\nfunction categorizeNumber($number) {\n    if ($number > 0) {\n        return \"positive\";\n    } elseif ($number < 0) {\n        return \"negative\";\n    } else {\n        return \"zero\";\n    }\n}\n\n// Example usage\n$inputNumber = 5; // You can change this value to test different cases\necho \"The number $inputNumber is \" . categorizeNumber($inputNumber) . \".\";\n\n?>\n```"
  },
  {
    "task": "Implement a system that grants access only if a correct password and username are provided.",
    "code": "```php\n<?php\n\nfunction grantAccess($username, $password) {\n    $correctUsername = \"admin\";\n    $correctPassword = \"secret\";\n\n    if ($username === $correctUsername && $password === $correctPassword) {\n        return \"Access granted.\";\n    } else {\n        return \"Access denied.\";\n    }\n}\n\n// Example usage:\necho grantAccess(\"admin\", \"secret\");\necho \"\\n\";\necho grantAccess(\"user\", \"pass\");\n\n?>\n```"
  },
  {
    "task": "Design a program that outputs 'Fizz' for numbers divisible by 3, 'Buzz' for numbers divisible by 5, and 'FizzBuzz' for numbers divisible by both.",
    "code": "```php\nfor ($i = 1; $i <= 100; $i++) {\n    if ($i % 3 == 0 && $i % 5 == 0) {\n        echo \"FizzBuzz\\n\";\n    } elseif ($i % 3 == 0) {\n        echo \"Fizz\\n\";\n    } elseif ($i % 5 == 0) {\n        echo \"Buzz\\n\";\n    } else {\n        echo $i . \"\\n\";\n    }\n}\n```"
  },
  {
    "task": "Write a function to determine if a character is a vowel or a consonant.",
    "code": "```php\n<?php\n\nfunction isVowelOrConsonant($char) {\n    $char = strtolower($char);\n    if ($char == 'a' || $char == 'e' || $char == 'i' || $char == 'o' || $char == 'u') {\n        return \"Vowel\";\n    } else {\n        return \"Consonant\";\n    }\n}\n\n?>\n```"
  },
  {
    "task": "Create a program that assigns letter grades based on numerical scores.",
    "code": "```php\n<?php\n\nfunction assignGrade($score) {\n    if ($score >= 90) {\n        return 'A';\n    } elseif ($score >= 80) {\n        return 'B';\n    } elseif ($score >= 70) {\n        return 'C';\n    } elseif ($score >= 60) {\n        return 'D';\n    } else {\n        return 'F';\n    }\n}\n\n// Example usage\n$score = 85;\n$grade = assignGrade($score);\necho \"The grade for score $score is: $grade\";\n\n?>\n```"
  },
  {
    "task": "Develop a routine that suggests clothing based on the current temperature.",
    "code": "```php\nfunction suggestClothing($temperature) {\n    if ($temperature < 0) {\n        return \"Wear a heavy winter jacket.\";\n    } elseif ($temperature >= 0 && $temperature <= 10) {\n        return \"Wear a coat and a scarf.\";\n    } elseif ($temperature > 10 && $temperature <= 20) {\n        return \"Wear a light jacket.\";\n    } elseif ($temperature > 20 && $temperature <= 30) {\n        return \"Wear a t-shirt and shorts.\";\n    } else {\n        return \"Wear light clothing and stay hydrated.\";\n    }\n}\n\n// Example usage:\n$currentTemperature = 15;\necho suggestClothing($currentTemperature);\n```"
  },
  {
    "task": "Implement a system that checks if a user is an adult or a minor based on their age.",
    "code": "```php\n<?php\n\nfunction checkAge($age) {\n    if ($age >= 18) {\n        return \"User is an adult.\";\n    } else {\n        return \"User is a minor.\";\n    }\n}\n\n$age = 20; // Example age\necho checkAge($age);\n\n?>\n```"
  },
  {
    "task": "Design a program that validates if a triangle can exist based on its side lengths.",
    "code": "```php\n<?php\n\nfunction canTriangleExist($a, $b, $c) {\n    if ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n// Example usage\n$side1 = 5;\n$side2 = 7;\n$side3 = 10;\n\nif (canTriangleExist($side1, $side2, $side3)) {\n    echo \"The triangle can exist.\";\n} else {\n    echo \"The triangle cannot exist.\";\n}\n\n?>\n```"
  },
  {
    "task": "Write a function that determines the largest of three input numbers.",
    "code": "```php\nfunction findLargest($a, $b, $c) {\n    if ($a >= $b && $a >= $c) {\n        return $a;\n    } elseif ($b >= $a && $b >= $c) {\n        return $b;\n    } else {\n        return $c;\n    }\n}\n```"
  },
  {
    "task": "Create a program that checks if a string is a palindrome.",
    "code": "```php\n<?php\n\nfunction isPalindrome($string) {\n    $string = strtolower(preg_replace('/[^a-z0-9]/i', '', $string));\n    $reversedString = strrev($string);\n    \n    if ($string === $reversedString) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n// Example usage:\n$string = \"A man, a plan, a canal, Panama\";\nif (isPalindrome($string)) {\n    echo \"The string is a palindrome.\";\n} else {\n    echo \"The string is not a palindrome.\";\n}\n\n?>\n```"
  },
  {
    "task": "Develop a routine that calculates the total cost with a discount applied if applicable.",
    "code": "```php\nfunction calculateTotalCost($originalCost, $applyDiscount) {\n    $discountRate = 0.1; // 10% discount\n    if ($applyDiscount) {\n        $totalCost = $originalCost - ($originalCost * $discountRate);\n    } else {\n        $totalCost = $originalCost;\n    }\n    return $totalCost;\n}\n\n// Example usage\n$originalCost = 100;\n$applyDiscount = true;\n$totalCost = calculateTotalCost($originalCost, $applyDiscount);\necho \"Total Cost: $\" . $totalCost;\n```"
  },
  {
    "task": "Implement a system that checks if a person is eligible to vote based on age and citizenship.",
    "code": "```php\nfunction isEligibleToVote($age, $citizenship) {\n    if ($age >= 18 && $citizenship === 'yes') {\n        return \"Eligible to vote.\";\n    } else {\n        return \"Not eligible to vote.\";\n    }\n}\n\n// Example usage:\n$age = 20;\n$citizenship = 'yes';\necho isEligibleToVote($age, $citizenship);\n```"
  },
  {
    "task": "Design a function that returns the day of the week given a number from 1 to 7.",
    "code": "```php\nfunction getDayOfWeek($number) {\n    if ($number == 1) {\n        return \"Monday\";\n    } elseif ($number == 2) {\n        return \"Tuesday\";\n    } elseif ($number == 3) {\n        return \"Wednesday\";\n    } elseif ($number == 4) {\n        return \"Thursday\";\n    } elseif ($number == 5) {\n        return \"Friday\";\n    } elseif ($number == 6) {\n        return \"Saturday\";\n    } elseif ($number == 7) {\n        return \"Sunday\";\n    } else {\n        return \"Invalid number\";\n    }\n}\n```"
  },
  {
    "task": "Write a program that determines if a word is found within a given sentence.",
    "code": "```php\n<?php\nfunction isWordInSentence($word, $sentence) {\n    if (strpos($sentence, $word) !== false) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$sentence = \"This is an example sentence.\";\n$word = \"example\";\n\nif (isWordInSentence($word, $sentence)) {\n    echo \"The word '{$word}' was found in the sentence.\";\n} else {\n    echo \"The word '{$word}' was not found in the sentence.\";\n}\n?>\n```"
  },
  {
    "task": "Create a script that checks if a number is within a specified range.",
    "code": "```php\n<?php\n$number = 15; // Example number\n$min = 10;    // Minimum of range\n$max = 20;    // Maximum of range\n\nif ($number >= $min && $number <= $max) {\n    echo \"The number is within the range.\";\n} else {\n    echo \"The number is outside the range.\";\n}\n?>\n```"
  },
  {
    "task": "Develop a routine to decide if a user input is a valid email address.",
    "code": "```php\n<?php\n\nfunction isValidEmail($email) {\n    if (filter_var($email, FILTER_VALIDATE_EMAIL)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$email = $_POST['email'] ?? '';\n\nif (isValidEmail($email)) {\n    echo \"Valid email address.\";\n} else {\n    echo \"Invalid email address.\";\n}\n\n?>\n```"
  },
  {
    "task": "Implement a program that categorizes a number as small, medium, or large.",
    "code": "```php\n<?php\n\nfunction categorizeNumber($number) {\n    if ($number < 10) {\n        return \"small\";\n    } elseif ($number <= 100) {\n        return \"medium\";\n    } else {\n        return \"large\";\n    }\n}\n\n// Example usage\necho categorizeNumber(5);    // Outputs: small\necho categorizeNumber(50);   // Outputs: medium\necho categorizeNumber(150);  // Outputs: large\n\n?>\n```"
  },
  {
    "task": "Design a function that outputs the season based on the month provided.",
    "code": "```php\nfunction getSeason($month) {\n    if ($month === \"December\" || $month === \"January\" || $month === \"February\") {\n        return \"Winter\";\n    } elseif ($month === \"March\" || $month === \"April\" || $month === \"May\") {\n        return \"Spring\";\n    } elseif ($month === \"June\" || $month === \"July\" || $month === \"August\") {\n        return \"Summer\";\n    } elseif ($month === \"September\" || $month === \"October\" || $month === \"November\") {\n        return \"Autumn\";\n    } else {\n        return \"Invalid month\";\n    }\n}\n```"
  },
  {
    "task": "Write a program that checks if a string contains only alphabetic characters.",
    "code": "```php\nfunction isAlphabetic($string) {\n    if (ctype_alpha($string)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n// Example usage\n$string = \"HelloWorld\";\nif (isAlphabetic($string)) {\n    echo \"The string contains only alphabetic characters.\";\n} else {\n    echo \"The string contains non-alphabetic characters.\";\n}\n```"
  },
  {
    "task": "Create a routine that decides the type of triangle based on its angles.",
    "code": "```php\nfunction determineTriangleType($angle1, $angle2, $angle3) {\n    if ($angle1 + $angle2 + $angle3 != 180) {\n        return \"Not a triangle\";\n    }\n    \n    if ($angle1 == 90 || $angle2 == 90 || $angle3 == 90) {\n        return \"Right triangle\";\n    }\n    \n    if ($angle1 > 90 || $angle2 > 90 || $angle3 > 90) {\n        return \"Obtuse triangle\";\n    }\n    \n    return \"Acute triangle\";\n}\n\n// Example usage:\necho determineTriangleType(60, 60, 60); // Output: Acute triangle\n```"
  },
  {
    "task": "Develop a program that suggests a meal based on the time of day.",
    "code": "```php\n<?php\n\nfunction suggestMeal($hour) {\n    if ($hour >= 5 && $hour < 11) {\n        return \"Breakfast\";\n    } elseif ($hour >= 11 && $hour < 17) {\n        return \"Lunch\";\n    } elseif ($hour >= 17 && $hour < 22) {\n        return \"Dinner\";\n    } else {\n        return \"Snack\";\n    }\n}\n\n$currentHour = date('G');\n$mealSuggestion = suggestMeal($currentHour);\necho \"Suggested meal: \" . $mealSuggestion;\n\n?>\n```"
  },
  {
    "task": "Implement a function that determines if a point lies within a circle given its radius.",
    "code": "```php\n<?php\n\nfunction isPointInCircle($x, $y, $circleRadius) {\n    $distanceFromOrigin = sqrt($x * $x + $y * $y);\n    return $distanceFromOrigin <= $circleRadius;\n}\n\n// Example usage:\n$x = 3;\n$y = 4;\n$circleRadius = 5;\n$result = isPointInCircle($x, $y, $circleRadius);\necho $result ? \"Point is within the circle\" : \"Point is outside the circle\";\n\n?>\n```"
  },
  {
    "task": "Design a script that calculates overtime pay based on hours worked.",
    "code": "```php\n<?php\n\nfunction calculateOvertimePay($hoursWorked, $hourlyRate) {\n    $overtimeRate = 1.5 * $hourlyRate;\n    $standardHours = 40;\n    $overtimeHours = 0;\n    $overtimePay = 0;\n\n    if ($hoursWorked > $standardHours) {\n        $overtimeHours = $hoursWorked - $standardHours;\n        $overtimePay = $overtimeHours * $overtimeRate;\n    }\n\n    return $overtimePay;\n}\n\n// Example usage\n$hoursWorked = 45; // Total hours worked\n$hourlyRate = 20;  // Hourly wage\n\n$overtimePay = calculateOvertimePay($hoursWorked, $hourlyRate);\necho \"Overtime Pay: $\" . $overtimePay;\n\n?>\n```"
  },
  {
    "task": "Write a program that checks if two strings are anagrams of each other.",
    "code": "```php\nfunction areAnagrams($string1, $string2) {\n    if (strlen($string1) !== strlen($string2)) {\n        return false;\n    }\n\n    $array1 = str_split($string1);\n    $array2 = str_split($string2);\n\n    sort($array1);\n    sort($array2);\n\n    if ($array1 === $array2) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n// Example usage:\n$string1 = \"listen\";\n$string2 = \"silent\";\n$result = areAnagrams($string1, $string2);\necho $result ? \"Anagrams\" : \"Not Anagrams\";\n```"
  },
  {
    "task": "Create a function that classifies numbers as prime or composite.",
    "code": "```php\n<?php\n\nfunction classifyNumber($number) {\n    if ($number < 2) {\n        return 'Neither prime nor composite';\n    }\n    for ($i = 2; $i <= sqrt($number); $i++) {\n        if ($number % $i == 0) {\n            return 'Composite';\n        }\n    }\n    return 'Prime';\n}\n\n?>\n```"
  },
  {
    "task": "Develop a routine to determine if a number is a power of two.",
    "code": "```php\nfunction isPowerOfTwo($n) {\n    if ($n <= 0) {\n        return false;\n    }\n    return ($n & ($n - 1)) === 0;\n}\n```"
  },
  {
    "task": "Implement a program that checks if a list is sorted in ascending order.",
    "code": "```php\nfunction isSortedAscending($list) {\n    for ($i = 0; $i < count($list) - 1; $i++) {\n        if ($list[$i] > $list[$i + 1]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n// Example usage\n$list = [1, 2, 3, 4, 5];\n$result = isSortedAscending($list);\necho $result ? 'True' : 'False';\n```"
  },
  {
    "task": "Design a function that suggests a sport based on the weather conditions.",
    "code": "```php\n<?php\n\nfunction suggestSportBasedOnWeather($weatherCondition) {\n    switch (strtolower($weatherCondition)) {\n        case 'sunny':\n            return 'Beach Volleyball';\n        case 'rainy':\n            return 'Swimming (Indoor)';\n        case 'windy':\n            return 'Kite Surfing';\n        case 'snowy':\n            return 'Skiing';\n        case 'cloudy':\n            return 'Jogging';\n        default:\n            return 'Gym Workout';\n    }\n}\n\n// Example usage:\n$weather = 'Sunny';\necho suggestSportBasedOnWeather($weather); // Output: Beach Volleyball\n\n?>\n```"
  },
  {
    "task": "Write a program that determines if an entered date is valid.",
    "code": "```php\n<?php\nfunction isValidDate($date) {\n    $parts = explode('-', $date);\n    if (count($parts) !== 3) {\n        return false;\n    }\n    \n    $year = (int)$parts[0];\n    $month = (int)$parts[1];\n    $day = (int)$parts[2];\n    \n    if ($year < 1 || $month < 1 || $month > 12 || $day < 1) {\n        return false;\n    }\n    \n    $daysInMonth = [\n        1 => 31, 2 => 28, 3 => 31, 4 => 30, 5 => 31, 6 => 30,\n        7 => 31, 8 => 31, 9 => 30, 10 => 31, 11 => 30, 12 => 31\n    ];\n    \n    if ($month == 2 && (($year % 4 == 0 && $year % 100 != 0) || ($year % 400 == 0))) {\n        $daysInMonth[2] = 29;\n    }\n    \n    return $day <= $daysInMonth[$month];\n}\n\n$date = readline(\"Enter a date (YYYY-MM-DD): \");\nif (isValidDate($date)) {\n    echo \"The date is valid.\\n\";\n} else {\n    echo \"The date is invalid.\\n\";\n}\n?>\n```"
  },
  {
    "task": "Create a script to decide which of two products to buy based on price and reviews.",
    "code": "```php\n<?php\n\n$product1 = [\n    'price' => 150,\n    'reviews' => 4.5\n];\n\n$product2 = [\n    'price' => 120,\n    'reviews' => 4.0\n];\n\nif ($product1['price'] < $product2['price'] && $product1['reviews'] >= $product2['reviews']) {\n    echo \"Buy Product 1\";\n} elseif ($product2['price'] < $product1['price'] && $product2['reviews'] >= $product1['reviews']) {\n    echo \"Buy Product 2\";\n} elseif ($product1['reviews'] > $product2['reviews']) {\n    echo \"Buy Product 1\";\n} elseif ($product2['reviews'] > $product1['reviews']) {\n    echo \"Buy Product 2\";\n} else {\n    echo \"Prices and reviews are the same, choose based on other criteria.\";\n}\n\n?>\n```"
  },
  {
    "task": "Develop a function that categorizes a person\u2019s BMI as underweight, normal, overweight, or obese.",
    "code": "```php\nfunction categorizeBMI($weight, $height) {\n    $bmi = $weight / ($height * $height);\n    \n    if ($bmi < 18.5) {\n        return \"underweight\";\n    } elseif ($bmi >= 18.5 && $bmi < 24.9) {\n        return \"normal\";\n    } elseif ($bmi >= 25 && $bmi < 29.9) {\n        return \"overweight\";\n    } else {\n        return \"obese\";\n    }\n}\n```"
  },
  {
    "task": "Implement a program that checks if a credit card number is valid using the Luhn algorithm.",
    "code": "```php\nfunction isValidCreditCard($number) {\n    $number = preg_replace('/\\D/', '', $number);\n    $sum = 0;\n    $alt = false;\n    for ($i = strlen($number) - 1; $i >= 0; $i--) {\n        $n = intval($number[$i]);\n        if ($alt) {\n            $n *= 2;\n            if ($n > 9) {\n                $n -= 9;\n            }\n        }\n        $sum += $n;\n        $alt = !$alt;\n    }\n    return $sum % 10 === 0;\n}\n\n// Example usage:\n$cardNumber = \"4532015112830366\";\nif (isValidCreditCard($cardNumber)) {\n    echo \"Valid credit card number.\";\n} else {\n    echo \"Invalid credit card number.\";\n}\n```"
  },
  {
    "task": "Design a routine that outputs a greeting based on the current time of day.",
    "code": "```php\n<?php\n\ndate_default_timezone_set('your_timezone_here'); // Set your timezone\n$hour = date('H');\n\nif ($hour >= 5 && $hour < 12) {\n    echo \"Good morning!\";\n} elseif ($hour >= 12 && $hour < 18) {\n    echo \"Good afternoon!\";\n} elseif ($hour >= 18 && $hour < 22) {\n    echo \"Good evening!\";\n} else {\n    echo \"Good night!\";\n}\n\n?>\n```"
  },
  {
    "task": "Write a program that determines if a given word can be formed with a set of letters.",
    "code": "```php\n<?php\n\nfunction canFormWord($word, $letters) {\n    $letterCount = array_count_values(str_split($letters));\n    \n    foreach (str_split($word) as $char) {\n        if (!isset($letterCount[$char]) || $letterCount[$char] <= 0) {\n            return false;\n        }\n        $letterCount[$char]--;\n    }\n    \n    return true;\n}\n\n// Example usage\n$word = \"hello\";\n$letters = \"hleolole\";\n$result = canFormWord($word, $letters);\necho $result ? \"Yes\" : \"No\";\n```"
  },
  {
    "task": "Create a function that outputs the appropriate greeting based on the day of the week.",
    "code": "```php\nfunction getGreetingForDay($dayOfWeek) {\n    switch (strtolower($dayOfWeek)) {\n        case 'monday':\n            return \"Happy Monday!\";\n        case 'tuesday':\n            return \"Terrific Tuesday!\";\n        case 'wednesday':\n            return \"Wonderful Wednesday!\";\n        case 'thursday':\n            return \"Thrilling Thursday!\";\n        case 'friday':\n            return \"Fantastic Friday!\";\n        case 'saturday':\n            return \"Superb Saturday!\";\n        case 'sunday':\n            return \"Serene Sunday!\";\n        default:\n            return \"Have a great day!\";\n    }\n}\n\n// Example usage:\necho getGreetingForDay('Monday');\n```"
  },
  {
    "task": "Develop a system to determine if a person qualifies for a senior citizen discount.",
    "code": "```php\n<?php\n\nfunction qualifiesForSeniorDiscount($age) {\n    if ($age >= 65) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n// Example usage\n$age = 70;\nif (qualifiesForSeniorDiscount($age)) {\n    echo \"Qualifies for senior citizen discount.\";\n} else {\n    echo \"Does not qualify for senior citizen discount.\";\n}\n\n?>\n```"
  },
  {
    "task": "Implement a function that checks if a number is a perfect square.",
    "code": "```php\nfunction isPerfectSquare($num) {\n    if ($num < 0) {\n        return false;\n    }\n    $sqrt = sqrt($num);\n    return $sqrt == intval($sqrt);\n}\n```"
  },
  {
    "task": "Design a program that outputs the correct shipping cost based on weight and distance.",
    "code": "```php\n<?php\n\nfunction calculateShippingCost($weight, $distance) {\n    $cost = 0;\n\n    if ($weight <= 5) {\n        if ($distance <= 100) {\n            $cost = 5;\n        } elseif ($distance <= 500) {\n            $cost = 10;\n        } else {\n            $cost = 15;\n        }\n    } elseif ($weight <= 20) {\n        if ($distance <= 100) {\n            $cost = 10;\n        } elseif ($distance <= 500) {\n            $cost = 20;\n        } else {\n            $cost = 30;\n        }\n    } else {\n        if ($distance <= 100) {\n            $cost = 20;\n        } elseif ($distance <= 500) {\n            $cost = 40;\n        } else {\n            $cost = 60;\n        }\n    }\n\n    return $cost;\n}\n\n$weight = 10; // example weight\n$distance = 300; // example distance\n\necho \"The shipping cost is: $\" . calculateShippingCost($weight, $distance);\n\n?>\n```"
  },
  {
    "task": "Write a routine that chooses the correct pronoun based on gender input.",
    "code": "```php\nfunction getPronoun($gender) {\n    if ($gender === 'male') {\n        return 'he';\n    } elseif ($gender === 'female') {\n        return 'she';\n    } else {\n        return 'they';\n    }\n}\n\n// Example usage\necho getPronoun('male');   // Output: he\necho getPronoun('female'); // Output: she\necho getPronoun('other');  // Output: they\n```"
  },
  {
    "task": "Create a program that checks if a user input is a palindrome number.",
    "code": "```php\n<?php\n\nfunction isPalindrome($number) {\n    $originalNumber = strval($number);\n    $reversedNumber = strrev($originalNumber);\n    if ($originalNumber === $reversedNumber) {\n        return true;\n    }\n    return false;\n}\n\necho \"Enter a number: \";\n$handle = fopen(\"php://stdin\", \"r\");\n$input = trim(fgets($handle));\n\nif (is_numeric($input)) {\n    if (isPalindrome($input)) {\n        echo \"The number is a palindrome.\\n\";\n    } else {\n        echo \"The number is not a palindrome.\\n\";\n    }\n} else {\n    echo \"Please enter a valid number.\\n\";\n}\n\nfclose($handle);\n?>\n```"
  },
  {
    "task": "Develop a script to decide if a number is a perfect number.",
    "code": "```php\nfunction isPerfectNumber($number) {\n    if ($number < 1) {\n        return false;\n    }\n\n    $sum = 0;\n    for ($i = 1; $i <= $number / 2; $i++) {\n        if ($number % $i == 0) {\n            $sum += $i;\n        }\n    }\n\n    return $sum == $number;\n}\n\n$number = 28;\nif (isPerfectNumber($number)) {\n    echo \"$number is a perfect number.\";\n} else {\n    echo \"$number is not a perfect number.\";\n}\n```"
  },
  {
    "task": "Implement a system that determines the winner in a rock-paper-scissors game.",
    "code": "```php\n<?php\n\nfunction determineWinner($player1, $player2) {\n    if ($player1 === $player2) {\n        return \"Draw\";\n    }\n\n    if (($player1 === \"rock\" && $player2 === \"scissors\") ||\n        ($player1 === \"scissors\" && $player2 === \"paper\") ||\n        ($player1 === \"paper\" && $player2 === \"rock\")) {\n        return \"Player 1 wins\";\n    } else {\n        return \"Player 2 wins\";\n    }\n}\n\n// Example usage\necho determineWinner(\"rock\", \"scissors\"); // Output: Player 1 wins\necho determineWinner(\"rock\", \"paper\");    // Output: Player 2 wins\necho determineWinner(\"paper\", \"paper\");   // Output: Draw\n\n?>\n```"
  },
  {
    "task": "Design a function that suggests a movie genre based on user mood.",
    "code": "```php\n<?php\n\nfunction suggestMovieGenre($mood) {\n    if ($mood === 'happy') {\n        return 'Comedy';\n    } elseif ($mood === 'sad') {\n        return 'Drama';\n    } elseif ($mood === 'excited') {\n        return 'Action';\n    } elseif ($mood === 'romantic') {\n        return 'Romance';\n    } elseif ($mood === 'scared') {\n        return 'Horror';\n    } else {\n        return 'Documentary';\n    }\n}\n\n?>\n```"
  },
  {
    "task": "Write a program that checks if a file extension is valid for an image file.",
    "code": "```php\n<?php\n\nfunction isValidImageExtension($filename) {\n    $validExtensions = ['jpg', 'jpeg', 'png', 'gif', 'bmp', 'webp'];\n    $extension = pathinfo($filename, PATHINFO_EXTENSION);\n    \n    if (in_array(strtolower($extension), $validExtensions)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n// Example usage\n$filename = 'example.png';\nif (isValidImageExtension($filename)) {\n    echo \"Valid image file extension.\";\n} else {\n    echo \"Invalid image file extension.\";\n}\n?>\n```"
  },
  {
    "task": "Create a routine that decides the appropriate currency symbol based on country.",
    "code": "```php\nfunction getCurrencySymbol($country) {\n    switch (strtolower($country)) {\n        case 'united states':\n        case 'usa':\n        case 'us':\n            return '$';\n        case 'united kingdom':\n        case 'uk':\n            return '\u00a3';\n        case 'europe':\n        case 'eu':\n            return '\u20ac';\n        case 'japan':\n            return '\u00a5';\n        case 'india':\n            return '\u20b9';\n        case 'china':\n            return '\u00a5';\n        case 'canada':\n            return 'C$';\n        case 'australia':\n            return 'A$';\n        case 'switzerland':\n            return 'CHF';\n        default:\n            return 'Unknown currency symbol';\n    }\n}\n```"
  },
  {
    "task": "Develop a function that determines if a string is a valid palindrome ignoring spaces and punctuation.",
    "code": "```php\nfunction isValidPalindrome($string) {\n    $processedString = preg_replace('/[^a-zA-Z0-9]/', '', strtolower($string));\n    $reversedString = strrev($processedString);\n    return $processedString === $reversedString;\n}\n```"
  },
  {
    "task": "Implement a program that checks if a number is in the Fibonacci sequence.",
    "code": "```php\n<?php\n\nfunction isFibonacci($n) {\n    if ($n < 0) return false;\n    $a = 0;\n    $b = 1;\n    while ($b < $n) {\n        $temp = $a + $b;\n        $a = $b;\n        $b = $temp;\n    }\n    return $b == $n || $n == 0;\n}\n\n// Example usage\n$number = 21; // Change this number to test other cases\nif (isFibonacci($number)) {\n    echo \"$number is in the Fibonacci sequence.\";\n} else {\n    echo \"$number is not in the Fibonacci sequence.\";\n}\n\n?>\n```"
  },
  {
    "task": "Design a script to calculate the correct tip based on service quality rating.",
    "code": "```php\n<?php\n\nfunction calculateTip($billAmount, $serviceQuality) {\n    $tipPercentage = 0;\n\n    switch (strtolower($serviceQuality)) {\n        case 'excellent':\n            $tipPercentage = 0.20;\n            break;\n        case 'good':\n            $tipPercentage = 0.15;\n            break;\n        case 'average':\n            $tipPercentage = 0.10;\n            break;\n        case 'poor':\n            $tipPercentage = 0.05;\n            break;\n        default:\n            $tipPercentage = 0.00;\n            break;\n    }\n\n    $tipAmount = $billAmount * $tipPercentage;\n    return $tipAmount;\n}\n\n$billAmount = 100; // Example bill amount\n$serviceQuality = 'good'; // Example service quality\n$tip = calculateTip($billAmount, $serviceQuality);\necho \"The tip amount is: $\" . number_format($tip, 2);\n?>\n```"
  },
  {
    "task": "Write a function that determines if a year is a century year.",
    "code": "```php\n<?php\n\nfunction isCenturyYear($year) {\n    if ($year % 100 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n```"
  },
  {
    "task": "Create a program that checks if a date falls on a weekend.",
    "code": "```php\nfunction isWeekend($date) {\n    $timestamp = strtotime($date);\n    $dayOfWeek = date('N', $timestamp);\n    return $dayOfWeek >= 6;\n}\n\n$date = '2023-10-15'; // Example date\nif (isWeekend($date)) {\n    echo \"The date falls on a weekend.\";\n} else {\n    echo \"The date does not fall on a weekend.\";\n}\n```"
  },
  {
    "task": "Develop a routine that suggests a book based on genre preference.",
    "code": "```php\n<?php\n\nfunction suggestBook($genre) {\n    $suggestion = '';\n\n    if ($genre === 'Science Fiction') {\n        $suggestion = 'Dune by Frank Herbert';\n    } elseif ($genre === 'Fantasy') {\n        $suggestion = 'The Hobbit by J.R.R. Tolkien';\n    } elseif ($genre === 'Mystery') {\n        $suggestion = 'The Da Vinci Code by Dan Brown';\n    } elseif ($genre === 'Romance') {\n        $suggestion = 'Pride and Prejudice by Jane Austen';\n    } elseif ($genre === 'Horror') {\n        $suggestion = 'It by Stephen King';\n    } else {\n        $suggestion = 'Unknown Genre. Please try a different genre.';\n    }\n\n    return $suggestion;\n}\n\n// Example usage:\necho suggestBook('Fantasy');\n```"
  },
  {
    "task": "Implement a system that determines if a student passes or fails based on their grades.",
    "code": "```php\n<?php\n\nfunction determinePassOrFail($grade) {\n    if ($grade >= 50) {\n        return \"Pass\";\n    } else {\n        return \"Fail\";\n    }\n}\n\n// Example usage\n$grade = 70;\n$result = determinePassOrFail($grade);\necho \"The student has \" . $result;\n\n?>\n```"
  },
  {
    "task": "Design a function to validate if a string is a valid URL.",
    "code": "```php\nfunction isValidURL($url) {\n    if (filter_var($url, FILTER_VALIDATE_URL)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n```"
  },
  {
    "task": "Write a program that checks if a point is inside a rectangle given its coordinates.",
    "code": "```php\nfunction isPointInsideRectangle($px, $py, $rx1, $ry1, $rx2, $ry2) {\n    if ($px >= min($rx1, $rx2) && $px <= max($rx1, $rx2) && $py >= min($ry1, $ry2) && $py <= max($ry1, $ry2)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n// Example usage:\n$pointX = 5;\n$pointY = 5;\n$rectX1 = 0;\n$rectY1 = 0;\n$rectX2 = 10;\n$rectY2 = 10;\n\n$isInside = isPointInsideRectangle($pointX, $pointY, $rectX1, $rectY1, $rectX2, $rectY2);\n\necho $isInside ? \"Inside\" : \"Outside\";\n```"
  },
  {
    "task": "Create a script to determine if a word can be constructed from a given set of letters.",
    "code": "```php\nfunction canConstructWord($word, $letters) {\n    $letterCount = array_count_values(str_split($letters));\n    foreach (str_split($word) as $char) {\n        if (!isset($letterCount[$char]) || $letterCount[$char] <= 0) {\n            return false;\n        }\n        $letterCount[$char]--;\n    }\n    return true;\n}\n\n// Example usage\n$word = \"hello\";\n$letters = \"eholol\";\n$result = canConstructWord($word, $letters);\necho $result ? \"Yes\" : \"No\";\n```"
  },
  {
    "task": "Develop a routine that calculates insurance premiums based on age and driving record.",
    "code": "```php\nfunction calculateInsurancePremium($age, $hasGoodDrivingRecord) {\n    if ($age < 18) {\n        return \"Not eligible for insurance\";\n    } elseif ($age >= 18 && $age <= 25) {\n        if ($hasGoodDrivingRecord) {\n            return 1000;\n        } else {\n            return 1500;\n        }\n    } elseif ($age > 25 && $age <= 40) {\n        if ($hasGoodDrivingRecord) {\n            return 800;\n        } else {\n            return 1200;\n        }\n    } else {\n        if ($hasGoodDrivingRecord) {\n            return 600;\n        } else {\n            return 900;\n        }\n    }\n}\n```"
  },
  {
    "task": "Implement a program that checks for palindrome sentences.",
    "code": "```php\n<?php\n\nfunction isPalindromeSentence($sentence) {\n    $processed = strtolower(preg_replace('/[^a-z0-9]/i', '', $sentence));\n    $reversed = strrev($processed);\n    \n    if ($processed === $reversed) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$sentence = \"A man, a plan, a canal, Panama\";\nif (isPalindromeSentence($sentence)) {\n    echo \"The sentence is a palindrome.\";\n} else {\n    echo \"The sentence is not a palindrome.\";\n}\n\n?>\n```"
  },
  {
    "task": "Design a function to evaluate if a string contains balanced parentheses.",
    "code": "```php\n<?php\nfunction areParenthesesBalanced($string) {\n    $balance = 0;\n    for ($i = 0; $i < strlen($string); $i++) {\n        if ($string[$i] === '(') {\n            $balance++;\n        } elseif ($string[$i] === ')') {\n            $balance--;\n        }\n        if ($balance < 0) {\n            return false;\n        }\n    }\n    return $balance === 0;\n}\n?>\n```"
  },
  {
    "task": "Write a program that suggests a pet based on living conditions and preferences.",
    "code": "```php\n<?php\n\nfunction suggestPet($livingSpace, $allergies, $activityLevel) {\n    if ($livingSpace == 'apartment') {\n        if ($allergies == 'yes') {\n            if ($activityLevel == 'low') {\n                return \"Consider a fish or reptile.\";\n            } else {\n                return \"Consider a hypoallergenic dog breed.\";\n            }\n        } else {\n            if ($activityLevel == 'low') {\n                return \"Consider a cat or small dog.\";\n            } else {\n                return \"Consider a small active dog.\";\n            }\n        }\n    } elseif ($livingSpace == 'house') {\n        if ($allergies == 'yes') {\n            if ($activityLevel == 'low') {\n                return \"Consider a hypoallergenic cat.\";\n            } else {\n                return \"Consider a hypoallergenic dog or active cat.\";\n            }\n        } else {\n            if ($activityLevel == 'low') {\n                return \"Consider a larger dog or cat.\";\n            } else {\n                return \"Consider an active dog or cat.\";\n            }\n        }\n    } else {\n        return \"Please provide valid living conditions.\";\n    }\n}\n\n// Example usage\necho suggestPet('apartment', 'no', 'high');\n\n?>\n```"
  },
  {
    "task": "Create a routine that determines if a phone number is valid based on format.",
    "code": "```php\nfunction isValidPhoneNumber($phoneNumber) {\n    // Define a regex pattern for a valid phone number format\n    $pattern = '/^\\+?[0-9]{1,4}?[-.\\s]?(\\(?\\d{1,3}?\\)?[-.\\s]?)?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}$/';\n\n    // Check if the phone number matches the pattern\n    if (preg_match($pattern, $phoneNumber)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n// Example usage\n$phoneNumber = \"+1-800-555-1234\";\nif (isValidPhoneNumber($phoneNumber)) {\n    echo \"The phone number is valid.\";\n} else {\n    echo \"The phone number is invalid.\";\n}\n```"
  },
  {
    "task": "Develop a function that checks if two rectangles overlap.",
    "code": "```php\nfunction doRectanglesOverlap($rect1, $rect2) {\n    if ($rect1['x1'] >= $rect2['x2'] || $rect2['x1'] >= $rect1['x2']) {\n        return false;\n    }\n    if ($rect1['y1'] >= $rect2['y2'] || $rect2['y1'] >= $rect1['y2']) {\n        return false;\n    }\n    return true;\n}\n\n// Example usage:\n$rect1 = ['x1' => 0, 'y1' => 0, 'x2' => 2, 'y2' => 2];\n$rect2 = ['x1' => 1, 'y1' => 1, 'x2' => 3, 'y2' => 3];\n\n$result = doRectanglesOverlap($rect1, $rect2);\n```"
  },
  {
    "task": "Implement a program that chooses a beverage based on user input time.",
    "code": "```php\n<?php\n\nfunction chooseBeverage($time) {\n    if ($time >= 5 && $time < 12) {\n        return \"Coffee\";\n    } elseif ($time >= 12 && $time < 17) {\n        return \"Tea\";\n    } elseif ($time >= 17 && $time < 21) {\n        return \"Juice\";\n    } else {\n        return \"Water\";\n    }\n}\n\n$userInputTime = 14; // Example input time\necho chooseBeverage($userInputTime);\n\n?>\n```"
  },
  {
    "task": "Design a script to determine if a URL is secure (HTTPS).",
    "code": "```php\n<?php\n\nfunction isSecureUrl($url) {\n    $parsedUrl = parse_url($url);\n    if (isset($parsedUrl['scheme']) && $parsedUrl['scheme'] === 'https') {\n        return true;\n    }\n    return false;\n}\n\n// Example usage\n$url = \"https://example.com\";\nif (isSecureUrl($url)) {\n    echo \"The URL is secure.\";\n} else {\n    echo \"The URL is not secure.\";\n}\n\n?>\n```"
  },
  {
    "task": "Write a function that outputs different messages based on the input number's divisibility.",
    "code": "```php\nfunction checkDivisibility($number) {\n    if ($number % 15 === 0) {\n        echo \"Divisible by both 3 and 5\";\n    } elseif ($number % 3 === 0) {\n        echo \"Divisible by 3\";\n    } elseif ($number % 5 === 0) {\n        echo \"Divisible by 5\";\n    } else {\n        echo \"Not divisible by 3 or 5\";\n    }\n}\n```"
  },
  {
    "task": "Create a program to decide if a person should bring an umbrella based on the weather forecast.",
    "code": "```php\n<?php\n\n$weatherForecast = \"rainy\"; // Possible values: \"sunny\", \"cloudy\", \"rainy\", \"stormy\"\n\nfunction shouldBringUmbrella($forecast) {\n    if ($forecast === \"rainy\" || $forecast === \"stormy\") {\n        return true;\n    } else {\n        return false;\n    }\n}\n\nif (shouldBringUmbrella($weatherForecast)) {\n    echo \"You should bring an umbrella.\";\n} else {\n    echo \"No need to bring an umbrella.\";\n}\n\n?>\n```"
  },
  {
    "task": "Develop a routine that checks if a chess move is valid.",
    "code": "```php\nfunction isValidChessMove($start, $end, $piece) {\n    $startFile = ord($start[0]) - ord('a');\n    $startRank = intval($start[1]) - 1;\n    $endFile = ord($end[0]) - ord('a');\n    $endRank = intval($end[1]) - 1;\n\n    $fileDiff = abs($startFile - $endFile);\n    $rankDiff = abs($startRank - $endRank);\n\n    switch (strtolower($piece)) {\n        case 'pawn':\n            if ($fileDiff === 0 && $rankDiff === 1) {\n                return true;\n            }\n            break;\n        case 'rook':\n            if ($fileDiff === 0 || $rankDiff === 0) {\n                return true;\n            }\n            break;\n        case 'knight':\n            if ($fileDiff * $rankDiff === 2) {\n                return true;\n            }\n            break;\n        case 'bishop':\n            if ($fileDiff === $rankDiff) {\n                return true;\n            }\n            break;\n        case 'queen':\n            if ($fileDiff === $rankDiff || $fileDiff === 0 || $rankDiff === 0) {\n                return true;\n            }\n            break;\n        case 'king':\n            if ($fileDiff <= 1 && $rankDiff <= 1) {\n                return true;\n            }\n            break;\n    }\n\n    return false;\n}\n```"
  },
  {
    "task": "Implement a program that outputs the number of days in a given month.",
    "code": "```php\n<?php\n\nfunction daysInMonth($month, $year) {\n    if ($month == 1 || $month == 3 || $month == 5 || $month == 7 || $month == 8 || $month == 10 || $month == 12) {\n        return 31;\n    } elseif ($month == 4 || $month == 6 || $month == 9 || $month == 11) {\n        return 30;\n    } elseif ($month == 2) {\n        if (($year % 4 == 0 && $year % 100 != 0) || ($year % 400 == 0)) {\n            return 29;\n        } else {\n            return 28;\n        }\n    } else {\n        return \"Invalid month\";\n    }\n}\n\necho daysInMonth(2, 2020); // Example usage\n?>\n```"
  },
  {
    "task": "Design a function that validates if a string is a valid hexadecimal number.",
    "code": "```php\nfunction isValidHex($string) {\n    if (preg_match('/^[0-9a-fA-F]+$/', $string)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n```"
  },
  {
    "task": "Write a script that checks if a word is present in a list of predefined words.",
    "code": "```php\n<?php\n\n$wordToCheck = \"example\"; // The word to check\n$predefinedWords = [\"apple\", \"banana\", \"example\", \"orange\"]; // List of predefined words\n\nif (in_array($wordToCheck, $predefinedWords)) {\n    echo \"The word is present in the list.\";\n} else {\n    echo \"The word is not present in the list.\";\n}\n\n?>\n```"
  },
  {
    "task": "Create a routine to decide the correct tax bracket for a given income.",
    "code": "```php\nfunction getTaxBracket($income) {\n    if ($income <= 10000) {\n        return \"Low\";\n    } elseif ($income <= 40000) {\n        return \"Medium\";\n    } elseif ($income <= 100000) {\n        return \"High\";\n    } else {\n        return \"Very High\";\n    }\n}\n\n// Example usage:\n$income = 55000;\necho getTaxBracket($income);\n```"
  },
  {
    "task": "Develop a function that determines if a point is within a triangle.",
    "code": "```php\n<?php\nfunction isPointInTriangle($px, $py, $ax, $ay, $bx, $by, $cx, $cy) {\n    $area = 0.5 * (-$by * $cx + $ay * (-$bx + $cx) + $ax * ($by - $cy) + $bx * $cy);\n    $s = 1 / (2 * $area) * ($ay * $cx - $ax * $cy + ($cy - $ay) * $px + ($ax - $cx) * $py);\n    $t = 1 / (2 * $area) * ($ax * $by - $ay * $bx + ($ay - $by) * $px + ($bx - $ax) * $py);\n    $u = 1 - $s - $t;\n    \n    if ($s > 0 && $t > 0 && $u > 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n?>\n```"
  },
  {
    "task": "Implement a program that checks if a given string is a valid binary number.",
    "code": "```php\nfunction isValidBinary($string) {\n    for ($i = 0; $i < strlen($string); $i++) {\n        if ($string[$i] !== '0' && $string[$i] !== '1') {\n            return false;\n        }\n    }\n    return true;\n}\n\n// Example usage:\n$input = \"101010\";\nif (isValidBinary($input)) {\n    echo \"The string is a valid binary number.\";\n} else {\n    echo \"The string is not a valid binary number.\";\n}\n```"
  },
  {
    "task": "Design a system to evaluate the risk level of an investment based on criteria.",
    "code": "```php\nfunction evaluateInvestmentRisk($investmentAmount, $duration, $marketVolatility) {\n    $riskLevel = '';\n\n    if ($investmentAmount > 100000) {\n        if ($duration < 1) {\n            $riskLevel = 'High Risk';\n        } elseif ($marketVolatility > 5) {\n            $riskLevel = 'Medium Risk';\n        } else {\n            $riskLevel = 'Low Risk';\n        }\n    } elseif ($investmentAmount > 50000) {\n        if ($marketVolatility > 7) {\n            $riskLevel = 'High Risk';\n        } else {\n            $riskLevel = 'Medium Risk';\n        }\n    } else {\n        if ($duration < 2) {\n            $riskLevel = 'Medium Risk';\n        } else {\n            $riskLevel = 'Low Risk';\n        }\n    }\n\n    return $riskLevel;\n}\n\n// Example usage\n$risk = evaluateInvestmentRisk(75000, 1.5, 6);\necho \"The investment is considered: $risk\";\n```"
  },
  {
    "task": "Write a program that suggests a vacation destination based on budget and preferences.",
    "code": "```php\n<?php\n\nfunction suggestDestination($budget, $preference) {\n    if ($budget < 500) {\n        if ($preference === 'beach') {\n            return 'Consider visiting a local beach nearby.';\n        } elseif ($preference === 'mountains') {\n            return 'Explore the nearby mountains.';\n        } else {\n            return 'Visit a local city for a short trip.';\n        }\n    } elseif ($budget >= 500 && $budget < 1500) {\n        if ($preference === 'beach') {\n            return 'A beach vacation in Florida might be nice.';\n        } elseif ($preference === 'mountains') {\n            return 'Consider the Rockies for a mountain escape.';\n        } else {\n            return 'How about a city tour in New York?';\n        }\n    } else {\n        if ($preference === 'beach') {\n            return 'Consider the beaches of Hawaii.';\n        } elseif ($preference === 'mountains') {\n            return 'The Alps could be a great destination.';\n        } else {\n            return 'Explore the rich culture of Tokyo.';\n        }\n    }\n}\n\n// Example usage:\n$budget = 1000;\n$preference = 'beach';\necho suggestDestination($budget, $preference);\n\n?>\n```"
  },
  {
    "task": "Create a routine that checks if a username is already taken in a database.",
    "code": "```php\n<?php\n\nfunction isUsernameTaken($username, $pdo) {\n    $stmt = $pdo->prepare(\"SELECT COUNT(*) FROM users WHERE username = :username\");\n    $stmt->execute(['username' => $username]);\n    $count = $stmt->fetchColumn();\n    \n    return $count > 0;\n}\n\n// Example usage:\n// Assuming $pdo is a valid PDO instance connected to the database\n// $username = \"exampleUser\";\n// if (isUsernameTaken($username, $pdo)) {\n//     echo \"Username is already taken.\";\n// } else {\n//     echo \"Username is available.\";\n// }\n?>\n```"
  },
  {
    "task": "Develop a function that determines if a string is a valid IPv4 address.",
    "code": "```php\nfunction isValidIPv4($ip) {\n    $parts = explode('.', $ip);\n    if (count($parts) !== 4) {\n        return false;\n    }\n    foreach ($parts as $part) {\n        if (!is_numeric($part) || (int)$part < 0 || (int)$part > 255 || (string)(int)$part !== $part) {\n            return false;\n        }\n    }\n    return true;\n}\n```"
  },
  {
    "task": "Implement a program to decide which transportation method is quickest based on distance.",
    "code": "```php\n<?php\n\nfunction quickestTransportation($distance) {\n    if ($distance < 1) {\n        return \"Walking is the quickest method.\";\n    } elseif ($distance >= 1 && $distance < 5) {\n        return \"Biking is the quickest method.\";\n    } elseif ($distance >= 5 && $distance < 20) {\n        return \"Driving is the quickest method.\";\n    } else {\n        return \"Flying is the quickest method.\";\n    }\n}\n\n// Example usage:\n$distance = 10;\necho quickestTransportation($distance);\n\n?>\n```"
  },
  {
    "task": "Design a script to validate if a number is a prime number.",
    "code": "```php\nfunction isPrime($number) {\n    if ($number <= 1) {\n        return false;\n    }\n    if ($number <= 3) {\n        return true;\n    }\n    if ($number % 2 == 0 || $number % 3 == 0) {\n        return false;\n    }\n    for ($i = 5; $i * $i <= $number; $i += 6) {\n        if ($number % $i == 0 || $number % ($i + 2) == 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$number = 29; // Change this to any number you want to check\nif (isPrime($number)) {\n    echo \"$number is a prime number.\";\n} else {\n    echo \"$number is not a prime number.\";\n}\n```"
  },
  {
    "task": "Write a function that checks if a number is divisible by another number without remainder.",
    "code": "```php\nfunction isDivisible($num, $divisor) {\n    if ($divisor == 0) {\n        return false;\n    }\n    return $num % $divisor === 0;\n}\n```"
  },
  {
    "task": "Create a program that determines the type of a quadrilateral based on side lengths.",
    "code": "```php\n<?php\n\nfunction determineQuadrilateralType($a, $b, $c, $d) {\n    if ($a <= 0 || $b <= 0 || $c <= 0 || $d <= 0) {\n        return \"Invalid side lengths\";\n    }\n    \n    if ($a == $b && $b == $c && $c == $d) {\n        return \"Square\";\n    }\n    \n    if ($a == $c && $b == $d) {\n        return \"Rectangle\";\n    }\n    \n    return \"Other quadrilateral\";\n}\n\necho determineQuadrilateralType(5, 5, 5, 5) . \"\\n\"; // Square\necho determineQuadrilateralType(5, 10, 5, 10) . \"\\n\"; // Rectangle\necho determineQuadrilateralType(5, 10, 5, 8) . \"\\n\"; // Other quadrilateral\necho determineQuadrilateralType(-5, 10, 5, 8) . \"\\n\"; // Invalid side lengths\n\n?>\n```"
  },
  {
    "task": "Develop a routine to check if a sentence contains all letters of the alphabet.",
    "code": "```php\nfunction containsAllLetters($sentence) {\n    $alphabet = range('a', 'z');\n    $sentenceLower = strtolower($sentence);\n    \n    foreach ($alphabet as $letter) {\n        if (strpos($sentenceLower, $letter) === false) {\n            return false;\n        }\n    }\n    return true;\n}\n\n// Example usage\n$sentence = \"The quick brown fox jumps over the lazy dog\";\n$result = containsAllLetters($sentence);\necho $result ? \"Contains all letters\" : \"Does not contain all letters\";\n```"
  },
  {
    "task": "Implement a program that outputs the appropriate error message based on an error code.",
    "code": "```php\n<?php\n\nfunction getErrorMessage($errorCode) {\n    if ($errorCode == 1) {\n        return \"Error 1: Invalid input.\";\n    } elseif ($errorCode == 2) {\n        return \"Error 2: Connection failed.\";\n    } elseif ($errorCode == 3) {\n        return \"Error 3: Access denied.\";\n    } elseif ($errorCode == 4) {\n        return \"Error 4: Resource not found.\";\n    } else {\n        return \"Unknown error code.\";\n    }\n}\n\n$errorCode = 2; // Example error code\necho getErrorMessage($errorCode);\n\n?>\n```"
  },
  {
    "task": "Design a function that categorizes a movie rating as G, PG, PG-13, or R.",
    "code": "```php\nfunction categorizeMovieRating($rating) {\n    if ($rating >= 0 && $rating <= 12) {\n        return 'G';\n    } elseif ($rating >= 13 && $rating <= 16) {\n        return 'PG';\n    } elseif ($rating >= 17 && $rating <= 20) {\n        return 'PG-13';\n    } elseif ($rating > 20) {\n        return 'R';\n    } else {\n        return 'Invalid rating';\n    }\n}\n```"
  },
  {
    "task": "Write a script to check if a string is a valid Roman numeral.",
    "code": "```php\n<?php\n\nfunction isValidRomanNumeral($str) {\n    $pattern = '/^(?=[MDCLXVI])M{0,4}(CM|CD|D?C{0,3})(XC|XL|L?X{0,3})(IX|IV|V?I{0,3})$/';\n    return preg_match($pattern, $str) === 1;\n}\n\n// Example usage\n$input = \"XIV\";\nif (isValidRomanNumeral($input)) {\n    echo \"$input is a valid Roman numeral.\";\n} else {\n    echo \"$input is not a valid Roman numeral.\";\n}\n\n?>\n```"
  },
  {
    "task": "Create a routine that decides if a person can retire based on age and years worked.",
    "code": "```php\nfunction canRetire($age, $yearsWorked) {\n    if ($age >= 65 || $yearsWorked >= 30) {\n        return true;\n    } elseif ($age >= 60 && $yearsWorked >= 25) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n// Example usage\n$age = 62;\n$yearsWorked = 28;\n$retirementEligibility = canRetire($age, $yearsWorked);\necho $retirementEligibility ? \"Eligible for retirement\" : \"Not eligible for retirement\";\n```"
  },
  {
    "task": "Develop a function that outputs a different emoji based on user mood input.",
    "code": "```php\nfunction getEmojiByMood($mood) {\n    switch ($mood) {\n        case 'happy':\n            return '\ud83d\ude0a';\n        case 'sad':\n            return '\ud83d\ude22';\n        case 'angry':\n            return '\ud83d\ude21';\n        case 'excited':\n            return '\ud83d\ude06';\n        case 'nervous':\n            return '\ud83d\ude2c';\n        default:\n            return '\ud83e\udd14';\n    }\n}\n```"
  },
  {
    "task": "Implement a program that checks if a password meets security requirements.",
    "code": "```php\n<?php\n\nfunction checkPasswordSecurity($password) {\n    $hasUppercase = preg_match('/[A-Z]/', $password);\n    $hasLowercase = preg_match('/[a-z]/', $password);\n    $hasNumber = preg_match('/[0-9]/', $password);\n    $hasSpecialChar = preg_match('/[\\W]/', $password);\n    $isLongEnough = strlen($password) >= 8;\n\n    if ($hasUppercase && $hasLowercase && $hasNumber && $hasSpecialChar && $isLongEnough) {\n        return \"Password is secure.\";\n    } else {\n        return \"Password does not meet security requirements.\";\n    }\n}\n\n$password = \"Example123!\";\necho checkPasswordSecurity($password);\n\n?>\n```"
  },
  {
    "task": "Design a script to determine if a number is a palindrome when reversed.",
    "code": "```php\n<?php\n\nfunction isPalindrome($number) {\n    $original = strval($number);\n    $reversed = strrev($original);\n    \n    if ($original === $reversed) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n// Example usage\n$number = 12321;\nif (isPalindrome($number)) {\n    echo \"$number is a palindrome.\";\n} else {\n    echo \"$number is not a palindrome.\";\n}\n\n?>\n```"
  },
  {
    "task": "Write a function that evaluates if a given day is a holiday.",
    "code": "```php\nfunction isHoliday($day) {\n    $holidays = ['New Year\\'s Day', 'Christmas Day', 'Independence Day'];\n    if (in_array($day, $holidays)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n```"
  },
  {
    "task": "Create a program to decide if a library book is overdue based on the due date.",
    "code": "```php\n<?php\n\nfunction isBookOverdue($dueDate) {\n    $currentDate = new DateTime();\n    $dueDate = new DateTime($dueDate);\n\n    if ($currentDate > $dueDate) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n// Example usage:\n$dueDate = '2023-10-15';\nif (isBookOverdue($dueDate)) {\n    echo \"The book is overdue.\";\n} else {\n    echo \"The book is not overdue.\";\n}\n\n?>\n```"
  },
  {
    "task": "Develop a routine that checks if a given year is part of a leap century.",
    "code": "```php\nfunction isLeapCentury($year) {\n    if ($year % 100 == 0 && $year % 400 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n// Example usage:\n$year = 2000;\nif (isLeapCentury($year)) {\n    echo \"$year is a leap century.\";\n} else {\n    echo \"$year is not a leap century.\";\n}\n```"
  },
  {
    "task": "Implement a system to determine the correct category for a product based on user input.",
    "code": "```php\n<?php\n\nfunction getProductCategory($productType) {\n    if ($productType == \"Electronics\") {\n        return \"Category: Electronics\";\n    } elseif ($productType == \"Clothing\") {\n        return \"Category: Clothing\";\n    } elseif ($productType == \"Books\") {\n        return \"Category: Books\";\n    } elseif ($productType == \"Furniture\") {\n        return \"Category: Furniture\";\n    } else {\n        return \"Category: Other\";\n    }\n}\n\n// Example usage:\n$userInput = \"Books\";\necho getProductCategory($userInput);\n\n?>\n```"
  }
]