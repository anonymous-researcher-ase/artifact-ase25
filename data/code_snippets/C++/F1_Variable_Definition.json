[
  {
    "task": "Define an integer variable and assign it a value.",
    "code": "```cpp\nint myVariable = 42;\n```"
  },
  {
    "task": "Create a string variable to store your full name.",
    "code": "```cpp\n#include <string>\n\nint main() {\n    std::string fullName = \"Your Full Name\";\n    return 0;\n}\n```"
  },
  {
    "task": "Define a boolean variable to represent if a feature is enabled.",
    "code": "```cpp\nbool isFeatureEnabled;\n```"
  },
  {
    "task": "Declare a floating-point variable for storing temperature in Celsius.",
    "code": "```cpp\nfloat temperatureCelsius;\n```"
  },
  {
    "task": "Create a variable to hold the current date and time.",
    "code": "```cpp\n#include <iostream>\n#include <ctime>\n\nint main() {\n    std::time_t currentTime = std::time(nullptr);\n    std::cout << \"Current date and time: \" << std::ctime(&currentTime);\n    return 0;\n}\n```"
  },
  {
    "task": "Define a list variable to store a collection of favorite book titles.",
    "code": "```cpp\n#include <vector>\n#include <string>\n\nint main() {\n    std::vector<std::string> favoriteBooks;\n    return 0;\n}\n```"
  },
  {
    "task": "Create a dictionary variable to map student names to their grades.",
    "code": "```cpp\n#include <iostream>\n#include <map>\n#include <string>\n\nint main() {\n    std::map<std::string, char> studentGrades;\n\n    // Example of adding entries to the dictionary\n    studentGrades[\"Alice\"] = 'A';\n    studentGrades[\"Bob\"] = 'B';\n    studentGrades[\"Charlie\"] = 'C';\n\n    return 0;\n}\n```"
  },
  {
    "task": "Declare a constant variable to represent the mathematical value of pi.",
    "code": "```cpp\nconst double pi = 3.141592653589793;\n```"
  },
  {
    "task": "Define a variable to store the user's age and ensure it is an integer.",
    "code": "```cpp\nint userAge;\n```"
  },
  {
    "task": "Create a variable to hold a complex number.",
    "code": "```cpp\n#include <complex>\n\nint main() {\n    std::complex<double> complexNumber;\n    return 0;\n}\n```"
  },
  {
    "task": "Define a variable to store a multiline text as a string.",
    "code": "```cpp\n#include <string>\n\nint main() {\n    std::string multilineText = R\"(This is a \nmultiline\ntext.)\";\n    return 0;\n}\n```"
  },
  {
    "task": "Declare a variable to store a person's height in meters as a floating-point number.",
    "code": "```cpp\nfloat personHeightInMeters;\n```"
  },
  {
    "task": "Define a variable to hold the result of a mathematical expression.",
    "code": "```cpp\n#include <iostream>\n\nint main() {\n    double result = (5.0 * 3.0) + (2.0 / 4.0) - 7.0;\n    std::cout << \"The result is: \" << result << std::endl;\n    return 0;\n}\n```"
  },
  {
    "task": "Create a variable to store a person's favorite color.",
    "code": "```cpp\n#include <string>\n\nint main() {\n    std::string favoriteColor;\n    return 0;\n}\n```"
  },
  {
    "task": "Declare a variable to store the number of items in a shopping cart.",
    "code": "```cpp\nint numberOfItemsInCart;\n```"
  },
  {
    "task": "Define a variable to store a user\u2019s last login timestamp.",
    "code": "```cpp\n#include <iostream>\n\nint main() {\n    long long lastLoginTimestamp;\n    return 0;\n}\n```"
  },
  {
    "task": "Create a variable to hold a function reference.",
    "code": "```cpp\n#include <iostream>\n#include <functional>\n\nvoid exampleFunction() {\n    std::cout << \"Function called!\" << std::endl;\n}\n\nint main() {\n    std::function<void()> funcRef = exampleFunction;\n    funcRef();\n    return 0;\n}\n```"
  },
  {
    "task": "Declare a variable to store a configuration setting.",
    "code": "```cpp\n#include <string>\n\nint main() {\n    std::string configSetting;\n    return 0;\n}\n```"
  },
  {
    "task": "Define a variable to keep track of a player's score in a game.",
    "code": "```cpp\nint playerScore;\n```"
  },
  {
    "task": "Create a variable to store a list of prime numbers.",
    "code": "```cpp\n#include <vector>\n\nint main() {\n    std::vector<int> primeNumbers;\n    return 0;\n}\n```"
  },
  {
    "task": "Declare a variable to represent the state of a light switch (on/off).",
    "code": "```cpp\nbool isLightSwitchOn;\n```"
  },
  {
    "task": "Define a variable to store an email address.",
    "code": "```cpp\n#include <string>\n\nint main() {\n    std::string emailAddress;\n    return 0;\n}\n```"
  },
  {
    "task": "Create a variable to hold the URL of a website.",
    "code": "```cpp\n#include <string>\n\nint main() {\n    std::string websiteURL = \"http://www.example.com\";\n    return 0;\n}\n```"
  },
  {
    "task": "Declare a variable to store the status of a network connection.",
    "code": "```cpp\nbool networkConnectionStatus;\n```"
  },
  {
    "task": "Define a variable to hold the result of a database query.",
    "code": "```cpp\n#include <string>\n\nint main() {\n    std::string queryResult;\n    return 0;\n}\n```"
  },
  {
    "task": "Create a variable to store the dimensions of a rectangle.",
    "code": "```cpp\n#include <iostream>\n\nint main() {\n    int width = 0;\n    int height = 0;\n    \n    return 0;\n}\n```"
  },
  {
    "task": "Declare a variable to hold the name of a file to be opened.",
    "code": "```cpp\n#include <string>\n\nint main() {\n    std::string fileName;\n    return 0;\n}\n```"
  },
  {
    "task": "Define a variable to store a person's phone number.",
    "code": "```cpp\n#include <string>\n\nint main() {\n    std::string phoneNumber;\n    return 0;\n}\n```"
  },
  {
    "task": "Create a variable to store the total cost of items in a cart.",
    "code": "```cpp\ndouble totalCost;\n```"
  },
  {
    "task": "Declare a variable to store a list of to-do tasks.",
    "code": "```cpp\n#include <vector>\n#include <string>\n\nint main() {\n    std::vector<std::string> todoTasks;\n    return 0;\n}\n```"
  },
  {
    "task": "Define a variable to hold a user's profile information.",
    "code": "```cpp\n#include <string>\n\nstruct UserProfile {\n    std::string name;\n    int age;\n    std::string email;\n};\n\nint main() {\n    UserProfile user;\n    user.name = \"John Doe\";\n    user.age = 30;\n    user.email = \"johndoe@example.com\";\n    \n    return 0;\n}\n```"
  },
  {
    "task": "Create a variable to store an array of sensor readings.",
    "code": "```cpp\n#include <iostream>\n\nint main() {\n    const int numReadings = 10;\n    double sensorReadings[numReadings];\n\n    // Example of initializing the array\n    for (int i = 0; i < numReadings; ++i) {\n        sensorReadings[i] = 0.0;\n    }\n\n    return 0;\n}\n```"
  },
  {
    "task": "Declare a variable to represent the number of attempts a user has to log in.",
    "code": "```cpp\nint loginAttempts;\n```"
  },
  {
    "task": "Define a variable to store the maximum capacity of a container.",
    "code": "```cpp\nint maxCapacity;\n```"
  },
  {
    "task": "Create a variable to store a list of city names.",
    "code": "```cpp\n#include <vector>\n#include <string>\n\nint main() {\n    std::vector<std::string> cityNames;\n    return 0;\n}\n```"
  },
  {
    "task": "Declare a variable to hold the age of a historical artifact.",
    "code": "```cpp\nint artifactAge;\n```"
  },
  {
    "task": "Define a variable to store an error message.",
    "code": "```cpp\n#include <string>\n\nint main() {\n    std::string errorMessage;\n    return 0;\n}\n```"
  },
  {
    "task": "Create a variable to hold the value of a currency conversion rate.",
    "code": "```cpp\ndouble conversionRate;\n```"
  },
  {
    "task": "Declare a variable to store the result of a coin toss (heads/tails).",
    "code": "```cpp\n#include <string>\n\nint main() {\n    std::string coinTossResult;\n    return 0;\n}\n```"
  },
  {
    "task": "Define a variable to track the number of likes on a post.",
    "code": "```cpp\nint numberOfLikes = 0;\n```"
  },
  {
    "task": "Create a variable to hold the settings of a user's preferences.",
    "code": "```cpp\n#include <string>\n\nint main() {\n    struct UserPreferences {\n        bool darkMode;\n        std::string language;\n        int fontSize;\n    };\n\n    UserPreferences settings;\n\n    return 0;\n}\n```"
  },
  {
    "task": "Declare a variable to store a person's birthdate.",
    "code": "```cpp\n#include <string>\n\nint main() {\n    std::string birthdate;\n    return 0;\n}\n```"
  },
  {
    "task": "Define a variable to represent a chess piece's position on a board.",
    "code": "```cpp\n#include <iostream>\n#include <string>\n\nint main() {\n    std::string chessPiecePosition = \"e4\";\n    std::cout << \"Chess piece position: \" << chessPiecePosition << std::endl;\n    return 0;\n}\n```"
  },
  {
    "task": "Create a variable to store the number of pages in a book.",
    "code": "```cpp\nint numberOfPages;\n```"
  },
  {
    "task": "Declare a variable to store the highest score achieved in a game.",
    "code": "```cpp\nint highestScore;\n```"
  },
  {
    "task": "Define a variable to store a list of ingredients for a recipe.",
    "code": "```cpp\n#include <vector>\n#include <string>\n\nint main() {\n    std::vector<std::string> ingredients;\n    return 0;\n}\n```"
  },
  {
    "task": "Create a variable to store the speed of a vehicle in km/h.",
    "code": "```cpp\nint main() {\n    double vehicleSpeedKmH;\n    return 0;\n}\n```"
  },
  {
    "task": "Declare a variable to hold a person's middle initial.",
    "code": "```cpp\nchar middleInitial;\n```"
  },
  {
    "task": "Define a variable to store the result of a temperature conversion.",
    "code": "```cpp\n#include <iostream>\n\nint main() {\n    double temperatureCelsius = 25.0; // Example temperature in Celsius\n    double temperatureFahrenheit = (temperatureCelsius * 9.0/5.0) + 32.0; // Conversion to Fahrenheit\n    \n    std::cout << \"Temperature in Fahrenheit: \" << temperatureFahrenheit << std::endl;\n    \n    return 0;\n}\n```"
  },
  {
    "task": "Create a variable to hold a list of registered usernames.",
    "code": "```cpp\n#include <vector>\n#include <string>\n\nint main() {\n    std::vector<std::string> registeredUsernames;\n    return 0;\n}\n```"
  },
  {
    "task": "Declare a variable to store the name of a country.",
    "code": "```cpp\n#include <string>\n\nint main() {\n    std::string countryName;\n    return 0;\n}\n```"
  },
  {
    "task": "Define a variable to track the number of visits to a website.",
    "code": "```cpp\nint numberOfVisits = 0;\n```"
  },
  {
    "task": "Create a variable to store the title of a movie.",
    "code": "```cpp\n#include <string>\n\nint main() {\n    std::string movieTitle;\n    return 0;\n}\n```"
  },
  {
    "task": "Declare a variable to hold the result of a random number generator.",
    "code": "```cpp\n#include <cstdlib>\n\nint main() {\n    int randomNumber;\n    return 0;\n}\n```"
  },
  {
    "task": "Define a variable to store a binary value.",
    "code": "```cpp\nbool binaryValue;\n```"
  },
  {
    "task": "Create a variable to store a student's attendance record.",
    "code": "```cpp\n#include <string>\n\nint main() {\n    std::string studentAttendanceRecord;\n    return 0;\n}\n```"
  },
  {
    "task": "Declare a variable to represent a traffic light's color.",
    "code": "```cpp\n#include <string>\n\nint main() {\n    std::string trafficLightColor;\n    return 0;\n}\n```"
  },
  {
    "task": "Define a variable to store a person's occupation.",
    "code": "```cpp\n#include <string>\n\nint main() {\n    std::string occupation;\n    return 0;\n}\n```"
  },
  {
    "task": "Create a variable to store the volume level of an audio player.",
    "code": "```cpp\nint volumeLevel;\n```"
  },
  {
    "task": "Declare a variable to store the dimensions of a 3D object.",
    "code": "```cpp\nstruct Dimensions {\n    double length;\n    double width;\n    double height;\n};\n\nDimensions objectDimensions;\n```"
  },
  {
    "task": "Define a variable to hold the value of a stock price.",
    "code": "```cpp\ndouble stockPrice;\n```"
  },
  {
    "task": "Create a variable to store a list of holiday destinations.",
    "code": "```cpp\n#include <vector>\n#include <string>\n\nint main() {\n    std::vector<std::string> holidayDestinations;\n    return 0;\n}\n```"
  },
  {
    "task": "Declare a variable to store the status of an application process.",
    "code": "```cpp\nbool applicationProcessStatus;\n```"
  },
  {
    "task": "Define a variable to store the current phase of the moon.",
    "code": "```cpp\n#include <string>\n\nint main() {\n    std::string currentMoonPhase;\n    return 0;\n}\n```"
  },
  {
    "task": "Create a variable to hold the amount of memory used by an application.",
    "code": "```cpp\n#include <iostream>\n\nint main() {\n    size_t memoryUsed;\n    return 0;\n}\n```"
  },
  {
    "task": "Declare a variable to store the current version of a software application.",
    "code": "```cpp\nstd::string currentVersion;\n```"
  },
  {
    "task": "Define a variable to hold the number of chapters in a book.",
    "code": "```cpp\nint numberOfChapters;\n```"
  },
  {
    "task": "Create a variable to store information about a car's fuel efficiency.",
    "code": "```cpp\ndouble carFuelEfficiency;\n```"
  },
  {
    "task": "Declare a variable to store a user's role in a system.",
    "code": "```cpp\nstd::string userRole;\n```"
  },
  {
    "task": "Define a variable to store a list of programming languages known.",
    "code": "```cpp\n#include <vector>\n#include <string>\n\nint main() {\n    std::vector<std::string> programmingLanguages;\n    return 0;\n}\n```"
  },
  {
    "task": "Create a variable to track the progress of a download.",
    "code": "```cpp\n#include <iostream>\n\nint main() {\n    double downloadProgress = 0.0;\n    std::cout << \"Download progress: \" << downloadProgress << \"%\" << std::endl;\n    return 0;\n}\n```"
  },
  {
    "task": "Declare a variable to store the outcome of a survey question.",
    "code": "```cpp\n#include <iostream>\n#include <string>\n\nint main() {\n    std::string surveyOutcome;\n    return 0;\n}\n```"
  },
  {
    "task": "Define a variable to hold a personal identification number.",
    "code": "```cpp\nint personalIdentificationNumber;\n```"
  },
  {
    "task": "Create a variable to store the current weather conditions.",
    "code": "```cpp\n#include <string>\n\nint main() {\n    std::string currentWeatherConditions;\n    return 0;\n}\n```"
  },
  {
    "task": "Declare a variable to hold the result of a multiplication operation.",
    "code": "```cpp\nint result;\n```"
  },
  {
    "task": "Define a variable to store the winner of a competition.",
    "code": "```cpp\n#include <string>\n\nint main() {\n    std::string winner;\n    return 0;\n}\n```"
  },
  {
    "task": "Create a variable to hold the name of a restaurant.",
    "code": "```cpp\n#include <string>\n\nint main() {\n    std::string restaurantName;\n    return 0;\n}\n```"
  },
  {
    "task": "Declare a variable to store the number of floors in a building.",
    "code": "```cpp\nint numberOfFloors;\n```"
  },
  {
    "task": "Define a variable to store a person's signature.",
    "code": "```cpp\n#include <string>\n\nint main() {\n    std::string signature;\n    return 0;\n}\n```"
  },
  {
    "task": "Create a variable to store the average grade of a class.",
    "code": "```cpp\n#include <iostream>\n\nint main() {\n    double averageGrade;\n    return 0;\n}\n```"
  },
  {
    "task": "Declare a variable to store the length of a movie in minutes.",
    "code": "```cpp\nint movieLengthInMinutes;\n```"
  },
  {
    "task": "Define a variable to store the details of a meeting schedule.",
    "code": "```cpp\n#include <string>\n\nstruct MeetingSchedule {\n    std::string meetingTitle;\n    std::string date;\n    std::string time;\n    std::string location;\n    std::string participants;\n};\n\nint main() {\n    MeetingSchedule meeting;\n    return 0;\n}\n```"
  },
  {
    "task": "Create a variable to track the number of active users on a platform.",
    "code": "```cpp\nint activeUsers = 0;\n```"
  },
  {
    "task": "Declare a variable to store the resolution of a screen.",
    "code": "```cpp\nint screenResolution;\n```"
  },
  {
    "task": "Define a variable to store the content of a blog post.",
    "code": "```cpp\n#include <string>\n\nint main() {\n    std::string blogPostContent;\n    return 0;\n}\n```"
  },
  {
    "task": "Create a variable to hold a list of email contacts.",
    "code": "```cpp\n#include <vector>\n#include <string>\n\nint main() {\n    std::vector<std::string> emailContacts;\n    return 0;\n}\n```"
  },
  {
    "task": "Declare a variable to store the duration of an event.",
    "code": "```cpp\nint eventDuration;\n```"
  },
  {
    "task": "Define a variable to hold a list of completed tasks.",
    "code": "```cpp\n#include <vector>\n#include <string>\n\nint main() {\n    std::vector<std::string> completedTasks;\n    return 0;\n}\n```"
  },
  {
    "task": "Create a variable to store the name of a musical instrument.",
    "code": "```cpp\n#include <string>\n\nint main() {\n    std::string musicalInstrumentName;\n    return 0;\n}\n```"
  },
  {
    "task": "Declare a variable to hold the result of a boolean expression.",
    "code": "```cpp\nbool result;\n```"
  },
  {
    "task": "Define a variable to store the name of a planet.",
    "code": "```cpp\n#include <string>\n\nint main() {\n    std::string planetName;\n    return 0;\n}\n```"
  },
  {
    "task": "Create a variable to store the balance of a bank account.",
    "code": "```cpp\ndouble accountBalance;\n```"
  },
  {
    "task": "Declare a variable to store the outcome of a dice roll.",
    "code": "```cpp\nint diceRollOutcome;\n```"
  },
  {
    "task": "Define a variable to store the current exchange rate.",
    "code": "```cpp\ndouble currentExchangeRate;\n```"
  },
  {
    "task": "Create a variable to hold the name of a university.",
    "code": "```cpp\n#include <string>\n\nint main() {\n    std::string universityName;\n    return 0;\n}\n```"
  }
]