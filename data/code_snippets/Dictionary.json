{
    "Rust Dictionary": "let mut map = HashMap::new();\nmap.insert(\"one\", 1);\nmap.insert(\"two\", 2);",
    "JavaScript Dictionary": "let dictionary = {\n    \"one\": 1,\n    \"two\": 2,\n    \"three\": 3,\n    \"four\": 4,\n    \"five\": 5\n};",
    "Python Dictionary": "dct = {\"one\": 1, \"two\": 2, \"three\": 3, \"four\": 4, \"five\": 5}\n",
    "Java Dictionary": "Map<String, Integer> map = new HashMap<>();\nmap.put(\"one\", 1);\nmap.put(\"two\", 2);",
    "Kotlin Dictionary": "val map = mapOf(\"one\" to 1, \"two\" to 2, \"three\" to 3, \"four\" to 4, \"five\" to 5)\n",
    "C++ Dictionary": "map<string, int> m = {{\"one\", 1}, {\"two\", 2}, {\"three\", 3}, {\"four\", 4}, {\"five\", 5}};",
    "Haskell Dictionary": "let dict = Map.fromList [(\"one\", 1), (\"two\", 2), (\"three\", 3), (\"four\", 4), (\"five\", 5)] :: Map.Map String Int",
    "C Dictionary": "char *keys[MAX_SIZE / 2];\nint values[MAX_SIZE / 2];\nfor (int i = 0; i < MAX_SIZE / 2; i++)\n{\n    char key[10];\n    sprintf(key, \"Key%d\", i);\n    keys[i] = strdup(key);\n    values[i] = i * 4;\n}"
}