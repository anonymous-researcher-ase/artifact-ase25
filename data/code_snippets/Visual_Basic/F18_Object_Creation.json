[
  {
    "task": "Create a new instance of a class that represents a book, with properties for title, author, and ISBN number.",
    "code": "```vb\nPublic Class Book\n    Public Property Title As String\n    Public Property Author As String\n    Public Property ISBN As String\n\n    Public Sub New(ByVal title As String, ByVal author As String, ByVal isbn As String)\n        Me.Title = title\n        Me.Author = author\n        Me.ISBN = isbn\n    End Sub\nEnd Class\n\n' Creating a new instance of the Book class\nDim myBook As New Book(\"Sample Title\", \"Sample Author\", \"123-4567890123\")\n```"
  },
  {
    "task": "Instantiate an object of a class named Car, and set its make, model, and year attributes.",
    "code": "```vb\nPublic Class Car\n    Public Property Make As String\n    Public Property Model As String\n    Public Property Year As Integer\nEnd Class\n\nModule Module1\n    Sub Main()\n        Dim myCar As New Car()\n        myCar.Make = \"Toyota\"\n        myCar.Model = \"Corolla\"\n        myCar.Year = 2021\n    End Sub\nEnd Module\n```"
  },
  {
    "task": "Develop a class to represent a rectangle, then create an object with specific width and height.",
    "code": "```vb\nPublic Class Rectangle\n    Private width As Double\n    Private height As Double\n\n    Public Sub New(ByVal w As Double, ByVal h As Double)\n        Me.width = w\n        Me.height = h\n    End Sub\n\n    Public Function GetWidth() As Double\n        Return Me.width\n    End Function\n\n    Public Function GetHeight() As Double\n        Return Me.height\n    End Function\nEnd Class\n\nModule Module1\n    Sub Main()\n        Dim myRectangle As New Rectangle(10.0, 20.0)\n        Console.WriteLine(\"Width: \" & myRectangle.GetWidth())\n        Console.WriteLine(\"Height: \" & myRectangle.GetHeight())\n    End Sub\nEnd Module\n```"
  },
  {
    "task": "Construct an object of a class Person, initializing it with a name and age.",
    "code": "```vb\nPublic Class Person\n    Public Property Name As String\n    Public Property Age As Integer\n\n    Public Sub New(ByVal name As String, ByVal age As Integer)\n        Me.Name = name\n        Me.Age = age\n    End Sub\nEnd Class\n\nModule Module1\n    Sub Main()\n        Dim person As New Person(\"John Doe\", 30)\n    End Sub\nEnd Module\n```"
  },
  {
    "task": "Create a new object from a class called Circle, initializing it with a radius value.",
    "code": "```vb\nPublic Class Circle\n    Public Property Radius As Double\n\n    Public Sub New(ByVal radius As Double)\n        Me.Radius = radius\n    End Sub\nEnd Class\n\nSub Main()\n    Dim myCircle As New Circle(5.0)\nEnd Sub\n```"
  },
  {
    "task": "Instantiate a class named Student with properties for name, student ID, and GPA.",
    "code": "```vb\nPublic Class Student\n    Public Property Name As String\n    Public Property StudentID As String\n    Public Property GPA As Double\nEnd Class\n\nModule Module1\n    Sub Main()\n        Dim student As New Student()\n        student.Name = \"John Doe\"\n        student.StudentID = \"12345\"\n        student.GPA = 3.75\n    End Sub\nEnd Module\n```"
  },
  {
    "task": "Design a class for a smartphone, then create an instance with specific brand, model, and storage capacity.",
    "code": "```vb\nPublic Class Smartphone\n    Public Property Brand As String\n    Public Property Model As String\n    Public Property StorageCapacity As Integer\n\n    Public Sub New(ByVal brand As String, ByVal model As String, ByVal storageCapacity As Integer)\n        Me.Brand = brand\n        Me.Model = model\n        Me.StorageCapacity = storageCapacity\n    End Sub\nEnd Class\n\nModule Module1\n    Sub Main()\n        Dim myPhone As New Smartphone(\"Apple\", \"iPhone 13\", 128)\n    End Sub\nEnd Module\n```"
  },
  {
    "task": "Create an object of a class named BankAccount, initializing it with an account number and balance.",
    "code": "```vb\nPublic Class BankAccount\n    Public Property AccountNumber As String\n    Public Property Balance As Decimal\n\n    Public Sub New(accNumber As String, initialBalance As Decimal)\n        AccountNumber = accNumber\n        Balance = initialBalance\n    End Sub\nEnd Class\n\nModule Module1\n    Sub Main()\n        Dim myAccount As New BankAccount(\"123456789\", 1000.0D)\n    End Sub\nEnd Module\n```"
  },
  {
    "task": "Write a class for a movie, then instantiate it with a title, director, and release year.",
    "code": "```vb\nPublic Class Movie\n    Public Property Title As String\n    Public Property Director As String\n    Public Property ReleaseYear As Integer\n\n    Public Sub New(title As String, director As String, releaseYear As Integer)\n        Me.Title = title\n        Me.Director = director\n        Me.ReleaseYear = releaseYear\n    End Sub\nEnd Class\n\nSub Main()\n    Dim myMovie As New Movie(\"Inception\", \"Christopher Nolan\", 2010)\nEnd Sub\n```"
  },
  {
    "task": "Define a class representing a point in 2D space and create an object with x and y coordinates.",
    "code": "```vb\nPublic Class Point2D\n    Public Property X As Double\n    Public Property Y As Double\n\n    Public Sub New(x As Double, y As Double)\n        Me.X = x\n        Me.Y = y\n    End Sub\nEnd Class\n\nModule Module1\n    Sub Main()\n        Dim point As New Point2D(5.0, 10.0)\n    End Sub\nEnd Module\n```"
  },
  {
    "task": "Create an instance of a class called Computer with attributes for CPU, RAM, and storage.",
    "code": "```vb\nPublic Class Computer\n    Public Property CPU As String\n    Public Property RAM As Integer\n    Public Property Storage As Integer\nEnd Class\n\nModule Module1\n    Sub Main()\n        Dim myComputer As New Computer() With {\n            .CPU = \"Intel i7\",\n            .RAM = 16,\n            .Storage = 512\n        }\n    End Sub\nEnd Module\n```"
  },
  {
    "task": "Design a class for a Song with properties for title, artist, and duration, and instantiate it.",
    "code": "```vb\nPublic Class Song\n    Public Property Title As String\n    Public Property Artist As String\n    Public Property Duration As Integer\n\n    Public Sub New(title As String, artist As String, duration As Integer)\n        Me.Title = title\n        Me.Artist = artist\n        Me.Duration = duration\n    End Sub\nEnd Class\n\nModule Module1\n    Sub Main()\n        Dim mySong As New Song(\"Imagine\", \"John Lennon\", 183)\n    End Sub\nEnd Module\n```"
  },
  {
    "task": "Create a new instance of a class named Pet, initializing it with type, breed, and age.",
    "code": "```vb\nPublic Class Pet\n    Public Property Type As String\n    Public Property Breed As String\n    Public Property Age As Integer\n\n    Public Sub New(petType As String, petBreed As String, petAge As Integer)\n        Type = petType\n        Breed = petBreed\n        Age = petAge\n    End Sub\nEnd Class\n\nSub Main()\n    Dim myPet As New Pet(\"Dog\", \"Labrador\", 3)\nEnd Sub\n```"
  },
  {
    "task": "Instantiate an object of a class named House with attributes for address, number of bedrooms, and price.",
    "code": "```vb\nPublic Class House\n    Public Property Address As String\n    Public Property NumberOfBedrooms As Integer\n    Public Property Price As Decimal\nEnd Class\n\nModule Module1\n    Sub Main()\n        Dim myHouse As New House With {\n            .Address = \"123 Main St\",\n            .NumberOfBedrooms = 3,\n            .Price = 250000D\n        }\n    End Sub\nEnd Module\n```"
  },
  {
    "task": "Develop a class for a Camera, then create an object with resolution and zoom level attributes.",
    "code": "```vb\nPublic Class Camera\n    Public Property Resolution As String\n    Public Property ZoomLevel As Integer\n\n    Public Sub New(resolution As String, zoomLevel As Integer)\n        Me.Resolution = resolution\n        Me.ZoomLevel = zoomLevel\n    End Sub\nEnd Class\n\nModule Module1\n    Sub Main()\n        Dim myCamera As New Camera(\"1080p\", 5)\n    End Sub\nEnd Module\n```"
  },
  {
    "task": "Construct an object from a class named Bicycle with properties for brand, type, and gear count.",
    "code": "```vb\nPublic Class Bicycle\n    Public Property Brand As String\n    Public Property Type As String\n    Public Property GearCount As Integer\nEnd Class\n\nSub Main()\n    Dim myBicycle As New Bicycle()\n    myBicycle.Brand = \"Trek\"\n    myBicycle.Type = \"Mountain\"\n    myBicycle.GearCount = 18\nEnd Sub\n```"
  },
  {
    "task": "Create a class for a book author with name and nationality, then instantiate it.",
    "code": "```vb\nPublic Class Author\n    Public Property Name As String\n    Public Property Nationality As String\n\n    Public Sub New(name As String, nationality As String)\n        Me.Name = name\n        Me.Nationality = nationality\n    End Sub\nEnd Class\n\nModule Program\n    Sub Main()\n        Dim author As New Author(\"Jane Austen\", \"British\")\n    End Sub\nEnd Module\n```"
  },
  {
    "task": "Define a class representing a video game with attributes for title, genre, and platform, and create an object.",
    "code": "```vb\nPublic Class VideoGame\n    Public Property Title As String\n    Public Property Genre As String\n    Public Property Platform As String\n\n    Public Sub New(title As String, genre As String, platform As String)\n        Me.Title = title\n        Me.Genre = genre\n        Me.Platform = platform\n    End Sub\nEnd Class\n\nModule Module1\n    Sub Main()\n        Dim game As New VideoGame(\"Example Game\", \"Adventure\", \"PC\")\n    End Sub\nEnd Module\n```"
  },
  {
    "task": "Instantiate a class named Plane with properties for airline, model, and capacity.",
    "code": "```vb\nPublic Class Plane\n    Public Property Airline As String\n    Public Property Model As String\n    Public Property Capacity As Integer\n\n    Public Sub New(airline As String, model As String, capacity As Integer)\n        Me.Airline = airline\n        Me.Model = model\n        Me.Capacity = capacity\n    End Sub\nEnd Class\n\nModule Module1\n    Sub Main()\n        Dim myPlane As New Plane(\"AirlineName\", \"ModelName\", 180)\n    End Sub\nEnd Module\n```"
  },
  {
    "task": "Create a new object of a class called Lamp, initializing it with color and brightness level.",
    "code": "```vb\nPublic Class Lamp\n    Public Property Color As String\n    Public Property Brightness As Integer\n\n    Public Sub New(ByVal color As String, ByVal brightness As Integer)\n        Me.Color = color\n        Me.Brightness = brightness\n    End Sub\nEnd Class\n\nModule Module1\n    Sub Main()\n        Dim myLamp As New Lamp(\"Blue\", 75)\n    End Sub\nEnd Module\n```"
  },
  {
    "task": "Design a class for a TV show with properties for title, season, and episode count, then instantiate it.",
    "code": "```vb\nPublic Class TVShow\n    Public Property Title As String\n    Public Property Season As Integer\n    Public Property EpisodeCount As Integer\n\n    Public Sub New(ByVal title As String, ByVal season As Integer, ByVal episodeCount As Integer)\n        Me.Title = title\n        Me.Season = season\n        Me.EpisodeCount = episodeCount\n    End Sub\nEnd Class\n\nModule Program\n    Sub Main()\n        Dim show As New TVShow(\"Example Show\", 1, 10)\n    End Sub\nEnd Module\n```"
  },
  {
    "task": "Instantiate an object of a class named Garden with attributes for size and number of plants.",
    "code": "```vb\nPublic Class Garden\n    Public Property Size As Double\n    Public Property NumberOfPlants As Integer\n\n    Public Sub New(size As Double, numberOfPlants As Integer)\n        Me.Size = size\n        Me.NumberOfPlants = numberOfPlants\n    End Sub\nEnd Class\n\nModule Module1\n    Sub Main()\n        Dim myGarden As New Garden(100.5, 10)\n    End Sub\nEnd Module\n```"
  },
  {
    "task": "Develop a class for a Train, then create an object with properties for type and number of carriages.",
    "code": "```vb\nPublic Class Train\n    Public Property Type As String\n    Public Property NumberOfCarriages As Integer\n\n    Public Sub New(trainType As String, carriages As Integer)\n        Type = trainType\n        NumberOfCarriages = carriages\n    End Sub\nEnd Class\n\nSub Main()\n    Dim myTrain As New Train(\"Freight\", 20)\n    Console.WriteLine(\"Train Type: \" & myTrain.Type)\n    Console.WriteLine(\"Number of Carriages: \" & myTrain.NumberOfCarriages)\nEnd Sub\n```"
  },
  {
    "task": "Define a class representing a planet with attributes for name, size, and distance from the sun, and create an object.",
    "code": "```vb\nPublic Class Planet\n    Public Property Name As String\n    Public Property Size As Double\n    Public Property DistanceFromSun As Double\n\n    Public Sub New(name As String, size As Double, distanceFromSun As Double)\n        Me.Name = name\n        Me.Size = size\n        Me.DistanceFromSun = distanceFromSun\n    End Sub\nEnd Class\n\nModule Module1\n    Sub Main()\n        Dim earth As New Planet(\"Earth\", 12742, 149.6)\n    End Sub\nEnd Module\n```"
  },
  {
    "task": "Create an instance of a class named Fridge with properties for brand and capacity.",
    "code": "```vb\nPublic Class Fridge\n    Public Property Brand As String\n    Public Property Capacity As Integer\nEnd Class\n\nDim myFridge As New Fridge With {\n    .Brand = \"ExampleBrand\",\n    .Capacity = 300\n}\n```"
  },
  {
    "task": "Design a class for a Restaurant with attributes for name, cuisine type, and location, then create an instance.",
    "code": "```vb\nPublic Class Restaurant\n    Public Property Name As String\n    Public Property CuisineType As String\n    Public Property Location As String\nEnd Class\n\nPublic Module MainModule\n    Sub Main()\n        Dim myRestaurant As New Restaurant With {\n            .Name = \"Gourmet Bistro\",\n            .CuisineType = \"French\",\n            .Location = \"123 Main St\"\n        }\n    End Sub\nEnd Module\n```"
  },
  {
    "task": "Create a new object from a class named Bookstore, initializing it with name and number of books.",
    "code": "```vb\nPublic Class Bookstore\n    Public Property Name As String\n    Public Property NumberOfBooks As Integer\n\n    Public Sub New(name As String, numberOfBooks As Integer)\n        Me.Name = name\n        Me.NumberOfBooks = numberOfBooks\n    End Sub\nEnd Class\n\nModule Module1\n    Sub Main()\n        Dim myBookstore As New Bookstore(\"My Bookstore\", 100)\n    End Sub\nEnd Module\n```"
  },
  {
    "task": "Instantiate a class named Library with properties for total books and number of members.",
    "code": "```vb\nPublic Class Library\n    Public Property TotalBooks As Integer\n    Public Property NumberOfMembers As Integer\nEnd Class\n\nModule Program\n    Sub Main()\n        Dim myLibrary As New Library With {\n            .TotalBooks = 1000,\n            .NumberOfMembers = 300\n        }\n    End Sub\nEnd Module\n```"
  },
  {
    "task": "Write a class for a Beverage with properties for name, type, and volume, and instantiate it.",
    "code": "```vb\nPublic Class Beverage\n    Public Property Name As String\n    Public Property Type As String\n    Public Property Volume As Double\n\n    Public Sub New(name As String, type As String, volume As Double)\n        Me.Name = name\n        Me.Type = type\n        Me.Volume = volume\n    End Sub\nEnd Class\n\nModule Program\n    Sub Main()\n        Dim myBeverage As New Beverage(\"Cola\", \"Soda\", 500.0)\n    End Sub\nEnd Module\n```"
  },
  {
    "task": "Create an object of a class named User with attributes for username, email, and password.",
    "code": "```vb\nPublic Class User\n    Public Property Username As String\n    Public Property Email As String\n    Public Property Password As String\n\n    Public Sub New(username As String, email As String, password As String)\n        Me.Username = username\n        Me.Email = email\n        Me.Password = password\n    End Sub\nEnd Class\n\nModule Program\n    Sub Main()\n        Dim user As New User(\"exampleUser\", \"user@example.com\", \"securePassword\")\n    End Sub\nEnd Module\n```"
  },
  {
    "task": "Define a class for a Laptop with properties for brand, processor, and RAM, then instantiate it.",
    "code": "```vb\nPublic Class Laptop\n    Public Property Brand As String\n    Public Property Processor As String\n    Public Property RAM As Integer\n\n    Public Sub New(brand As String, processor As String, ram As Integer)\n        Me.Brand = brand\n        Me.Processor = processor\n        Me.RAM = ram\n    End Sub\nEnd Class\n\nModule Module1\n    Sub Main()\n        Dim myLaptop As New Laptop(\"Dell\", \"Intel i7\", 16)\n    End Sub\nEnd Module\n```"
  },
  {
    "task": "Construct an object from a class named Mountain with attributes for name and elevation.",
    "code": "```vb\nPublic Class Mountain\n    Public Property Name As String\n    Public Property Elevation As Integer\nEnd Class\n\nSub Main()\n    Dim myMountain As New Mountain()\n    myMountain.Name = \"Everest\"\n    myMountain.Elevation = 29029\nEnd Sub\n```"
  },
  {
    "task": "Create an instance of a class called Weather with properties for temperature, humidity, and condition.",
    "code": "```vb\nPublic Class Weather\n    Public Property Temperature As Double\n    Public Property Humidity As Double\n    Public Property Condition As String\nEnd Class\n\nSub Main()\n    Dim currentWeather As New Weather() With {\n        .Temperature = 72.5,\n        .Humidity = 55.0,\n        .Condition = \"Sunny\"\n    }\nEnd Sub\n```"
  },
  {
    "task": "Design a class for a Classroom with attributes for room number and capacity, then create an instance.",
    "code": "```vb\nPublic Class Classroom\n    Public Property RoomNumber As String\n    Public Property Capacity As Integer\n\n    Public Sub New(roomNumber As String, capacity As Integer)\n        Me.RoomNumber = roomNumber\n        Me.Capacity = capacity\n    End Sub\nEnd Class\n\nModule Module1\n    Sub Main()\n        Dim myClassroom As New Classroom(\"A101\", 30)\n    End Sub\nEnd Module\n```"
  },
  {
    "task": "Instantiate an object of a class named Zoo with properties for name and number of animals.",
    "code": "```vb\nPublic Class Zoo\n    Public Property Name As String\n    Public Property NumberOfAnimals As Integer\nEnd Class\n\nModule Module1\n    Sub Main()\n        Dim myZoo As New Zoo With {\n            .Name = \"Wildlife Park\",\n            .NumberOfAnimals = 150\n        }\n    End Sub\nEnd Module\n```"
  },
  {
    "task": "Develop a class for an Album with properties for name, artist, and release date, then instantiate it.",
    "code": "```vb\nPublic Class Album\n    Public Property Name As String\n    Public Property Artist As String\n    Public Property ReleaseDate As Date\nEnd Class\n\nModule Module1\n    Sub Main()\n        Dim myAlbum As New Album With {\n            .Name = \"Album Name\",\n            .Artist = \"Artist Name\",\n            .ReleaseDate = #2023-10-01#\n        }\n    End Sub\nEnd Module\n```"
  },
  {
    "task": "Create a new object from a class named Hotel, initializing it with name, location, and star rating.",
    "code": "```vb\nPublic Class Hotel\n    Public Property Name As String\n    Public Property Location As String\n    Public Property StarRating As Integer\n\n    Public Sub New(ByVal name As String, ByVal location As String, ByVal starRating As Integer)\n        Me.Name = name\n        Me.Location = location\n        Me.StarRating = starRating\n    End Sub\nEnd Class\n\nModule Program\n    Sub Main()\n        Dim myHotel As New Hotel(\"Grand Plaza\", \"New York\", 5)\n    End Sub\nEnd Module\n```"
  },
  {
    "task": "Write a class for a Recipe with properties for name, ingredients, and cooking time, and instantiate it.",
    "code": "```vb\nPublic Class Recipe\n    Public Property Name As String\n    Public Property Ingredients As List(Of String)\n    Public Property CookingTime As Integer\n\n    Public Sub New(name As String, ingredients As List(Of String), cookingTime As Integer)\n        Me.Name = name\n        Me.Ingredients = ingredients\n        Me.CookingTime = cookingTime\n    End Sub\nEnd Class\n\nSub Main()\n    Dim ingredients As New List(Of String) From {\"Flour\", \"Sugar\", \"Eggs\"}\n    Dim myRecipe As New Recipe(\"Cake\", ingredients, 45)\nEnd Sub\n```"
  },
  {
    "task": "Define a class representing a Conference with attributes for name, date, and number of attendees, and create an object.",
    "code": "```vb\nPublic Class Conference\n    Public Property Name As String\n    Public Property Date As DateTime\n    Public Property NumberOfAttendees As Integer\n\n    Public Sub New(ByVal name As String, ByVal date As DateTime, ByVal numberOfAttendees As Integer)\n        Me.Name = name\n        Me.Date = date\n        Me.NumberOfAttendees = numberOfAttendees\n    End Sub\nEnd Class\n\nModule Module1\n    Sub Main()\n        Dim conference As New Conference(\"Tech Conference\", New DateTime(2023, 11, 15), 150)\n    End Sub\nEnd Module\n```"
  },
  {
    "task": "Create an instance of a class called Park with properties for name, location, and area.",
    "code": "```vb\nPublic Class Park\n    Public Property Name As String\n    Public Property Location As String\n    Public Property Area As Double\nEnd Class\n\nSub Main()\n    Dim myPark As New Park()\n    myPark.Name = \"Central Park\"\n    myPark.Location = \"New York\"\n    myPark.Area = 843.0\nEnd Sub\n```"
  },
  {
    "task": "Design a class for a Bicycle with attributes for brand, type, and wheel size, then create an instance.",
    "code": "```vb\nPublic Class Bicycle\n    Public Property Brand As String\n    Public Property Type As String\n    Public Property WheelSize As Integer\n\n    Public Sub New(brand As String, type As String, wheelSize As Integer)\n        Me.Brand = brand\n        Me.Type = type\n        Me.WheelSize = wheelSize\n    End Sub\nEnd Class\n\nSub Main()\n    Dim myBicycle As New Bicycle(\"Trek\", \"Mountain\", 29)\nEnd Sub\n```"
  },
  {
    "task": "Instantiate an object of a class named Festival with properties for name, location, and duration.",
    "code": "```vb\nPublic Class Festival\n    Public Property Name As String\n    Public Property Location As String\n    Public Property Duration As Integer\n\n    Public Sub New(ByVal name As String, ByVal location As String, ByVal duration As Integer)\n        Me.Name = name\n        Me.Location = location\n        Me.Duration = duration\n    End Sub\nEnd Class\n\nModule Module1\n    Sub Main()\n        Dim myFestival As New Festival(\"Music Fest\", \"New York\", 3)\n    End Sub\nEnd Module\n```"
  },
  {
    "task": "Develop a class for a Ship with properties for name, capacity, and type, then instantiate it.",
    "code": "```vb\nPublic Class Ship\n    Public Property Name As String\n    Public Property Capacity As Integer\n    Public Property Type As String\n\n    Public Sub New(ByVal name As String, ByVal capacity As Integer, ByVal type As String)\n        Me.Name = name\n        Me.Capacity = capacity\n        Me.Type = type\n    End Sub\nEnd Class\n\nModule Module1\n    Sub Main()\n        Dim myShip As New Ship(\"Titanic\", 2400, \"Cruise\")\n    End Sub\nEnd Module\n```"
  },
  {
    "task": "Create an object of a class named Currency with attributes for name, symbol, and exchange rate.",
    "code": "```vb\nPublic Class Currency\n    Public Property Name As String\n    Public Property Symbol As String\n    Public Property ExchangeRate As Double\n\n    Public Sub New(name As String, symbol As String, exchangeRate As Double)\n        Me.Name = name\n        Me.Symbol = symbol\n        Me.ExchangeRate = exchangeRate\n    End Sub\nEnd Class\n\nModule Module1\n    Sub Main()\n        Dim usd As New Currency(\"US Dollar\", \"$\", 1.0)\n    End Sub\nEnd Module\n```"
  },
  {
    "task": "Define a class for a Gadget with properties for name, brand, and functionality, then instantiate it.",
    "code": "```vb\nPublic Class Gadget\n    Public Property Name As String\n    Public Property Brand As String\n    Public Property Functionality As String\n\n    Public Sub New(ByVal name As String, ByVal brand As String, ByVal functionality As String)\n        Me.Name = name\n        Me.Brand = brand\n        Me.Functionality = functionality\n    End Sub\nEnd Class\n\nModule Program\n    Sub Main()\n        Dim myGadget As New Gadget(\"Smartphone\", \"TechBrand\", \"Communication\")\n    End Sub\nEnd Module\n```"
  },
  {
    "task": "Construct an object from a class named Bridge with attributes for name, length, and location.",
    "code": "```vb\nPublic Class Bridge\n    Public Property Name As String\n    Public Property Length As Double\n    Public Property Location As String\nEnd Class\n\nModule Module1\n    Sub Main()\n        Dim myBridge As New Bridge With {\n            .Name = \"Golden Gate\",\n            .Length = 2737,\n            .Location = \"San Francisco, CA\"\n        }\n    End Sub\nEnd Module\n```"
  },
  {
    "task": "Create an instance of a class called Forest with properties for name, area, and tree species.",
    "code": "```vb\nPublic Class Forest\n    Public Property Name As String\n    Public Property Area As Double\n    Public Property TreeSpecies As String\n\n    Public Sub New(ByVal name As String, ByVal area As Double, ByVal treeSpecies As String)\n        Me.Name = name\n        Me.Area = area\n        Me.TreeSpecies = treeSpecies\n    End Sub\nEnd Class\n\nModule Program\n    Sub Main()\n        Dim myForest As New Forest(\"Amazon\", 5500000, \"Tropical\")\n    End Sub\nEnd Module\n```"
  },
  {
    "task": "Design a class for a Sculpture with attributes for title, artist, and material, then create an instance.",
    "code": "```vb\nPublic Class Sculpture\n    Public Property Title As String\n    Public Property Artist As String\n    Public Property Material As String\n\n    Public Sub New(ByVal title As String, ByVal artist As String, ByVal material As String)\n        Me.Title = title\n        Me.Artist = artist\n        Me.Material = material\n    End Sub\nEnd Class\n\nModule Program\n    Sub Main()\n        Dim mySculpture As New Sculpture(\"The Thinker\", \"Auguste Rodin\", \"Bronze\")\n    End Sub\nEnd Module\n```"
  },
  {
    "task": "Instantiate an object of a class named Aquarium with properties for name and number of tanks.",
    "code": "```vb\nPublic Class Aquarium\n    Public Property Name As String\n    Public Property NumberOfTanks As Integer\nEnd Class\n\nModule Module1\n    Sub Main()\n        Dim myAquarium As New Aquarium With {\n            .Name = \"Ocean Realm\",\n            .NumberOfTanks = 5\n        }\n    End Sub\nEnd Module\n```"
  },
  {
    "task": "Develop a class for a Play with properties for title, playwright, and genre, then instantiate it.",
    "code": "```vb\nPublic Class Play\n    Public Property Title As String\n    Public Property Playwright As String\n    Public Property Genre As String\n\n    Public Sub New(title As String, playwright As String, genre As String)\n        Me.Title = title\n        Me.Playwright = playwright\n        Me.Genre = genre\n    End Sub\nEnd Class\n\nModule Program\n    Sub Main()\n        Dim myPlay As New Play(\"Hamlet\", \"William Shakespeare\", \"Tragedy\")\n    End Sub\nEnd Module\n```"
  },
  {
    "task": "Create a new object from a class named Telescope, initializing it with type and focal length.",
    "code": "```vb\nPublic Class Telescope\n    Public Property Type As String\n    Public Property FocalLength As Double\n\n    Public Sub New(telescopeType As String, telescopeFocalLength As Double)\n        Type = telescopeType\n        FocalLength = telescopeFocalLength\n    End Sub\nEnd Class\n\nModule Module1\n    Sub Main()\n        Dim myTelescope As New Telescope(\"Reflector\", 1200.0)\n    End Sub\nEnd Module\n```"
  },
  {
    "task": "Write a class for a Monument with properties for name, location, and year built, and instantiate it.",
    "code": "```vb\nPublic Class Monument\n    Public Property Name As String\n    Public Property Location As String\n    Public Property YearBuilt As Integer\n\n    Public Sub New(ByVal name As String, ByVal location As String, ByVal yearBuilt As Integer)\n        Me.Name = name\n        Me.Location = location\n        Me.YearBuilt = yearBuilt\n    End Sub\nEnd Class\n\nModule Module1\n    Sub Main()\n        Dim monument As New Monument(\"Eiffel Tower\", \"Paris, France\", 1889)\n    End Sub\nEnd Module\n```"
  },
  {
    "task": "Define a class representing a Star with attributes for name, size, and distance from Earth, and create an object.",
    "code": "```vb\nPublic Class Star\n    Public Property Name As String\n    Public Property Size As Double\n    Public Property DistanceFromEarth As Double\n\n    Public Sub New(name As String, size As Double, distance As Double)\n        Me.Name = name\n        Me.Size = size\n        Me.DistanceFromEarth = distance\n    End Sub\nEnd Class\n\nModule Module1\n    Sub Main()\n        Dim myStar As New Star(\"Sirius\", 1.71, 8.6)\n    End Sub\nEnd Module\n```"
  },
  {
    "task": "Create an instance of a class called Festival with properties for name, location, and number of events.",
    "code": "```vb\nPublic Class Festival\n    Public Property Name As String\n    Public Property Location As String\n    Public Property NumberOfEvents As Integer\nEnd Class\n\nModule Module1\n    Sub Main()\n        Dim myFestival As New Festival With {\n            .Name = \"Music Fest\",\n            .Location = \"Central Park\",\n            .NumberOfEvents = 5\n        }\n    End Sub\nEnd Module\n```"
  },
  {
    "task": "Design a class for a Clock with attributes for brand, type, and display, then create an instance.",
    "code": "```vb\nPublic Class Clock\n    Public Property Brand As String\n    Public Property Type As String\n    Public Property Display As String\n\n    Public Sub New(ByVal brand As String, ByVal type As String, ByVal display As String)\n        Me.Brand = brand\n        Me.Type = type\n        Me.Display = display\n    End Sub\nEnd Class\n\nModule Module1\n    Sub Main()\n        Dim myClock As New Clock(\"Seiko\", \"Analog\", \"LCD\")\n    End Sub\nEnd Module\n```"
  },
  {
    "task": "Instantiate an object of a class named Stadium with properties for name, capacity, and location.",
    "code": "```vb\nPublic Class Stadium\n    Public Property Name As String\n    Public Property Capacity As Integer\n    Public Property Location As String\nEnd Class\n\nSub Main()\n    Dim myStadium As New Stadium() With {\n        .Name = \"National Stadium\",\n        .Capacity = 50000,\n        .Location = \"Capital City\"\n    }\nEnd Sub\n```"
  },
  {
    "task": "Develop a class for a Potion with properties for name, effect, and duration, then instantiate it.",
    "code": "```vb\nPublic Class Potion\n    Public Property Name As String\n    Public Property Effect As String\n    Public Property Duration As Integer\n\n    Public Sub New(ByVal name As String, ByVal effect As String, ByVal duration As Integer)\n        Me.Name = name\n        Me.Effect = effect\n        Me.Duration = duration\n    End Sub\nEnd Class\n\nModule Module1\n    Sub Main()\n        Dim healingPotion As New Potion(\"Healing Potion\", \"Restores Health\", 5)\n    End Sub\nEnd Module\n```"
  },
  {
    "task": "Create an object of a class named Planet with attributes for name, mass, and orbital period.",
    "code": "```vb\nPublic Class Planet\n    Public Property Name As String\n    Public Property Mass As Double\n    Public Property OrbitalPeriod As Double\n\n    Public Sub New(name As String, mass As Double, orbitalPeriod As Double)\n        Me.Name = name\n        Me.Mass = mass\n        Me.OrbitalPeriod = orbitalPeriod\n    End Sub\nEnd Class\n\nModule Program\n    Sub Main()\n        Dim earth As New Planet(\"Earth\", 5.972E24, 365.25)\n    End Sub\nEnd Module\n```"
  },
  {
    "task": "Define a class for a Lighthouse with properties for name, height, and light range, then instantiate it.",
    "code": "```vb\nPublic Class Lighthouse\n    Public Property Name As String\n    Public Property Height As Double\n    Public Property LightRange As Double\n\n    Public Sub New(ByVal name As String, ByVal height As Double, ByVal lightRange As Double)\n        Me.Name = name\n        Me.Height = height\n        Me.LightRange = lightRange\n    End Sub\nEnd Class\n\nModule Module1\n    Sub Main()\n        Dim lighthouse As New Lighthouse(\"Beacon Hill\", 50.5, 12.3)\n    End Sub\nEnd Module\n```"
  },
  {
    "task": "Construct an object from a class named Volcano with attributes for name, height, and eruption history.",
    "code": "```vb\nPublic Class Volcano\n    Public Property Name As String\n    Public Property Height As Double\n    Public Property EruptionHistory As List(Of String)\n\n    Public Sub New(volcanoName As String, volcanoHeight As Double, history As List(Of String))\n        Name = volcanoName\n        Height = volcanoHeight\n        EruptionHistory = history\n    End Sub\nEnd Class\n\n' Example object creation\nDim eruptionHistory As New List(Of String) From {\"2000\", \"2010\", \"2020\"}\nDim myVolcano As New Volcano(\"Mount Example\", 1234.5, eruptionHistory)\n```"
  },
  {
    "task": "Create an instance of a class called Sculpture with properties for title, artist, and year created.",
    "code": "```vb\nPublic Class Sculpture\n    Public Property Title As String\n    Public Property Artist As String\n    Public Property YearCreated As Integer\nEnd Class\n\nSub Main()\n    Dim mySculpture As New Sculpture()\n    mySculpture.Title = \"The Thinker\"\n    mySculpture.Artist = \"Auguste Rodin\"\n    mySculpture.YearCreated = 1904\nEnd Sub\n```"
  },
  {
    "task": "Design a class for a Ship with attributes for name, type, and displacement, then create an instance.",
    "code": "```vb\nPublic Class Ship\n    Public Property Name As String\n    Public Property Type As String\n    Public Property Displacement As Double\n\n    Public Sub New(name As String, type As String, displacement As Double)\n        Me.Name = name\n        Me.Type = type\n        Me.Displacement = displacement\n    End Sub\nEnd Class\n\nModule Module1\n    Sub Main()\n        Dim myShip As New Ship(\"Titanic\", \"Cruise\", 52310)\n    End Sub\nEnd Module\n```"
  },
  {
    "task": "Instantiate an object of a class named Opera with properties for title, composer, and act count.",
    "code": "```vb\nPublic Class Opera\n    Public Property Title As String\n    Public Property Composer As String\n    Public Property ActCount As Integer\nEnd Class\n\nModule Module1\n    Sub Main()\n        Dim myOpera As New Opera With {\n            .Title = \"La Traviata\",\n            .Composer = \"Giuseppe Verdi\",\n            .ActCount = 3\n        }\n    End Sub\nEnd Module\n```"
  },
  {
    "task": "Develop a class for a Waterfall with properties for name, height, and flow rate, then instantiate it.",
    "code": "```vb\nPublic Class Waterfall\n    Public Property Name As String\n    Public Property Height As Double\n    Public Property FlowRate As Double\n\n    Public Sub New(name As String, height As Double, flowRate As Double)\n        Me.Name = name\n        Me.Height = height\n        Me.FlowRate = flowRate\n    End Sub\nEnd Class\n\nModule Program\n    Sub Main()\n        Dim niagaraFalls As New Waterfall(\"Niagara Falls\", 51.0, 2800.0)\n    End Sub\nEnd Module\n```"
  },
  {
    "task": "Create a new object from a class named Castle, initializing it with name, location, and year built.",
    "code": "```vb\nPublic Class Castle\n    Public Property Name As String\n    Public Property Location As String\n    Public Property YearBuilt As Integer\n\n    Public Sub New(ByVal name As String, ByVal location As String, ByVal yearBuilt As Integer)\n        Me.Name = name\n        Me.Location = location\n        Me.YearBuilt = yearBuilt\n    End Sub\nEnd Class\n\nModule Module1\n    Sub Main()\n        Dim myCastle As New Castle(\"Windsor\", \"England\", 1070)\n    End Sub\nEnd Module\n```"
  },
  {
    "task": "Write a class for a Cat with properties for name, breed, and color, and instantiate it.",
    "code": "```vb\nPublic Class Cat\n    Public Property Name As String\n    Public Property Breed As String\n    Public Property Color As String\n\n    Public Sub New(name As String, breed As String, color As String)\n        Me.Name = name\n        Me.Breed = breed\n        Me.Color = color\n    End Sub\nEnd Class\n\nModule Module1\n    Sub Main()\n        Dim myCat As New Cat(\"Whiskers\", \"Siamese\", \"Brown\")\n    End Sub\nEnd Module\n```"
  },
  {
    "task": "Define a class representing a Spaceship with attributes for name, speed, and crew capacity, and create an object.",
    "code": "```vb\nPublic Class Spaceship\n    Public Property Name As String\n    Public Property Speed As Integer\n    Public Property CrewCapacity As Integer\nEnd Class\n\nSub Main()\n    Dim mySpaceship As New Spaceship()\n    mySpaceship.Name = \"Explorer\"\n    mySpaceship.Speed = 25000\n    mySpaceship.CrewCapacity = 100\nEnd Sub\n```"
  },
  {
    "task": "Create an instance of a class called Robot with properties for name, model, and function.",
    "code": "```vb\nPublic Class Robot\n    Public Property Name As String\n    Public Property Model As String\n    Public Property Functionality As String\nEnd Class\n\nModule Module1\n    Sub Main()\n        Dim myRobot As New Robot With {\n            .Name = \"Robo1\",\n            .Model = \"XJ-9\",\n            .Functionality = \"Assembly\"\n        }\n    End Sub\nEnd Module\n```"
  },
  {
    "task": "Design a class for a Computer Program with attributes for name, language, and lines of code, then create an instance.",
    "code": "```vb\nPublic Class ComputerProgram\n    Public Property Name As String\n    Public Property Language As String\n    Public Property LinesOfCode As Integer\n\n    Public Sub New(ByVal name As String, ByVal language As String, ByVal linesOfCode As Integer)\n        Me.Name = name\n        Me.Language = language\n        Me.LinesOfCode = linesOfCode\n    End Sub\nEnd Class\n\nModule Module1\n    Sub Main()\n        Dim program As New ComputerProgram(\"ExampleProgram\", \"VB.NET\", 1000)\n    End Sub\nEnd Module\n```"
  },
  {
    "task": "Instantiate an object of a class named Mountain with properties for name, range, and prominence.",
    "code": "```vb\nPublic Class Mountain\n    Public Property Name As String\n    Public Property Range As String\n    Public Property Prominence As Integer\nEnd Class\n\nModule Module1\n    Sub Main()\n        Dim myMountain As New Mountain() With {\n            .Name = \"Mount Everest\",\n            .Range = \"Himalayas\",\n            .Prominence = 8848\n        }\n    End Sub\nEnd Module\n```"
  },
  {
    "task": "Develop a class for a Painting with properties for title, artist, and dimensions, then instantiate it.",
    "code": "```vb\nPublic Class Painting\n    Public Property Title As String\n    Public Property Artist As String\n    Public Property Dimensions As String\n\n    Public Sub New(title As String, artist As String, dimensions As String)\n        Me.Title = title\n        Me.Artist = artist\n        Me.Dimensions = dimensions\n    End Sub\nEnd Class\n\nModule Module1\n    Sub Main()\n        Dim myPainting As New Painting(\"Starry Night\", \"Vincent van Gogh\", \"73.7 cm \u00d7 92.1 cm\")\n    End Sub\nEnd Module\n```"
  },
  {
    "task": "Create an object of a class named Symphony with attributes for title, composer, and movement count.",
    "code": "```vb\nPublic Class Symphony\n    Public Property Title As String\n    Public Property Composer As String\n    Public Property MovementCount As Integer\nEnd Class\n\nSub Main()\n    Dim symphony As New Symphony With {\n        .Title = \"Symphony No. 5\",\n        .Composer = \"Ludwig van Beethoven\",\n        .MovementCount = 4\n    }\nEnd Sub\n```"
  },
  {
    "task": "Define a class for a Dinosaur with properties for name, period, and diet, then instantiate it.",
    "code": "```vb\nPublic Class Dinosaur\n    Public Property Name As String\n    Public Property Period As String\n    Public Property Diet As String\nEnd Class\n\nModule Module1\n    Sub Main()\n        Dim dinosaur As New Dinosaur()\n        dinosaur.Name = \"Tyrannosaurus Rex\"\n        dinosaur.Period = \"Cretaceous\"\n        dinosaur.Diet = \"Carnivore\"\n    End Sub\nEnd Module\n```"
  },
  {
    "task": "Construct an object from a class named River with attributes for name, length, and basin size.",
    "code": "```vb\nPublic Class River\n    Public Property Name As String\n    Public Property Length As Double\n    Public Property BasinSize As Double\n\n    Public Sub New(ByVal name As String, ByVal length As Double, ByVal basinSize As Double)\n        Me.Name = name\n        Me.Length = length\n        Me.BasinSize = basinSize\n    End Sub\nEnd Class\n\nModule Module1\n    Sub Main()\n        Dim myRiver As New River(\"Amazon\", 6992, 7050000)\n    End Sub\nEnd Module\n```"
  },
  {
    "task": "Create an instance of a class called Instrument with properties for name, type, and material.",
    "code": "```vb\nPublic Class Instrument\n    Public Property Name As String\n    Public Property Type As String\n    Public Property Material As String\nEnd Class\n\nSub Main()\n    Dim myInstrument As New Instrument With {\n        .Name = \"Guitar\",\n        .Type = \"String\",\n        .Material = \"Wood\"\n    }\nEnd Sub\n```"
  },
  {
    "task": "Design a class for a Planetarium with attributes for name, location, and dome size, then create an instance.",
    "code": "```vb\nPublic Class Planetarium\n    Public Property Name As String\n    Public Property Location As String\n    Public Property DomeSize As Double\n\n    Public Sub New(name As String, location As String, domeSize As Double)\n        Me.Name = name\n        Me.Location = location\n        Me.DomeSize = domeSize\n    End Sub\nEnd Class\n\nModule Module1\n    Sub Main()\n        Dim myPlanetarium As New Planetarium(\"Galactic View\", \"New York\", 50.5)\n    End Sub\nEnd Module\n```"
  },
  {
    "task": "Instantiate an object of a class named Island with properties for name, area, and population.",
    "code": "```vb\nClass Island\n    Public Property Name As String\n    Public Property Area As Double\n    Public Property Population As Integer\nEnd Class\n\nSub Main()\n    Dim myIsland As New Island With {\n        .Name = \"Paradise Island\",\n        .Area = 123.45,\n        .Population = 1000\n    }\nEnd Sub\n```"
  },
  {
    "task": "Develop a class for a Space Station with properties for name, crew size, and modules, then instantiate it.",
    "code": "```vb\nPublic Class SpaceStation\n    Public Property Name As String\n    Public Property CrewSize As Integer\n    Public Property Modules As List(Of String)\n\n    Public Sub New(name As String, crewSize As Integer, modules As List(Of String))\n        Me.Name = name\n        Me.CrewSize = crewSize\n        Me.Modules = modules\n    End Sub\nEnd Class\n\nSub Main()\n    Dim modules As New List(Of String) From {\"Module1\", \"Module2\", \"Module3\"}\n    Dim spaceStation As New SpaceStation(\"International Space Station\", 6, modules)\nEnd Sub\n```"
  },
  {
    "task": "Create a new object from a class named Dinosaur, initializing it with species and period.",
    "code": "```vb\nPublic Class Dinosaur\n    Public Property Species As String\n    Public Property Period As String\n\n    Public Sub New(species As String, period As String)\n        Me.Species = species\n        Me.Period = period\n    End Sub\nEnd Class\n\nModule Module1\n    Sub Main()\n        Dim dino As New Dinosaur(\"Tyrannosaurus\", \"Cretaceous\")\n    End Sub\nEnd Module\n```"
  },
  {
    "task": "Write a class for a Tree with properties for species, height, and age, and instantiate it.",
    "code": "```vb\nPublic Class Tree\n    Public Property Species As String\n    Public Property Height As Double\n    Public Property Age As Integer\n\n    Public Sub New(species As String, height As Double, age As Integer)\n        Me.Species = species\n        Me.Height = height\n        Me.Age = age\n    End Sub\nEnd Class\n\nModule Program\n    Sub Main()\n        Dim myTree As New Tree(\"Oak\", 25.5, 100)\n    End Sub\nEnd Module\n```"
  },
  {
    "task": "Define a class representing a Firework with attributes for name, color, and duration, and create an object.",
    "code": "```vb\nPublic Class Firework\n    Public Property Name As String\n    Public Property Color As String\n    Public Property Duration As Integer\n\n    Public Sub New(name As String, color As String, duration As Integer)\n        Me.Name = name\n        Me.Color = color\n        Me.Duration = duration\n    End Sub\nEnd Class\n\nModule Module1\n    Sub Main()\n        Dim myFirework As New Firework(\"Sparkler\", \"Red\", 5)\n    End Sub\nEnd Module\n```"
  },
  {
    "task": "Create an instance of a class called ComicBook with properties for title, author, and issue number.",
    "code": "```vb\nPublic Class ComicBook\n    Public Property Title As String\n    Public Property Author As String\n    Public Property IssueNumber As Integer\nEnd Class\n\nModule Module1\n    Sub Main()\n        Dim myComic As New ComicBook With {\n            .Title = \"Example Title\",\n            .Author = \"Example Author\",\n            .IssueNumber = 1\n        }\n    End Sub\nEnd Module\n```"
  },
  {
    "task": "Design a class for a Metropolis with attributes for name, population, and GDP, then create an instance.",
    "code": "```vb\nPublic Class Metropolis\n    Public Property Name As String\n    Public Property Population As Integer\n    Public Property GDP As Double\n\n    Public Sub New(ByVal name As String, ByVal population As Integer, ByVal gdp As Double)\n        Me.Name = name\n        Me.Population = population\n        Me.GDP = gdp\n    End Sub\nEnd Class\n\nModule Program\n    Sub Main()\n        Dim city As New Metropolis(\"Metropolis City\", 5000000, 2500000000.0)\n    End Sub\nEnd Module\n```"
  },
  {
    "task": "Instantiate an object of a class named Dragon with properties for name, element, and age.",
    "code": "```vb\nPublic Class Dragon\n    Public Property Name As String\n    Public Property Element As String\n    Public Property Age As Integer\nEnd Class\n\nSub Main()\n    Dim myDragon As New Dragon With {\n        .Name = \"Smaug\",\n        .Element = \"Fire\",\n        .Age = 300\n    }\nEnd Sub\n```"
  },
  {
    "task": "Develop a class for a Novel with properties for title, author, and genre, then instantiate it.",
    "code": "```vb\nPublic Class Novel\n    Public Property Title As String\n    Public Property Author As String\n    Public Property Genre As String\n\n    Public Sub New(title As String, author As String, genre As String)\n        Me.Title = title\n        Me.Author = author\n        Me.Genre = genre\n    End Sub\nEnd Class\n\nSub Main()\n    Dim myNovel As New Novel(\"1984\", \"George Orwell\", \"Dystopian\")\nEnd Sub\n```"
  },
  {
    "task": "Create an object of a class named Satellite with attributes for name, orbit, and mission.",
    "code": "```vb\nPublic Class Satellite\n    Public Property Name As String\n    Public Property Orbit As String\n    Public Property Mission As String\n\n    Public Sub New(ByVal name As String, ByVal orbit As String, ByVal mission As String)\n        Me.Name = name\n        Me.Orbit = orbit\n        Me.Mission = mission\n    End Sub\nEnd Class\n\nModule Program\n    Sub Main()\n        Dim mySatellite As New Satellite(\"Hubble\", \"Low Earth Orbit\", \"Astronomy\")\n    End Sub\nEnd Module\n```"
  },
  {
    "task": "Define a class for a Castle with properties for name, location, and architectural style, then instantiate it.",
    "code": "```vb\nPublic Class Castle\n    Public Property Name As String\n    Public Property Location As String\n    Public Property ArchitecturalStyle As String\nEnd Class\n\nModule Program\n    Sub Main()\n        Dim myCastle As New Castle With {\n            .Name = \"Windsor Castle\",\n            .Location = \"Windsor, England\",\n            .ArchitecturalStyle = \"Gothic\"\n        }\n    End Sub\nEnd Module\n```"
  },
  {
    "task": "Construct an object from a class named Jungle with attributes for name, area, and biodiversity.",
    "code": "```vb\nPublic Class Jungle\n    Public Property Name As String\n    Public Property Area As Double\n    Public Property Biodiversity As Integer\n\n    Public Sub New(ByVal name As String, ByVal area As Double, ByVal biodiversity As Integer)\n        Me.Name = name\n        Me.Area = area\n        Me.Biodiversity = biodiversity\n    End Sub\nEnd Class\n\nSub Main()\n    Dim myJungle As New Jungle(\"Amazon\", 5500000.0, 10000)\nEnd Sub\n```"
  },
  {
    "task": "Create an instance of a class called Dinosaur with properties for species, size, and diet.",
    "code": "```vb\nPublic Class Dinosaur\n    Public Property Species As String\n    Public Property Size As String\n    Public Property Diet As String\n\n    Public Sub New(species As String, size As String, diet As String)\n        Me.Species = species\n        Me.Size = size\n        Me.Diet = diet\n    End Sub\nEnd Class\n\nModule Module1\n    Sub Main()\n        Dim myDinosaur As New Dinosaur(\"Tyrannosaurus\", \"Large\", \"Carnivore\")\n    End Sub\nEnd Module\n```"
  },
  {
    "task": "Design a class for a Superhero with attributes for name, powers, and alias, then create an instance.",
    "code": "```vb\nPublic Class Superhero\n    Public Property Name As String\n    Public Property Powers As String\n    Public Property Alias As String\n\n    Public Sub New(ByVal name As String, ByVal powers As String, ByVal aliasName As String)\n        Me.Name = name\n        Me.Powers = powers\n        Me.Alias = aliasName\n    End Sub\nEnd Class\n\nModule Module1\n    Sub Main()\n        Dim hero As New Superhero(\"Clark Kent\", \"Super Strength, Flight\", \"Superman\")\n    End Sub\nEnd Module\n```"
  }
]