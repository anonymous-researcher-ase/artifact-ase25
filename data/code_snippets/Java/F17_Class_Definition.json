[
  {
    "task": "Define a class representing a book with attributes for title, author, and number of pages, and a method to display the book's information.",
    "code": "```java\npublic class Book {\n    private String title;\n    private String author;\n    private int numberOfPages;\n\n    public Book(String title, String author, int numberOfPages) {\n        this.title = title;\n        this.author = author;\n        this.numberOfPages = numberOfPages;\n    }\n\n    public void displayBookInfo() {\n        System.out.println(\"Title: \" + title);\n        System.out.println(\"Author: \" + author);\n        System.out.println(\"Number of Pages: \" + numberOfPages);\n    }\n}\n```"
  },
  {
    "task": "Create a class for a bank account that includes attributes for account number, balance, and a method to deposit funds.",
    "code": "```java\npublic class BankAccount {\n    private String accountNumber;\n    private double balance;\n\n    public BankAccount(String accountNumber, double balance) {\n        this.accountNumber = accountNumber;\n        this.balance = balance;\n    }\n\n    public void deposit(double amount) {\n        if (amount > 0) {\n            balance += amount;\n        }\n    }\n\n    public String getAccountNumber() {\n        return accountNumber;\n    }\n\n    public double getBalance() {\n        return balance;\n    }\n}\n```"
  },
  {
    "task": "Design a class for a vehicle with properties for make, model, and year, and a method to start the engine.",
    "code": "```java\npublic class Vehicle {\n    private String make;\n    private String model;\n    private int year;\n\n    public Vehicle(String make, String model, int year) {\n        this.make = make;\n        this.model = model;\n        this.year = year;\n    }\n\n    public void startEngine() {\n        System.out.println(\"Engine started.\");\n    }\n\n    // Getters and setters could be added here if needed\n}\n```"
  },
  {
    "task": "Implement a class that models a student with attributes for name, ID, and grades, and a method to calculate the GPA.",
    "code": "```java\nimport java.util.List;\n\npublic class Student {\n    private String name;\n    private String id;\n    private List<Double> grades;\n\n    public Student(String name, String id, List<Double> grades) {\n        this.name = name;\n        this.id = id;\n        this.grades = grades;\n    }\n\n    public double calculateGPA() {\n        if (grades == null || grades.isEmpty()) {\n            return 0.0;\n        }\n        double sum = 0.0;\n        for (double grade : grades) {\n            sum += grade;\n        }\n        return sum / grades.size();\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public String getId() {\n        return id;\n    }\n\n    public List<Double> getGrades() {\n        return grades;\n    }\n}\n```"
  },
  {
    "task": "Construct a class for a rectangle that has attributes for width and height, and methods to calculate area and perimeter.",
    "code": "```java\npublic class Rectangle {\n    private double width;\n    private double height;\n\n    public Rectangle(double width, double height) {\n        this.width = width;\n        this.height = height;\n    }\n\n    public double calculateArea() {\n        return width * height;\n    }\n\n    public double calculatePerimeter() {\n        return 2 * (width + height);\n    }\n\n    public double getWidth() {\n        return width;\n    }\n\n    public void setWidth(double width) {\n        this.width = width;\n    }\n\n    public double getHeight() {\n        return height;\n    }\n\n    public void setHeight(double height) {\n        this.height = height;\n    }\n}\n```"
  },
  {
    "task": "Formulate a class for a smartphone with properties for brand, model, and battery life, and a method to make a call.",
    "code": "```java\npublic class Smartphone {\n    private String brand;\n    private String model;\n    private int batteryLife;\n\n    public Smartphone(String brand, String model, int batteryLife) {\n        this.brand = brand;\n        this.model = model;\n        this.batteryLife = batteryLife;\n    }\n\n    public void makeCall(String phoneNumber) {\n        System.out.println(\"Making a call to \" + phoneNumber);\n    }\n\n    // Getters and setters can be added if needed\n}\n```"
  },
  {
    "task": "Build a class representing a movie with attributes for title, director, and duration, and a method to play the movie.",
    "code": "```java\npublic class Movie {\n    private String title;\n    private String director;\n    private int duration;\n\n    public Movie(String title, String director, int duration) {\n        this.title = title;\n        this.director = director;\n        this.duration = duration;\n    }\n\n    public void play() {\n        System.out.println(\"Playing movie: \" + title);\n    }\n\n    public String getTitle() {\n        return title;\n    }\n\n    public void setTitle(String title) {\n        this.title = title;\n    }\n\n    public String getDirector() {\n        return director;\n    }\n\n    public void setDirector(String director) {\n        this.director = director;\n    }\n\n    public int getDuration() {\n        return duration;\n    }\n\n    public void setDuration(int duration) {\n        this.duration = duration;\n    }\n}\n```"
  },
  {
    "task": "Create a class for an employee with attributes for name, position, and salary, and a method to display their profile.",
    "code": "```java\npublic class Employee {\n    private String name;\n    private String position;\n    private double salary;\n\n    public Employee(String name, String position, double salary) {\n        this.name = name;\n        this.position = position;\n        this.salary = salary;\n    }\n\n    public void displayProfile() {\n        System.out.println(\"Name: \" + name);\n        System.out.println(\"Position: \" + position);\n        System.out.println(\"Salary: $\" + salary);\n    }\n\n    // Example usage\n    public static void main(String[] args) {\n        Employee employee = new Employee(\"John Doe\", \"Software Engineer\", 75000);\n        employee.displayProfile();\n    }\n}\n```"
  },
  {
    "task": "Design a class for a library that includes attributes for name, location, and books available, and a method to add a new book.",
    "code": "```java\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class Library {\n    private String name;\n    private String location;\n    private List<String> booksAvailable;\n\n    public Library(String name, String location) {\n        this.name = name;\n        this.location = location;\n        this.booksAvailable = new ArrayList<>();\n    }\n\n    public void addBook(String book) {\n        booksAvailable.add(book);\n    }\n\n    // Getters and Setters for the attributes can be added here if needed\n}\n```"
  },
  {
    "task": "Develop a class for a shopping cart with properties for items and total cost, and methods to add and remove items.",
    "code": "```java\nimport java.util.ArrayList;\nimport java.util.List;\n\nclass ShoppingCart {\n    private List<String> items;\n    private double totalCost;\n\n    public ShoppingCart() {\n        this.items = new ArrayList<>();\n        this.totalCost = 0.0;\n    }\n\n    public void addItem(String item, double price) {\n        items.add(item);\n        totalCost += price;\n    }\n\n    public void removeItem(String item, double price) {\n        if (items.remove(item)) {\n            totalCost -= price;\n        }\n    }\n\n    public List<String> getItems() {\n        return new ArrayList<>(items);\n    }\n\n    public double getTotalCost() {\n        return totalCost;\n    }\n}\n```"
  },
  {
    "task": "Implement a class for a thermostat with attributes for current temperature and desired temperature, and a method to adjust the temperature.",
    "code": "```java\npublic class Thermostat {\n    private double currentTemperature;\n    private double desiredTemperature;\n\n    public Thermostat(double currentTemperature, double desiredTemperature) {\n        this.currentTemperature = currentTemperature;\n        this.desiredTemperature = desiredTemperature;\n    }\n\n    public double getCurrentTemperature() {\n        return currentTemperature;\n    }\n\n    public void setCurrentTemperature(double currentTemperature) {\n        this.currentTemperature = currentTemperature;\n    }\n\n    public double getDesiredTemperature() {\n        return desiredTemperature;\n    }\n\n    public void setDesiredTemperature(double desiredTemperature) {\n        this.desiredTemperature = desiredTemperature;\n    }\n\n    public void adjustTemperature() {\n        if (currentTemperature < desiredTemperature) {\n            currentTemperature++;\n        } else if (currentTemperature > desiredTemperature) {\n            currentTemperature--;\n        }\n    }\n}\n```"
  },
  {
    "task": "Formulate a class for a person with attributes for first name, last name, and age, and a method to return the full name.",
    "code": "```java\npublic class Person {\n    private String firstName;\n    private String lastName;\n    private int age;\n\n    public Person(String firstName, String lastName, int age) {\n        this.firstName = firstName;\n        this.lastName = lastName;\n        this.age = age;\n    }\n\n    public String getFullName() {\n        return firstName + \" \" + lastName;\n    }\n\n    public String getFirstName() {\n        return firstName;\n    }\n\n    public void setFirstName(String firstName) {\n        this.firstName = firstName;\n    }\n\n    public String getLastName() {\n        return lastName;\n    }\n\n    public void setLastName(String lastName) {\n        this.lastName = lastName;\n    }\n\n    public int getAge() {\n        return age;\n    }\n\n    public void setAge(int age) {\n        this.age = age;\n    }\n}\n```"
  },
  {
    "task": "Construct a class for a game character with properties for health, strength, and inventory, and a method to attack.",
    "code": "```java\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class GameCharacter {\n    private int health;\n    private int strength;\n    private List<String> inventory;\n\n    public GameCharacter(int health, int strength) {\n        this.health = health;\n        this.strength = strength;\n        this.inventory = new ArrayList<>();\n    }\n\n    public int getHealth() {\n        return health;\n    }\n\n    public void setHealth(int health) {\n        this.health = health;\n    }\n\n    public int getStrength() {\n        return strength;\n    }\n\n    public void setStrength(int strength) {\n        this.strength = strength;\n    }\n\n    public List<String> getInventory() {\n        return inventory;\n    }\n\n    public void addItemToInventory(String item) {\n        inventory.add(item);\n    }\n\n    public void attack(GameCharacter target) {\n        target.setHealth(target.getHealth() - this.strength);\n    }\n}\n```"
  },
  {
    "task": "Create a class for a calendar event with attributes for title, date, and location, and a method to reschedule the event.",
    "code": "```java\nimport java.util.Date;\n\npublic class CalendarEvent {\n    private String title;\n    private Date date;\n    private String location;\n\n    public CalendarEvent(String title, Date date, String location) {\n        this.title = title;\n        this.date = date;\n        this.location = location;\n    }\n\n    public String getTitle() {\n        return title;\n    }\n\n    public Date getDate() {\n        return date;\n    }\n\n    public String getLocation() {\n        return location;\n    }\n\n    public void reschedule(Date newDate) {\n        this.date = newDate;\n    }\n}\n```"
  },
  {
    "task": "Design a class representing a song with properties for title, artist, and duration, and a method to play the song.",
    "code": "```java\npublic class Song {\n    private String title;\n    private String artist;\n    private int duration; // Duration in seconds\n\n    public Song(String title, String artist, int duration) {\n        this.title = title;\n        this.artist = artist;\n        this.duration = duration;\n    }\n\n    public void play() {\n        System.out.println(\"Playing: \" + title + \" by \" + artist);\n    }\n\n    // Getters\n    public String getTitle() {\n        return title;\n    }\n\n    public String getArtist() {\n        return artist;\n    }\n\n    public int getDuration() {\n        return duration;\n    }\n\n    // Setters\n    public void setTitle(String title) {\n        this.title = title;\n    }\n\n    public void setArtist(String artist) {\n        this.artist = artist;\n    }\n\n    public void setDuration(int duration) {\n        this.duration = duration;\n    }\n}\n```"
  },
  {
    "task": "Develop a class for an order in an e-commerce system with attributes for order ID, customer, and items, and a method to calculate total price.",
    "code": "```java\nimport java.util.List;\n\nclass Customer {\n    // Assuming a simple structure for Customer\n    private String name;\n\n    public Customer(String name) {\n        this.name = name;\n    }\n\n    public String getName() {\n        return name;\n    }\n}\n\nclass Item {\n    private String name;\n    private double price;\n\n    public Item(String name, double price) {\n        this.name = name;\n        this.price = price;\n    }\n\n    public double getPrice() {\n        return price;\n    }\n}\n\npublic class Order {\n    private String orderId;\n    private Customer customer;\n    private List<Item> items;\n\n    public Order(String orderId, Customer customer, List<Item> items) {\n        this.orderId = orderId;\n        this.customer = customer;\n        this.items = items;\n    }\n\n    public double calculateTotalPrice() {\n        double total = 0;\n        for (Item item : items) {\n            total += item.getPrice();\n        }\n        return total;\n    }\n}\n```"
  },
  {
    "task": "Build a class for a social media post with attributes for content, author, and timestamp, and a method to like the post.",
    "code": "```java\nimport java.time.LocalDateTime;\n\npublic class SocialMediaPost {\n    private String content;\n    private String author;\n    private LocalDateTime timestamp;\n    private int likes;\n\n    public SocialMediaPost(String content, String author, LocalDateTime timestamp) {\n        this.content = content;\n        this.author = author;\n        this.timestamp = timestamp;\n        this.likes = 0;\n    }\n\n    public void likePost() {\n        this.likes++;\n    }\n\n    public String getContent() {\n        return content;\n    }\n\n    public String getAuthor() {\n        return author;\n    }\n\n    public LocalDateTime getTimestamp() {\n        return timestamp;\n    }\n\n    public int getLikes() {\n        return likes;\n    }\n}\n```"
  },
  {
    "task": "Create a class for a computer with properties for processor, RAM, and storage, and a method to display system specifications.",
    "code": "```java\npublic class Computer {\n    private String processor;\n    private int ram; // in GB\n    private int storage; // in GB\n\n    public Computer(String processor, int ram, int storage) {\n        this.processor = processor;\n        this.ram = ram;\n        this.storage = storage;\n    }\n\n    public void displaySpecifications() {\n        System.out.println(\"Processor: \" + processor);\n        System.out.println(\"RAM: \" + ram + \" GB\");\n        System.out.println(\"Storage: \" + storage + \" GB\");\n    }\n}\n```"
  },
  {
    "task": "Implement a class for a restaurant menu item with attributes for name, price, and description, and a method to update the price.",
    "code": "```java\npublic class MenuItem {\n    private String name;\n    private double price;\n    private String description;\n    \n    public MenuItem(String name, double price, String description) {\n        this.name = name;\n        this.price = price;\n        this.description = description;\n    }\n    \n    public String getName() {\n        return name;\n    }\n    \n    public double getPrice() {\n        return price;\n    }\n    \n    public String getDescription() {\n        return description;\n    }\n    \n    public void updatePrice(double newPrice) {\n        this.price = newPrice;\n    }\n}\n```"
  },
  {
    "task": "Design a class for a package delivery with attributes for tracking number, destination, and status, and a method to update the status.",
    "code": "```java\npublic class PackageDelivery {\n    private String trackingNumber;\n    private String destination;\n    private String status;\n\n    public PackageDelivery(String trackingNumber, String destination, String status) {\n        this.trackingNumber = trackingNumber;\n        this.destination = destination;\n        this.status = status;\n    }\n\n    public String getTrackingNumber() {\n        return trackingNumber;\n    }\n\n    public void setTrackingNumber(String trackingNumber) {\n        this.trackingNumber = trackingNumber;\n    }\n\n    public String getDestination() {\n        return destination;\n    }\n\n    public void setDestination(String destination) {\n        this.destination = destination;\n    }\n\n    public String getStatus() {\n        return status;\n    }\n\n    public void updateStatus(String newStatus) {\n        this.status = newStatus;\n    }\n}\n```"
  },
  {
    "task": "Construct a class representing a pet with attributes for species, age, and name, and a method to display its details.",
    "code": "```java\npublic class Pet {\n    private String species;\n    private int age;\n    private String name;\n\n    public Pet(String species, int age, String name) {\n        this.species = species;\n        this.age = age;\n        this.name = name;\n    }\n\n    public void displayDetails() {\n        System.out.println(\"Species: \" + species);\n        System.out.println(\"Age: \" + age);\n        System.out.println(\"Name: \" + name);\n    }\n}\n```"
  },
  {
    "task": "Formulate a class for a product in a store with properties for SKU, name, and price, and a method to apply a discount.",
    "code": "```java\npublic class Product {\n    private String sku;\n    private String name;\n    private double price;\n\n    public Product(String sku, String name, double price) {\n        this.sku = sku;\n        this.name = name;\n        this.price = price;\n    }\n\n    public String getSku() {\n        return sku;\n    }\n\n    public void setSku(String sku) {\n        this.sku = sku;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public void setName(String name) {\n        this.name = name;\n    }\n\n    public double getPrice() {\n        return price;\n    }\n\n    public void setPrice(double price) {\n        this.price = price;\n    }\n\n    public void applyDiscount(double discountPercentage) {\n        if (discountPercentage < 0 || discountPercentage > 100) {\n            throw new IllegalArgumentException(\"Discount percentage should be between 0 and 100.\");\n        }\n        price -= price * (discountPercentage / 100);\n    }\n}\n```"
  },
  {
    "task": "Develop a class for a university course with attributes for course code, title, and credits, and a method to enroll a student.",
    "code": "```java\npublic class UniversityCourse {\n    private String courseCode;\n    private String title;\n    private int credits;\n\n    public UniversityCourse(String courseCode, String title, int credits) {\n        this.courseCode = courseCode;\n        this.title = title;\n        this.credits = credits;\n    }\n\n    public void enrollStudent(String studentName) {\n        System.out.println(studentName + \" has been enrolled in \" + title);\n    }\n\n    // Getters and Setters for courseCode, title, and credits can be added here if needed\n}\n```"
  },
  {
    "task": "Create a class for a smart light bulb with attributes for color, brightness, and state (on/off), and a method to change the color.",
    "code": "```java\npublic class SmartLightBulb {\n    private String color;\n    private int brightness;\n    private boolean isOn;\n\n    public SmartLightBulb(String color, int brightness, boolean isOn) {\n        this.color = color;\n        this.brightness = brightness;\n        this.isOn = isOn;\n    }\n\n    public void changeColor(String newColor) {\n        this.color = newColor;\n    }\n\n    public String getColor() {\n        return color;\n    }\n\n    public int getBrightness() {\n        return brightness;\n    }\n\n    public boolean isOn() {\n        return isOn;\n    }\n}\n```"
  },
  {
    "task": "Design a class for a blog post with properties for title, content, and date published, and a method to edit the content.",
    "code": "```java\nimport java.time.LocalDate;\n\npublic class BlogPost {\n    private String title;\n    private String content;\n    private LocalDate datePublished;\n\n    public BlogPost(String title, String content, LocalDate datePublished) {\n        this.title = title;\n        this.content = content;\n        this.datePublished = datePublished;\n    }\n\n    public String getTitle() {\n        return title;\n    }\n\n    public String getContent() {\n        return content;\n    }\n\n    public LocalDate getDatePublished() {\n        return datePublished;\n    }\n\n    public void editContent(String newContent) {\n        this.content = newContent;\n    }\n}\n```"
  },
  {
    "task": "Build a class for a bank transaction with attributes for transaction ID, amount, and type, and a method to reverse the transaction.",
    "code": "```java\npublic class BankTransaction {\n    private String transactionId;\n    private double amount;\n    private String type;\n\n    public BankTransaction(String transactionId, double amount, String type) {\n        this.transactionId = transactionId;\n        this.amount = amount;\n        this.type = type;\n    }\n\n    public void reverseTransaction() {\n        if (this.type.equalsIgnoreCase(\"credit\")) {\n            this.type = \"debit\";\n        } else if (this.type.equalsIgnoreCase(\"debit\")) {\n            this.type = \"credit\";\n        }\n    }\n\n    public String getTransactionId() {\n        return transactionId;\n    }\n\n    public double getAmount() {\n        return amount;\n    }\n\n    public String getType() {\n        return type;\n    }\n}\n```"
  },
  {
    "task": "Implement a class for a city with properties for name, population, and area, and a method to calculate population density.",
    "code": "```java\npublic class City {\n    private String name;\n    private int population;\n    private double area;\n    \n    public City(String name, int population, double area) {\n        this.name = name;\n        this.population = population;\n        this.area = area;\n    }\n    \n    public double calculatePopulationDensity() {\n        return population / area;\n    }\n    \n    // Getters and setters can be added here if needed\n}\n```"
  },
  {
    "task": "Construct a class for a library member with attributes for member ID, name, and borrowed books, and a method to borrow a book.",
    "code": "```java\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class LibraryMember {\n    private String memberId;\n    private String name;\n    private List<String> borrowedBooks;\n\n    public LibraryMember(String memberId, String name) {\n        this.memberId = memberId;\n        this.name = name;\n        this.borrowedBooks = new ArrayList<>();\n    }\n\n    public void borrowBook(String bookTitle) {\n        borrowedBooks.add(bookTitle);\n    }\n    \n    // Getters and Setters for memberId, name, and borrowedBooks can be added if needed\n}\n```"
  },
  {
    "task": "Create a class for a flight reservation with attributes for flight number, passenger name, and seat number, and a method to change the seat.",
    "code": "```java\npublic class FlightReservation {\n    private String flightNumber;\n    private String passengerName;\n    private String seatNumber;\n\n    public FlightReservation(String flightNumber, String passengerName, String seatNumber) {\n        this.flightNumber = flightNumber;\n        this.passengerName = passengerName;\n        this.seatNumber = seatNumber;\n    }\n\n    public String getFlightNumber() {\n        return flightNumber;\n    }\n\n    public String getPassengerName() {\n        return passengerName;\n    }\n\n    public String getSeatNumber() {\n        return seatNumber;\n    }\n\n    public void changeSeat(String newSeatNumber) {\n        this.seatNumber = newSeatNumber;\n    }\n}\n```"
  },
  {
    "task": "Develop a class for a digital photo album with properties for album name, photos, and a method to add a new photo.",
    "code": "```java\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class DigitalPhotoAlbum {\n    private String albumName;\n    private List<String> photos;\n\n    public DigitalPhotoAlbum(String albumName) {\n        this.albumName = albumName;\n        this.photos = new ArrayList<>();\n    }\n\n    public void addPhoto(String photo) {\n        photos.add(photo);\n    }\n\n    public String getAlbumName() {\n        return albumName;\n    }\n\n    public List<String> getPhotos() {\n        return new ArrayList<>(photos);\n    }\n}\n```"
  },
  {
    "task": "Design a class for a task in a to-do list with attributes for description, deadline, and status, and a method to mark it as complete.",
    "code": "```java\npublic class Task {\n    private String description;\n    private String deadline;\n    private boolean isComplete;\n\n    public Task(String description, String deadline) {\n        this.description = description;\n        this.deadline = deadline;\n        this.isComplete = false;\n    }\n\n    public String getDescription() {\n        return description;\n    }\n\n    public void setDescription(String description) {\n        this.description = description;\n    }\n\n    public String getDeadline() {\n        return deadline;\n    }\n\n    public void setDeadline(String deadline) {\n        this.deadline = deadline;\n    }\n\n    public boolean isComplete() {\n        return isComplete;\n    }\n\n    public void markAsComplete() {\n        this.isComplete = true;\n    }\n}\n```"
  },
  {
    "task": "Formulate a class for a conference speaker with attributes for name, topic, and time slot, and a method to update the time slot.",
    "code": "```java\npublic class ConferenceSpeaker {\n    private String name;\n    private String topic;\n    private String timeSlot;\n\n    public ConferenceSpeaker(String name, String topic, String timeSlot) {\n        this.name = name;\n        this.topic = topic;\n        this.timeSlot = timeSlot;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public String getTopic() {\n        return topic;\n    }\n\n    public String getTimeSlot() {\n        return timeSlot;\n    }\n\n    public void updateTimeSlot(String newTimeSlot) {\n        this.timeSlot = newTimeSlot;\n    }\n}\n```"
  },
  {
    "task": "Construct a class for a real estate property with attributes for address, price, and square footage, and a method to change the price.",
    "code": "```java\npublic class RealEstateProperty {\n    private String address;\n    private double price;\n    private double squareFootage;\n\n    public RealEstateProperty(String address, double price, double squareFootage) {\n        this.address = address;\n        this.price = price;\n        this.squareFootage = squareFootage;\n    }\n\n    public String getAddress() {\n        return address;\n    }\n\n    public double getPrice() {\n        return price;\n    }\n\n    public double getSquareFootage() {\n        return squareFootage;\n    }\n\n    public void setPrice(double newPrice) {\n        this.price = newPrice;\n    }\n}\n```"
  },
  {
    "task": "Create a class for a weather forecast with properties for temperature, humidity, and condition, and a method to update the forecast.",
    "code": "```java\npublic class WeatherForecast {\n    private double temperature;\n    private double humidity;\n    private String condition;\n\n    public WeatherForecast(double temperature, double humidity, String condition) {\n        this.temperature = temperature;\n        this.humidity = humidity;\n        this.condition = condition;\n    }\n\n    public double getTemperature() {\n        return temperature;\n    }\n\n    public void setTemperature(double temperature) {\n        this.temperature = temperature;\n    }\n\n    public double getHumidity() {\n        return humidity;\n    }\n\n    public void setHumidity(double humidity) {\n        this.humidity = humidity;\n    }\n\n    public String getCondition() {\n        return condition;\n    }\n\n    public void setCondition(String condition) {\n        this.condition = condition;\n    }\n\n    public void updateForecast(double temperature, double humidity, String condition) {\n        this.temperature = temperature;\n        this.humidity = humidity;\n        this.condition = condition;\n    }\n}\n```"
  },
  {
    "task": "Build a class for a musical instrument with attributes for type, brand, and model, and a method to play a note.",
    "code": "```java\npublic class MusicalInstrument {\n    private String type;\n    private String brand;\n    private String model;\n\n    public MusicalInstrument(String type, String brand, String model) {\n        this.type = type;\n        this.brand = brand;\n        this.model = model;\n    }\n\n    public void playNote() {\n        System.out.println(\"Playing a note on the \" + brand + \" \" + model + \" \" + type + \".\");\n    }\n\n    // Getters and setters can be added here if needed\n}\n```"
  },
  {
    "task": "Design a class for a sports team with attributes for team name, players, and coach, and a method to add a new player.",
    "code": "```java\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class SportsTeam {\n    private String teamName;\n    private List<String> players;\n    private String coach;\n\n    public SportsTeam(String teamName, String coach) {\n        this.teamName = teamName;\n        this.coach = coach;\n        this.players = new ArrayList<>();\n    }\n\n    public void addPlayer(String player) {\n        players.add(player);\n    }\n\n    // Additional getters and setters can be added as needed\n}\n```"
  },
  {
    "task": "Implement a class for a podcast episode with attributes for title, duration, and host, and a method to play the episode.",
    "code": "```java\npublic class PodcastEpisode {\n    private String title;\n    private int duration; // Duration in minutes\n    private String host;\n\n    public PodcastEpisode(String title, int duration, String host) {\n        this.title = title;\n        this.duration = duration;\n        this.host = host;\n    }\n\n    public void play() {\n        System.out.println(\"Playing episode: \" + title + \" hosted by \" + host + \" for \" + duration + \" minutes.\");\n    }\n\n    // Getters and setters can be added if needed\n}\n```"
  },
  {
    "task": "Develop a class for a space mission with properties for mission name, crew, and launch date, and a method to launch the mission.",
    "code": "```java\nimport java.util.List;\n\npublic class SpaceMission {\n    private String missionName;\n    private List<String> crew;\n    private String launchDate;\n\n    public SpaceMission(String missionName, List<String> crew, String launchDate) {\n        this.missionName = missionName;\n        this.crew = crew;\n        this.launchDate = launchDate;\n    }\n\n    public void launchMission() {\n        System.out.println(\"Launching mission: \" + missionName + \" on \" + launchDate);\n    }\n\n    public String getMissionName() {\n        return missionName;\n    }\n\n    public List<String> getCrew() {\n        return crew;\n    }\n\n    public String getLaunchDate() {\n        return launchDate;\n    }\n}\n```"
  },
  {
    "task": "Create a class for a virtual assistant with attributes for name, language, and skills, and a method to add a new skill.",
    "code": "```java\npublic class VirtualAssistant {\n    private String name;\n    private String language;\n    private List<String> skills;\n\n    public VirtualAssistant(String name, String language) {\n        this.name = name;\n        this.language = language;\n        this.skills = new ArrayList<>();\n    }\n\n    public void addSkill(String skill) {\n        skills.add(skill);\n    }\n\n    // Getters and setters for name, language, and skills can be added if needed\n}\n```"
  },
  {
    "task": "Formulate a class for a news article with attributes for headline, content, and author, and a method to publish the article.",
    "code": "```java\npublic class NewsArticle {\n    private String headline;\n    private String content;\n    private String author;\n\n    public NewsArticle(String headline, String content, String author) {\n        this.headline = headline;\n        this.content = content;\n        this.author = author;\n    }\n\n    public void publishArticle() {\n        System.out.println(\"Headline: \" + headline);\n        System.out.println(\"Content: \" + content);\n        System.out.println(\"Author: \" + author);\n    }\n}\n```"
  },
  {
    "task": "Construct a class for a hiking trail with attributes for trail name, length, and difficulty, and a method to update the difficulty.",
    "code": "```java\npublic class HikingTrail {\n    private String trailName;\n    private double length;\n    private String difficulty;\n\n    public HikingTrail(String trailName, double length, String difficulty) {\n        this.trailName = trailName;\n        this.length = length;\n        this.difficulty = difficulty;\n    }\n\n    public String getTrailName() {\n        return trailName;\n    }\n\n    public void setTrailName(String trailName) {\n        this.trailName = trailName;\n    }\n\n    public double getLength() {\n        return length;\n    }\n\n    public void setLength(double length) {\n        this.length = length;\n    }\n\n    public String getDifficulty() {\n        return difficulty;\n    }\n\n    public void updateDifficulty(String difficulty) {\n        this.difficulty = difficulty;\n    }\n}\n```"
  },
  {
    "task": "Design a class for a subscription service with properties for service name, subscriber count, and subscription fee, and a method to update the fee.",
    "code": "```java\npublic class SubscriptionService {\n    private String serviceName;\n    private int subscriberCount;\n    private double subscriptionFee;\n\n    public SubscriptionService(String serviceName, int subscriberCount, double subscriptionFee) {\n        this.serviceName = serviceName;\n        this.subscriberCount = subscriberCount;\n        this.subscriptionFee = subscriptionFee;\n    }\n\n    public String getServiceName() {\n        return serviceName;\n    }\n\n    public void setServiceName(String serviceName) {\n        this.serviceName = serviceName;\n    }\n\n    public int getSubscriberCount() {\n        return subscriberCount;\n    }\n\n    public void setSubscriberCount(int subscriberCount) {\n        this.subscriberCount = subscriberCount;\n    }\n\n    public double getSubscriptionFee() {\n        return subscriptionFee;\n    }\n\n    public void setSubscriptionFee(double subscriptionFee) {\n        this.subscriptionFee = subscriptionFee;\n    }\n\n    public void updateFee(double newFee) {\n        setSubscriptionFee(newFee);\n    }\n}\n```"
  },
  {
    "task": "Build a class for a digital wallet with attributes for balance, transaction history, and a method to add funds.",
    "code": "```java\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class DigitalWallet {\n    private double balance;\n    private List<String> transactionHistory;\n\n    public DigitalWallet() {\n        this.balance = 0.0;\n        this.transactionHistory = new ArrayList<>();\n    }\n\n    public void addFunds(double amount) {\n        if (amount > 0) {\n            balance += amount;\n            transactionHistory.add(\"Added: $\" + amount);\n        }\n    }\n\n    public double getBalance() {\n        return balance;\n    }\n\n    public List<String> getTransactionHistory() {\n        return new ArrayList<>(transactionHistory);\n    }\n}\n```"
  },
  {
    "task": "Implement a class for a cooking recipe with attributes for name, ingredients, and instructions, and a method to update the instructions.",
    "code": "```java\nimport java.util.List;\n\npublic class CookingRecipe {\n    private String name;\n    private List<String> ingredients;\n    private String instructions;\n\n    public CookingRecipe(String name, List<String> ingredients, String instructions) {\n        this.name = name;\n        this.ingredients = ingredients;\n        this.instructions = instructions;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public List<String> getIngredients() {\n        return ingredients;\n    }\n\n    public String getInstructions() {\n        return instructions;\n    }\n\n    public void updateInstructions(String newInstructions) {\n        this.instructions = newInstructions;\n    }\n}\n```"
  },
  {
    "task": "Develop a class for a time zone with properties for zone name, offset, and a method to convert time from another time zone.",
    "code": "```java\npublic class TimeZone {\n\n    private String zoneName;\n    private int offset;\n\n    public TimeZone(String zoneName, int offset) {\n        this.zoneName = zoneName;\n        this.offset = offset;\n    }\n\n    public String getZoneName() {\n        return zoneName;\n    }\n\n    public int getOffset() {\n        return offset;\n    }\n\n    public int convertTime(int time, TimeZone otherZone) {\n        int difference = this.offset - otherZone.getOffset();\n        return time + difference;\n    }\n}\n```"
  },
  {
    "task": "Create a class for a camera with attributes for resolution, brand, and model, and a method to take a picture.",
    "code": "```java\npublic class Camera {\n    private String resolution;\n    private String brand;\n    private String model;\n\n    public Camera(String resolution, String brand, String model) {\n        this.resolution = resolution;\n        this.brand = brand;\n        this.model = model;\n    }\n\n    public void takePicture() {\n        System.out.println(\"Picture taken with \" + brand + \" \" + model + \" at \" + resolution + \" resolution.\");\n    }\n\n    // Getters and setters for the attributes can be added if needed\n}\n```"
  },
  {
    "task": "Design a class for a gaming console with properties for brand, model, and storage capacity, and a method to install a game.",
    "code": "```java\npublic class GamingConsole {\n    private String brand;\n    private String model;\n    private int storageCapacity;\n\n    public GamingConsole(String brand, String model, int storageCapacity) {\n        this.brand = brand;\n        this.model = model;\n        this.storageCapacity = storageCapacity;\n    }\n\n    public void installGame(String gameName) {\n        System.out.println(\"Installing \" + gameName + \" on \" + brand + \" \" + model + \".\");\n    }\n\n    // Getters and Setters\n    public String getBrand() {\n        return brand;\n    }\n\n    public void setBrand(String brand) {\n        this.brand = brand;\n    }\n\n    public String getModel() {\n        return model;\n    }\n\n    public void setModel(String model) {\n        this.model = model;\n    }\n\n    public int getStorageCapacity() {\n        return storageCapacity;\n    }\n\n    public void setStorageCapacity(int storageCapacity) {\n        this.storageCapacity = storageCapacity;\n    }\n}\n```"
  },
  {
    "task": "Formulate a class for a museum exhibit with attributes for exhibit name, artist, and year, and a method to update the year.",
    "code": "```java\npublic class MuseumExhibit {\n    private String exhibitName;\n    private String artist;\n    private int year;\n\n    public MuseumExhibit(String exhibitName, String artist, int year) {\n        this.exhibitName = exhibitName;\n        this.artist = artist;\n        this.year = year;\n    }\n\n    public String getExhibitName() {\n        return exhibitName;\n    }\n\n    public void setExhibitName(String exhibitName) {\n        this.exhibitName = exhibitName;\n    }\n\n    public String getArtist() {\n        return artist;\n    }\n\n    public void setArtist(String artist) {\n        this.artist = artist;\n    }\n\n    public int getYear() {\n        return year;\n    }\n\n    public void updateYear(int year) {\n        this.year = year;\n    }\n}\n```"
  },
  {
    "task": "Construct a class for a fitness tracker with attributes for steps, calories burned, and heart rate, and a method to add steps.",
    "code": "```java\npublic class FitnessTracker {\n    private int steps;\n    private int caloriesBurned;\n    private int heartRate;\n\n    public FitnessTracker(int steps, int caloriesBurned, int heartRate) {\n        this.steps = steps;\n        this.caloriesBurned = caloriesBurned;\n        this.heartRate = heartRate;\n    }\n\n    public void addSteps(int additionalSteps) {\n        this.steps += additionalSteps;\n    }\n\n    // Getters and setters can be added here if needed\n}\n```"
  },
  {
    "task": "Build a class for an aquarium with properties for tank size, fish species, and water temperature, and a method to add a new fish.",
    "code": "```java\npublic class Aquarium {\n    private double tankSize;\n    private String fishSpecies;\n    private double waterTemperature;\n\n    public Aquarium(double tankSize, String fishSpecies, double waterTemperature) {\n        this.tankSize = tankSize;\n        this.fishSpecies = fishSpecies;\n        this.waterTemperature = waterTemperature;\n    }\n\n    public void addFish(String newFishSpecies) {\n        this.fishSpecies += \", \" + newFishSpecies;\n    }\n\n    public double getTankSize() {\n        return tankSize;\n    }\n\n    public void setTankSize(double tankSize) {\n        this.tankSize = tankSize;\n    }\n\n    public String getFishSpecies() {\n        return fishSpecies;\n    }\n\n    public void setFishSpecies(String fishSpecies) {\n        this.fishSpecies = fishSpecies;\n    }\n\n    public double getWaterTemperature() {\n        return waterTemperature;\n    }\n\n    public void setWaterTemperature(double waterTemperature) {\n        this.waterTemperature = waterTemperature;\n    }\n}\n```"
  },
  {
    "task": "Create a class for a chat message with attributes for sender, content, and timestamp, and a method to edit the content.",
    "code": "```java\nimport java.time.LocalDateTime;\n\npublic class ChatMessage {\n    private String sender;\n    private String content;\n    private LocalDateTime timestamp;\n\n    public ChatMessage(String sender, String content, LocalDateTime timestamp) {\n        this.sender = sender;\n        this.content = content;\n        this.timestamp = timestamp;\n    }\n\n    public String getSender() {\n        return sender;\n    }\n\n    public String getContent() {\n        return content;\n    }\n\n    public LocalDateTime getTimestamp() {\n        return timestamp;\n    }\n\n    public void editContent(String newContent) {\n        this.content = newContent;\n    }\n}\n```"
  },
  {
    "task": "Design a class for a vending machine with properties for items available, prices, and a method to dispense an item.",
    "code": "```java\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class VendingMachine {\n    private Map<String, Double> items;\n\n    public VendingMachine() {\n        items = new HashMap<>();\n    }\n\n    public void addItem(String itemName, double price) {\n        items.put(itemName, price);\n    }\n\n    public String dispenseItem(String itemName) {\n        if (items.containsKey(itemName)) {\n            return \"Dispensing \" + itemName;\n        } else {\n            return \"Item not available\";\n        }\n    }\n\n    public static void main(String[] args) {\n        VendingMachine vendingMachine = new VendingMachine();\n        vendingMachine.addItem(\"Soda\", 1.50);\n        vendingMachine.addItem(\"Chips\", 1.00);\n        System.out.println(vendingMachine.dispenseItem(\"Soda\"));\n        System.out.println(vendingMachine.dispenseItem(\"Candy\"));\n    }\n}\n```"
  },
  {
    "task": "Implement a class for a digital clock with attributes for current time, time zone, and a method to set an alarm.",
    "code": "```java\npublic class DigitalClock {\n    private String currentTime;\n    private String timeZone;\n    private String alarmTime;\n\n    public DigitalClock(String currentTime, String timeZone) {\n        this.currentTime = currentTime;\n        this.timeZone = timeZone;\n    }\n\n    public String getCurrentTime() {\n        return currentTime;\n    }\n\n    public void setCurrentTime(String currentTime) {\n        this.currentTime = currentTime;\n    }\n\n    public String getTimeZone() {\n        return timeZone;\n    }\n\n    public void setTimeZone(String timeZone) {\n        this.timeZone = timeZone;\n    }\n\n    public String getAlarmTime() {\n        return alarmTime;\n    }\n\n    public void setAlarm(String alarmTime) {\n        this.alarmTime = alarmTime;\n    }\n}\n```"
  },
  {
    "task": "Develop a class for a historical figure with attributes for name, birthdate, and achievements, and a method to add an achievement.",
    "code": "```java\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class HistoricalFigure {\n    private String name;\n    private String birthdate;\n    private List<String> achievements;\n\n    public HistoricalFigure(String name, String birthdate) {\n        this.name = name;\n        this.birthdate = birthdate;\n        this.achievements = new ArrayList<>();\n    }\n\n    public void addAchievement(String achievement) {\n        achievements.add(achievement);\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public String getBirthdate() {\n        return birthdate;\n    }\n\n    public List<String> getAchievements() {\n        return achievements;\n    }\n}\n```"
  },
  {
    "task": "Formulate a class for a travel itinerary with attributes for destinations, travel dates, and activities, and a method to add a destination.",
    "code": "```java\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class TravelItinerary {\n    private List<String> destinations;\n    private List<String> travelDates;\n    private List<String> activities;\n\n    public TravelItinerary() {\n        this.destinations = new ArrayList<>();\n        this.travelDates = new ArrayList<>();\n        this.activities = new ArrayList<>();\n    }\n\n    public void addDestination(String destination) {\n        destinations.add(destination);\n    }\n\n    public List<String> getDestinations() {\n        return destinations;\n    }\n\n    public List<String> getTravelDates() {\n        return travelDates;\n    }\n\n    public List<String> getActivities() {\n        return activities;\n    }\n}\n```"
  },
  {
    "task": "Construct a class for a fashion brand with properties for brand name, founder, and product lines, and a method to launch a new product line.",
    "code": "```java\npublic class FashionBrand {\n    private String brandName;\n    private String founder;\n    private List<String> productLines;\n\n    public FashionBrand(String brandName, String founder) {\n        this.brandName = brandName;\n        this.founder = founder;\n        this.productLines = new ArrayList<>();\n    }\n\n    public String getBrandName() {\n        return brandName;\n    }\n\n    public void setBrandName(String brandName) {\n        this.brandName = brandName;\n    }\n\n    public String getFounder() {\n        return founder;\n    }\n\n    public void setFounder(String founder) {\n        this.founder = founder;\n    }\n\n    public List<String> getProductLines() {\n        return productLines;\n    }\n\n    public void launchNewProductLine(String productLine) {\n        productLines.add(productLine);\n    }\n}\n```"
  },
  {
    "task": "Create a class for a video game with attributes for title, genre, and rating, and a method to update the rating.",
    "code": "```java\npublic class VideoGame {\n    private String title;\n    private String genre;\n    private double rating;\n\n    public VideoGame(String title, String genre, double rating) {\n        this.title = title;\n        this.genre = genre;\n        this.rating = rating;\n    }\n\n    public String getTitle() {\n        return title;\n    }\n\n    public String getGenre() {\n        return genre;\n    }\n\n    public double getRating() {\n        return rating;\n    }\n\n    public void updateRating(double newRating) {\n        this.rating = newRating;\n    }\n}\n```"
  },
  {
    "task": "Build a class for a scientific experiment with attributes for experiment name, hypothesis, and results, and a method to record results.",
    "code": "```java\npublic class ScientificExperiment {\n    private String experimentName;\n    private String hypothesis;\n    private String results;\n\n    public ScientificExperiment(String experimentName, String hypothesis) {\n        this.experimentName = experimentName;\n        this.hypothesis = hypothesis;\n        this.results = \"\";\n    }\n\n    public String getExperimentName() {\n        return experimentName;\n    }\n\n    public void setExperimentName(String experimentName) {\n        this.experimentName = experimentName;\n    }\n\n    public String getHypothesis() {\n        return hypothesis;\n    }\n\n    public void setHypothesis(String hypothesis) {\n        this.hypothesis = hypothesis;\n    }\n\n    public String getResults() {\n        return results;\n    }\n\n    public void recordResults(String results) {\n        this.results = results;\n    }\n}\n```"
  },
  {
    "task": "Design a class for a gourmet dish with properties for dish name, ingredients, and cooking time, and a method to change cooking time.",
    "code": "```java\npublic class GourmetDish {\n    private String dishName;\n    private String[] ingredients;\n    private int cookingTime;\n\n    public GourmetDish(String dishName, String[] ingredients, int cookingTime) {\n        this.dishName = dishName;\n        this.ingredients = ingredients;\n        this.cookingTime = cookingTime;\n    }\n\n    public String getDishName() {\n        return dishName;\n    }\n\n    public String[] getIngredients() {\n        return ingredients;\n    }\n\n    public int getCookingTime() {\n        return cookingTime;\n    }\n\n    public void setCookingTime(int cookingTime) {\n        this.cookingTime = cookingTime;\n    }\n}\n```"
  },
  {
    "task": "Implement a class for a political office with attributes for office title, holder, and term length, and a method to change the holder.",
    "code": "```java\npublic class PoliticalOffice {\n    private String officeTitle;\n    private String holder;\n    private int termLength;\n\n    public PoliticalOffice(String officeTitle, String holder, int termLength) {\n        this.officeTitle = officeTitle;\n        this.holder = holder;\n        this.termLength = termLength;\n    }\n\n    public String getOfficeTitle() {\n        return officeTitle;\n    }\n\n    public String getHolder() {\n        return holder;\n    }\n\n    public int getTermLength() {\n        return termLength;\n    }\n\n    public void changeHolder(String newHolder) {\n        this.holder = newHolder;\n    }\n}\n```"
  },
  {
    "task": "Develop a class for an astronomical object with properties for name, type, and distance from Earth, and a method to update the distance.",
    "code": "```java\npublic class AstronomicalObject {\n    private String name;\n    private String type;\n    private double distanceFromEarth;\n\n    public AstronomicalObject(String name, String type, double distanceFromEarth) {\n        this.name = name;\n        this.type = type;\n        this.distanceFromEarth = distanceFromEarth;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public String getType() {\n        return type;\n    }\n\n    public double getDistanceFromEarth() {\n        return distanceFromEarth;\n    }\n\n    public void updateDistance(double newDistance) {\n        this.distanceFromEarth = newDistance;\n    }\n}\n```"
  },
  {
    "task": "Formulate a class for a public transportation route with attributes for route number, stops, and schedule, and a method to add a stop.",
    "code": "```java\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class PublicTransportationRoute {\n    private int routeNumber;\n    private List<String> stops;\n    private String schedule;\n\n    public PublicTransportationRoute(int routeNumber, String schedule) {\n        this.routeNumber = routeNumber;\n        this.schedule = schedule;\n        this.stops = new ArrayList<>();\n    }\n\n    public void addStop(String stop) {\n        stops.add(stop);\n    }\n\n    // Getters and setters can be added here if needed\n}\n```"
  },
  {
    "task": "Construct a class for a board game with properties for game name, player count, and rules, and a method to change the rules.",
    "code": "```java\npublic class BoardGame {\n    private String gameName;\n    private int playerCount;\n    private String rules;\n\n    public BoardGame(String gameName, int playerCount, String rules) {\n        this.gameName = gameName;\n        this.playerCount = playerCount;\n        this.rules = rules;\n    }\n\n    public String getGameName() {\n        return gameName;\n    }\n\n    public void setGameName(String gameName) {\n        this.gameName = gameName;\n    }\n\n    public int getPlayerCount() {\n        return playerCount;\n    }\n\n    public void setPlayerCount(int playerCount) {\n        this.playerCount = playerCount;\n    }\n\n    public String getRules() {\n        return rules;\n    }\n\n    public void setRules(String rules) {\n        this.rules = rules;\n    }\n\n    public void changeRules(String newRules) {\n        this.rules = newRules;\n    }\n}\n```"
  },
  {
    "task": "Create a class for a customer loyalty program with attributes for program name, points, and rewards, and a method to redeem points.",
    "code": "```java\npublic class CustomerLoyaltyProgram {\n    private String programName;\n    private int points;\n    private String rewards;\n\n    public CustomerLoyaltyProgram(String programName, int points, String rewards) {\n        this.programName = programName;\n        this.points = points;\n        this.rewards = rewards;\n    }\n\n    public String getProgramName() {\n        return programName;\n    }\n\n    public void setProgramName(String programName) {\n        this.programName = programName;\n    }\n\n    public int getPoints() {\n        return points;\n    }\n\n    public void setPoints(int points) {\n        this.points = points;\n    }\n\n    public String getRewards() {\n        return rewards;\n    }\n\n    public void setRewards(String rewards) {\n        this.rewards = rewards;\n    }\n\n    public void redeemPoints(int pointsToRedeem) {\n        if (pointsToRedeem <= points) {\n            points -= pointsToRedeem;\n            // Implement reward redemption logic here\n        } else {\n            throw new IllegalArgumentException(\"Not enough points to redeem.\");\n        }\n    }\n}\n```"
  },
  {
    "task": "Design a class for an art gallery with properties for gallery name, location, and exhibitions, and a method to add a new exhibition.",
    "code": "```java\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class ArtGallery {\n    private String galleryName;\n    private String location;\n    private List<String> exhibitions;\n\n    public ArtGallery(String galleryName, String location) {\n        this.galleryName = galleryName;\n        this.location = location;\n        this.exhibitions = new ArrayList<>();\n    }\n\n    public void addExhibition(String exhibition) {\n        exhibitions.add(exhibition);\n    }\n\n    // Getter methods\n    public String getGalleryName() {\n        return galleryName;\n    }\n\n    public String getLocation() {\n        return location;\n    }\n\n    public List<String> getExhibitions() {\n        return new ArrayList<>(exhibitions);\n    }\n}\n```"
  },
  {
    "task": "Build a class for a personal blog with attributes for blog name, posts, and a method to add a new post.",
    "code": "```java\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class PersonalBlog {\n    private String blogName;\n    private List<String> posts;\n\n    public PersonalBlog(String blogName) {\n        this.blogName = blogName;\n        this.posts = new ArrayList<>();\n    }\n\n    public void addPost(String post) {\n        posts.add(post);\n    }\n\n    public String getBlogName() {\n        return blogName;\n    }\n\n    public List<String> getPosts() {\n        return posts;\n    }\n}\n```"
  },
  {
    "task": "Implement a class for a mobile application with properties for app name, version, and developer, and a method to update the version.",
    "code": "```java\npublic class MobileApp {\n    private String appName;\n    private String version;\n    private String developer;\n\n    public MobileApp(String appName, String version, String developer) {\n        this.appName = appName;\n        this.version = version;\n        this.developer = developer;\n    }\n\n    public String getAppName() {\n        return appName;\n    }\n\n    public void setAppName(String appName) {\n        this.appName = appName;\n    }\n\n    public String getVersion() {\n        return version;\n    }\n\n    public void setVersion(String version) {\n        this.version = version;\n    }\n\n    public String getDeveloper() {\n        return developer;\n    }\n\n    public void setDeveloper(String developer) {\n        this.developer = developer;\n    }\n\n    public void updateVersion(String newVersion) {\n        this.version = newVersion;\n    }\n}\n```"
  },
  {
    "task": "Develop a class for a language translator with attributes for source language, target language, and translation method, and a method to translate a text.",
    "code": "```java\npublic class LanguageTranslator {\n    private String sourceLanguage;\n    private String targetLanguage;\n    private String translationMethod;\n\n    public LanguageTranslator(String sourceLanguage, String targetLanguage, String translationMethod) {\n        this.sourceLanguage = sourceLanguage;\n        this.targetLanguage = targetLanguage;\n        this.translationMethod = translationMethod;\n    }\n\n    public String translate(String text) {\n        // Dummy implementation for the sake of example\n        return \"Translated text from \" + sourceLanguage + \" to \" + targetLanguage + \" using \" + translationMethod;\n    }\n\n    // Getters and Setters\n    public String getSourceLanguage() {\n        return sourceLanguage;\n    }\n\n    public void setSourceLanguage(String sourceLanguage) {\n        this.sourceLanguage = sourceLanguage;\n    }\n\n    public String getTargetLanguage() {\n        return targetLanguage;\n    }\n\n    public void setTargetLanguage(String targetLanguage) {\n        this.targetLanguage = targetLanguage;\n    }\n\n    public String getTranslationMethod() {\n        return translationMethod;\n    }\n\n    public void setTranslationMethod(String translationMethod) {\n        this.translationMethod = translationMethod;\n    }\n}\n```"
  },
  {
    "task": "Formulate a class for a culinary school with properties for school name, courses offered, and a method to add a new course.",
    "code": "```java\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class CulinarySchool {\n    private String schoolName;\n    private List<String> coursesOffered;\n\n    public CulinarySchool(String schoolName) {\n        this.schoolName = schoolName;\n        this.coursesOffered = new ArrayList<>();\n    }\n\n    public String getSchoolName() {\n        return schoolName;\n    }\n\n    public List<String> getCoursesOffered() {\n        return coursesOffered;\n    }\n\n    public void addCourse(String course) {\n        coursesOffered.add(course);\n    }\n}\n```"
  },
  {
    "task": "Construct a class for a musical band with attributes for band name, members, and genre, and a method to add a new member.",
    "code": "```java\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class Band {\n    private String bandName;\n    private List<String> members;\n    private String genre;\n\n    public Band(String bandName, String genre) {\n        this.bandName = bandName;\n        this.genre = genre;\n        this.members = new ArrayList<>();\n    }\n\n    public void addMember(String memberName) {\n        members.add(memberName);\n    }\n\n    public String getBandName() {\n        return bandName;\n    }\n\n    public List<String> getMembers() {\n        return members;\n    }\n\n    public String getGenre() {\n        return genre;\n    }\n}\n```"
  },
  {
    "task": "Create a class for a television series with properties for series title, episodes, and network, and a method to add a new episode.",
    "code": "```java\npublic class TelevisionSeries {\n    private String title;\n    private int episodes;\n    private String network;\n\n    public TelevisionSeries(String title, int episodes, String network) {\n        this.title = title;\n        this.episodes = episodes;\n        this.network = network;\n    }\n\n    public String getTitle() {\n        return title;\n    }\n\n    public void setTitle(String title) {\n        this.title = title;\n    }\n\n    public int getEpisodes() {\n        return episodes;\n    }\n\n    public void setEpisodes(int episodes) {\n        this.episodes = episodes;\n    }\n\n    public String getNetwork() {\n        return network;\n    }\n\n    public void setNetwork(String network) {\n        this.network = network;\n    }\n\n    public void addEpisode() {\n        this.episodes += 1;\n    }\n}\n```"
  },
  {
    "task": "Design a class for a wildlife reserve with attributes for reserve name, species protected, and area size, and a method to expand the area.",
    "code": "```java\npublic class WildlifeReserve {\n    private String reserveName;\n    private String speciesProtected;\n    private double areaSize;\n\n    public WildlifeReserve(String reserveName, String speciesProtected, double areaSize) {\n        this.reserveName = reserveName;\n        this.speciesProtected = speciesProtected;\n        this.areaSize = areaSize;\n    }\n\n    public String getReserveName() {\n        return reserveName;\n    }\n\n    public void setReserveName(String reserveName) {\n        this.reserveName = reserveName;\n    }\n\n    public String getSpeciesProtected() {\n        return speciesProtected;\n    }\n\n    public void setSpeciesProtected(String speciesProtected) {\n        this.speciesProtected = speciesProtected;\n    }\n\n    public double getAreaSize() {\n        return areaSize;\n    }\n\n    public void setAreaSize(double areaSize) {\n        this.areaSize = areaSize;\n    }\n\n    public void expandArea(double additionalArea) {\n        if (additionalArea > 0) {\n            this.areaSize += additionalArea;\n        }\n    }\n}\n```"
  },
  {
    "task": "Build a class for a luxury car with properties for brand, model, and price, and a method to update the price.",
    "code": "```java\npublic class LuxuryCar {\n    private String brand;\n    private String model;\n    private double price;\n\n    public LuxuryCar(String brand, String model, double price) {\n        this.brand = brand;\n        this.model = model;\n        this.price = price;\n    }\n\n    public String getBrand() {\n        return brand;\n    }\n\n    public String getModel() {\n        return model;\n    }\n\n    public double getPrice() {\n        return price;\n    }\n\n    public void updatePrice(double newPrice) {\n        this.price = newPrice;\n    }\n}\n```"
  },
  {
    "task": "Implement a class for a scientific journal with attributes for journal name, articles, and impact factor, and a method to add a new article.",
    "code": "```java\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class ScientificJournal {\n    private String journalName;\n    private List<String> articles;\n    private double impactFactor;\n\n    public ScientificJournal(String journalName, double impactFactor) {\n        this.journalName = journalName;\n        this.impactFactor = impactFactor;\n        this.articles = new ArrayList<>();\n    }\n\n    public void addArticle(String article) {\n        articles.add(article);\n    }\n\n    public String getJournalName() {\n        return journalName;\n    }\n\n    public List<String> getArticles() {\n        return articles;\n    }\n\n    public double getImpactFactor() {\n        return impactFactor;\n    }\n}\n```"
  },
  {
    "task": "Develop a class for a historical monument with properties for monument name, location, and year established, and a method to update the location.",
    "code": "```java\npublic class HistoricalMonument {\n    private String monumentName;\n    private String location;\n    private int yearEstablished;\n\n    public HistoricalMonument(String monumentName, String location, int yearEstablished) {\n        this.monumentName = monumentName;\n        this.location = location;\n        this.yearEstablished = yearEstablished;\n    }\n\n    public String getMonumentName() {\n        return monumentName;\n    }\n\n    public String getLocation() {\n        return location;\n    }\n\n    public int getYearEstablished() {\n        return yearEstablished;\n    }\n\n    public void updateLocation(String newLocation) {\n        this.location = newLocation;\n    }\n}\n```"
  },
  {
    "task": "Formulate a class for an educational course with attributes for course title, instructor, and syllabus, and a method to update the syllabus.",
    "code": "```java\npublic class Course {\n    private String courseTitle;\n    private String instructor;\n    private String syllabus;\n\n    public Course(String courseTitle, String instructor, String syllabus) {\n        this.courseTitle = courseTitle;\n        this.instructor = instructor;\n        this.syllabus = syllabus;\n    }\n\n    public String getCourseTitle() {\n        return courseTitle;\n    }\n\n    public void setCourseTitle(String courseTitle) {\n        this.courseTitle = courseTitle;\n    }\n\n    public String getInstructor() {\n        return instructor;\n    }\n\n    public void setInstructor(String instructor) {\n        this.instructor = instructor;\n    }\n\n    public String getSyllabus() {\n        return syllabus;\n    }\n\n    public void updateSyllabus(String newSyllabus) {\n        this.syllabus = newSyllabus;\n    }\n}\n```"
  },
  {
    "task": "Construct a class for a city park with properties for park name, facilities, and opening hours, and a method to add a new facility.",
    "code": "```java\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class CityPark {\n    private String parkName;\n    private List<String> facilities;\n    private String openingHours;\n\n    public CityPark(String parkName, String openingHours) {\n        this.parkName = parkName;\n        this.facilities = new ArrayList<>();\n        this.openingHours = openingHours;\n    }\n\n    public void addFacility(String facility) {\n        facilities.add(facility);\n    }\n\n    // Getters and setters if needed\n    public String getParkName() {\n        return parkName;\n    }\n\n    public List<String> getFacilities() {\n        return facilities;\n    }\n\n    public String getOpeningHours() {\n        return openingHours;\n    }\n}\n```"
  },
  {
    "task": "Create a class for a fitness class with attributes for class name, instructor, and schedule, and a method to update the schedule.",
    "code": "```java\npublic class FitnessClass {\n    private String className;\n    private String instructor;\n    private String schedule;\n\n    public FitnessClass(String className, String instructor, String schedule) {\n        this.className = className;\n        this.instructor = instructor;\n        this.schedule = schedule;\n    }\n\n    public String getClassName() {\n        return className;\n    }\n\n    public String getInstructor() {\n        return instructor;\n    }\n\n    public String getSchedule() {\n        return schedule;\n    }\n\n    public void updateSchedule(String newSchedule) {\n        this.schedule = newSchedule;\n    }\n}\n```"
  },
  {
    "task": "Design a class for a virtual reality game with properties for game name, platform, and VR compatibility, and a method to change the platform.",
    "code": "```java\npublic class VirtualRealityGame {\n    private String gameName;\n    private String platform;\n    private boolean vrCompatible;\n    \n    public VirtualRealityGame(String gameName, String platform, boolean vrCompatible) {\n        this.gameName = gameName;\n        this.platform = platform;\n        this.vrCompatible = vrCompatible;\n    }\n    \n    public String getGameName() {\n        return gameName;\n    }\n    \n    public void setGameName(String gameName) {\n        this.gameName = gameName;\n    }\n    \n    public String getPlatform() {\n        return platform;\n    }\n    \n    public void setPlatform(String platform) {\n        this.platform = platform;\n    }\n    \n    public boolean isVrCompatible() {\n        return vrCompatible;\n    }\n    \n    public void setVrCompatible(boolean vrCompatible) {\n        this.vrCompatible = vrCompatible;\n    }\n    \n    public void changePlatform(String newPlatform) {\n        this.platform = newPlatform;\n    }\n}\n```"
  },
  {
    "task": "Build a class for a mountain range with attributes for range name, highest peak, and countries covered, and a method to add a new peak.",
    "code": "```java\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class MountainRange {\n    private String rangeName;\n    private String highestPeak;\n    private List<String> countriesCovered;\n    private List<String> peaks;\n\n    public MountainRange(String rangeName, String highestPeak, List<String> countriesCovered) {\n        this.rangeName = rangeName;\n        this.highestPeak = highestPeak;\n        this.countriesCovered = new ArrayList<>(countriesCovered);\n        this.peaks = new ArrayList<>();\n        this.peaks.add(highestPeak);\n    }\n\n    public void addPeak(String peak) {\n        this.peaks.add(peak);\n    }\n\n    public String getRangeName() {\n        return rangeName;\n    }\n\n    public String getHighestPeak() {\n        return highestPeak;\n    }\n\n    public List<String> getCountriesCovered() {\n        return new ArrayList<>(countriesCovered);\n    }\n\n    public List<String> getPeaks() {\n        return new ArrayList<>(peaks);\n    }\n}\n```"
  },
  {
    "task": "Implement a class for a documentary film with properties for title, director, and subject, and a method to update the subject.",
    "code": "```java\npublic class DocumentaryFilm {\n    private String title;\n    private String director;\n    private String subject;\n\n    public DocumentaryFilm(String title, String director, String subject) {\n        this.title = title;\n        this.director = director;\n        this.subject = subject;\n    }\n\n    public String getTitle() {\n        return title;\n    }\n\n    public String getDirector() {\n        return director;\n    }\n\n    public String getSubject() {\n        return subject;\n    }\n\n    public void updateSubject(String newSubject) {\n        this.subject = newSubject;\n    }\n}\n```"
  },
  {
    "task": "Develop a class for a classical music composition with attributes for composition name, composer, and duration, and a method to change the duration.",
    "code": "```java\npublic class ClassicalMusicComposition {\n    private String compositionName;\n    private String composer;\n    private int duration; // duration in minutes\n\n    public ClassicalMusicComposition(String compositionName, String composer, int duration) {\n        this.compositionName = compositionName;\n        this.composer = composer;\n        this.duration = duration;\n    }\n\n    public String getCompositionName() {\n        return compositionName;\n    }\n\n    public void setCompositionName(String compositionName) {\n        this.compositionName = compositionName;\n    }\n\n    public String getComposer() {\n        return composer;\n    }\n\n    public void setComposer(String composer) {\n        this.composer = composer;\n    }\n\n    public int getDuration() {\n        return duration;\n    }\n\n    public void setDuration(int duration) {\n        this.duration = duration;\n    }\n}\n```"
  },
  {
    "task": "Formulate a class for a public library with properties for library name, books available, and membership, and a method to add a new book.",
    "code": "```java\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class PublicLibrary {\n    private String libraryName;\n    private List<String> booksAvailable;\n    private boolean membership;\n\n    public PublicLibrary(String libraryName, boolean membership) {\n        this.libraryName = libraryName;\n        this.membership = membership;\n        this.booksAvailable = new ArrayList<>();\n    }\n\n    public void addBook(String book) {\n        booksAvailable.add(book);\n    }\n\n    public String getLibraryName() {\n        return libraryName;\n    }\n\n    public List<String> getBooksAvailable() {\n        return booksAvailable;\n    }\n\n    public boolean hasMembership() {\n        return membership;\n    }\n}\n```"
  },
  {
    "task": "Construct a class for a tech startup with attributes for startup name, founder, and funding, and a method to raise additional funding.",
    "code": "```java\npublic class TechStartup {\n    private String startupName;\n    private String founder;\n    private double funding;\n\n    public TechStartup(String startupName, String founder, double funding) {\n        this.startupName = startupName;\n        this.founder = founder;\n        this.funding = funding;\n    }\n\n    public String getStartupName() {\n        return startupName;\n    }\n\n    public void setStartupName(String startupName) {\n        this.startupName = startupName;\n    }\n\n    public String getFounder() {\n        return founder;\n    }\n\n    public void setFounder(String founder) {\n        this.founder = founder;\n    }\n\n    public double getFunding() {\n        return funding;\n    }\n\n    public void setFunding(double funding) {\n        this.funding = funding;\n    }\n\n    public void raiseFunding(double amount) {\n        if (amount > 0) {\n            this.funding += amount;\n        }\n    }\n}\n```"
  }
]