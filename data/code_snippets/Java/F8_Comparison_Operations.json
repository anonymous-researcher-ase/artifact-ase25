[
  {
    "task": "Write a function that checks if two strings are equal, ignoring case sensitivity.",
    "code": "```java\npublic class StringComparison {\n    public static boolean areStringsEqualIgnoreCase(String str1, String str2) {\n        return str1.equalsIgnoreCase(str2);\n    }\n}\n```"
  },
  {
    "task": "Create a program that determines if a number is greater than 10.",
    "code": "```java\nimport java.util.Scanner;\n\npublic class NumberComparison {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        System.out.println(\"Enter a number:\");\n        int number = scanner.nextInt();\n        \n        if (number > 10) {\n            System.out.println(\"The number is greater than 10.\");\n        } else {\n            System.out.println(\"The number is not greater than 10.\");\n        }\n        \n        scanner.close();\n    }\n}\n```"
  },
  {
    "task": "Implement a feature that compares the current date to a given date and returns if it is in the future.",
    "code": "```java\nimport java.time.LocalDate;\n\npublic class DateComparison {\n    public static boolean isFutureDate(LocalDate givenDate) {\n        LocalDate currentDate = LocalDate.now();\n        return givenDate.isAfter(currentDate);\n    }\n    \n    public static void main(String[] args) {\n        LocalDate givenDate = LocalDate.of(2024, 5, 20);\n        boolean result = isFutureDate(givenDate);\n        System.out.println(\"Is the given date in the future? \" + result);\n    }\n}\n```"
  },
  {
    "task": "Design a system that checks if a user's age is less than 18 and restricts access if true.",
    "code": "```java\npublic class AgeChecker {\n    public static void main(String[] args) {\n        int userAge = 16; // Example age\n        \n        if (userAge < 18) {\n            System.out.println(\"Access Restricted\");\n        } else {\n            System.out.println(\"Access Granted\");\n        }\n    }\n}\n```"
  },
  {
    "task": "Build an algorithm that finds the maximum of three given integers.",
    "code": "```java\npublic class MaxOfThree {\n    public static int findMax(int a, int b, int c) {\n        int max = a;\n        if (b > max) {\n            max = b;\n        }\n        if (c > max) {\n            max = c;\n        }\n        return max;\n    }\n\n    public static void main(String[] args) {\n        int a = 10, b = 20, c = 30;\n        System.out.println(\"The maximum number is: \" + findMax(a, b, c));\n    }\n}\n```"
  },
  {
    "task": "Write a function that verifies if two arrays contain the same elements in the same order.",
    "code": "```java\npublic class ArrayComparator {\n    public static boolean areArraysEqual(int[] array1, int[] array2) {\n        if (array1.length != array2.length) {\n            return false;\n        }\n\n        for (int i = 0; i < array1.length; i++) {\n            if (array1[i] != array2[i]) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    public static void main(String[] args) {\n        int[] array1 = {1, 2, 3, 4, 5};\n        int[] array2 = {1, 2, 3, 4, 5};\n        int[] array3 = {1, 2, 3, 4, 6};\n\n        System.out.println(areArraysEqual(array1, array2)); // true\n        System.out.println(areArraysEqual(array1, array3)); // false\n    }\n}\n```"
  },
  {
    "task": "Create a script that checks if a product's price is within a specified range.",
    "code": "```java\npublic class PriceCheck {\n    public static void main(String[] args) {\n        double productPrice = 49.99;\n        double minPrice = 30.00;\n        double maxPrice = 60.00;\n\n        if (productPrice >= minPrice && productPrice <= maxPrice) {\n            System.out.println(\"The product's price is within the specified range.\");\n        } else {\n            System.out.println(\"The product's price is outside the specified range.\");\n        }\n    }\n}\n```"
  },
  {
    "task": "Develop a tool that compares two versions of a software application and determines which is newer.",
    "code": "```java\npublic class VersionComparator {\n\n    public static int compareVersions(String version1, String version2) {\n        String[] levels1 = version1.split(\"\\\\.\");\n        String[] levels2 = version2.split(\"\\\\.\");\n        \n        int length = Math.max(levels1.length, levels2.length);\n        for (int i = 0; i < length; i++) {\n            int v1 = i < levels1.length ? Integer.parseInt(levels1[i]) : 0;\n            int v2 = i < levels2.length ? Integer.parseInt(levels2[i]) : 0;\n            if (v1 < v2) {\n                return -1;\n            }\n            if (v1 > v2) {\n                return 1;\n            }\n        }\n        return 0;\n    }\n\n    public static void main(String[] args) {\n        String version1 = \"1.0.3\";\n        String version2 = \"1.0.7\";\n\n        int comparisonResult = compareVersions(version1, version2);\n\n        if (comparisonResult < 0) {\n            System.out.println(\"Version 2 is newer.\");\n        } else if (comparisonResult > 0) {\n            System.out.println(\"Version 1 is newer.\");\n        } else {\n            System.out.println(\"Both versions are the same.\");\n        }\n    }\n}\n```"
  },
  {
    "task": "Implement a test to see if a given year is a leap year.",
    "code": "```java\npublic class LeapYearChecker {\n    public static boolean isLeapYear(int year) {\n        if (year % 4 == 0) {\n            if (year % 100 == 0) {\n                return year % 400 == 0;\n            }\n            return true;\n        }\n        return false;\n    }\n\n    public static void main(String[] args) {\n        int year = 2024; // Example year\n        System.out.println(year + \" is a leap year: \" + isLeapYear(year));\n    }\n}\n```"
  },
  {
    "task": "Design a feature that tells if a student\u2019s grade is passing or failing based on a threshold.",
    "code": "```java\npublic class GradeChecker {\n    private static final int PASSING_THRESHOLD = 50;\n\n    public static String checkGrade(int grade) {\n        if (grade >= PASSING_THRESHOLD) {\n            return \"Passing\";\n        } else {\n            return \"Failing\";\n        }\n    }\n\n    public static void main(String[] args) {\n        int studentGrade = 65; // Example input\n        System.out.println(\"The student's grade is: \" + checkGrade(studentGrade));\n    }\n}\n```"
  },
  {
    "task": "Write a function to compare two file sizes and return the larger one.",
    "code": "```java\nimport java.io.File;\n\npublic class FileSizeComparator {\n\n    public static File getLargerFile(File file1, File file2) {\n        if (file1.length() > file2.length()) {\n            return file1;\n        } else {\n            return file2;\n        }\n    }\n}\n```"
  },
  {
    "task": "Build a program that checks if the temperature is below freezing point.",
    "code": "```java\npublic class TemperatureCheck {\n    public static void main(String[] args) {\n        double temperature = 30.0; // Example temperature in Fahrenheit\n        if (isBelowFreezing(temperature)) {\n            System.out.println(\"The temperature is below freezing point.\");\n        } else {\n            System.out.println(\"The temperature is above freezing point.\");\n        }\n    }\n\n    public static boolean isBelowFreezing(double temperature) {\n        double freezingPoint = 32.0; // Freezing point in Fahrenheit\n        return temperature < freezingPoint;\n    }\n}\n```"
  },
  {
    "task": "Create a logic that determines if a number is within the Fibonacci sequence.",
    "code": "```java\npublic class FibonacciChecker {\n    public static boolean isInFibonacci(int number) {\n        if (number < 0) return false;\n        int a = 0, b = 1;\n        while (b < number) {\n            int temp = b;\n            b = a + b;\n            a = temp;\n        }\n        return b == number || a == number;\n    }\n\n    public static void main(String[] args) {\n        int number = 21; // example number\n        boolean result = isInFibonacci(number);\n        System.out.println(\"Is \" + number + \" in the Fibonacci sequence? \" + result);\n    }\n}\n```"
  },
  {
    "task": "Develop a function that checks if a given word is a palindrome.",
    "code": "```java\npublic class PalindromeChecker {\n    public static boolean isPalindrome(String word) {\n        int left = 0;\n        int right = word.length() - 1;\n        while (left < right) {\n            if (word.charAt(left) != word.charAt(right)) {\n                return false;\n            }\n            left++;\n            right--;\n        }\n        return true;\n    }\n\n    public static void main(String[] args) {\n        System.out.println(isPalindrome(\"racecar\")); // true\n        System.out.println(isPalindrome(\"hello\"));   // false\n    }\n}\n```"
  },
  {
    "task": "Write a script to see if a password meets a minimum length requirement.",
    "code": "```java\npublic class PasswordChecker {\n    public static boolean isPasswordValid(String password, int minLength) {\n        return password.length() >= minLength;\n    }\n\n    public static void main(String[] args) {\n        String password = \"examplePassword\";\n        int minLength = 8;\n\n        if (isPasswordValid(password, minLength)) {\n            System.out.println(\"Password is valid.\");\n        } else {\n            System.out.println(\"Password is too short.\");\n        }\n    }\n}\n```"
  },
  {
    "task": "Implement a system that decides if a point is inside a circle based on its coordinates.",
    "code": "```java\npublic class PointInCircle {\n    public static boolean isPointInsideCircle(double x, double y, double circleCenterX, double circleCenterY, double radius) {\n        double distanceSquared = Math.pow(x - circleCenterX, 2) + Math.pow(y - circleCenterY, 2);\n        return distanceSquared < Math.pow(radius, 2);\n    }\n\n    public static void main(String[] args) {\n        double pointX = 3.0;\n        double pointY = 4.0;\n        double circleCenterX = 0.0;\n        double circleCenterY = 0.0;\n        double radius = 5.0;\n\n        boolean isInside = isPointInsideCircle(pointX, pointY, circleCenterX, circleCenterY, radius);\n        System.out.println(\"Point is inside the circle: \" + isInside);\n    }\n}\n```"
  },
  {
    "task": "Design a program that checks if a shopping cart total exceeds a certain budget.",
    "code": "```java\npublic class ShoppingCart {\n\n    public static void main(String[] args) {\n        double cartTotal = 150.00;\n        double budget = 100.00;\n        \n        if (cartTotal > budget) {\n            System.out.println(\"The cart total exceeds the budget.\");\n        } else {\n            System.out.println(\"The cart total is within the budget.\");\n        }\n    }\n}\n```"
  },
  {
    "task": "Create a function that compares two players' scores and returns the winner.",
    "code": "```java\npublic class ScoreComparator {\n\n    public static String determineWinner(int playerOneScore, int playerTwoScore) {\n        if (playerOneScore > playerTwoScore) {\n            return \"Player One is the winner!\";\n        } else if (playerTwoScore > playerOneScore) {\n            return \"Player Two is the winner!\";\n        } else {\n            return \"It's a tie!\";\n        }\n    }\n\n    public static void main(String[] args) {\n        int score1 = 30;\n        int score2 = 25;\n        System.out.println(determineWinner(score1, score2));\n    }\n}\n```"
  },
  {
    "task": "Write a program to determine if one string is a substring of another.",
    "code": "```java\npublic class SubstringCheck {\n    public static void main(String[] args) {\n        String str1 = \"Hello, world!\";\n        String str2 = \"world\";\n        boolean isSubstring = str1.contains(str2);\n        System.out.println(\"Is '\" + str2 + \"' a substring of '\" + str1 + \"'? \" + isSubstring);\n    }\n}\n```"
  },
  {
    "task": "Build a utility that checks if a number is a prime number.",
    "code": "```java\npublic class PrimeChecker {\n    public static boolean isPrime(int number) {\n        if (number <= 1) return false;\n        if (number <= 3) return true;\n        if (number % 2 == 0 || number % 3 == 0) return false;\n        for (int i = 5; i * i <= number; i += 6) {\n            if (number % i == 0 || number % (i + 2) == 0) return false;\n        }\n        return true;\n    }\n\n    public static void main(String[] args) {\n        int number = 29; // Example number\n        System.out.println(number + \" is prime? \" + isPrime(number));\n    }\n}\n```"
  },
  {
    "task": "Write a function that checks if a given number is a perfect square.",
    "code": "```java\npublic class PerfectSquareChecker {\n    public static boolean isPerfectSquare(int num) {\n        if (num < 0) return false;\n        int sqrt = (int) Math.sqrt(num);\n        return sqrt * sqrt == num;\n    }\n    \n    public static void main(String[] args) {\n        int number = 16; // Example number\n        System.out.println(isPerfectSquare(number)); // Output: true\n    }\n}\n```"
  },
  {
    "task": "Create a system that determines if a person is eligible for a senior citizen discount based on their age.",
    "code": "```java\npublic class SeniorCitizenDiscount {\n\n    public static boolean isEligibleForDiscount(int age) {\n        return age >= 65;\n    }\n\n    public static void main(String[] args) {\n        int age = 70; // Example age\n        if (isEligibleForDiscount(age)) {\n            System.out.println(\"Eligible for senior citizen discount.\");\n        } else {\n            System.out.println(\"Not eligible for senior citizen discount.\");\n        }\n    }\n}\n```"
  },
  {
    "task": "Develop a feature to check if a date falls on a weekend.",
    "code": "```java\nimport java.time.LocalDate;\nimport java.time.DayOfWeek;\n\npublic class DateChecker {\n    public static boolean isWeekend(LocalDate date) {\n        DayOfWeek dayOfWeek = date.getDayOfWeek();\n        return dayOfWeek == DayOfWeek.SATURDAY || dayOfWeek == DayOfWeek.SUNDAY;\n    }\n    \n    public static void main(String[] args) {\n        LocalDate date = LocalDate.of(2023, 10, 7);\n        System.out.println(\"Is the date a weekend? \" + isWeekend(date));\n    }\n}\n```"
  },
  {
    "task": "Design a program that sees if a given email address is in the correct format.",
    "code": "```java\nimport java.util.regex.Matcher;\nimport java.util.regex.Pattern;\n\npublic class EmailValidator {\n    public static boolean isValidEmail(String email) {\n        String emailRegex = \"^[a-zA-Z0-9_+&*-]+(?:\\\\.[a-zA-Z0-9_+&*-]+)*@\" +\n                            \"(?:[a-zA-Z0-9-]+\\\\.)+[a-zA-Z]{2,7}$\";\n        Pattern pattern = Pattern.compile(emailRegex);\n        Matcher matcher = pattern.matcher(email);\n        return matcher.matches();\n    }\n\n    public static void main(String[] args) {\n        String email = \"example@example.com\";\n        if (isValidEmail(email)) {\n            System.out.println(\"Email is in correct format.\");\n        } else {\n            System.out.println(\"Email is not in correct format.\");\n        }\n    }\n}\n```"
  },
  {
    "task": "Implement a test to check if a rectangle's area is larger than a triangle's area.",
    "code": "```java\npublic class AreaComparison {\n    public static void main(String[] args) {\n        double rectangleWidth = 5.0;\n        double rectangleHeight = 10.0;\n        double triangleBase = 6.0;\n        double triangleHeight = 8.0;\n\n        double rectangleArea = rectangleWidth * rectangleHeight;\n        double triangleArea = 0.5 * triangleBase * triangleHeight;\n\n        if (rectangleArea > triangleArea) {\n            System.out.println(\"The rectangle's area is larger than the triangle's area.\");\n        } else {\n            System.out.println(\"The triangle's area is larger or equal to the rectangle's area.\");\n        }\n    }\n}\n```"
  },
  {
    "task": "Write a function that verifies if two rectangles overlap each other.",
    "code": "```java\npublic class RectangleOverlap {\n\n    static class Rectangle {\n        int x, y, width, height;\n\n        Rectangle(int x, int y, int width, int height) {\n            this.x = x;\n            this.y = y;\n            this.width = width;\n            this.height = height;\n        }\n    }\n\n    public static boolean doRectanglesOverlap(Rectangle r1, Rectangle r2) {\n        if (r1.x + r1.width <= r2.x || r2.x + r2.width <= r1.x) {\n            return false;\n        }\n        if (r1.y + r1.height <= r2.y || r2.y + r2.height <= r1.y) {\n            return false;\n        }\n        return true;\n    }\n\n    public static void main(String[] args) {\n        Rectangle r1 = new Rectangle(0, 0, 4, 4);\n        Rectangle r2 = new Rectangle(2, 2, 4, 4);\n        System.out.println(doRectanglesOverlap(r1, r2)); // Output: true\n    }\n}\n```"
  },
  {
    "task": "Create a script to compare two strings lexicographically.",
    "code": "```java\npublic class StringComparison {\n    public static void main(String[] args) {\n        String str1 = \"Hello\";\n        String str2 = \"World\";\n\n        int comparisonResult = str1.compareTo(str2);\n\n        if (comparisonResult < 0) {\n            System.out.println(str1 + \" is lexicographically less than \" + str2);\n        } else if (comparisonResult == 0) {\n            System.out.println(str1 + \" is lexicographically equal to \" + str2);\n        } else {\n            System.out.println(str1 + \" is lexicographically greater than \" + str2);\n        }\n    }\n}\n```"
  },
  {
    "task": "Build a program that checks if a list of numbers is in ascending order.",
    "code": "```java\nimport java.util.List;\n\npublic class AscendingOrderChecker {\n    public static boolean isAscending(List<Integer> numbers) {\n        for (int i = 0; i < numbers.size() - 1; i++) {\n            if (numbers.get(i) > numbers.get(i + 1)) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    public static void main(String[] args) {\n        List<Integer> numbers = List.of(1, 2, 3, 4, 5);\n        System.out.println(\"Is ascending: \" + isAscending(numbers));\n    }\n}\n```"
  },
  {
    "task": "Design a system to compare the heights of two buildings.",
    "code": "```java\npublic class BuildingComparison {\n\n    public static String compareHeights(double height1, double height2) {\n        if (height1 > height2) {\n            return \"Building 1 is taller than Building 2.\";\n        } else if (height1 < height2) {\n            return \"Building 2 is taller than Building 1.\";\n        } else {\n            return \"Both buildings are of equal height.\";\n        }\n    }\n\n    public static void main(String[] args) {\n        double building1Height = 150.5;\n        double building2Height = 145.0;\n\n        String result = compareHeights(building1Height, building2Height);\n        System.out.println(result);\n    }\n}\n```"
  },
  {
    "task": "Write a feature that determines if a given time is before noon.",
    "code": "```java\nimport java.time.LocalTime;\n\npublic class TimeComparison {\n    public static boolean isBeforeNoon(LocalTime time) {\n        LocalTime noon = LocalTime.NOON;\n        return time.isBefore(noon);\n    }\n\n    public static void main(String[] args) {\n        LocalTime time = LocalTime.of(11, 30); // Example time\n        boolean result = isBeforeNoon(time);\n        System.out.println(\"Is the time before noon? \" + result);\n    }\n}\n```"
  },
  {
    "task": "Implement a function to check if a given number is a power of two.",
    "code": "```java\npublic class PowerOfTwoChecker {\n    public static boolean isPowerOfTwo(int number) {\n        if (number <= 0) {\n            return false;\n        }\n        return (number & (number - 1)) == 0;\n    }\n\n    public static void main(String[] args) {\n        int[] testNumbers = {1, 2, 3, 4, 5, 16, 18, 32, 64, 100};\n        for (int number : testNumbers) {\n            System.out.println(number + \" is power of two: \" + isPowerOfTwo(number));\n        }\n    }\n}\n```"
  },
  {
    "task": "Create a program that determines if a word is longer than another word.",
    "code": "```java\npublic class WordComparison {\n    public static void main(String[] args) {\n        String word1 = \"example\";\n        String word2 = \"test\";\n\n        if (word1.length() > word2.length()) {\n            System.out.println(\"The first word is longer than the second word.\");\n        } else {\n            System.out.println(\"The first word is not longer than the second word.\");\n        }\n    }\n}\n```"
  },
  {
    "task": "Develop a function to compare the lengths of two lists and return the longer one.",
    "code": "```java\nimport java.util.List;\n\npublic class ListComparator {\n    public static <T> List<T> getLongerList(List<T> list1, List<T> list2) {\n        if (list1.size() >= list2.size()) {\n            return list1;\n        } else {\n            return list2;\n        }\n    }\n}\n```"
  },
  {
    "task": "Write a script to see if a user's input matches a pre-defined secret code.",
    "code": "```java\nimport java.util.Scanner;\n\npublic class SecretCodeChecker {\n    public static void main(String[] args) {\n        final String SECRET_CODE = \"openSesame\";\n        Scanner scanner = new Scanner(System.in);\n\n        System.out.println(\"Enter the secret code:\");\n        String userInput = scanner.nextLine();\n\n        if (userInput.equals(SECRET_CODE)) {\n            System.out.println(\"Access granted.\");\n        } else {\n            System.out.println(\"Access denied.\");\n        }\n\n        scanner.close();\n    }\n}\n```"
  },
  {
    "task": "Build a utility that checks if a given year is in the 21st century.",
    "code": "```java\npublic class CenturyChecker {\n    public static boolean isIn21stCentury(int year) {\n        return year >= 2001 && year <= 2100;\n    }\n\n    public static void main(String[] args) {\n        int year = 2023;\n        if (isIn21stCentury(year)) {\n            System.out.println(year + \" is in the 21st century.\");\n        } else {\n            System.out.println(year + \" is not in the 21st century.\");\n        }\n    }\n}\n```"
  },
  {
    "task": "Create a logic that determines if a book's publication year is after 2000.",
    "code": "```java\npublic class Book {\n    private int publicationYear;\n\n    public Book(int publicationYear) {\n        this.publicationYear = publicationYear;\n    }\n\n    public boolean isPublishedAfter2000() {\n        return this.publicationYear > 2000;\n    }\n\n    public static void main(String[] args) {\n        Book book = new Book(2005);\n        System.out.println(\"Is the book published after 2000? \" + book.isPublishedAfter2000());\n    }\n}\n```"
  },
  {
    "task": "Design a feature to see if a number is divisible by both 3 and 5.",
    "code": "```java\npublic class DivisibilityChecker {\n    public static boolean isDivisibleBy3And5(int number) {\n        return (number % 3 == 0) && (number % 5 == 0);\n    }\n\n    public static void main(String[] args) {\n        int numberToCheck = 15;\n        if (isDivisibleBy3And5(numberToCheck)) {\n            System.out.println(numberToCheck + \" is divisible by both 3 and 5.\");\n        } else {\n            System.out.println(numberToCheck + \" is not divisible by both 3 and 5.\");\n        }\n    }\n}\n```"
  },
  {
    "task": "Implement a system that checks if a student's GPA is above a certain threshold.",
    "code": "```java\npublic class StudentGPA {\n\n    public static boolean isGpaAboveThreshold(double gpa, double threshold) {\n        return gpa > threshold;\n    }\n\n    public static void main(String[] args) {\n        double studentGpa = 3.5;\n        double threshold = 3.0;\n        \n        boolean result = isGpaAboveThreshold(studentGpa, threshold);\n        System.out.println(\"Is the student's GPA above the threshold? \" + result);\n    }\n}\n```"
  },
  {
    "task": "Write a function to determine if a given angle is acute, right, or obtuse.",
    "code": "```java\npublic class AngleChecker {\n\n    public static String determineAngleType(int angle) {\n        if (angle > 0 && angle < 90) {\n            return \"Acute\";\n        } else if (angle == 90) {\n            return \"Right\";\n        } else if (angle > 90 && angle < 180) {\n            return \"Obtuse\";\n        } else {\n            return \"Invalid angle\";\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(determineAngleType(45));  // Acute\n        System.out.println(determineAngleType(90));  // Right\n        System.out.println(determineAngleType(120)); // Obtuse\n    }\n}\n```"
  },
  {
    "task": "Develop a program that compares the lengths of two strings and returns the shorter one.",
    "code": "```java\npublic class StringComparison {\n    public static String getShorterString(String str1, String str2) {\n        return str1.length() < str2.length() ? str1 : str2;\n    }\n\n    public static void main(String[] args) {\n        String string1 = \"Hello\";\n        String string2 = \"World!\";\n        System.out.println(\"The shorter string is: \" + getShorterString(string1, string2));\n    }\n}\n```"
  },
  {
    "task": "Create a script to verify if a username is unique within a list.",
    "code": "```java\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class UniqueUsernameChecker {\n    public static boolean isUsernameUnique(String username, List<String> usernames) {\n        for (String existingUsername : usernames) {\n            if (existingUsername.equals(username)) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    public static void main(String[] args) {\n        List<String> existingUsernames = new ArrayList<>();\n        existingUsernames.add(\"user1\");\n        existingUsernames.add(\"user2\");\n        existingUsernames.add(\"user3\");\n\n        String newUsername = \"user4\";\n        boolean isUnique = isUsernameUnique(newUsername, existingUsernames);\n\n        System.out.println(\"Is the username '\" + newUsername + \"' unique? \" + isUnique);\n    }\n}\n```"
  },
  {
    "task": "Build a tool that checks if a job applicant meets all the listed qualifications.",
    "code": "```java\npublic class JobApplicantChecker {\n    private boolean hasDegree;\n    private int yearsOfExperience;\n    private boolean knowsJava;\n\n    public JobApplicantChecker(boolean hasDegree, int yearsOfExperience, boolean knowsJava) {\n        this.hasDegree = hasDegree;\n        this.yearsOfExperience = yearsOfExperience;\n        this.knowsJava = knowsJava;\n    }\n\n    public boolean meetsQualifications() {\n        return hasDegree && yearsOfExperience >= 3 && knowsJava;\n    }\n\n    public static void main(String[] args) {\n        JobApplicantChecker applicant = new JobApplicantChecker(true, 4, true);\n        if (applicant.meetsQualifications()) {\n            System.out.println(\"The applicant meets all the qualifications.\");\n        } else {\n            System.out.println(\"The applicant does not meet all the qualifications.\");\n        }\n    }\n}\n```"
  },
  {
    "task": "Write a feature to see if a vehicle's speed exceeds the speed limit.",
    "code": "```java\npublic class SpeedChecker {\n    private int speedLimit;\n\n    public SpeedChecker(int speedLimit) {\n        this.speedLimit = speedLimit;\n    }\n\n    public boolean isSpeedExceedingLimit(int vehicleSpeed) {\n        return vehicleSpeed > speedLimit;\n    }\n\n    public static void main(String[] args) {\n        SpeedChecker checker = new SpeedChecker(60);\n        int vehicleSpeed = 70;\n        boolean isExceeding = checker.isSpeedExceedingLimit(vehicleSpeed);\n        System.out.println(\"Is the speed exceeding the limit? \" + isExceeding);\n    }\n}\n```"
  },
  {
    "task": "Design a system that determines whether a given point is above or below the x-axis.",
    "code": "```java\npublic class PointPosition {\n    public static String checkPointPosition(double x, double y) {\n        if (y > 0) {\n            return \"Above the x-axis\";\n        } else if (y < 0) {\n            return \"Below the x-axis\";\n        } else {\n            return \"On the x-axis\";\n        }\n    }\n\n    public static void main(String[] args) {\n        double x = 3.5;\n        double y = -2.0;\n        System.out.println(\"The point (\" + x + \", \" + y + \") is \" + checkPointPosition(x, y));\n    }\n}\n```"
  },
  {
    "task": "Create a function that checks if a given word appears in a sentence.",
    "code": "```java\npublic class WordChecker {\n    public static boolean doesWordAppear(String sentence, String word) {\n        return sentence.contains(word);\n    }\n\n    public static void main(String[] args) {\n        String sentence = \"The quick brown fox jumps over the lazy dog\";\n        String word = \"fox\";\n        System.out.println(doesWordAppear(sentence, word)); // Output: true\n    }\n}\n```"
  },
  {
    "task": "Implement a program that identifies whether a given number is negative or positive.",
    "code": "```java\nimport java.util.Scanner;\n\npublic class NumberSignChecker {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        System.out.print(\"Enter a number: \");\n        double number = scanner.nextDouble();\n        \n        if (number > 0) {\n            System.out.println(\"The number is positive.\");\n        } else if (number < 0) {\n            System.out.println(\"The number is negative.\");\n        } else {\n            System.out.println(\"The number is zero.\");\n        }\n        \n        scanner.close();\n    }\n}\n```"
  },
  {
    "task": "Write a script to see if the sum of two numbers is greater than 100.",
    "code": "```java\npublic class ComparisonOperations {\n    public static void main(String[] args) {\n        int num1 = 50;\n        int num2 = 60;\n        int sum = num1 + num2;\n\n        if (sum > 100) {\n            System.out.println(\"The sum is greater than 100.\");\n        } else {\n            System.out.println(\"The sum is not greater than 100.\");\n        }\n    }\n}\n```"
  },
  {
    "task": "Build a utility that checks if a file exists in a specified directory.",
    "code": "```java\nimport java.io.File;\n\npublic class FileChecker {\n    public static boolean fileExists(String directoryPath, String fileName) {\n        File file = new File(directoryPath, fileName);\n        return file.exists();\n    }\n\n    public static void main(String[] args) {\n        String directoryPath = \"/path/to/directory\";\n        String fileName = \"example.txt\";\n        \n        if (fileExists(directoryPath, fileName)) {\n            System.out.println(\"File exists.\");\n        } else {\n            System.out.println(\"File does not exist.\");\n        }\n    }\n}\n```"
  },
  {
    "task": "Develop a system to compare the weights of two different objects.",
    "code": "```java\npublic class WeightComparison {\n\n    public static void main(String[] args) {\n        double weight1 = 5.75; // Example weight of object 1\n        double weight2 = 8.50; // Example weight of object 2\n\n        if (weight1 > weight2) {\n            System.out.println(\"Object 1 is heavier than Object 2.\");\n        } else if (weight1 < weight2) {\n            System.out.println(\"Object 1 is lighter than Object 2.\");\n        } else {\n            System.out.println(\"Object 1 and Object 2 have the same weight.\");\n        }\n    }\n}\n```"
  },
  {
    "task": "Create a logic to determine if a number falls within a defined range.",
    "code": "```java\npublic class RangeChecker {\n    public static boolean isWithinRange(int number, int lowerBound, int upperBound) {\n        return number >= lowerBound && number <= upperBound;\n    }\n\n    public static void main(String[] args) {\n        int number = 10;\n        int lowerBound = 5;\n        int upperBound = 15;\n\n        boolean result = isWithinRange(number, lowerBound, upperBound);\n        System.out.println(\"Number \" + number + \" within range: \" + result);\n    }\n}\n```"
  },
  {
    "task": "Design a program that checks if an employee worked overtime based on hours worked.",
    "code": "```java\npublic class OvertimeChecker {\n    public static void main(String[] args) {\n        int hoursWorked = 42; // Example input\n        boolean isOvertime = isOvertime(hoursWorked);\n        System.out.println(\"Employee worked overtime: \" + isOvertime);\n    }\n\n    public static boolean isOvertime(int hoursWorked) {\n        int standardHours = 40;\n        return hoursWorked > standardHours;\n    }\n}\n```"
  },
  {
    "task": "Write a function to compare two dates and determine which is earlier.",
    "code": "```java\nimport java.time.LocalDate;\n\npublic class DateComparison {\n\n    public static LocalDate findEarlierDate(LocalDate date1, LocalDate date2) {\n        if (date1.isBefore(date2)) {\n            return date1;\n        } else {\n            return date2;\n        }\n    }\n\n    public static void main(String[] args) {\n        LocalDate date1 = LocalDate.of(2023, 10, 1);\n        LocalDate date2 = LocalDate.of(2023, 10, 5);\n\n        LocalDate earlierDate = findEarlierDate(date1, date2);\n        System.out.println(\"The earlier date is: \" + earlierDate);\n    }\n}\n```"
  },
  {
    "task": "Create a script that verifies if a given word starts with a vowel.",
    "code": "```java\npublic class VowelChecker {\n    public static void main(String[] args) {\n        String word = \"example\"; // Example word, replace with any word to test\n        if (startsWithVowel(word)) {\n            System.out.println(\"The word starts with a vowel.\");\n        } else {\n            System.out.println(\"The word does not start with a vowel.\");\n        }\n    }\n\n    public static boolean startsWithVowel(String word) {\n        if (word == null || word.isEmpty()) {\n            return false;\n        }\n        char firstChar = Character.toLowerCase(word.charAt(0));\n        return firstChar == 'a' || firstChar == 'e' || firstChar == 'i' || firstChar == 'o' || firstChar == 'u';\n    }\n}\n```"
  },
  {
    "task": "Build a utility that checks if a number is even or odd.",
    "code": "```java\npublic class NumberUtility {\n    public static boolean isEven(int number) {\n        return number % 2 == 0;\n    }\n\n    public static boolean isOdd(int number) {\n        return number % 2 != 0;\n    }\n\n    public static void main(String[] args) {\n        int number = 5;\n        System.out.println(\"Is \" + number + \" even? \" + isEven(number));\n        System.out.println(\"Is \" + number + \" odd? \" + isOdd(number));\n    }\n}\n```"
  },
  {
    "task": "Implement a system that determines if a string contains only numeric characters.",
    "code": "```java\npublic class NumericStringValidator {\n    public static boolean isNumeric(String str) {\n        if (str == null || str.isEmpty()) {\n            return false;\n        }\n        for (char ch : str.toCharArray()) {\n            if (ch < '0' || ch > '9') {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    public static void main(String[] args) {\n        System.out.println(isNumeric(\"123456\")); // true\n        System.out.println(isNumeric(\"123a456\")); // false\n        System.out.println(isNumeric(\"\")); // false\n        System.out.println(isNumeric(null)); // false\n    }\n}\n```"
  },
  {
    "task": "Write a function to see if a given character is a vowel or consonant.",
    "code": "```java\npublic class CharacterCheck {\n    public static String checkVowelOrConsonant(char character) {\n        character = Character.toLowerCase(character);\n        if (character == 'a' || character == 'e' || character == 'i' || character == 'o' || character == 'u') {\n            return \"Vowel\";\n        } else if ((character >= 'a' && character <= 'z')) {\n            return \"Consonant\";\n        } else {\n            return \"Invalid\";\n        }\n    }\n\n    public static void main(String[] args) {\n        char character = 'a';\n        System.out.println(checkVowelOrConsonant(character)); // Example usage\n    }\n}\n```"
  },
  {
    "task": "Create a program that checks if a point lies within a specified rectangle.",
    "code": "```java\npublic class PointInRectangle {\n\n    public static boolean isPointInRectangle(int x, int y, int rectX1, int rectY1, int rectX2, int rectY2) {\n        return x >= rectX1 && x <= rectX2 && y >= rectY1 && y <= rectY2;\n    }\n\n    public static void main(String[] args) {\n        int pointX = 5;\n        int pointY = 5;\n        int rectX1 = 1;\n        int rectY1 = 1;\n        int rectX2 = 10;\n        int rectY2 = 10;\n\n        boolean result = isPointInRectangle(pointX, pointY, rectX1, rectY1, rectX2, rectY2);\n        System.out.println(\"Point is inside rectangle: \" + result);\n    }\n}\n```"
  },
  {
    "task": "Develop a feature to compare two lists and return the common elements.",
    "code": "```java\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class ListComparator {\n    public static List<Integer> findCommonElements(List<Integer> list1, List<Integer> list2) {\n        List<Integer> commonElements = new ArrayList<>();\n        for (Integer element : list1) {\n            if (list2.contains(element)) {\n                commonElements.add(element);\n            }\n        }\n        return commonElements;\n    }\n\n    public static void main(String[] args) {\n        List<Integer> list1 = List.of(1, 2, 3, 4, 5);\n        List<Integer> list2 = List.of(3, 4, 5, 6, 7);\n        \n        List<Integer> commonElements = findCommonElements(list1, list2);\n        System.out.println(\"Common Elements: \" + commonElements);\n    }\n}\n```"
  },
  {
    "task": "Design a function that determines if a text contains any uppercase letters.",
    "code": "```java\npublic class UppercaseChecker {\n    public static boolean containsUppercase(String text) {\n        for (int i = 0; i < text.length(); i++) {\n            if (Character.isUpperCase(text.charAt(i))) {\n                return true;\n            }\n        }\n        return false;\n    }\n}\n```"
  },
  {
    "task": "Implement a script to check if a given sentence is a question.",
    "code": "```java\npublic class QuestionChecker {\n    public static boolean isQuestion(String sentence) {\n        return sentence.trim().endsWith(\"?\");\n    }\n\n    public static void main(String[] args) {\n        String sentence = \"Is this a question?\";\n        System.out.println(\"Is the sentence a question? \" + isQuestion(sentence));\n    }\n}\n```"
  },
  {
    "task": "Write a program to determine if a temperature is measured in Celsius or Fahrenheit.",
    "code": "```java\nimport java.util.Scanner;\n\npublic class TemperatureComparison {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        System.out.print(\"Enter temperature value: \");\n        double temperature = scanner.nextDouble();\n        \n        System.out.print(\"Enter 'C' for Celsius or 'F' for Fahrenheit: \");\n        char scale = scanner.next().charAt(0);\n        \n        if (scale == 'C' || scale == 'c') {\n            System.out.println(\"The temperature is in Celsius.\");\n        } else if (scale == 'F' || scale == 'f') {\n            System.out.println(\"The temperature is in Fahrenheit.\");\n        } else {\n            System.out.println(\"Invalid input for temperature scale.\");\n        }\n        \n        scanner.close();\n    }\n}\n```"
  },
  {
    "task": "Create a system that verifies if a student is enrolled in a particular course.",
    "code": "```java\nimport java.util.HashMap;\nimport java.util.HashSet;\nimport java.util.Set;\n\npublic class CourseEnrollmentSystem {\n    private HashMap<String, Set<String>> enrollmentMap;\n\n    public CourseEnrollmentSystem() {\n        enrollmentMap = new HashMap<>();\n    }\n\n    public void enrollStudent(String course, String student) {\n        enrollmentMap.putIfAbsent(course, new HashSet<>());\n        enrollmentMap.get(course).add(student);\n    }\n\n    public boolean isStudentEnrolled(String course, String student) {\n        return enrollmentMap.containsKey(course) && enrollmentMap.get(course).contains(student);\n    }\n\n    public static void main(String[] args) {\n        CourseEnrollmentSystem system = new CourseEnrollmentSystem();\n        system.enrollStudent(\"Math101\", \"Alice\");\n        system.enrollStudent(\"Physics101\", \"Bob\");\n\n        System.out.println(system.isStudentEnrolled(\"Math101\", \"Alice\")); // true\n        System.out.println(system.isStudentEnrolled(\"Math101\", \"Bob\"));   // false\n    }\n}\n```"
  },
  {
    "task": "Build a utility to check if a given string is a valid hexadecimal number.",
    "code": "```java\npublic class HexadecimalChecker {\n\n    public static boolean isValidHexadecimal(String input) {\n        if (input == null || input.isEmpty()) {\n            return false;\n        }\n        \n        for (char c : input.toCharArray()) {\n            boolean isDigit = c >= '0' && c <= '9';\n            boolean isLowercaseHex = c >= 'a' && c <= 'f';\n            boolean isUppercaseHex = c >= 'A' && c <= 'F';\n            \n            if (!isDigit && !isLowercaseHex && !isUppercaseHex) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    public static void main(String[] args) {\n        String test1 = \"1a3f\";\n        String test2 = \"z12B\";\n        String test3 = \"ABCDEF\";\n        \n        System.out.println(isValidHexadecimal(test1)); // true\n        System.out.println(isValidHexadecimal(test2)); // false\n        System.out.println(isValidHexadecimal(test3)); // true\n    }\n}\n```"
  },
  {
    "task": "Write a function to see if two circles intersect based on their radii and center points.",
    "code": "```java\npublic class CircleIntersection {\n    public static boolean doCirclesIntersect(double x1, double y1, double r1, double x2, double y2, double r2) {\n        double distanceSquared = (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1);\n        double radiusSumSquared = (r1 + r2) * (r1 + r2);\n        return distanceSquared <= radiusSumSquared;\n    }\n\n    public static void main(String[] args) {\n        double x1 = 0, y1 = 0, r1 = 5;\n        double x2 = 8, y2 = 0, r2 = 3;\n\n        boolean result = doCirclesIntersect(x1, y1, r1, x2, y2, r2);\n        System.out.println(\"Do circles intersect? \" + result);\n    }\n}\n```"
  },
  {
    "task": "Develop a program that checks if a given number is within 10% of another number.",
    "code": "```java\npublic class ComparisonOperations {\n    public static void main(String[] args) {\n        double number1 = 50.0;\n        double number2 = 55.0;\n        boolean result = isWithinTenPercent(number1, number2);\n        System.out.println(\"Is number2 within 10% of number1? \" + result);\n    }\n\n    public static boolean isWithinTenPercent(double base, double compare) {\n        double tenPercent = base * 0.10;\n        return compare >= (base - tenPercent) && compare <= (base + tenPercent);\n    }\n}\n```"
  },
  {
    "task": "Create a feature to determine if a character is alphanumeric.",
    "code": "```java\npublic class AlphanumericChecker {\n    public static boolean isAlphanumeric(char c) {\n        return (c >= 'A' && c <= 'Z') ||\n               (c >= 'a' && c <= 'z') ||\n               (c >= '0' && c <= '9');\n    }\n    \n    public static void main(String[] args) {\n        char testChar = 'A';\n        System.out.println(isAlphanumeric(testChar)); // Output: true\n    }\n}\n```"
  },
  {
    "task": "Implement a system to compare the profit margins of two products.",
    "code": "```java\npublic class ProfitMarginComparator {\n\n    public static void main(String[] args) {\n        double profitMarginProductA = calculateProfitMargin(200.0, 150.0);\n        double profitMarginProductB = calculateProfitMargin(300.0, 250.0);\n        \n        int comparisonResult = compareProfitMargins(profitMarginProductA, profitMarginProductB);\n        \n        if (comparisonResult > 0) {\n            System.out.println(\"Product A has a higher profit margin.\");\n        } else if (comparisonResult < 0) {\n            System.out.println(\"Product B has a higher profit margin.\");\n        } else {\n            System.out.println(\"Both products have the same profit margin.\");\n        }\n    }\n    \n    public static double calculateProfitMargin(double sellingPrice, double costPrice) {\n        if (costPrice == 0) {\n            throw new IllegalArgumentException(\"Cost price cannot be zero.\");\n        }\n        return (sellingPrice - costPrice) / costPrice;\n    }\n    \n    public static int compareProfitMargins(double marginA, double marginB) {\n        return Double.compare(marginA, marginB);\n    }\n}\n```"
  },
  {
    "task": "Design a script to check if a given string contains any special characters.",
    "code": "```java\npublic class SpecialCharacterChecker {\n    public static boolean containsSpecialCharacters(String input) {\n        return input.matches(\".*[^a-zA-Z0-9].*\");\n    }\n\n    public static void main(String[] args) {\n        String testString = \"Hello@World\";\n        if (containsSpecialCharacters(testString)) {\n            System.out.println(\"The string contains special characters.\");\n        } else {\n            System.out.println(\"The string does not contain special characters.\");\n        }\n    }\n}\n```"
  },
  {
    "task": "Write a function to verify if a number is a multiple of another number.",
    "code": "```java\npublic class MultipleChecker {\n    public static boolean isMultiple(int number, int potentialMultiple) {\n        return potentialMultiple != 0 && number % potentialMultiple == 0;\n    }\n\n    public static void main(String[] args) {\n        int number = 10;\n        int potentialMultiple = 5;\n        System.out.println(isMultiple(number, potentialMultiple)); // Outputs: true\n    }\n}\n```"
  },
  {
    "task": "Create a program that checks if a date is a holiday based on a list of holidays.",
    "code": "```java\nimport java.time.LocalDate;\nimport java.util.HashSet;\nimport java.util.Set;\n\npublic class HolidayChecker {\n    private Set<LocalDate> holidays;\n\n    public HolidayChecker() {\n        holidays = new HashSet<>();\n        // Add holidays to the set\n        holidays.add(LocalDate.of(2023, 1, 1)); // New Year's Day\n        holidays.add(LocalDate.of(2023, 12, 25)); // Christmas Day\n        // Add more holidays as needed\n    }\n\n    public boolean isHoliday(LocalDate date) {\n        return holidays.contains(date);\n    }\n\n    public static void main(String[] args) {\n        HolidayChecker holidayChecker = new HolidayChecker();\n        LocalDate dateToCheck = LocalDate.of(2023, 12, 25);\n        if (holidayChecker.isHoliday(dateToCheck)) {\n            System.out.println(dateToCheck + \" is a holiday.\");\n        } else {\n            System.out.println(dateToCheck + \" is not a holiday.\");\n        }\n    }\n}\n```"
  },
  {
    "task": "Build a utility to compare two text files and highlight the differences.",
    "code": "```java\nimport java.io.IOException;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\nimport java.util.List;\n\npublic class FileComparator {\n\n    public static void compareFiles(String filePath1, String filePath2) {\n        try {\n            List<String> file1Lines = Files.readAllLines(Paths.get(filePath1));\n            List<String> file2Lines = Files.readAllLines(Paths.get(filePath2));\n\n            int maxLines = Math.max(file1Lines.size(), file2Lines.size());\n            for (int i = 0; i < maxLines; i++) {\n                String line1 = i < file1Lines.size() ? file1Lines.get(i) : null;\n                String line2 = i < file2Lines.size() ? file2Lines.get(i) : null;\n\n                if (line1 == null || line2 == null || !line1.equals(line2)) {\n                    System.out.println(\"Difference at line \" + (i + 1) + \":\");\n                    System.out.println(\"File 1: \" + (line1 != null ? line1 : \"EOF\"));\n                    System.out.println(\"File 2: \" + (line2 != null ? line2 : \"EOF\"));\n                }\n            }\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n\n    public static void main(String[] args) {\n        if (args.length < 2) {\n            System.out.println(\"Usage: java FileComparator <file1> <file2>\");\n            return;\n        }\n        compareFiles(args[0], args[1]);\n    }\n}\n```"
  },
  {
    "task": "Develop a function to determine if a given password is strong based on length and character diversity.",
    "code": "```java\npublic class PasswordStrengthChecker {\n    public static boolean isStrongPassword(String password) {\n        if (password.length() < 8) {\n            return false;\n        }\n        \n        boolean hasUpper = false;\n        boolean hasLower = false;\n        boolean hasDigit = false;\n        boolean hasSpecial = false;\n        \n        for (char c : password.toCharArray()) {\n            if (Character.isUpperCase(c)) {\n                hasUpper = true;\n            } else if (Character.isLowerCase(c)) {\n                hasLower = true;\n            } else if (Character.isDigit(c)) {\n                hasDigit = true;\n            } else {\n                hasSpecial = true;\n            }\n        }\n        \n        return hasUpper && hasLower && hasDigit && hasSpecial;\n    }\n\n    public static void main(String[] args) {\n        String password = \"P@ssw0rd\";\n        System.out.println(\"Is the password strong? \" + isStrongPassword(password));\n    }\n}\n```"
  },
  {
    "task": "Write a script to see if a number is within a specified distance from zero.",
    "code": "```java\npublic class DistanceFromZero {\n    public static void main(String[] args) {\n        int number = 5; // Example number\n        int distance = 10; // Example distance\n\n        if (Math.abs(number) <= distance) {\n            System.out.println(\"The number is within the specified distance from zero.\");\n        } else {\n            System.out.println(\"The number is not within the specified distance from zero.\");\n        }\n    }\n}\n```"
  },
  {
    "task": "Create a system to check if a book title is available in a library database.",
    "code": "```java\nimport java.util.HashSet;\nimport java.util.Set;\n\npublic class LibrarySystem {\n    private Set<String> libraryDatabase;\n\n    public LibrarySystem() {\n        libraryDatabase = new HashSet<>();\n        // Sample titles\n        libraryDatabase.add(\"The Great Gatsby\");\n        libraryDatabase.add(\"1984\");\n        libraryDatabase.add(\"To Kill a Mockingbird\");\n    }\n\n    public boolean isBookAvailable(String title) {\n        return libraryDatabase.contains(title);\n    }\n\n    public static void main(String[] args) {\n        LibrarySystem library = new LibrarySystem();\n        String bookTitle = \"1984\";\n        if (library.isBookAvailable(bookTitle)) {\n            System.out.println(\"The book \\\"\" + bookTitle + \"\\\" is available in the library.\");\n        } else {\n            System.out.println(\"The book \\\"\" + bookTitle + \"\\\" is not available in the library.\");\n        }\n    }\n}\n```"
  },
  {
    "task": "Implement a feature that determines if a user has administrator privileges.",
    "code": "```java\npublic class User {\n    private boolean isAdmin;\n\n    public User(boolean isAdmin) {\n        this.isAdmin = isAdmin;\n    }\n\n    public boolean hasAdminPrivileges() {\n        return this.isAdmin;\n    }\n\n    public static void main(String[] args) {\n        User user = new User(true);\n        if (user.hasAdminPrivileges()) {\n            System.out.println(\"User has administrator privileges.\");\n        } else {\n            System.out.println(\"User does not have administrator privileges.\");\n        }\n    }\n}\n```"
  },
  {
    "task": "Design a function to compare the brightness of two colors.",
    "code": "```java\npublic class ColorComparison {\n\n    public static String compareBrightness(int r1, int g1, int b1, int r2, int g2, int b2) {\n        double brightness1 = calculateBrightness(r1, g1, b1);\n        double brightness2 = calculateBrightness(r2, g2, b2);\n\n        if (brightness1 > brightness2) {\n            return \"Color 1 is brighter\";\n        } else if (brightness1 < brightness2) {\n            return \"Color 2 is brighter\";\n        } else {\n            return \"Both colors have the same brightness\";\n        }\n    }\n\n    private static double calculateBrightness(int r, int g, int b) {\n        return 0.2126 * r + 0.7152 * g + 0.0722 * b;\n    }\n\n    public static void main(String[] args) {\n        System.out.println(compareBrightness(255, 0, 0, 0, 255, 0));\n        System.out.println(compareBrightness(255, 255, 255, 0, 0, 0));\n        System.out.println(compareBrightness(128, 128, 128, 128, 128, 128));\n    }\n}\n```"
  },
  {
    "task": "Write a program to verify if a number is a valid credit card number using the Luhn algorithm.",
    "code": "```java\npublic class CreditCardValidator {\n    public static boolean isValidCreditCardNumber(String number) {\n        int sum = 0;\n        boolean alternate = false;\n        for (int i = number.length() - 1; i >= 0; i--) {\n            int n = Integer.parseInt(number.substring(i, i + 1));\n            if (alternate) {\n                n *= 2;\n                if (n > 9) {\n                    n = (n % 10) + 1;\n                }\n            }\n            sum += n;\n            alternate = !alternate;\n        }\n        return (sum % 10 == 0);\n    }\n\n    public static void main(String[] args) {\n        String number = \"1234567812345670\";\n        if (isValidCreditCardNumber(number)) {\n            System.out.println(\"The number is a valid credit card number.\");\n        } else {\n            System.out.println(\"The number is not a valid credit card number.\");\n        }\n    }\n}\n```"
  },
  {
    "task": "Create a script to determine if a given string is a valid IP address.",
    "code": "```java\nimport java.util.regex.Pattern;\n\npublic class IPAddressValidator {\n    private static final String IPADDRESS_PATTERN = \n        \"^((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\\\.){3}\" +\n        \"(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$\";\n\n    private static final Pattern pattern = Pattern.compile(IPADDRESS_PATTERN);\n\n    public static boolean isValidIPAddress(String ip) {\n        return pattern.matcher(ip).matches();\n    }\n\n    public static void main(String[] args) {\n        String ipAddress = \"192.168.0.1\";\n        System.out.println(\"Is valid IP: \" + isValidIPAddress(ipAddress));\n    }\n}\n```"
  },
  {
    "task": "Build a utility that checks if a number is part of an arithmetic sequence.",
    "code": "```java\npublic class ArithmeticSequenceChecker {\n\n    public static boolean isPartOfArithmeticSequence(int number, int firstTerm, int commonDifference) {\n        if (commonDifference == 0) {\n            return number == firstTerm;\n        }\n        return (number - firstTerm) % commonDifference == 0;\n    }\n\n    public static void main(String[] args) {\n        int number = 15;\n        int firstTerm = 5;\n        int commonDifference = 2;\n        \n        boolean result = isPartOfArithmeticSequence(number, firstTerm, commonDifference);\n        System.out.println(\"Is the number part of the arithmetic sequence? \" + result);\n    }\n}\n```"
  },
  {
    "task": "Develop a feature to compare the efficiency of two algorithms based on time complexity.",
    "code": "```java\npublic class AlgorithmComparison {\n\n    public static void main(String[] args) {\n        String algorithm1 = \"O(n)\";\n        String algorithm2 = \"O(log n)\";\n\n        int comparisonResult = compareComplexity(algorithm1, algorithm2);\n\n        if (comparisonResult < 0) {\n            System.out.println(algorithm1 + \" is more efficient than \" + algorithm2);\n        } else if (comparisonResult > 0) {\n            System.out.println(algorithm2 + \" is more efficient than \" + algorithm1);\n        } else {\n            System.out.println(algorithm1 + \" and \" + algorithm2 + \" have the same efficiency.\");\n        }\n    }\n\n    private static int compareComplexity(String algo1, String algo2) {\n        int complexity1 = evaluateComplexity(algo1);\n        int complexity2 = evaluateComplexity(algo2);\n\n        return Integer.compare(complexity1, complexity2);\n    }\n\n    private static int evaluateComplexity(String complexity) {\n        switch (complexity) {\n            case \"O(1)\": return 1;\n            case \"O(log n)\": return 2;\n            case \"O(n)\": return 3;\n            case \"O(n log n)\": return 4;\n            case \"O(n^2)\": return 5;\n            case \"O(n^3)\": return 6;\n            case \"O(2^n)\": return 7;\n            case \"O(n!)\": return 8;\n            default: return Integer.MAX_VALUE;\n        }\n    }\n}\n```"
  },
  {
    "task": "Write a function to see if a given date falls in a leap year.",
    "code": "```java\npublic class LeapYearChecker {\n    public static boolean isLeapYear(int year) {\n        if (year % 4 == 0) {\n            if (year % 100 == 0) {\n                return year % 400 == 0;\n            }\n            return true;\n        }\n        return false;\n    }\n    \n    public static boolean isDateInLeapYear(int day, int month, int year) {\n        return isLeapYear(year);\n    }\n\n    public static void main(String[] args) {\n        int day = 29;\n        int month = 2;\n        int year = 2024;\n        System.out.println(isDateInLeapYear(day, month, year)); // Expected output: true\n    }\n}\n```"
  },
  {
    "task": "Create a program that determines if a user's subscription is active based on the current date.",
    "code": "```java\nimport java.time.LocalDate;\n\npublic class SubscriptionChecker {\n\n    public static void main(String[] args) {\n        LocalDate currentDate = LocalDate.now();\n        LocalDate subscriptionEndDate = LocalDate.of(2023, 12, 31); // example subscription end date\n        \n        if (currentDate.isBefore(subscriptionEndDate) || currentDate.isEqual(subscriptionEndDate)) {\n            System.out.println(\"Subscription is active.\");\n        } else {\n            System.out.println(\"Subscription is inactive.\");\n        }\n    }\n}\n```"
  },
  {
    "task": "Design a tool to check if a user\u2019s input is a palindrome phrase, ignoring spaces and punctuation.",
    "code": "```java\nimport java.util.Scanner;\n\npublic class PalindromeChecker {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        System.out.println(\"Enter a phrase:\");\n        String input = scanner.nextLine();\n        \n        String sanitizedInput = input.replaceAll(\"[^a-zA-Z0-9]\", \"\").toLowerCase();\n        boolean isPalindrome = true;\n        \n        int n = sanitizedInput.length();\n        for (int i = 0; i < n / 2; i++) {\n            if (sanitizedInput.charAt(i) != sanitizedInput.charAt(n - i - 1)) {\n                isPalindrome = false;\n                break;\n            }\n        }\n        \n        if (isPalindrome) {\n            System.out.println(\"The input is a palindrome.\");\n        } else {\n            System.out.println(\"The input is not a palindrome.\");\n        }\n    }\n}\n```"
  },
  {
    "task": "Implement a system to verify if a given number is part of the Fibonacci sequence.",
    "code": "```java\npublic class FibonacciChecker {\n\n    public static boolean isFibonacci(int number) {\n        if (number < 0) return false;\n        int a = 0;\n        int b = 1;\n        while (b < number) {\n            int temp = b;\n            b = a + b;\n            a = temp;\n        }\n        return b == number || number == 0;\n    }\n\n    public static void main(String[] args) {\n        int number = 21; // Example number\n        System.out.println(\"Is \" + number + \" a Fibonacci number? \" + isFibonacci(number));\n    }\n}\n```"
  },
  {
    "task": "Write a program to compare the elevation of two geographic locations.",
    "code": "```java\npublic class ElevationComparison {\n\n    public static void main(String[] args) {\n        double elevationLocation1 = 500.0; // example elevation in meters\n        double elevationLocation2 = 450.0; // example elevation in meters\n\n        if (elevationLocation1 > elevationLocation2) {\n            System.out.println(\"Location 1 is at a higher elevation than Location 2.\");\n        } else if (elevationLocation1 < elevationLocation2) {\n            System.out.println(\"Location 2 is at a higher elevation than Location 1.\");\n        } else {\n            System.out.println(\"Both locations are at the same elevation.\");\n        }\n    }\n}\n```"
  },
  {
    "task": "Create a function to determine if a given string is a valid JSON format.",
    "code": "```java\nimport com.fasterxml.jackson.databind.ObjectMapper;\n\npublic class JsonValidator {\n    public static boolean isValidJson(String input) {\n        ObjectMapper objectMapper = new ObjectMapper();\n        try {\n            objectMapper.readTree(input);\n            return true;\n        } catch (Exception e) {\n            return false;\n        }\n    }\n\n    public static void main(String[] args) {\n        String testJson = \"{\\\"name\\\":\\\"John\\\", \\\"age\\\":30}\";\n        System.out.println(isValidJson(testJson)); // Expected output: true\n\n        String invalidJson = \"{name:John, age:30}\";\n        System.out.println(isValidJson(invalidJson)); // Expected output: false\n    }\n}\n```"
  },
  {
    "task": "Build a utility that checks if a number is a factorial of any integer.",
    "code": "```java\npublic class FactorialChecker {\n    public static boolean isFactorial(int number) {\n        if (number < 0) return false;\n        int factorial = 1;\n        for (int i = 1; ; i++) {\n            if (factorial == number) return true;\n            if (factorial > number) return false;\n            factorial *= i;\n        }\n    }\n\n    public static void main(String[] args) {\n        int numberToCheck = 120; // Example number\n        boolean result = isFactorial(numberToCheck);\n        System.out.println(\"Is \" + numberToCheck + \" a factorial of any integer? \" + result);\n    }\n}\n```"
  },
  {
    "task": "Develop a feature to compare the widths of two ribbons and return the wider one.",
    "code": "```java\npublic class RibbonComparison {\n\n    public static double getWiderRibbon(double width1, double width2) {\n        return (width1 > width2) ? width1 : width2;\n    }\n\n    public static void main(String[] args) {\n        double ribbon1Width = 5.0;\n        double ribbon2Width = 7.5;\n\n        double widerRibbon = getWiderRibbon(ribbon1Width, ribbon2Width);\n        System.out.println(\"The wider ribbon has a width of: \" + widerRibbon);\n    }\n}\n```"
  },
  {
    "task": "Write a script to see if a word is present in a list of banned words.",
    "code": "```java\nimport java.util.List;\n\npublic class BannedWordsChecker {\n    public static boolean isWordBanned(String word, List<String> bannedWords) {\n        return bannedWords.contains(word);\n    }\n\n    public static void main(String[] args) {\n        List<String> bannedWords = List.of(\"forbidden\", \"restricted\", \"banned\");\n        String wordToCheck = \"restricted\";\n        \n        if (isWordBanned(wordToCheck, bannedWords)) {\n            System.out.println(\"The word is banned.\");\n        } else {\n            System.out.println(\"The word is not banned.\");\n        }\n    }\n}\n```"
  },
  {
    "task": "Design a system to determine if a patient's temperature is in the normal range.",
    "code": "```java\npublic class TemperatureChecker {\n\n    public static boolean isTemperatureNormal(double temperature) {\n        double lowerBound = 36.1;\n        double upperBound = 37.2;\n        return temperature >= lowerBound && temperature <= upperBound;\n    }\n\n    public static void main(String[] args) {\n        double patientTemperature = 37.0;\n        if (isTemperatureNormal(patientTemperature)) {\n            System.out.println(\"The patient's temperature is normal.\");\n        } else {\n            System.out.println(\"The patient's temperature is not normal.\");\n        }\n    }\n}\n```"
  },
  {
    "task": "Create a program that checks if a given time is during business hours.",
    "code": "```java\nimport java.time.LocalTime;\n\npublic class BusinessHoursChecker {\n    public static void main(String[] args) {\n        LocalTime givenTime = LocalTime.of(14, 30);  // Example time: 2:30 PM\n        LocalTime startBusinessHours = LocalTime.of(9, 0);  // 9:00 AM\n        LocalTime endBusinessHours = LocalTime.of(17, 0);  // 5:00 PM\n\n        boolean isDuringBusinessHours = givenTime.isAfter(startBusinessHours) && givenTime.isBefore(endBusinessHours);\n        System.out.println(\"The given time is \" + (isDuringBusinessHours ? \"during\" : \"outside\") + \" business hours.\");\n    }\n}\n```"
  },
  {
    "task": "Implement a function to see if a number is a triangular number.",
    "code": "```java\npublic class TriangularNumberChecker {\n\n    public static boolean isTriangularNumber(int number) {\n        if (number < 0) return false;\n        \n        int sum = 0;\n        int n = 1;\n        \n        while (sum < number) {\n            sum += n;\n            n++;\n        }\n        \n        return sum == number;\n    }\n    \n    public static void main(String[] args) {\n        int number = 10;\n        System.out.println(isTriangularNumber(number)); // Output: true\n    }\n}\n```"
  },
  {
    "task": "Write a feature to compare the number of vowels in two given strings.",
    "code": "```java\npublic class VowelComparator {\n    public static int countVowels(String str) {\n        int count = 0;\n        for (char c : str.toLowerCase().toCharArray()) {\n            if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n                count++;\n            }\n        }\n        return count;\n    }\n\n    public static String compareVowelCount(String str1, String str2) {\n        int vowelsStr1 = countVowels(str1);\n        int vowelsStr2 = countVowels(str2);\n\n        if (vowelsStr1 > vowelsStr2) {\n            return \"First string has more vowels.\";\n        } else if (vowelsStr1 < vowelsStr2) {\n            return \"Second string has more vowels.\";\n        } else {\n            return \"Both strings have the same number of vowels.\";\n        }\n    }\n\n    public static void main(String[] args) {\n        String string1 = \"hello\";\n        String string2 = \"world\";\n        System.out.println(compareVowelCount(string1, string2));\n    }\n}\n```"
  }
]