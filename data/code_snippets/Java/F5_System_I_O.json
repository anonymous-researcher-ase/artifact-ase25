[
  {
    "task": "Write a program that reads a user's name and age from the input, then prints a greeting message using both values.",
    "code": "```java\nimport java.util.Scanner;\n\npublic class Greeting {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n\n        System.out.print(\"Enter your name: \");\n        String name = scanner.nextLine();\n\n        System.out.print(\"Enter your age: \");\n        int age = scanner.nextInt();\n\n        System.out.println(\"Hello, \" + name + \"! You are \" + age + \" years old.\");\n\n        scanner.close();\n    }\n}\n```"
  },
  {
    "task": "Create a script that continuously reads numbers from the input and prints their running total until a negative number is entered.",
    "code": "```java\nimport java.util.Scanner;\n\npublic class RunningTotal {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        int total = 0;\n        \n        while (true) {\n            int number = scanner.nextInt();\n            if (number < 0) {\n                break;\n            }\n            total += number;\n            System.out.println(total);\n        }\n        \n        scanner.close();\n    }\n}\n```"
  },
  {
    "task": "Design a program that asks the user for a sentence and outputs the number of words it contains.",
    "code": "```java\nimport java.util.Scanner;\n\npublic class WordCounter {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        System.out.println(\"Please enter a sentence:\");\n        String sentence = scanner.nextLine();\n        int wordCount = sentence.trim().isEmpty() ? 0 : sentence.trim().split(\"\\\\s+\").length;\n        System.out.println(\"The sentence contains \" + wordCount + \" words.\");\n        scanner.close();\n    }\n}\n```"
  },
  {
    "task": "Build a command-line tool that reads a list of integers and outputs them in sorted order.",
    "code": "```java\nimport java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.List;\nimport java.util.Scanner;\n\npublic class SortIntegers {\n\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        List<Integer> numbers = new ArrayList<>();\n        \n        System.out.println(\"Enter integers (type 'done' to finish):\");\n        \n        while (scanner.hasNext()) {\n            if (scanner.hasNextInt()) {\n                numbers.add(scanner.nextInt());\n            } else {\n                String input = scanner.next();\n                if (input.equalsIgnoreCase(\"done\")) {\n                    break;\n                } else {\n                    System.out.println(\"Invalid input, please enter an integer or 'done' to finish.\");\n                }\n            }\n        }\n        \n        Collections.sort(numbers);\n        \n        System.out.println(\"Sorted integers:\");\n        for (int number : numbers) {\n            System.out.println(number);\n        }\n        \n        scanner.close();\n    }\n}\n```"
  },
  {
    "task": "Develop a program that reads a file name from the input, then prints the number of lines in that file.",
    "code": "```java\nimport java.io.BufferedReader;\nimport java.io.FileReader;\nimport java.io.IOException;\nimport java.util.Scanner;\n\npublic class LineCounter {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        String fileName = scanner.nextLine();\n        scanner.close();\n        \n        try (BufferedReader reader = new BufferedReader(new FileReader(fileName))) {\n            int lineCount = 0;\n            while (reader.readLine() != null) {\n                lineCount++;\n            }\n            System.out.println(lineCount);\n        } catch (IOException e) {\n            System.out.println(\"An error occurred: \" + e.getMessage());\n        }\n    }\n}\n```"
  },
  {
    "task": "Implement a calculator that reads two numbers and an operator (+, -, *, /) from the input and prints the result.",
    "code": "```java\nimport java.util.Scanner;\n\npublic class Calculator {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        \n        System.out.print(\"Enter first number: \");\n        double num1 = scanner.nextDouble();\n        \n        System.out.print(\"Enter an operator (+, -, *, /): \");\n        char operator = scanner.next().charAt(0);\n        \n        System.out.print(\"Enter second number: \");\n        double num2 = scanner.nextDouble();\n        \n        double result;\n        \n        switch (operator) {\n            case '+':\n                result = num1 + num2;\n                break;\n            case '-':\n                result = num1 - num2;\n                break;\n            case '*':\n                result = num1 * num2;\n                break;\n            case '/':\n                if (num2 != 0) {\n                    result = num1 / num2;\n                } else {\n                    System.out.println(\"Error: Division by zero\");\n                    return;\n                }\n                break;\n            default:\n                System.out.println(\"Error: Invalid operator\");\n                return;\n        }\n        \n        System.out.println(\"The result is: \" + result);\n    }\n}\n```"
  },
  {
    "task": "Write a script that reads a user's full name and prints it in reverse order.",
    "code": "```java\nimport java.util.Scanner;\n\npublic class ReverseName {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        System.out.println(\"Enter your full name:\");\n        String fullName = scanner.nextLine();\n        String reversedName = new StringBuilder(fullName).reverse().toString();\n        System.out.println(\"Reversed name: \" + reversedName);\n    }\n}\n```"
  },
  {
    "task": "Create a program that asks for a word and checks if it is a palindrome, printing the appropriate message.",
    "code": "```java\nimport java.util.Scanner;\n\npublic class PalindromeChecker {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        System.out.println(\"Enter a word:\");\n        String word = scanner.nextLine();\n        if (isPalindrome(word)) {\n            System.out.println(\"The word is a palindrome.\");\n        } else {\n            System.out.println(\"The word is not a palindrome.\");\n        }\n        scanner.close();\n    }\n\n    private static boolean isPalindrome(String word) {\n        int left = 0;\n        int right = word.length() - 1;\n        while (left < right) {\n            if (word.charAt(left) != word.charAt(right)) {\n                return false;\n            }\n            left++;\n            right--;\n        }\n        return true;\n    }\n}\n```"
  },
  {
    "task": "Develop a tool that reads multiple lines of text and outputs the longest line.",
    "code": "```java\nimport java.util.Scanner;\n\npublic class LongestLineFinder {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        String longestLine = \"\";\n        \n        while (scanner.hasNextLine()) {\n            String line = scanner.nextLine();\n            if (line.length() > longestLine.length()) {\n                longestLine = line;\n            }\n        }\n        \n        System.out.println(\"Longest line: \" + longestLine);\n        scanner.close();\n    }\n}\n```"
  },
  {
    "task": "Design a script that reads a number 'n' and prints the first 'n' Fibonacci numbers.",
    "code": "```java\nimport java.util.Scanner;\n\npublic class FibonacciSequence {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        System.out.print(\"Enter a number: \");\n        int n = scanner.nextInt();\n\n        long first = 0, second = 1;\n        for (int i = 0; i < n; i++) {\n            System.out.println(first);\n            long next = first + second;\n            first = second;\n            second = next;\n        }\n        \n        scanner.close();\n    }\n}\n```"
  },
  {
    "task": "Write a program that takes a list of numbers from the input and prints only the even ones.",
    "code": "```java\nimport java.util.Scanner;\n\npublic class EvenNumbers {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        System.out.println(\"Enter numbers separated by space:\");\n        String[] inputNumbers = scanner.nextLine().split(\" \");\n        \n        for (String number : inputNumbers) {\n            int num = Integer.parseInt(number);\n            if (num % 2 == 0) {\n                System.out.println(num);\n            }\n        }\n    }\n}\n```"
  },
  {
    "task": "Create a script that reads a date (day, month, year) and prints the day of the week for that date.",
    "code": "```java\nimport java.util.Scanner;\nimport java.time.LocalDate;\nimport java.time.format.TextStyle;\nimport java.util.Locale;\n\npublic class DayOfWeekFinder {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        \n        System.out.print(\"Enter day: \");\n        int day = scanner.nextInt();\n        \n        System.out.print(\"Enter month: \");\n        int month = scanner.nextInt();\n        \n        System.out.print(\"Enter year: \");\n        int year = scanner.nextInt();\n        \n        LocalDate date = LocalDate.of(year, month, day);\n        String dayOfWeek = date.getDayOfWeek().getDisplayName(TextStyle.FULL, Locale.ENGLISH);\n        \n        System.out.println(\"Day of the week: \" + dayOfWeek);\n    }\n}\n```"
  },
  {
    "task": "Develop a program that reads a paragraph and counts the frequency of each letter in the text.",
    "code": "```java\nimport java.util.HashMap;\nimport java.util.Map;\nimport java.util.Scanner;\n\npublic class LetterFrequencyCounter {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        System.out.println(\"Enter a paragraph:\");\n        String paragraph = scanner.nextLine().toLowerCase();\n\n        Map<Character, Integer> frequencyMap = new HashMap<>();\n\n        for (char c : paragraph.toCharArray()) {\n            if (Character.isLetter(c)) {\n                frequencyMap.put(c, frequencyMap.getOrDefault(c, 0) + 1);\n            }\n        }\n\n        System.out.println(\"Letter frequencies:\");\n        for (Map.Entry<Character, Integer> entry : frequencyMap.entrySet()) {\n            System.out.println(entry.getKey() + \": \" + entry.getValue());\n        }\n        \n        scanner.close();\n    }\n}\n```"
  },
  {
    "task": "Build a tool that reads a text and a word, then prints the number of times the word appears in the text.",
    "code": "```java\nimport java.util.Scanner;\n\npublic class WordCounter {\n\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n\n        System.out.println(\"Enter the text:\");\n        String text = scanner.nextLine();\n\n        System.out.println(\"Enter the word to count:\");\n        String word = scanner.nextLine();\n\n        String[] words = text.split(\"\\\\s+\");\n        int count = 0;\n\n        for (String w : words) {\n            if (w.equals(word)) {\n                count++;\n            }\n        }\n\n        System.out.println(\"The word '\" + word + \"' appears \" + count + \" times in the text.\");\n    }\n}\n```"
  },
  {
    "task": "Implement a script that reads a temperature in Celsius and converts it to Fahrenheit, printing the result.",
    "code": "```java\nimport java.util.Scanner;\n\npublic class CelsiusToFahrenheit {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        System.out.print(\"Enter temperature in Celsius: \");\n        double celsius = scanner.nextDouble();\n        double fahrenheit = celsius * 9 / 5 + 32;\n        System.out.println(\"Temperature in Fahrenheit: \" + fahrenheit);\n    }\n}\n```"
  },
  {
    "task": "Write a program that continuously reads input until the word 'exit' is entered, then prints all entered inputs.",
    "code": "```java\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        List<String> inputs = new ArrayList<>();\n        String input;\n\n        while (true) {\n            input = scanner.nextLine();\n            if (input.equals(\"exit\")) {\n                break;\n            }\n            inputs.add(input);\n        }\n\n        for (String str : inputs) {\n            System.out.println(str);\n        }\n    }\n}\n```"
  },
  {
    "task": "Create a tool that prompts for a filename, reads the file, and prints its content in uppercase.",
    "code": "```java\nimport java.io.BufferedReader;\nimport java.io.FileReader;\nimport java.io.IOException;\nimport java.util.Scanner;\n\npublic class FileUppercasePrinter {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        System.out.print(\"Enter the filename: \");\n        String filename = scanner.nextLine();\n        \n        try (BufferedReader reader = new BufferedReader(new FileReader(filename))) {\n            String line;\n            while ((line = reader.readLine()) != null) {\n                System.out.println(line.toUpperCase());\n            }\n        } catch (IOException e) {\n            System.out.println(\"An error occurred while reading the file: \" + e.getMessage());\n        }\n    }\n}\n```"
  },
  {
    "task": "Develop a program that reads a series of email addresses and prints the unique domain names.",
    "code": "```java\nimport java.util.HashSet;\nimport java.util.Scanner;\nimport java.util.Set;\n\npublic class UniqueDomains {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        Set<String> domainSet = new HashSet<>();\n\n        System.out.println(\"Enter email addresses (type 'exit' to stop):\");\n        while (true) {\n            String input = scanner.nextLine();\n            if (input.equalsIgnoreCase(\"exit\")) {\n                break;\n            }\n            String[] parts = input.split(\"@\");\n            if (parts.length == 2) {\n                domainSet.add(parts[1]);\n            }\n        }\n\n        System.out.println(\"Unique domain names:\");\n        for (String domain : domainSet) {\n            System.out.println(domain);\n        }\n    }\n}\n```"
  },
  {
    "task": "Design a script that reads a string and prints whether it contains all the letters of the alphabet.",
    "code": "```java\nimport java.util.Scanner;\n\npublic class AlphabetChecker {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        System.out.println(\"Enter a string: \");\n        String input = scanner.nextLine().toLowerCase();\n        boolean allLettersPresent = true;\n\n        for (char c = 'a'; c <= 'z'; c++) {\n            if (input.indexOf(c) == -1) {\n                allLettersPresent = false;\n                break;\n            }\n        }\n\n        if (allLettersPresent) {\n            System.out.println(\"The string contains all the letters of the alphabet.\");\n        } else {\n            System.out.println(\"The string does not contain all the letters of the alphabet.\");\n        }\n    }\n}\n```"
  },
  {
    "task": "Write a program that reads a number and prints its factorial.",
    "code": "```java\nimport java.util.Scanner;\n\npublic class FactorialCalculator {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        System.out.print(\"Enter a number: \");\n        int number = scanner.nextInt();\n        long factorial = 1;\n        for (int i = 2; i <= number; i++) {\n            factorial *= i;\n        }\n        System.out.println(\"Factorial: \" + factorial);\n    }\n}\n```"
  },
  {
    "task": "Create a tool that reads a list of names and prints them in alphabetical order.",
    "code": "```java\nimport java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.Scanner;\n\npublic class NameSorter {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        ArrayList<String> names = new ArrayList<>();\n        \n        System.out.println(\"Enter names (type 'exit' to finish):\");\n        while (true) {\n            String name = scanner.nextLine();\n            if (name.equalsIgnoreCase(\"exit\")) {\n                break;\n            }\n            names.add(name);\n        }\n        \n        Collections.sort(names);\n        \n        System.out.println(\"Names in alphabetical order:\");\n        for (String name : names) {\n            System.out.println(name);\n        }\n        \n        scanner.close();\n    }\n}\n```"
  },
  {
    "task": "Develop a program that asks for a sentence and prints each word on a new line.",
    "code": "```java\nimport java.util.Scanner;\n\npublic class WordPerLine {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        System.out.println(\"Enter a sentence:\");\n        String sentence = scanner.nextLine();\n        \n        String[] words = sentence.split(\"\\\\s+\");\n        for (String word : words) {\n            System.out.println(word);\n        }\n        \n        scanner.close();\n    }\n}\n```"
  },
  {
    "task": "Build a script that reads a time in 12-hour format and converts it to 24-hour format.",
    "code": "```java\nimport java.util.Scanner;\n\npublic class TimeConverter {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        System.out.println(\"Enter time in 12-hour format (hh:mm AM/PM):\");\n        String time12 = scanner.nextLine();\n        String[] parts = time12.split(\" \");\n        String[] timeParts = parts[0].split(\":\");\n        \n        int hours = Integer.parseInt(timeParts[0]);\n        int minutes = Integer.parseInt(timeParts[1]);\n        String period = parts[1].toUpperCase();\n\n        if (period.equals(\"PM\") && hours != 12) {\n            hours += 12;\n        } else if (period.equals(\"AM\") && hours == 12) {\n            hours = 0;\n        }\n\n        System.out.printf(\"24-hour format: %02d:%02d%n\", hours, minutes);\n        scanner.close();\n    }\n}\n```"
  },
  {
    "task": "Implement a program that reads two strings and checks if they are anagrams, printing the result.",
    "code": "```java\nimport java.util.Scanner;\nimport java.util.Arrays;\n\npublic class AnagramChecker {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        \n        System.out.println(\"Enter first string:\");\n        String firstString = scanner.nextLine();\n        \n        System.out.println(\"Enter second string:\");\n        String secondString = scanner.nextLine();\n        \n        boolean isAnagram = checkAnagram(firstString, secondString);\n        \n        System.out.println(\"The strings are anagrams: \" + isAnagram);\n        \n        scanner.close();\n    }\n    \n    private static boolean checkAnagram(String s1, String s2) {\n        char[] charArray1 = s1.replaceAll(\"\\\\s\", \"\").toLowerCase().toCharArray();\n        char[] charArray2 = s2.replaceAll(\"\\\\s\", \"\").toLowerCase().toCharArray();\n        \n        Arrays.sort(charArray1);\n        Arrays.sort(charArray2);\n        \n        return Arrays.equals(charArray1, charArray2);\n    }\n}\n```"
  },
  {
    "task": "Write a tool that reads a paragraph and prints the first and last sentence.",
    "code": "```java\nimport java.util.Scanner;\n\npublic class SentenceExtractor {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        System.out.println(\"Enter a paragraph:\");\n        String paragraph = scanner.nextLine();\n        scanner.close();\n\n        String[] sentences = paragraph.split(\"(?<=[.!?])\\\\s+\");\n        if (sentences.length > 0) {\n            System.out.println(\"First sentence: \" + sentences[0]);\n            System.out.println(\"Last sentence: \" + sentences[sentences.length - 1]);\n        }\n    }\n}\n```"
  },
  {
    "task": "Create a program that reads a binary number and converts it to decimal.",
    "code": "```java\nimport java.util.Scanner;\n\npublic class BinaryToDecimal {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        System.out.print(\"Enter a binary number: \");\n        String binaryString = scanner.nextLine();\n        int decimalValue = Integer.parseInt(binaryString, 2);\n        System.out.println(\"Decimal value: \" + decimalValue);\n        scanner.close();\n    }\n}\n```"
  },
  {
    "task": "Develop a script that reads a series of scores and prints the average score.",
    "code": "```java\nimport java.util.Scanner;\n\npublic class AverageScoreCalculator {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        System.out.println(\"Enter scores separated by space:\");\n        String input = scanner.nextLine();\n        \n        String[] scoresArray = input.split(\" \");\n        double sum = 0;\n        int count = 0;\n\n        for (String scoreStr : scoresArray) {\n            try {\n                double score = Double.parseDouble(scoreStr);\n                sum += score;\n                count++;\n            } catch (NumberFormatException e) {\n                System.out.println(\"Invalid input detected, skipping: \" + scoreStr);\n            }\n        }\n        \n        if (count > 0) {\n            double average = sum / count;\n            System.out.println(\"Average score: \" + average);\n        } else {\n            System.out.println(\"No valid scores entered.\");\n        }\n        \n        scanner.close();\n    }\n}\n```"
  },
  {
    "task": "Design a program that reads a list of integers and prints the prime numbers.",
    "code": "```java\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.util.Scanner;\n\npublic class PrimeNumbers {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        List<Integer> numbers = new ArrayList<>();\n        \n        System.out.println(\"Enter integers (type 'done' to finish):\");\n        while (scanner.hasNextInt()) {\n            numbers.add(scanner.nextInt());\n        }\n        \n        System.out.println(\"Prime numbers:\");\n        for (int number : numbers) {\n            if (isPrime(number)) {\n                System.out.println(number);\n            }\n        }\n        scanner.close();\n    }\n\n    private static boolean isPrime(int num) {\n        if (num <= 1) return false;\n        if (num <= 3) return true;\n        if (num % 2 == 0 || num % 3 == 0) return false;\n        for (int i = 5; i * i <= num; i += 6) {\n            if (num % i == 0 || num % (i + 2) == 0) return false;\n        }\n        return true;\n    }\n}\n```"
  },
  {
    "task": "Write a script that reads a word and prints its Pig Latin translation.",
    "code": "```java\nimport java.util.Scanner;\n\npublic class PigLatinTranslator {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        System.out.println(\"Enter a word:\");\n        String word = scanner.nextLine();\n        String pigLatin = translateToPigLatin(word);\n        System.out.println(\"Pig Latin: \" + pigLatin);\n        scanner.close();\n    }\n\n    private static String translateToPigLatin(String word) {\n        if (word.length() == 0) {\n            return word;\n        }\n        char firstLetter = word.charAt(0);\n        String restOfWord = word.substring(1);\n        return restOfWord + firstLetter + \"ay\";\n    }\n}\n```"
  },
  {
    "task": "Create a tool that reads a matrix of numbers and prints its transpose.",
    "code": "```java\nimport java.util.Scanner;\n\npublic class MatrixTranspose {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        \n        // Read dimensions of the matrix\n        int rows = scanner.nextInt();\n        int columns = scanner.nextInt();\n        \n        // Read the matrix\n        int[][] matrix = new int[rows][columns];\n        for (int i = 0; i < rows; i++) {\n            for (int j = 0; j < columns; j++) {\n                matrix[i][j] = scanner.nextInt();\n            }\n        }\n        \n        // Transpose the matrix\n        int[][] transpose = new int[columns][rows];\n        for (int i = 0; i < rows; i++) {\n            for (int j = 0; j < columns; j++) {\n                transpose[j][i] = matrix[i][j];\n            }\n        }\n        \n        // Print the transposed matrix\n        for (int i = 0; i < columns; i++) {\n            for (int j = 0; j < rows; j++) {\n                System.out.print(transpose[i][j] + \" \");\n            }\n            System.out.println();\n        }\n        \n        scanner.close();\n    }\n}\n```"
  },
  {
    "task": "Implement a program that reads a URL and prints the domain name.",
    "code": "```java\nimport java.net.URL;\nimport java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        System.out.println(\"Enter a URL:\");\n        String urlString = scanner.nextLine();\n        \n        try {\n            URL url = new URL(urlString);\n            String host = url.getHost();\n            System.out.println(\"Domain name: \" + host);\n        } catch (Exception e) {\n            System.out.println(\"Invalid URL\");\n        }\n        \n        scanner.close();\n    }\n}\n```"
  },
  {
    "task": "Write a script that reads a number and prints its multiplication table up to 12.",
    "code": "```java\nimport java.util.Scanner;\n\npublic class MultiplicationTable {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        System.out.print(\"Enter a number: \");\n        int number = scanner.nextInt();\n        \n        for (int i = 1; i <= 12; i++) {\n            System.out.println(number + \" x \" + i + \" = \" + (number * i));\n        }\n        \n        scanner.close();\n    }\n}\n```"
  },
  {
    "task": "Develop a program that reads a list of dates and prints them in order of occurrence.",
    "code": "```java\nimport java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.List;\nimport java.util.Scanner;\nimport java.text.ParseException;\nimport java.text.SimpleDateFormat;\nimport java.util.Date;\n\npublic class DateSorter {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        List<Date> dates = new ArrayList<>();\n        SimpleDateFormat dateFormat = new SimpleDateFormat(\"yyyy-MM-dd\");\n\n        System.out.println(\"Enter dates in the format yyyy-MM-dd, one per line. Enter 'done' to finish:\");\n        while (scanner.hasNextLine()) {\n            String line = scanner.nextLine();\n            if (line.equalsIgnoreCase(\"done\")) {\n                break;\n            }\n            try {\n                Date date = dateFormat.parse(line);\n                dates.add(date);\n            } catch (ParseException e) {\n                System.out.println(\"Invalid date format. Please enter again.\");\n            }\n        }\n\n        Collections.sort(dates);\n\n        System.out.println(\"Dates in order of occurrence:\");\n        for (Date date : dates) {\n            System.out.println(dateFormat.format(date));\n        }\n    }\n}\n```"
  },
  {
    "task": "Create a tool that reads a text and prints it with each sentence capitalized.",
    "code": "```java\nimport java.util.Scanner;\n\npublic class SentenceCapitalizer {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        System.out.println(\"Enter the text:\");\n        String input = scanner.nextLine();\n        scanner.close();\n\n        String[] sentences = input.split(\"(?<=[.!?])\\\\s*\");\n        StringBuilder result = new StringBuilder();\n\n        for (String sentence : sentences) {\n            if (!sentence.trim().isEmpty()) {\n                result.append(Character.toUpperCase(sentence.trim().charAt(0)))\n                        .append(sentence.trim().substring(1))\n                        .append(\" \");\n            }\n        }\n        System.out.println(result.toString().trim());\n    }\n}\n```"
  },
  {
    "task": "Design a program that reads a list of words and prints them in reverse alphabetical order.",
    "code": "```java\nimport java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        ArrayList<String> words = new ArrayList<>();\n        \n        System.out.println(\"Enter words (type 'end' to finish):\");\n        \n        while (true) {\n            String word = scanner.nextLine();\n            if (word.equalsIgnoreCase(\"end\")) {\n                break;\n            }\n            words.add(word);\n        }\n        \n        Collections.sort(words, Collections.reverseOrder());\n        \n        System.out.println(\"Words in reverse alphabetical order:\");\n        for (String word : words) {\n            System.out.println(word);\n        }\n    }\n}\n```"
  },
  {
    "task": "Write a script that asks for two times and prints the difference in minutes.",
    "code": "```java\nimport java.util.Scanner;\nimport java.time.LocalTime;\nimport java.time.temporal.ChronoUnit;\n\npublic class TimeDifference {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n\n        System.out.print(\"Enter the first time (HH:MM): \");\n        String firstTimeInput = scanner.nextLine();\n        LocalTime firstTime = LocalTime.parse(firstTimeInput);\n\n        System.out.print(\"Enter the second time (HH:MM): \");\n        String secondTimeInput = scanner.nextLine();\n        LocalTime secondTime = LocalTime.parse(secondTimeInput);\n\n        long differenceInMinutes = ChronoUnit.MINUTES.between(firstTime, secondTime);\n        System.out.println(\"Difference in minutes: \" + Math.abs(differenceInMinutes));\n        \n        scanner.close();\n    }\n}\n```"
  },
  {
    "task": "Build a program that reads a text and prints the number of vowels and consonants.",
    "code": "```java\nimport java.util.Scanner;\n\npublic class VowelConsonantCounter {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        System.out.println(\"Enter a text:\");\n        String text = scanner.nextLine();\n\n        int vowels = 0, consonants = 0;\n        text = text.toLowerCase();\n\n        for (int i = 0; i < text.length(); i++) {\n            char ch = text.charAt(i);\n            if (ch >= 'a' && ch <= 'z') {\n                if (ch == 'a' || ch == 'e' || ch == 'i' || ch == 'o' || ch == 'u') {\n                    vowels++;\n                } else {\n                    consonants++;\n                }\n            }\n        }\n\n        System.out.println(\"Number of vowels: \" + vowels);\n        System.out.println(\"Number of consonants: \" + consonants);\n\n        scanner.close();\n    }\n}\n```"
  },
  {
    "task": "Implement a tool that reads a JSON object from input and prints its keys.",
    "code": "```java\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.util.Iterator;\nimport org.json.JSONObject;\n\npublic class JsonKeyPrinter {\n    public static void main(String[] args) {\n        try (BufferedReader reader = new BufferedReader(new InputStreamReader(System.in))) {\n            String input = reader.readLine();\n            JSONObject jsonObject = new JSONObject(input);\n            Iterator<String> keys = jsonObject.keys();\n            while (keys.hasNext()) {\n                System.out.println(keys.next());\n            }\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n}\n```"
  },
  {
    "task": "Write a program that reads a CSV file from input and prints each row as a dictionary.",
    "code": "```java\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class CSVReader {\n    public static void main(String[] args) {\n        try (BufferedReader reader = new BufferedReader(new InputStreamReader(System.in))) {\n            String headerLine = reader.readLine();\n            if (headerLine == null) return;\n            String[] headers = headerLine.split(\",\");\n\n            String line;\n            while ((line = reader.readLine()) != null) {\n                String[] values = line.split(\",\");\n                Map<String, String> rowMap = new HashMap<>();\n                for (int i = 0; i < headers.length; i++) {\n                    rowMap.put(headers[i], i < values.length ? values[i] : \"\");\n                }\n                System.out.println(rowMap);\n            }\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n}\n```"
  },
  {
    "task": "Create a script that reads a sentence and prints it with the words in reverse order.",
    "code": "```java\nimport java.util.Scanner;\n\npublic class ReverseWords {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        System.out.println(\"Enter a sentence:\");\n        String sentence = scanner.nextLine();\n        scanner.close();\n        \n        String[] words = sentence.split(\" \");\n        StringBuilder reversedSentence = new StringBuilder();\n        \n        for (int i = words.length - 1; i >= 0; i--) {\n            reversedSentence.append(words[i]).append(\" \");\n        }\n        \n        System.out.println(reversedSentence.toString().trim());\n    }\n}\n```"
  },
  {
    "task": "Develop a tool that reads a list of numbers and prints their median.",
    "code": "```java\nimport java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.List;\nimport java.util.Scanner;\n\npublic class MedianCalculator {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        List<Double> numbers = new ArrayList<>();\n\n        System.out.println(\"Enter numbers (type 'done' to finish):\");\n        while (scanner.hasNext()) {\n            if (scanner.hasNextDouble()) {\n                numbers.add(scanner.nextDouble());\n            } else if (scanner.hasNext(\"done\")) {\n                break;\n            } else {\n                scanner.next(); // skip invalid input\n            }\n        }\n\n        if (numbers.isEmpty()) {\n            System.out.println(\"No numbers entered.\");\n        } else {\n            Collections.sort(numbers);\n            double median;\n            int size = numbers.size();\n            if (size % 2 == 0) {\n                median = (numbers.get(size / 2 - 1) + numbers.get(size / 2)) / 2.0;\n            } else {\n                median = numbers.get(size / 2);\n            }\n            System.out.println(\"The median is: \" + median);\n        }\n\n        scanner.close();\n    }\n}\n```"
  },
  {
    "task": "Design a program that reads a sequence of characters and prints the first non-repeated character.",
    "code": "```java\nimport java.util.LinkedHashMap;\nimport java.util.Map;\nimport java.util.Scanner;\n\npublic class FirstNonRepeatedCharacter {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        System.out.println(\"Enter a sequence of characters:\");\n        String input = scanner.nextLine();\n        scanner.close();\n\n        Map<Character, Integer> charCountMap = new LinkedHashMap<>();\n        for (char c : input.toCharArray()) {\n            charCountMap.put(c, charCountMap.getOrDefault(c, 0) + 1);\n        }\n\n        for (Map.Entry<Character, Integer> entry : charCountMap.entrySet()) {\n            if (entry.getValue() == 1) {\n                System.out.println(\"First non-repeated character: \" + entry.getKey());\n                return;\n            }\n        }\n\n        System.out.println(\"No non-repeated character found.\");\n    }\n}\n```"
  },
  {
    "task": "Write a script that reads a list of tuples and prints them sorted by the second element.",
    "code": "```java\nimport java.util.ArrayList;\nimport java.util.Comparator;\nimport java.util.List;\nimport java.util.Scanner;\n\npublic class TupleSorter {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        List<int[]> tuples = new ArrayList<>();\n\n        System.out.println(\"Enter the number of tuples:\");\n        int n = scanner.nextInt();\n\n        System.out.println(\"Enter the tuples (two integers per tuple):\");\n        for (int i = 0; i < n; i++) {\n            int[] tuple = new int[2];\n            tuple[0] = scanner.nextInt();\n            tuple[1] = scanner.nextInt();\n            tuples.add(tuple);\n        }\n\n        tuples.sort(Comparator.comparingInt(o -> o[1]));\n\n        System.out.println(\"Sorted tuples by second element:\");\n        for (int[] tuple : tuples) {\n            System.out.println(\"(\" + tuple[0] + \", \" + tuple[1] + \")\");\n        }\n    }\n}\n```"
  },
  {
    "task": "Create a program that reads a list of cities and prints them grouped by their starting letter.",
    "code": "```java\nimport java.util.*;\n\npublic class CityGrouper {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        Map<Character, List<String>> cityGroups = new TreeMap<>();\n\n        System.out.println(\"Enter the number of cities:\");\n        int numberOfCities = scanner.nextInt();\n        scanner.nextLine(); // Consume newline\n\n        System.out.println(\"Enter the cities:\");\n        for (int i = 0; i < numberOfCities; i++) {\n            String city = scanner.nextLine();\n            char startingLetter = city.charAt(0);\n\n            cityGroups.putIfAbsent(startingLetter, new ArrayList<>());\n            cityGroups.get(startingLetter).add(city);\n        }\n\n        System.out.println(\"Cities grouped by starting letter:\");\n        for (Map.Entry<Character, List<String>> entry : cityGroups.entrySet()) {\n            System.out.println(entry.getKey() + \": \" + entry.getValue());\n        }\n    }\n}\n```"
  },
  {
    "task": "Build a tool that reads a text and prints the longest word.",
    "code": "```java\nimport java.util.Scanner;\n\npublic class LongestWordFinder {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        System.out.println(\"Enter text:\");\n        String input = scanner.nextLine();\n        String[] words = input.split(\"\\\\s+\");\n        String longestWord = \"\";\n        \n        for (String word : words) {\n            if (word.length() > longestWord.length()) {\n                longestWord = word;\n            }\n        }\n        \n        System.out.println(\"Longest word: \" + longestWord);\n        scanner.close();\n    }\n}\n```"
  },
  {
    "task": "Implement a program that reads a string and prints the number of unique characters.",
    "code": "```java\nimport java.util.Scanner;\nimport java.util.HashSet;\n\npublic class UniqueCharactersCounter {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        String input = scanner.nextLine();\n        HashSet<Character> uniqueChars = new HashSet<>();\n        \n        for (char c : input.toCharArray()) {\n            uniqueChars.add(c);\n        }\n        \n        System.out.println(uniqueChars.size());\n    }\n}\n```"
  },
  {
    "task": "Write a script that reads two strings and prints the longest common substring.",
    "code": "```java\nimport java.util.Scanner;\n\npublic class LongestCommonSubstring {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n\n        // Read two strings from the user\n        System.out.println(\"Enter the first string:\");\n        String str1 = scanner.nextLine();\n        System.out.println(\"Enter the second string:\");\n        String str2 = scanner.nextLine();\n\n        // Find the longest common substring\n        String longestCommonSubstring = findLongestCommonSubstring(str1, str2);\n\n        // Print the longest common substring\n        System.out.println(\"Longest Common Substring: \" + longestCommonSubstring);\n    }\n\n    private static String findLongestCommonSubstring(String str1, String str2) {\n        int[][] lengths = new int[str1.length() + 1][str2.length() + 1];\n        int maxLength = 0;\n        int endIndex = 0;\n\n        for (int i = 1; i <= str1.length(); i++) {\n            for (int j = 1; j <= str2.length(); j++) {\n                if (str1.charAt(i - 1) == str2.charAt(j - 1)) {\n                    lengths[i][j] = lengths[i - 1][j - 1] + 1;\n                    if (lengths[i][j] > maxLength) {\n                        maxLength = lengths[i][j];\n                        endIndex = i;\n                    }\n                }\n            }\n        }\n\n        return str1.substring(endIndex - maxLength, endIndex);\n    }\n}\n```"
  },
  {
    "task": "Develop a program that reads a chessboard position and prints all possible moves for a knight.",
    "code": "```java\nimport java.util.Scanner;\n\npublic class KnightMoves {\n    private static final int[] dx = {-2, -1, 1, 2, 2, 1, -1, -2};\n    private static final int[] dy = {1, 2, 2, 1, -1, -2, -2, -1};\n\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        System.out.print(\"Enter knight position (e.g., e4): \");\n        String position = scanner.nextLine().trim();\n        \n        if (position.length() == 2 && position.matches(\"[a-h][1-8]\")) {\n            int x = position.charAt(0) - 'a';\n            int y = position.charAt(1) - '1';\n\n            System.out.println(\"Possible moves:\");\n            for (int i = 0; i < 8; i++) {\n                int newX = x + dx[i];\n                int newY = y + dy[i];\n                if (newX >= 0 && newX < 8 && newY >= 0 && newY < 8) {\n                    char newFile = (char) ('a' + newX);\n                    int newRank = newY + 1;\n                    System.out.println(\"\" + newFile + newRank);\n                }\n            }\n        } else {\n            System.out.println(\"Invalid position\");\n        }\n        scanner.close();\n    }\n}\n```"
  },
  {
    "task": "Create a tool that reads a list of numbers and prints the mode.",
    "code": "```java\nimport java.util.*;\n\npublic class ModeCalculator {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        System.out.println(\"Enter numbers separated by space:\");\n        String[] input = scanner.nextLine().split(\" \");\n\n        Map<Integer, Integer> frequencyMap = new HashMap<>();\n\n        for (String s : input) {\n            int number = Integer.parseInt(s);\n            frequencyMap.put(number, frequencyMap.getOrDefault(number, 0) + 1);\n        }\n\n        int mode = input.length > 0 ? Integer.parseInt(input[0]) : 0;\n        int maxCount = 0;\n\n        for (Map.Entry<Integer, Integer> entry : frequencyMap.entrySet()) {\n            if (entry.getValue() > maxCount) {\n                mode = entry.getKey();\n                maxCount = entry.getValue();\n            }\n        }\n\n        System.out.println(\"Mode: \" + mode);\n    }\n}\n```"
  },
  {
    "task": "Design a program that reads a list of file paths and prints the largest file.",
    "code": "```java\nimport java.io.File;\nimport java.util.Scanner;\n\npublic class LargestFileFinder {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        System.out.println(\"Enter file paths (type 'end' to finish):\");\n        String largestFilePath = null;\n        long largestFileSize = 0;\n\n        while (true) {\n            String filePath = scanner.nextLine();\n            if (filePath.equalsIgnoreCase(\"end\")) {\n                break;\n            }\n            File file = new File(filePath);\n            if (file.exists() && file.isFile()) {\n                long fileSize = file.length();\n                if (fileSize > largestFileSize) {\n                    largestFileSize = fileSize;\n                    largestFilePath = filePath;\n                }\n            }\n        }\n        \n        if (largestFilePath != null) {\n            System.out.println(\"Largest file: \" + largestFilePath);\n        } else {\n            System.out.println(\"No valid files provided.\");\n        }\n        \n        scanner.close();\n    }\n}\n```"
  },
  {
    "task": "Write a script that reads a list of prices and prints the total cost with tax.",
    "code": "```java\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.util.Scanner;\n\npublic class PriceCalculator {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        List<Double> prices = new ArrayList<>();\n        \n        System.out.println(\"Enter prices (type 'done' to finish):\");\n        while (scanner.hasNext()) {\n            if (scanner.hasNextDouble()) {\n                prices.add(scanner.nextDouble());\n            } else {\n                String input = scanner.next();\n                if (input.equalsIgnoreCase(\"done\")) {\n                    break;\n                }\n            }\n        }\n\n        double total = 0.0;\n        for (double price : prices) {\n            total += price;\n        }\n\n        double taxRate = 0.1; // 10% tax\n        double totalWithTax = total + (total * taxRate);\n\n        System.out.printf(\"Total cost with tax: %.2f\\n\", totalWithTax);\n        scanner.close();\n    }\n}\n```"
  },
  {
    "task": "Build a program that reads a list of temperatures and prints them in Fahrenheit.",
    "code": "```java\nimport java.util.Scanner;\n\npublic class TemperatureConverter {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        \n        System.out.println(\"Enter the number of temperatures:\");\n        int n = scanner.nextInt();\n        \n        double[] temperatures = new double[n];\n        \n        System.out.println(\"Enter the temperatures in Celsius:\");\n        for (int i = 0; i < n; i++) {\n            temperatures[i] = scanner.nextDouble();\n        }\n        \n        System.out.println(\"Temperatures in Fahrenheit:\");\n        for (int i = 0; i < n; i++) {\n            double fahrenheit = temperatures[i] * 9 / 5 + 32;\n            System.out.println(fahrenheit);\n        }\n        \n        scanner.close();\n    }\n}\n```"
  },
  {
    "task": "Implement a tool that reads a list of book titles and prints them sorted by length.",
    "code": "```java\nimport java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.Comparator;\nimport java.util.Scanner;\n\npublic class BookSorter {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        ArrayList<String> bookTitles = new ArrayList<>();\n\n        System.out.println(\"Enter book titles (type 'done' to finish):\");\n        while (true) {\n            String input = scanner.nextLine();\n            if (\"done\".equalsIgnoreCase(input)) {\n                break;\n            }\n            bookTitles.add(input);\n        }\n\n        Collections.sort(bookTitles, Comparator.comparingInt(String::length));\n\n        System.out.println(\"Sorted book titles by length:\");\n        for (String title : bookTitles) {\n            System.out.println(title);\n        }\n    }\n}\n```"
  },
  {
    "task": "Write a program that reads a directory path and prints all file names.",
    "code": "```java\nimport java.io.File;\nimport java.util.Scanner;\n\npublic class ListFiles {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        System.out.println(\"Enter directory path:\");\n        String directoryPath = scanner.nextLine();\n        \n        File directory = new File(directoryPath);\n        if (directory.isDirectory()) {\n            File[] files = directory.listFiles();\n            if (files != null) {\n                for (File file : files) {\n                    if (file.isFile()) {\n                        System.out.println(file.getName());\n                    }\n                }\n            }\n        } else {\n            System.out.println(\"The provided path is not a directory.\");\n        }\n        \n        scanner.close();\n    }\n}\n```"
  },
  {
    "task": "Create a script that reads a list of URLs and prints those with a secure connection.",
    "code": "```java\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.util.Scanner;\n\npublic class SecureURLs {\n\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        List<String> urls = new ArrayList<>();\n        System.out.println(\"Enter URLs (type 'exit' to finish):\");\n        \n        while (true) {\n            String input = scanner.nextLine();\n            if (\"exit\".equalsIgnoreCase(input)) {\n                break;\n            }\n            urls.add(input);\n        }\n\n        System.out.println(\"Secure URLs:\");\n        for (String url : urls) {\n            if (url.startsWith(\"https://\")) {\n                System.out.println(url);\n            }\n        }\n        \n        scanner.close();\n    }\n}\n```"
  },
  {
    "task": "Develop a tool that reads a sequence of numbers and prints if it is strictly increasing.",
    "code": "```java\nimport java.util.Scanner;\n\npublic class IncreasingSequenceChecker {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        System.out.println(\"Enter numbers separated by spaces:\");\n        String[] input = scanner.nextLine().split(\"\\\\s+\");\n        \n        boolean isStrictlyIncreasing = true;\n        for (int i = 1; i < input.length; i++) {\n            if (Integer.parseInt(input[i]) <= Integer.parseInt(input[i - 1])) {\n                isStrictlyIncreasing = false;\n                break;\n            }\n        }\n        \n        if (isStrictlyIncreasing) {\n            System.out.println(\"The sequence is strictly increasing.\");\n        } else {\n            System.out.println(\"The sequence is not strictly increasing.\");\n        }\n        \n        scanner.close();\n    }\n}\n```"
  },
  {
    "task": "Design a program that reads a list of products and prints them grouped by category.",
    "code": "```java\nimport java.util.ArrayList;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\nimport java.util.Scanner;\n\npublic class ProductCategorizer {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        Map<String, List<String>> categoryMap = new HashMap<>();\n\n        System.out.println(\"Enter products in the format 'category:product'. Type 'end' to finish:\");\n\n        while (true) {\n            String input = scanner.nextLine();\n            if (input.equalsIgnoreCase(\"end\")) {\n                break;\n            }\n            \n            String[] parts = input.split(\":\");\n            if (parts.length == 2) {\n                String category = parts[0].trim();\n                String product = parts[1].trim();\n                \n                categoryMap.computeIfAbsent(category, k -> new ArrayList<>()).add(product);\n            }\n        }\n\n        scanner.close();\n\n        for (Map.Entry<String, List<String>> entry : categoryMap.entrySet()) {\n            System.out.println(\"Category: \" + entry.getKey());\n            for (String product : entry.getValue()) {\n                System.out.println(\"  - \" + product);\n            }\n        }\n    }\n}\n```"
  },
  {
    "task": "Write a script that reads a sentence and prints it with alternating word capitalization.",
    "code": "```java\nimport java.util.Scanner;\n\npublic class AlternateCapitalization {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        \n        System.out.println(\"Enter a sentence:\");\n        String input = scanner.nextLine();\n        \n        String[] words = input.split(\" \");\n        StringBuilder output = new StringBuilder();\n        \n        for (int i = 0; i < words.length; i++) {\n            String word = words[i];\n            if (i % 2 == 0) {\n                output.append(word.toUpperCase());\n            } else {\n                output.append(word.toLowerCase());\n            }\n            if (i < words.length - 1) {\n                output.append(\" \");\n            }\n        }\n        \n        System.out.println(output.toString());\n        \n        scanner.close();\n    }\n}\n```"
  },
  {
    "task": "Create a program that reads a list of grades and prints the highest and lowest grade.",
    "code": "```java\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.util.Scanner;\n\npublic class GradeProcessor {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        List<Integer> grades = new ArrayList<>();\n        \n        System.out.println(\"Enter grades (type 'end' to finish):\");\n        while (scanner.hasNext()) {\n            if (scanner.hasNextInt()) {\n                grades.add(scanner.nextInt());\n            } else if (\"end\".equalsIgnoreCase(scanner.next())) {\n                break;\n            } else {\n                System.out.println(\"Invalid input. Please enter a valid grade or 'end'.\");\n            }\n        }\n        \n        if (!grades.isEmpty()) {\n            int maxGrade = grades.stream().mapToInt(v -> v).max().orElseThrow();\n            int minGrade = grades.stream().mapToInt(v -> v).min().orElseThrow();\n            System.out.println(\"Highest grade: \" + maxGrade);\n            System.out.println(\"Lowest grade: \" + minGrade);\n        } else {\n            System.out.println(\"No grades were entered.\");\n        }\n        scanner.close();\n    }\n}\n```"
  },
  {
    "task": "Build a tool that reads a text and prints the number of sentences.",
    "code": "```java\nimport java.util.Scanner;\n\npublic class SentenceCounter {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        System.out.println(\"Enter text:\");\n        String text = scanner.nextLine();\n        scanner.close();\n        \n        String[] sentences = text.split(\"[.!?]\\\\s*\");\n        System.out.println(\"Number of sentences: \" + sentences.length);\n    }\n}\n```"
  },
  {
    "task": "Implement a program that reads a list of integers and prints the sum of all odd numbers.",
    "code": "```java\nimport java.util.Scanner;\n\npublic class SumOfOddNumbers {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        int sum = 0;\n        \n        System.out.println(\"Enter integers. Type 'end' to finish:\");\n        \n        while (scanner.hasNext()) {\n            if (scanner.hasNextInt()) {\n                int number = scanner.nextInt();\n                if (number % 2 != 0) {\n                    sum += number;\n                }\n            } else {\n                String input = scanner.next();\n                if (input.equalsIgnoreCase(\"end\")) {\n                    break;\n                }\n            }\n        }\n        \n        System.out.println(\"Sum of odd numbers: \" + sum);\n    }\n}\n```"
  },
  {
    "task": "Write a script that reads a text and prints the shortest sentence.",
    "code": "```java\nimport java.util.Scanner;\n\npublic class ShortestSentenceFinder {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        System.out.println(\"Enter text: \");\n        String text = scanner.nextLine();\n        \n        String[] sentences = text.split(\"[.!?]\");\n        String shortestSentence = null;\n        \n        for (String sentence : sentences) {\n            if (shortestSentence == null || sentence.trim().length() < shortestSentence.trim().length()) {\n                shortestSentence = sentence;\n            }\n        }\n        \n        if (shortestSentence != null) {\n            System.out.println(\"Shortest sentence: \" + shortestSentence.trim());\n        }\n        \n        scanner.close();\n    }\n}\n```"
  },
  {
    "task": "Develop a program that reads a list of dictionaries and prints them sorted by a specific key.",
    "code": "```java\nimport java.util.*;\n\npublic class SortDictionaries {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        \n        System.out.println(\"Enter the number of dictionaries: \");\n        int n = Integer.parseInt(scanner.nextLine());\n        \n        List<Map<String, String>> dictList = new ArrayList<>();\n        \n        for (int i = 0; i < n; i++) {\n            System.out.println(\"Enter dictionary \" + (i + 1) + \" (key=value pairs, comma separated): \");\n            String input = scanner.nextLine();\n            Map<String, String> dict = new HashMap<>();\n            String[] pairs = input.split(\",\");\n            for (String pair : pairs) {\n                String[] keyValue = pair.split(\"=\");\n                dict.put(keyValue[0].trim(), keyValue[1].trim());\n            }\n            dictList.add(dict);\n        }\n        \n        System.out.println(\"Enter the key to sort by: \");\n        String sortKey = scanner.nextLine();\n        \n        dictList.sort(Comparator.comparing(dict -> dict.get(sortKey)));\n        \n        System.out.println(\"Sorted dictionaries: \");\n        for (Map<String, String> dict : dictList) {\n            System.out.println(dict);\n        }\n        \n        scanner.close();\n    }\n}\n```"
  },
  {
    "task": "Create a tool that reads a sequence of strings and prints the common prefix.",
    "code": "```java\nimport java.util.Scanner;\n\npublic class CommonPrefixTool {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        System.out.println(\"Enter number of strings:\");\n        int n = scanner.nextInt();\n        scanner.nextLine(); // Consume new line\n\n        if (n == 0) {\n            System.out.println(\"\");\n            return;\n        }\n\n        System.out.println(\"Enter strings:\");\n        String[] strings = new String[n];\n        for (int i = 0; i < n; i++) {\n            strings[i] = scanner.nextLine();\n        }\n\n        String commonPrefix = findCommonPrefix(strings);\n        System.out.println(\"Common prefix: \" + commonPrefix);\n    }\n\n    private static String findCommonPrefix(String[] strings) {\n        if (strings.length == 0) return \"\";\n\n        String prefix = strings[0];\n        for (int i = 1; i < strings.length; i++) {\n            while (strings[i].indexOf(prefix) != 0) {\n                prefix = prefix.substring(0, prefix.length() - 1);\n                if (prefix.isEmpty()) return \"\";\n            }\n        }\n        return prefix;\n    }\n}\n```"
  },
  {
    "task": "Design a program that reads a number and prints all of its divisors.",
    "code": "```java\nimport java.util.Scanner;\n\npublic class Divisors {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        System.out.println(\"Enter a number: \");\n        int number = scanner.nextInt();\n        System.out.println(\"Divisors of \" + number + \" are:\");\n        for (int i = 1; i <= number; i++) {\n            if (number % i == 0) {\n                System.out.println(i);\n            }\n        }\n        scanner.close();\n    }\n}\n```"
  },
  {
    "task": "Write a script that reads a text and prints each word with its length.",
    "code": "```java\nimport java.util.Scanner;\n\npublic class WordLengthPrinter {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        System.out.println(\"Enter text:\");\n        String input = scanner.nextLine();\n        String[] words = input.split(\"\\\\s+\");\n        for (String word : words) {\n            System.out.println(word + \" \" + word.length());\n        }\n        scanner.close();\n    }\n}\n```"
  },
  {
    "task": "Build a program that reads a list of colors and prints them in a rainbow order.",
    "code": "```java\nimport java.util.*;\n\npublic class RainbowColors {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        \n        System.out.println(\"Enter colors separated by spaces:\");\n        String input = scanner.nextLine();\n        \n        List<String> colors = Arrays.asList(input.split(\"\\\\s+\"));\n        \n        List<String> rainbowOrder = Arrays.asList(\"red\", \"orange\", \"yellow\", \"green\", \"blue\", \"indigo\", \"violet\");\n        \n        colors.stream()\n              .filter(rainbowOrder::contains)\n              .sorted(Comparator.comparingInt(rainbowOrder::indexOf))\n              .forEach(System.out::println);\n        \n        scanner.close();\n    }\n}\n```"
  },
  {
    "task": "Implement a tool that reads a list of names and prints them with their initials.",
    "code": "```java\nimport java.util.Scanner;\n\npublic class NameInitials {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        System.out.println(\"Enter names separated by commas:\");\n        String input = scanner.nextLine();\n        String[] names = input.split(\",\");\n        \n        for (String name : names) {\n            name = name.trim();\n            String[] parts = name.split(\" \");\n            StringBuilder initials = new StringBuilder();\n            for (String part : parts) {\n                if (!part.isEmpty()) {\n                    initials.append(part.charAt(0)).append(\". \");\n                }\n            }\n            System.out.println(name + \": \" + initials.toString().trim());\n        }\n        \n        scanner.close();\n    }\n}\n```"
  },
  {
    "task": "Write a program that reads a series of coordinates and prints the center point.",
    "code": "```java\nimport java.util.Scanner;\n\npublic class CenterPointCalculator {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        \n        System.out.println(\"Enter number of coordinates:\");\n        int n = scanner.nextInt();\n\n        double sumX = 0, sumY = 0;\n        \n        System.out.println(\"Enter the coordinates:\");\n        for (int i = 0; i < n; i++) {\n            double x = scanner.nextDouble();\n            double y = scanner.nextDouble();\n            sumX += x;\n            sumY += y;\n        }\n        \n        double centerX = sumX / n;\n        double centerY = sumY / n;\n        \n        System.out.printf(\"Center point: (%.2f, %.2f)%n\", centerX, centerY);\n    }\n}\n```"
  },
  {
    "task": "Create a script that reads a sentence and prints it with each vowel replaced by its uppercase form.",
    "code": "```java\nimport java.util.Scanner;\n\npublic class VowelReplacer {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        String sentence = scanner.nextLine();\n        StringBuilder result = new StringBuilder();\n\n        for (char c : sentence.toCharArray()) {\n            switch (c) {\n                case 'a':\n                    result.append('A');\n                    break;\n                case 'e':\n                    result.append('E');\n                    break;\n                case 'i':\n                    result.append('I');\n                    break;\n                case 'o':\n                    result.append('O');\n                    break;\n                case 'u':\n                    result.append('U');\n                    break;\n                default:\n                    result.append(c);\n            }\n        }\n\n        System.out.println(result.toString());\n        scanner.close();\n    }\n}\n```"
  },
  {
    "task": "Develop a tool that reads a mathematical expression and evaluates its result.",
    "code": "```java\nimport java.util.Scanner;\nimport javax.script.ScriptEngineManager;\nimport javax.script.ScriptEngine;\nimport javax.script.ScriptException;\n\npublic class MathExpressionEvaluator {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        System.out.println(\"Enter a mathematical expression: \");\n        String expression = scanner.nextLine();\n        \n        ScriptEngineManager manager = new ScriptEngineManager();\n        ScriptEngine engine = manager.getEngineByName(\"JavaScript\");\n        \n        try {\n            Object result = engine.eval(expression);\n            System.out.println(\"Result: \" + result);\n        } catch (ScriptException e) {\n            System.out.println(\"Invalid expression\");\n        }\n        \n        scanner.close();\n    }\n}\n```"
  },
  {
    "task": "Design a program that reads a text and prints the first three words.",
    "code": "```java\nimport java.util.Scanner;\n\npublic class FirstThreeWords {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        String input = scanner.nextLine();\n        String[] words = input.split(\"\\\\s+\");\n        \n        for (int i = 0; i < Math.min(3, words.length); i++) {\n            System.out.println(words[i]);\n        }\n        \n        scanner.close();\n    }\n}\n```"
  },
  {
    "task": "Write a script that reads a list of numbers and prints them without duplicates.",
    "code": "```java\nimport java.util.HashSet;\nimport java.util.Scanner;\nimport java.util.Set;\n\npublic class UniqueNumbersPrinter {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        Set<Integer> numbers = new HashSet<>();\n        \n        System.out.println(\"Enter numbers (type 'done' to finish):\");\n        \n        while (scanner.hasNext()) {\n            if (scanner.hasNextInt()) {\n                numbers.add(scanner.nextInt());\n            } else if (scanner.hasNext(\"done\")) {\n                break;\n            } else {\n                scanner.next(); // consume the invalid input\n            }\n        }\n        \n        scanner.close();\n        \n        System.out.println(\"Unique numbers:\");\n        for (Integer number : numbers) {\n            System.out.println(number);\n        }\n    }\n}\n```"
  },
  {
    "task": "Create a program that reads a string and prints it with spaces between each character.",
    "code": "```java\nimport java.util.Scanner;\n\npublic class SpaceBetweenCharacters {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        String input = scanner.nextLine();\n        StringBuilder spacedString = new StringBuilder();\n\n        for (int i = 0; i < input.length(); i++) {\n            spacedString.append(input.charAt(i));\n            if (i < input.length() - 1) {\n                spacedString.append(' ');\n            }\n        }\n\n        System.out.println(spacedString.toString());\n        scanner.close();\n    }\n}\n```"
  },
  {
    "task": "Build a tool that reads a list of events with dates and prints them by chronological order.",
    "code": "```java\nimport java.util.*;\n\nclass Event implements Comparable<Event> {\n    String description;\n    Date date;\n\n    Event(String description, Date date) {\n        this.description = description;\n        this.date = date;\n    }\n\n    @Override\n    public int compareTo(Event other) {\n        return this.date.compareTo(other.date);\n    }\n}\n\npublic class EventOrganizer {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        List<Event> events = new ArrayList<>();\n\n        while (true) {\n            System.out.println(\"Enter event description (or 'exit' to finish):\");\n            String description = scanner.nextLine();\n            if (description.equalsIgnoreCase(\"exit\")) {\n                break;\n            }\n\n            System.out.println(\"Enter event date (yyyy-mm-dd):\");\n            String dateString = scanner.nextLine();\n            try {\n                Date date = new Date(Integer.parseInt(dateString.substring(0, 4)) - 1900,\n                                    Integer.parseInt(dateString.substring(5, 7)) - 1,\n                                    Integer.parseInt(dateString.substring(8, 10)));\n                events.add(new Event(description, date));\n            } catch (Exception e) {\n                System.out.println(\"Invalid date format. Please try again.\");\n            }\n        }\n\n        Collections.sort(events);\n\n        System.out.println(\"\\nEvents in chronological order:\");\n        for (Event event : events) {\n            System.out.println(event.date + \": \" + event.description);\n        }\n\n        scanner.close();\n    }\n}\n```"
  },
  {
    "task": "Implement a program that reads a list of fractions and prints their sum as a reduced fraction.",
    "code": "```java\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.util.Scanner;\n\npublic class FractionSum {\n\n    private static int gcd(int a, int b) {\n        while (b != 0) {\n            int temp = b;\n            b = a % b;\n            a = temp;\n        }\n        return a;\n    }\n\n    private static int lcm(int a, int b) {\n        return (a * b) / gcd(a, b);\n    }\n\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        List<String> fractions = new ArrayList<>();\n        System.out.println(\"Enter fractions (e.g., 1/2), one per line. Enter an empty line to finish:\");\n\n        while (true) {\n            String input = scanner.nextLine();\n            if (input.trim().isEmpty()) {\n                break;\n            }\n            fractions.add(input.trim());\n        }\n\n        int numeratorSum = 0;\n        int denominatorCommon = 1;\n\n        for (String fraction : fractions) {\n            String[] parts = fraction.split(\"/\");\n            int numerator = Integer.parseInt(parts[0]);\n            int denominator = Integer.parseInt(parts[1]);\n\n            denominatorCommon = lcm(denominatorCommon, denominator);\n        }\n\n        for (String fraction : fractions) {\n            String[] parts = fraction.split(\"/\");\n            int numerator = Integer.parseInt(parts[0]);\n            int denominator = Integer.parseInt(parts[1]);\n\n            numeratorSum += numerator * (denominatorCommon / denominator);\n        }\n\n        int gcd = gcd(numeratorSum, denominatorCommon);\n        numeratorSum /= gcd;\n        denominatorCommon /= gcd;\n\n        System.out.println(\"The sum is: \" + numeratorSum + \"/\" + denominatorCommon);\n    }\n}\n```"
  },
  {
    "task": "Write a script that reads a text and prints it with each consonant doubled.",
    "code": "```java\nimport java.util.Scanner;\n\npublic class DoubleConsonants {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        String vowels = \"aeiouAEIOU\";\n        \n        System.out.println(\"Enter the text:\");\n        String input = scanner.nextLine();\n        StringBuilder result = new StringBuilder();\n        \n        for (char c : input.toCharArray()) {\n            if (Character.isLetter(c) && vowels.indexOf(c) == -1) {\n                result.append(c).append(c);\n            } else {\n                result.append(c);\n            }\n        }\n        \n        System.out.println(result.toString());\n        scanner.close();\n    }\n}\n```"
  },
  {
    "task": "Develop a program that reads a number and prints its representation in Roman numerals.",
    "code": "```java\nimport java.util.Scanner;\n\npublic class NumberToRoman {\n    private static String intToRoman(int num) {\n        String[] thousands = {\"\", \"M\", \"MM\", \"MMM\"};\n        String[] hundreds = {\"\", \"C\", \"CC\", \"CCC\", \"CD\", \"D\", \"DC\", \"DCC\", \"DCCC\", \"CM\"};\n        String[] tens = {\"\", \"X\", \"XX\", \"XXX\", \"XL\", \"L\", \"LX\", \"LXX\", \"LXXX\", \"XC\"};\n        String[] units = {\"\", \"I\", \"II\", \"III\", \"IV\", \"V\", \"VI\", \"VII\", \"VIII\", \"IX\"};\n        return thousands[num / 1000] +\n               hundreds[(num % 1000) / 100] +\n               tens[(num % 100) / 10] +\n               units[num % 10];\n    }\n\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        System.out.print(\"Enter a number: \");\n        int number = scanner.nextInt();\n        System.out.println(\"Roman numeral: \" + intToRoman(number));\n        scanner.close();\n    }\n}\n```"
  },
  {
    "task": "Create a tool that reads a list of words and prints them with each letter in reverse order.",
    "code": "```java\nimport java.util.Scanner;\n\npublic class ReverseLetters {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        System.out.println(\"Enter words separated by spaces:\");\n        String input = scanner.nextLine();\n        String[] words = input.split(\" \");\n        \n        for (String word : words) {\n            StringBuilder reversedWord = new StringBuilder(word);\n            System.out.print(reversedWord.reverse().toString() + \" \");\n        }\n        \n        scanner.close();\n    }\n}\n```"
  },
  {
    "task": "Design a program that reads a set of points and prints the one closest to the origin.",
    "code": "```java\nimport java.util.Scanner;\n\npublic class ClosestPoint {\n\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        System.out.println(\"Enter the number of points:\");\n        int n = scanner.nextInt();\n        double closestDistance = Double.MAX_VALUE;\n        double closestX = 0, closestY = 0;\n\n        for (int i = 0; i < n; i++) {\n            System.out.println(\"Enter x and y for point \" + (i + 1) + \":\");\n            double x = scanner.nextDouble();\n            double y = scanner.nextDouble();\n            double distance = Math.sqrt(x * x + y * y);\n            if (distance < closestDistance) {\n                closestDistance = distance;\n                closestX = x;\n                closestY = y;\n            }\n        }\n\n        System.out.println(\"The closest point to the origin is: (\" + closestX + \", \" + closestY + \")\");\n        scanner.close();\n    }\n}\n```"
  },
  {
    "task": "Write a script that reads a text and prints the frequency of each word.",
    "code": "```java\nimport java.util.HashMap;\nimport java.util.Map;\nimport java.util.Scanner;\n\npublic class WordFrequency {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        System.out.println(\"Enter text:\");\n        String input = scanner.nextLine();\n        scanner.close();\n\n        String[] words = input.split(\"\\\\s+\");\n        Map<String, Integer> frequencyMap = new HashMap<>();\n\n        for (String word : words) {\n            word = word.toLowerCase();\n            frequencyMap.put(word, frequencyMap.getOrDefault(word, 0) + 1);\n        }\n\n        for (Map.Entry<String, Integer> entry : frequencyMap.entrySet()) {\n            System.out.println(entry.getKey() + \": \" + entry.getValue());\n        }\n    }\n}\n```"
  },
  {
    "task": "Build a program that reads a list of integers and prints the second smallest.",
    "code": "```java\nimport java.util.*;\n\npublic class SecondSmallestFinder {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        List<Integer> numbers = new ArrayList<>();\n\n        System.out.println(\"Enter integers (type 'end' to finish):\");\n        while (scanner.hasNext()) {\n            if (scanner.hasNextInt()) {\n                numbers.add(scanner.nextInt());\n            } else {\n                String input = scanner.next();\n                if (\"end\".equalsIgnoreCase(input)) {\n                    break;\n                } else {\n                    System.out.println(\"Invalid input. Please enter an integer or 'end' to finish.\");\n                }\n            }\n        }\n\n        if (numbers.size() < 2) {\n            System.out.println(\"Not enough numbers to determine the second smallest.\");\n        } else {\n            Collections.sort(numbers);\n            int smallest = numbers.get(0);\n            Integer secondSmallest = null;\n            for (int number : numbers) {\n                if (number > smallest) {\n                    secondSmallest = number;\n                    break;\n                }\n            }\n            if (secondSmallest != null) {\n                System.out.println(\"The second smallest number is: \" + secondSmallest);\n            } else {\n                System.out.println(\"All numbers are the same. No second smallest number.\");\n            }\n        }\n    }\n}\n```"
  },
  {
    "task": "Implement a tool that reads a string and prints all its substrings.",
    "code": "```java\nimport java.util.Scanner;\n\npublic class SubstringTool {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        String input = scanner.nextLine();\n        int length = input.length();\n        \n        for (int i = 0; i < length; i++) {\n            for (int j = i + 1; j <= length; j++) {\n                System.out.println(input.substring(i, j));\n            }\n        }\n        \n        scanner.close();\n    }\n}\n```"
  },
  {
    "task": "Write a program that reads a number and generates a random number up to that number.",
    "code": "```java\nimport java.util.Scanner;\nimport java.util.Random;\n\npublic class RandomNumberGenerator {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        System.out.println(\"Enter a number: \");\n        int userNumber = scanner.nextInt();\n        \n        Random random = new Random();\n        int randomNumber = random.nextInt(userNumber + 1);\n        \n        System.out.println(\"Random number: \" + randomNumber);\n        \n        scanner.close();\n    }\n}\n```"
  },
  {
    "task": "Create a script that reads a sentence and prints it with each word reversed.",
    "code": "```java\nimport java.util.Scanner;\n\npublic class ReverseWords {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        String sentence = scanner.nextLine();\n        String[] words = sentence.split(\" \");\n        StringBuilder reversedSentence = new StringBuilder();\n\n        for (String word : words) {\n            StringBuilder reversedWord = new StringBuilder(word);\n            reversedSentence.append(reversedWord.reverse()).append(\" \");\n        }\n\n        System.out.println(reversedSentence.toString().trim());\n        scanner.close();\n    }\n}\n```"
  },
  {
    "task": "Develop a tool that reads a text and prints it with each sentence on a new line.",
    "code": "```java\nimport java.util.Scanner;\n\npublic class SentenceSplitter {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        System.out.println(\"Enter the text:\");\n        String text = scanner.nextLine();\n        scanner.close();\n\n        String[] sentences = text.split(\"(?<=[.!?])\\\\s*\");\n        for (String sentence : sentences) {\n            System.out.println(sentence.trim());\n        }\n    }\n}\n```"
  },
  {
    "task": "Design a program that reads a list of numbers and prints the product of all negative numbers.",
    "code": "```java\nimport java.util.Scanner;\n\npublic class NegativeProductCalculator {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        System.out.println(\"Enter numbers separated by spaces:\");\n        String[] input = scanner.nextLine().split(\" \");\n        int product = 1;\n        boolean hasNegative = false;\n\n        for (String s : input) {\n            int num = Integer.parseInt(s);\n            if (num < 0) {\n                product *= num;\n                hasNegative = true;\n            }\n        }\n\n        if (hasNegative) {\n            System.out.println(\"Product of negative numbers: \" + product);\n        } else {\n            System.out.println(\"No negative numbers entered.\");\n        }\n\n        scanner.close();\n    }\n}\n```"
  },
  {
    "task": "Write a script that reads a dictionary and prints the keys and values in sorted order.",
    "code": "```java\nimport java.util.*;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        Map<String, String> dictionary = new HashMap<>();\n\n        System.out.println(\"Enter dictionary entries (key=value). Type 'exit' to stop:\");\n        while (true) {\n            String input = scanner.nextLine();\n            if (input.equalsIgnoreCase(\"exit\")) {\n                break;\n            }\n            String[] entry = input.split(\"=\");\n            if (entry.length == 2) {\n                dictionary.put(entry[0], entry[1]);\n            }\n        }\n\n        List<String> keys = new ArrayList<>(dictionary.keySet());\n        Collections.sort(keys);\n\n        for (String key : keys) {\n            System.out.println(key + \"=\" + dictionary.get(key));\n        }\n        \n        scanner.close();\n    }\n}\n```"
  },
  {
    "task": "Create a program that reads a text and prints the number of unique words.",
    "code": "```java\nimport java.util.HashSet;\nimport java.util.Scanner;\nimport java.util.Set;\n\npublic class UniqueWordCounter {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        System.out.println(\"Enter text:\");\n        String text = scanner.nextLine();\n        scanner.close();\n\n        String[] words = text.split(\"\\\\W+\");\n        Set<String> uniqueWords = new HashSet<>();\n        \n        for (String word : words) {\n            if (!word.isEmpty()) {\n                uniqueWords.add(word.toLowerCase());\n            }\n        }\n        \n        System.out.println(\"Number of unique words: \" + uniqueWords.size());\n    }\n}\n```"
  }
]