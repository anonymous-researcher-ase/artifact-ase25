[
  {
    "task": "Write a program that checks if a number is even or odd and outputs the result.",
    "code": "```java\nimport java.util.Scanner;\n\npublic class EvenOddChecker {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        System.out.print(\"Enter a number: \");\n        int number = scanner.nextInt();\n\n        if (number % 2 == 0) {\n            System.out.println(\"The number is even.\");\n        } else {\n            System.out.println(\"The number is odd.\");\n        }\n        \n        scanner.close();\n    }\n}\n```"
  },
  {
    "task": "Create a function that determines if a given year is a leap year.",
    "code": "```java\npublic class LeapYearChecker {\n\n    public static boolean isLeapYear(int year) {\n        if (year % 4 == 0) {\n            if (year % 100 == 0) {\n                return year % 400 == 0;\n            }\n            return true;\n        }\n        return false;\n    }\n\n    public static void main(String[] args) {\n        int year = 2024; // Example year\n        boolean result = isLeapYear(year);\n        System.out.println(year + \" is a leap year: \" + result);\n    }\n}\n```"
  },
  {
    "task": "Develop a script that categorizes an input number as positive, negative, or zero.",
    "code": "```java\nimport java.util.Scanner;\n\npublic class NumberCategorizer {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        System.out.print(\"Enter a number: \");\n        int number = scanner.nextInt();\n        \n        if (number > 0) {\n            System.out.println(\"The number is positive.\");\n        } else if (number < 0) {\n            System.out.println(\"The number is negative.\");\n        } else {\n            System.out.println(\"The number is zero.\");\n        }\n        \n        scanner.close();\n    }\n}\n```"
  },
  {
    "task": "Implement a system that grants access only if a correct password and username are provided.",
    "code": "```java\nimport java.util.Scanner;\n\npublic class AccessControl {\n\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n\n        String correctUsername = \"admin\";\n        String correctPassword = \"1234\";\n\n        System.out.print(\"Enter username: \");\n        String inputUsername = scanner.nextLine();\n\n        System.out.print(\"Enter password: \");\n        String inputPassword = scanner.nextLine();\n\n        if (inputUsername.equals(correctUsername) && inputPassword.equals(correctPassword)) {\n            System.out.println(\"Access Granted\");\n        } else {\n            System.out.println(\"Access Denied\");\n        }\n\n        scanner.close();\n    }\n}\n```"
  },
  {
    "task": "Design a program that outputs 'Fizz' for numbers divisible by 3, 'Buzz' for numbers divisible by 5, and 'FizzBuzz' for numbers divisible by both.",
    "code": "```java\npublic class FizzBuzz {\n    public static void main(String[] args) {\n        for (int i = 1; i <= 100; i++) {\n            if (i % 3 == 0 && i % 5 == 0) {\n                System.out.println(\"FizzBuzz\");\n            } else if (i % 3 == 0) {\n                System.out.println(\"Fizz\");\n            } else if (i % 5 == 0) {\n                System.out.println(\"Buzz\");\n            } else {\n                System.out.println(i);\n            }\n        }\n    }\n}\n```"
  },
  {
    "task": "Write a function to determine if a character is a vowel or a consonant.",
    "code": "```java\npublic class CharacterChecker {\n\n    public static String checkCharacter(char c) {\n        c = Character.toLowerCase(c);\n        if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n            return \"Vowel\";\n        } else if (Character.isLetter(c)) {\n            return \"Consonant\";\n        } else {\n            return \"Not a letter\";\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(checkCharacter('a')); // Vowel\n        System.out.println(checkCharacter('b')); // Consonant\n        System.out.println(checkCharacter('1')); // Not a letter\n    }\n}\n```"
  },
  {
    "task": "Create a program that assigns letter grades based on numerical scores.",
    "code": "```java\nimport java.util.Scanner;\n\npublic class GradeAssigner {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        System.out.print(\"Enter the numerical score: \");\n        int score = scanner.nextInt();\n        String grade;\n\n        if (score >= 90) {\n            grade = \"A\";\n        } else if (score >= 80) {\n            grade = \"B\";\n        } else if (score >= 70) {\n            grade = \"C\";\n        } else if (score >= 60) {\n            grade = \"D\";\n        } else {\n            grade = \"F\";\n        }\n\n        System.out.println(\"The letter grade is: \" + grade);\n    }\n}\n```"
  },
  {
    "task": "Develop a routine that suggests clothing based on the current temperature.",
    "code": "```java\npublic class ClothingSuggestion {\n\n    public static void main(String[] args) {\n        int temperature = 20; // Example temperature\n        String suggestion = clothingSuggestion(temperature);\n        System.out.println(suggestion);\n    }\n\n    public static String clothingSuggestion(int temperature) {\n        if (temperature < 0) {\n            return \"Wear a heavy coat, gloves, and a hat.\";\n        } else if (temperature >= 0 && temperature < 10) {\n            return \"Wear a coat and a scarf.\";\n        } else if (temperature >= 10 && temperature < 20) {\n            return \"Wear a light jacket.\";\n        } else if (temperature >= 20 && temperature < 30) {\n            return \"Wear a t-shirt and shorts.\";\n        } else {\n            return \"Wear a tank top and stay cool.\";\n        }\n    }\n}\n```"
  },
  {
    "task": "Implement a system that checks if a user is an adult or a minor based on their age.",
    "code": "```java\nimport java.util.Scanner;\n\npublic class AgeChecker {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        System.out.print(\"Enter age: \");\n        int age = scanner.nextInt();\n        \n        if (age >= 18) {\n            System.out.println(\"User is an adult.\");\n        } else {\n            System.out.println(\"User is a minor.\");\n        }\n        \n        scanner.close();\n    }\n}\n```"
  },
  {
    "task": "Design a program that validates if a triangle can exist based on its side lengths.",
    "code": "```java\npublic class TriangleValidator {\n    public static void main(String[] args) {\n        int side1 = 3; // Example side length\n        int side2 = 4; // Example side length\n        int side3 = 5; // Example side length\n\n        if (isTriangleValid(side1, side2, side3)) {\n            System.out.println(\"The triangle is valid.\");\n        } else {\n            System.out.println(\"The triangle is not valid.\");\n        }\n    }\n\n    public static boolean isTriangleValid(int a, int b, int c) {\n        return (a + b > c) && (a + c > b) && (b + c > a);\n    }\n}\n```"
  },
  {
    "task": "Write a function that determines the largest of three input numbers.",
    "code": "```java\npublic class LargestNumber {\n    public static int largestOfThree(int a, int b, int c) {\n        if (a >= b && a >= c) {\n            return a;\n        } else if (b >= a && b >= c) {\n            return b;\n        } else {\n            return c;\n        }\n    }\n\n    public static void main(String[] args) {\n        int num1 = 15;\n        int num2 = 30;\n        int num3 = 25;\n        System.out.println(\"The largest number is: \" + largestOfThree(num1, num2, num3));\n    }\n}\n```"
  },
  {
    "task": "Create a program that checks if a string is a palindrome.",
    "code": "```java\npublic class PalindromeChecker {\n    public static void main(String[] args) {\n        String input = \"radar\";\n        if (isPalindrome(input)) {\n            System.out.println(\"The string is a palindrome.\");\n        } else {\n            System.out.println(\"The string is not a palindrome.\");\n        }\n    }\n\n    public static boolean isPalindrome(String str) {\n        int left = 0;\n        int right = str.length() - 1;\n\n        while (left < right) {\n            if (str.charAt(left) != str.charAt(right)) {\n                return false;\n            }\n            left++;\n            right--;\n        }\n        return true;\n    }\n}\n```"
  },
  {
    "task": "Develop a routine that calculates the total cost with a discount applied if applicable.",
    "code": "```java\npublic class CostCalculator {\n    public static double calculateTotalCost(double baseCost, double discountRate) {\n        double totalCost;\n        if (discountRate > 0) {\n            totalCost = baseCost - (baseCost * discountRate / 100);\n        } else {\n            totalCost = baseCost;\n        }\n        return totalCost;\n    }\n\n    public static void main(String[] args) {\n        double baseCost = 100.0;\n        double discountRate = 10.0; // 10% discount\n        double totalCost = calculateTotalCost(baseCost, discountRate);\n        System.out.println(\"Total cost: $\" + totalCost);\n    }\n}\n```"
  },
  {
    "task": "Implement a system that checks if a person is eligible to vote based on age and citizenship.",
    "code": "```java\nimport java.util.Scanner;\n\npublic class VotingEligibility {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n\n        System.out.print(\"Enter age: \");\n        int age = scanner.nextInt();\n\n        System.out.print(\"Are you a citizen? (yes/no): \");\n        String citizenship = scanner.next();\n\n        if (age >= 18 && citizenship.equalsIgnoreCase(\"yes\")) {\n            System.out.println(\"You are eligible to vote.\");\n        } else {\n            System.out.println(\"You are not eligible to vote.\");\n        }\n\n        scanner.close();\n    }\n}\n```"
  },
  {
    "task": "Design a function that returns the day of the week given a number from 1 to 7.",
    "code": "```java\npublic class DayOfWeek {\n\n    public static String getDayOfWeek(int dayNumber) {\n        switch (dayNumber) {\n            case 1:\n                return \"Monday\";\n            case 2:\n                return \"Tuesday\";\n            case 3:\n                return \"Wednesday\";\n            case 4:\n                return \"Thursday\";\n            case 5:\n                return \"Friday\";\n            case 6:\n                return \"Saturday\";\n            case 7:\n                return \"Sunday\";\n            default:\n                return \"Invalid day number\";\n        }\n    }\n\n    public static void main(String[] args) {\n        int dayNumber = 3; // Example input\n        System.out.println(getDayOfWeek(dayNumber));\n    }\n}\n```"
  },
  {
    "task": "Write a program that determines if a word is found within a given sentence.",
    "code": "```java\npublic class WordInSentenceChecker {\n    public static void main(String[] args) {\n        String sentence = \"This is a sample sentence.\";\n        String word = \"sample\";\n\n        if (sentence.contains(word)) {\n            System.out.println(\"The word is found in the sentence.\");\n        } else {\n            System.out.println(\"The word is not found in the sentence.\");\n        }\n    }\n}\n```"
  },
  {
    "task": "Create a script that checks if a number is within a specified range.",
    "code": "```java\npublic class RangeChecker {\n    public static void main(String[] args) {\n        int number = 25; // Example number\n        int lowerBound = 10;\n        int upperBound = 30;\n\n        if (number >= lowerBound && number <= upperBound) {\n            System.out.println(\"The number is within the specified range.\");\n        } else {\n            System.out.println(\"The number is outside the specified range.\");\n        }\n    }\n}\n```"
  },
  {
    "task": "Develop a routine to decide if a user input is a valid email address.",
    "code": "```java\nimport java.util.Scanner;\nimport java.util.regex.Pattern;\n\npublic class EmailValidator {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        System.out.print(\"Enter an email address: \");\n        String email = scanner.nextLine();\n        \n        if (isValidEmail(email)) {\n            System.out.println(\"The email address is valid.\");\n        } else {\n            System.out.println(\"The email address is invalid.\");\n        }\n        \n        scanner.close();\n    }\n\n    public static boolean isValidEmail(String email) {\n        String emailRegex = \"^[a-zA-Z0-9_+&*-]+(?:\\\\.[a-zA-Z0-9_+&*-]+)*@\" +\n                            \"(?:[a-zA-Z0-9-]+\\\\.)+[a-zA-Z]{2,7}$\";\n        Pattern pattern = Pattern.compile(emailRegex);\n        return email != null && pattern.matcher(email).matches();\n    }\n}\n```"
  },
  {
    "task": "Implement a program that categorizes a number as small, medium, or large.",
    "code": "```java\nimport java.util.Scanner;\n\npublic class NumberCategorizer {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        System.out.println(\"Enter a number:\");\n        int number = scanner.nextInt();\n\n        if (number < 10) {\n            System.out.println(\"The number is small.\");\n        } else if (number <= 100) {\n            System.out.println(\"The number is medium.\");\n        } else {\n            System.out.println(\"The number is large.\");\n        }\n        \n        scanner.close();\n    }\n}\n```"
  },
  {
    "task": "Design a function that outputs the season based on the month provided.",
    "code": "```java\npublic class SeasonFinder {\n    public static String getSeason(String month) {\n        switch (month.toLowerCase()) {\n            case \"december\":\n            case \"january\":\n            case \"february\":\n                return \"Winter\";\n            case \"march\":\n            case \"april\":\n            case \"may\":\n                return \"Spring\";\n            case \"june\":\n            case \"july\":\n            case \"august\":\n                return \"Summer\";\n            case \"september\":\n            case \"october\":\n            case \"november\":\n                return \"Fall\";\n            default:\n                return \"Invalid month\";\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(getSeason(\"March\"));  // Output: Spring\n    }\n}\n```"
  },
  {
    "task": "Write a program that checks if a string contains only alphabetic characters.",
    "code": "```java\npublic class Main {\n    public static void main(String[] args) {\n        String input = \"HelloWorld\";\n        if (isAlphabetic(input)) {\n            System.out.println(\"The string contains only alphabetic characters.\");\n        } else {\n            System.out.println(\"The string does not contain only alphabetic characters.\");\n        }\n    }\n\n    public static boolean isAlphabetic(String str) {\n        for (int i = 0; i < str.length(); i++) {\n            if (!Character.isLetter(str.charAt(i))) {\n                return false;\n            }\n        }\n        return true;\n    }\n}\n```"
  },
  {
    "task": "Create a routine that decides the type of triangle based on its angles.",
    "code": "```java\npublic class TriangleType {\n\n    public static String determineTriangleType(int angle1, int angle2, int angle3) {\n        if (angle1 + angle2 + angle3 != 180) {\n            return \"Invalid angles\";\n        }\n\n        if (angle1 <= 0 || angle2 <= 0 || angle3 <= 0) {\n            return \"Invalid angles\";\n        }\n\n        if (angle1 == 90 || angle2 == 90 || angle3 == 90) {\n            return \"Right triangle\";\n        } else if (angle1 > 90 || angle2 > 90 || angle3 > 90) {\n            return \"Obtuse triangle\";\n        } else {\n            return \"Acute triangle\";\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(determineTriangleType(60, 60, 60)); // Acute triangle\n        System.out.println(determineTriangleType(90, 45, 45)); // Right triangle\n        System.out.println(determineTriangleType(120, 30, 30)); // Obtuse triangle\n        System.out.println(determineTriangleType(0, 60, 120)); // Invalid angles\n        System.out.println(determineTriangleType(60, 60, 70)); // Invalid angles\n    }\n}\n```"
  },
  {
    "task": "Develop a program that suggests a meal based on the time of day.",
    "code": "```java\nimport java.util.Scanner;\n\npublic class MealSuggestion {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        System.out.print(\"Enter the time of day (in 24-hour format, e.g., 13 for 1 PM): \");\n        int hour = scanner.nextInt();\n        \n        String mealSuggestion;\n        \n        if (hour >= 6 && hour < 11) {\n            mealSuggestion = \"Breakfast\";\n        } else if (hour >= 11 && hour < 16) {\n            mealSuggestion = \"Lunch\";\n        } else if (hour >= 16 && hour < 21) {\n            mealSuggestion = \"Dinner\";\n        } else {\n            mealSuggestion = \"Snack\";\n        }\n        \n        System.out.println(\"Suggested meal: \" + mealSuggestion);\n        \n        scanner.close();\n    }\n}\n```"
  },
  {
    "task": "Implement a function that determines if a point lies within a circle given its radius.",
    "code": "```java\npublic class CircleChecker {\n\n    public static boolean isPointInsideCircle(double pointX, double pointY, double circleCenterX, double circleCenterY, double radius) {\n        double distanceSquared = Math.pow(pointX - circleCenterX, 2) + Math.pow(pointY - circleCenterY, 2);\n        return distanceSquared <= Math.pow(radius, 2);\n    }\n\n    public static void main(String[] args) {\n        double pointX = 1.0;\n        double pointY = 1.0;\n        double circleCenterX = 0.0;\n        double circleCenterY = 0.0;\n        double radius = 2.0;\n\n        boolean isInside = isPointInsideCircle(pointX, pointY, circleCenterX, circleCenterY, radius);\n        System.out.println(\"Point is inside the circle: \" + isInside);\n    }\n}\n```"
  },
  {
    "task": "Design a script that calculates overtime pay based on hours worked.",
    "code": "```java\npublic class OvertimeCalculator {\n    public static void main(String[] args) {\n        double hourlyRate = 25.0;\n        double hoursWorked = 45.0;\n        double overtimeRate = 1.5;\n        double regularHours = 40.0;\n        double totalPay;\n\n        if (hoursWorked <= regularHours) {\n            totalPay = hoursWorked * hourlyRate;\n        } else {\n            double regularPay = regularHours * hourlyRate;\n            double overtimeHours = hoursWorked - regularHours;\n            double overtimePay = overtimeHours * hourlyRate * overtimeRate;\n            totalPay = regularPay + overtimePay;\n        }\n\n        System.out.println(\"Total Pay: $\" + totalPay);\n    }\n}\n```"
  },
  {
    "task": "Write a program that checks if two strings are anagrams of each other.",
    "code": "```java\nimport java.util.Arrays;\n\npublic class AnagramCheck {\n    public static void main(String[] args) {\n        String str1 = \"listen\";\n        String str2 = \"silent\";\n\n        if (areAnagrams(str1, str2)) {\n            System.out.println(\"The strings are anagrams.\");\n        } else {\n            System.out.println(\"The strings are not anagrams.\");\n        }\n    }\n\n    public static boolean areAnagrams(String str1, String str2) {\n        if (str1.length() != str2.length()) {\n            return false;\n        }\n        char[] charArray1 = str1.toCharArray();\n        char[] charArray2 = str2.toCharArray();\n        Arrays.sort(charArray1);\n        Arrays.sort(charArray2);\n        return Arrays.equals(charArray1, charArray2);\n    }\n}\n```"
  },
  {
    "task": "Create a function that classifies numbers as prime or composite.",
    "code": "```java\npublic class NumberClassifier {\n\n    public static String classifyNumber(int number) {\n        if (number <= 1) {\n            return \"Composite\";\n        }\n        for (int i = 2; i <= Math.sqrt(number); i++) {\n            if (number % i == 0) {\n                return \"Composite\";\n            }\n        }\n        return \"Prime\";\n    }\n\n    public static void main(String[] args) {\n        int number = 29; // Example number\n        String result = classifyNumber(number);\n        System.out.println(\"The number \" + number + \" is \" + result + \".\");\n    }\n}\n```"
  },
  {
    "task": "Develop a routine to determine if a number is a power of two.",
    "code": "```java\npublic class PowerOfTwoChecker {\n    public static boolean isPowerOfTwo(int n) {\n        if (n <= 0) {\n            return false;\n        }\n        while (n % 2 == 0) {\n            n /= 2;\n        }\n        return n == 1;\n    }\n\n    public static void main(String[] args) {\n        int number = 16; // Example number\n        boolean result = isPowerOfTwo(number);\n        System.out.println(number + \" is a power of two: \" + result);\n    }\n}\n```"
  },
  {
    "task": "Implement a program that checks if a list is sorted in ascending order.",
    "code": "```java\nimport java.util.List;\n\npublic class SortedCheck {\n    public static boolean isSortedAscending(List<Integer> list) {\n        for (int i = 0; i < list.size() - 1; i++) {\n            if (list.get(i) > list.get(i + 1)) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    public static void main(String[] args) {\n        List<Integer> numbers = List.of(1, 2, 3, 4, 5);\n        boolean isSorted = isSortedAscending(numbers);\n        System.out.println(\"Is the list sorted in ascending order? \" + isSorted);\n    }\n}\n```"
  },
  {
    "task": "Design a function that suggests a sport based on the weather conditions.",
    "code": "```java\npublic class SportSuggestion {\n\n    public static String suggestSport(String weatherCondition) {\n        if (weatherCondition.equalsIgnoreCase(\"sunny\")) {\n            return \"Play tennis\";\n        } else if (weatherCondition.equalsIgnoreCase(\"rainy\")) {\n            return \"Go swimming\";\n        } else if (weatherCondition.equalsIgnoreCase(\"snowy\")) {\n            return \"Try skiing\";\n        } else if (weatherCondition.equalsIgnoreCase(\"windy\")) {\n            return \"Fly a kite\";\n        } else {\n            return \"Stay indoors and do yoga\";\n        }\n    }\n\n    public static void main(String[] args) {\n        String weather = \"Sunny\";\n        System.out.println(suggestSport(weather));\n    }\n}\n```"
  },
  {
    "task": "Write a program that determines if an entered date is valid.",
    "code": "```java\nimport java.util.Scanner;\n\npublic class DateValidator {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        \n        System.out.print(\"Enter year: \");\n        int year = scanner.nextInt();\n        \n        System.out.print(\"Enter month: \");\n        int month = scanner.nextInt();\n        \n        System.out.print(\"Enter day: \");\n        int day = scanner.nextInt();\n        \n        boolean isValid = false;\n\n        if (month < 1 || month > 12) {\n            isValid = false;\n        } else if (day < 1) {\n            isValid = false;\n        } else {\n            switch (month) {\n                case 1: case 3: case 5: case 7: case 8: case 10: case 12:\n                    if (day <= 31) isValid = true;\n                    break;\n                case 4: case 6: case 9: case 11:\n                    if (day <= 30) isValid = true;\n                    break;\n                case 2:\n                    if (isLeapYear(year)) {\n                        if (day <= 29) isValid = true;\n                    } else {\n                        if (day <= 28) isValid = true;\n                    }\n                    break;\n            }\n        }\n        \n        if (isValid) {\n            System.out.println(\"The date is valid.\");\n        } else {\n            System.out.println(\"The date is invalid.\");\n        }\n\n        scanner.close();\n    }\n    \n    private static boolean isLeapYear(int year) {\n        if (year % 4 != 0) {\n            return false;\n        } else if (year % 100 != 0) {\n            return true;\n        } else if (year % 400 != 0) {\n            return false;\n        } else {\n            return true;\n        }\n    }\n}\n```"
  },
  {
    "task": "Create a script to decide which of two products to buy based on price and reviews.",
    "code": "```java\nimport java.util.Scanner;\n\npublic class ProductDecision {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n\n        System.out.println(\"Enter price of product 1:\");\n        double price1 = scanner.nextDouble();\n        System.out.println(\"Enter review score of product 1:\");\n        double review1 = scanner.nextDouble();\n\n        System.out.println(\"Enter price of product 2:\");\n        double price2 = scanner.nextDouble();\n        System.out.println(\"Enter review score of product 2:\");\n        double review2 = scanner.nextDouble();\n\n        if (price1 < price2 && review1 >= review2) {\n            System.out.println(\"Buy Product 1\");\n        } else if (price2 < price1 && review2 >= review1) {\n            System.out.println(\"Buy Product 2\");\n        } else if (review1 > review2) {\n            System.out.println(\"Buy Product 1\");\n        } else if (review2 > review1) {\n            System.out.println(\"Buy Product 2\");\n        } else {\n            System.out.println(\"Both products are similar, consider other factors.\");\n        }\n\n        scanner.close();\n    }\n}\n```"
  },
  {
    "task": "Develop a function that categorizes a person\u2019s BMI as underweight, normal, overweight, or obese.",
    "code": "```java\npublic class BMICategorizer {\n\n    public static String categorizeBMI(double weight, double height) {\n        double bmi = weight / (height * height);\n\n        if (bmi < 18.5) {\n            return \"Underweight\";\n        } else if (bmi < 24.9) {\n            return \"Normal\";\n        } else if (bmi < 29.9) {\n            return \"Overweight\";\n        } else {\n            return \"Obese\";\n        }\n    }\n\n    public static void main(String[] args) {\n        double weight = 70; // Example weight in kilograms\n        double height = 1.75; // Example height in meters\n        System.out.println(categorizeBMI(weight, height));\n    }\n}\n```"
  },
  {
    "task": "Implement a program that checks if a credit card number is valid using the Luhn algorithm.",
    "code": "```java\npublic class LuhnAlgorithm {\n    public static boolean isValidCreditCard(String cardNumber) {\n        int total = 0;\n        boolean alternate = false;\n        \n        for (int i = cardNumber.length() - 1; i >= 0; i--) {\n            int n = Character.getNumericValue(cardNumber.charAt(i));\n            if (alternate) {\n                n *= 2;\n                if (n > 9) {\n                    n -= 9;\n                }\n            }\n            total += n;\n            alternate = !alternate;\n        }\n        \n        return (total % 10 == 0);\n    }\n\n    public static void main(String[] args) {\n        String cardNumber = \"1234567812345670\"; // Example card number\n        if (isValidCreditCard(cardNumber)) {\n            System.out.println(\"The credit card number is valid.\");\n        } else {\n            System.out.println(\"The credit card number is invalid.\");\n        }\n    }\n}\n```"
  },
  {
    "task": "Design a routine that outputs a greeting based on the current time of day.",
    "code": "```java\nimport java.time.LocalTime;\n\npublic class GreetingBasedOnTime {\n    public static void main(String[] args) {\n        LocalTime currentTime = LocalTime.now();\n        String greeting;\n\n        if (currentTime.isBefore(LocalTime.NOON)) {\n            greeting = \"Good morning\";\n        } else if (currentTime.isBefore(LocalTime.of(17, 0))) {\n            greeting = \"Good afternoon\";\n        } else {\n            greeting = \"Good evening\";\n        }\n\n        System.out.println(greeting);\n    }\n}\n```"
  },
  {
    "task": "Write a program that determines if a given word can be formed with a set of letters.",
    "code": "```java\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class WordFormation {\n\n    public static boolean canFormWord(String word, String letters) {\n        Map<Character, Integer> letterCount = new HashMap<>();\n\n        for (char letter : letters.toCharArray()) {\n            letterCount.put(letter, letterCount.getOrDefault(letter, 0) + 1);\n        }\n\n        for (char c : word.toCharArray()) {\n            if (!letterCount.containsKey(c) || letterCount.get(c) == 0) {\n                return false;\n            }\n            letterCount.put(c, letterCount.get(c) - 1);\n        }\n        \n        return true;\n    }\n\n    public static void main(String[] args) {\n        String word = \"hello\";\n        String letters = \"hleolxyz\";\n        \n        boolean result = canFormWord(word, letters);\n        System.out.println(\"Can the word be formed? \" + result);\n    }\n}\n```"
  },
  {
    "task": "Create a function that outputs the appropriate greeting based on the day of the week.",
    "code": "```java\npublic class Greeting {\n\n    public static String getGreeting(String dayOfWeek) {\n        String greeting;\n        switch (dayOfWeek.toLowerCase()) {\n            case \"monday\":\n                greeting = \"Start of a new week!\";\n                break;\n            case \"tuesday\":\n                greeting = \"Hope your week is going well!\";\n                break;\n            case \"wednesday\":\n                greeting = \"Midweek already!\";\n                break;\n            case \"thursday\":\n                greeting = \"Almost the weekend!\";\n                break;\n            case \"friday\":\n                greeting = \"Weekend is here!\";\n                break;\n            case \"saturday\":\n                greeting = \"Enjoy your weekend!\";\n                break;\n            case \"sunday\":\n                greeting = \"Rest up for the week ahead!\";\n                break;\n            default:\n                greeting = \"Invalid day!\";\n                break;\n        }\n        return greeting;\n    }\n\n    public static void main(String[] args) {\n        System.out.println(getGreeting(\"Monday\"));\n        System.out.println(getGreeting(\"Friday\"));\n        System.out.println(getGreeting(\"Sunday\"));\n    }\n}\n```"
  },
  {
    "task": "Develop a system to determine if a person qualifies for a senior citizen discount.",
    "code": "```java\nimport java.util.Scanner;\n\npublic class SeniorCitizenDiscount {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        \n        System.out.print(\"Enter age: \");\n        int age = scanner.nextInt();\n        \n        if (age >= 65) {\n            System.out.println(\"You qualify for the senior citizen discount.\");\n        } else {\n            System.out.println(\"You do not qualify for the senior citizen discount.\");\n        }\n        \n        scanner.close();\n    }\n}\n```"
  },
  {
    "task": "Implement a function that checks if a number is a perfect square.",
    "code": "```java\npublic class PerfectSquareChecker {\n\n    public static boolean isPerfectSquare(int num) {\n        if (num < 0) {\n            return false;\n        }\n        int sqrt = (int) Math.sqrt(num);\n        return sqrt * sqrt == num;\n    }\n\n    public static void main(String[] args) {\n        // Example usage:\n        int number = 16;\n        if (isPerfectSquare(number)) {\n            System.out.println(number + \" is a perfect square.\");\n        } else {\n            System.out.println(number + \" is not a perfect square.\");\n        }\n    }\n}\n```"
  },
  {
    "task": "Design a program that outputs the correct shipping cost based on weight and distance.",
    "code": "```java\nimport java.util.Scanner;\n\npublic class ShippingCostCalculator {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n\n        System.out.print(\"Enter weight of the package (kg): \");\n        double weight = scanner.nextDouble();\n\n        System.out.print(\"Enter distance to the destination (km): \");\n        double distance = scanner.nextDouble();\n\n        double cost;\n\n        if (weight <= 5) {\n            if (distance <= 100) {\n                cost = 5.0;\n            } else if (distance <= 500) {\n                cost = 10.0;\n            } else {\n                cost = 20.0;\n            }\n        } else if (weight <= 20) {\n            if (distance <= 100) {\n                cost = 10.0;\n            } else if (distance <= 500) {\n                cost = 15.0;\n            } else {\n                cost = 25.0;\n            }\n        } else {\n            if (distance <= 100) {\n                cost = 20.0;\n            } else if (distance <= 500) {\n                cost = 25.0;\n            } else {\n                cost = 50.0;\n            }\n        }\n\n        System.out.println(\"The shipping cost is: $\" + cost);\n    }\n}\n```"
  },
  {
    "task": "Write a routine that chooses the correct pronoun based on gender input.",
    "code": "```java\npublic class PronounSelector {\n\n    public static String choosePronoun(String gender) {\n        if (\"male\".equalsIgnoreCase(gender)) {\n            return \"he\";\n        } else if (\"female\".equalsIgnoreCase(gender)) {\n            return \"she\";\n        } else {\n            return \"they\";\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(choosePronoun(\"male\"));   // Output: he\n        System.out.println(choosePronoun(\"female\")); // Output: she\n        System.out.println(choosePronoun(\"other\"));  // Output: they\n    }\n}\n```"
  },
  {
    "task": "Create a program that checks if a user input is a palindrome number.",
    "code": "```java\nimport java.util.Scanner;\n\npublic class PalindromeChecker {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        System.out.print(\"Enter a number: \");\n        int number = scanner.nextInt();\n        int originalNumber = number;\n        int reversedNumber = 0;\n\n        while (number != 0) {\n            int digit = number % 10;\n            reversedNumber = reversedNumber * 10 + digit;\n            number /= 10;\n        }\n\n        if (originalNumber == reversedNumber) {\n            System.out.println(\"The number is a palindrome.\");\n        } else {\n            System.out.println(\"The number is not a palindrome.\");\n        }\n    }\n}\n```"
  },
  {
    "task": "Develop a script to decide if a number is a perfect number.",
    "code": "```java\npublic class PerfectNumberChecker {\n    public static void main(String[] args) {\n        int number = 28; // Example number\n        if (isPerfectNumber(number)) {\n            System.out.println(number + \" is a perfect number.\");\n        } else {\n            System.out.println(number + \" is not a perfect number.\");\n        }\n    }\n\n    public static boolean isPerfectNumber(int number) {\n        if (number <= 1) {\n            return false;\n        }\n        int sum = 0;\n        for (int i = 1; i <= number / 2; i++) {\n            if (number % i == 0) {\n                sum += i;\n            }\n        }\n        return sum == number;\n    }\n}\n```"
  },
  {
    "task": "Implement a system that determines the winner in a rock-paper-scissors game.",
    "code": "```java\nimport java.util.Scanner;\n\npublic class RockPaperScissors {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        \n        System.out.println(\"Enter Player 1 choice (rock, paper, scissors):\");\n        String player1 = scanner.nextLine().toLowerCase();\n        \n        System.out.println(\"Enter Player 2 choice (rock, paper, scissors):\");\n        String player2 = scanner.nextLine().toLowerCase();\n        \n        if (player1.equals(player2)) {\n            System.out.println(\"It's a tie!\");\n        } else if ((player1.equals(\"rock\") && player2.equals(\"scissors\")) ||\n                   (player1.equals(\"scissors\") && player2.equals(\"paper\")) ||\n                   (player1.equals(\"paper\") && player2.equals(\"rock\"))) {\n            System.out.println(\"Player 1 wins!\");\n        } else if ((player2.equals(\"rock\") && player1.equals(\"scissors\")) ||\n                   (player2.equals(\"scissors\") && player1.equals(\"paper\")) ||\n                   (player2.equals(\"paper\") && player1.equals(\"rock\"))) {\n            System.out.println(\"Player 2 wins!\");\n        } else {\n            System.out.println(\"Invalid input!\");\n        }\n        \n        scanner.close();\n    }\n}\n```"
  },
  {
    "task": "Design a function that suggests a movie genre based on user mood.",
    "code": "```java\npublic class MovieSuggester {\n\n    public static String suggestGenre(String mood) {\n        if (mood.equalsIgnoreCase(\"happy\")) {\n            return \"Comedy\";\n        } else if (mood.equalsIgnoreCase(\"sad\")) {\n            return \"Drama\";\n        } else if (mood.equalsIgnoreCase(\"excited\")) {\n            return \"Action\";\n        } else if (mood.equalsIgnoreCase(\"romantic\")) {\n            return \"Romance\";\n        } else if (mood.equalsIgnoreCase(\"scared\")) {\n            return \"Horror\";\n        } else {\n            return \"Documentary\";\n        }\n    }\n\n    public static void main(String[] args) {\n        String mood = \"excited\";\n        String genre = suggestGenre(mood);\n        System.out.println(\"Suggested Genre: \" + genre);\n    }\n}\n```"
  },
  {
    "task": "Write a program that checks if a file extension is valid for an image file.",
    "code": "```java\nimport java.util.Arrays;\nimport java.util.List;\n\npublic class ImageFileValidator {\n\n    public static boolean isValidImageFileExtension(String fileName) {\n        List<String> validExtensions = Arrays.asList(\"jpg\", \"jpeg\", \"png\", \"gif\", \"bmp\", \"tiff\");\n        int dotIndex = fileName.lastIndexOf('.');\n        \n        if (dotIndex == -1) {\n            return false;\n        }\n        \n        String extension = fileName.substring(dotIndex + 1).toLowerCase();\n        return validExtensions.contains(extension);\n    }\n\n    public static void main(String[] args) {\n        String fileName = \"example.png\";\n        if (isValidImageFileExtension(fileName)) {\n            System.out.println(fileName + \" is a valid image file.\");\n        } else {\n            System.out.println(fileName + \" is not a valid image file.\");\n        }\n    }\n}\n```"
  },
  {
    "task": "Create a routine that decides the appropriate currency symbol based on country.",
    "code": "```java\npublic class CurrencySymbolSelector {\n\n    public static String getCurrencySymbol(String country) {\n        switch (country.toLowerCase()) {\n            case \"united states\":\n                return \"$\";\n            case \"united kingdom\":\n                return \"\u00a3\";\n            case \"european union\":\n                return \"\u20ac\";\n            case \"japan\":\n                return \"\u00a5\";\n            case \"india\":\n                return \"\u20b9\";\n            case \"china\":\n                return \"\u00a5\";\n            case \"australia\":\n                return \"$\";\n            case \"canada\":\n                return \"$\";\n            default:\n                return \"Currency symbol not available\";\n        }\n    }\n\n    public static void main(String[] args) {\n        String country = \"United States\";\n        System.out.println(\"The currency symbol for \" + country + \" is: \" + getCurrencySymbol(country));\n    }\n}\n```"
  },
  {
    "task": "Develop a function that determines if a string is a valid palindrome ignoring spaces and punctuation.",
    "code": "```java\npublic class PalindromeChecker {\n    public static boolean isValidPalindrome(String s) {\n        if (s == null) return false;\n        \n        int left = 0, right = s.length() - 1;\n        \n        while (left < right) {\n            while (left < right && !Character.isLetterOrDigit(s.charAt(left))) {\n                left++;\n            }\n            while (left < right && !Character.isLetterOrDigit(s.charAt(right))) {\n                right--;\n            }\n            if (Character.toLowerCase(s.charAt(left)) != Character.toLowerCase(s.charAt(right))) {\n                return false;\n            }\n            left++;\n            right--;\n        }\n        return true;\n    }\n    \n    public static void main(String[] args) {\n        System.out.println(isValidPalindrome(\"A man, a plan, a canal, Panama\")); // true\n        System.out.println(isValidPalindrome(\"race a car\")); // false\n    }\n}\n```"
  },
  {
    "task": "Implement a program that checks if a number is in the Fibonacci sequence.",
    "code": "```java\nimport java.util.Scanner;\n\npublic class FibonacciCheck {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        System.out.print(\"Enter a number to check if it's in the Fibonacci sequence: \");\n        int number = scanner.nextInt();\n\n        if (isFibonacci(number)) {\n            System.out.println(number + \" is in the Fibonacci sequence.\");\n        } else {\n            System.out.println(number + \" is not in the Fibonacci sequence.\");\n        }\n    }\n\n    public static boolean isFibonacci(int number) {\n        if (number < 0) return false;\n        int a = 0, b = 1;\n        while (b < number) {\n            int temp = b;\n            b = a + b;\n            a = temp;\n        }\n        return b == number || number == 0;\n    }\n}\n```"
  },
  {
    "task": "Design a script to calculate the correct tip based on service quality rating.",
    "code": "```java\nimport java.util.Scanner;\n\npublic class TipCalculator {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n\n        System.out.println(\"Enter the bill amount:\");\n        double billAmount = scanner.nextDouble();\n\n        System.out.println(\"Enter service quality (Excellent, Good, Fair, Poor):\");\n        String serviceQuality = scanner.next();\n\n        double tipPercentage;\n\n        switch (serviceQuality.toLowerCase()) {\n            case \"excellent\":\n                tipPercentage = 0.20;\n                break;\n            case \"good\":\n                tipPercentage = 0.15;\n                break;\n            case \"fair\":\n                tipPercentage = 0.10;\n                break;\n            case \"poor\":\n                tipPercentage = 0.05;\n                break;\n            default:\n                tipPercentage = 0;\n                System.out.println(\"Invalid service quality.\");\n        }\n\n        if (tipPercentage > 0) {\n            double tip = billAmount * tipPercentage;\n            System.out.printf(\"The tip is: %.2f%n\", tip);\n        }\n\n        scanner.close();\n    }\n}\n```"
  },
  {
    "task": "Write a function that determines if a year is a century year.",
    "code": "```java\npublic class CenturyYearChecker {\n    public static boolean isCenturyYear(int year) {\n        if (year % 100 == 0) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    public static void main(String[] args) {\n        int year = 1900;\n        System.out.println(isCenturyYear(year)); // Output: true\n    }\n}\n```"
  },
  {
    "task": "Create a program that checks if a date falls on a weekend.",
    "code": "```java\nimport java.time.LocalDate;\nimport java.time.DayOfWeek;\n\npublic class WeekendChecker {\n\n    public static boolean isWeekend(LocalDate date) {\n        DayOfWeek dayOfWeek = date.getDayOfWeek();\n        return dayOfWeek == DayOfWeek.SATURDAY || dayOfWeek == DayOfWeek.SUNDAY;\n    }\n\n    public static void main(String[] args) {\n        LocalDate date = LocalDate.of(2023, 10, 14); // Example date\n        if (isWeekend(date)) {\n            System.out.println(\"The date falls on a weekend.\");\n        } else {\n            System.out.println(\"The date does not fall on a weekend.\");\n        }\n    }\n}\n```"
  },
  {
    "task": "Develop a routine that suggests a book based on genre preference.",
    "code": "```java\nimport java.util.Scanner;\n\npublic class BookSuggester {\n\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n\n        System.out.println(\"Enter your preferred genre (fiction, non-fiction, mystery, fantasy): \");\n        String genre = scanner.nextLine().toLowerCase();\n\n        String suggestedBook = suggestBook(genre);\n        System.out.println(\"Suggested Book: \" + suggestedBook);\n\n        scanner.close();\n    }\n\n    public static String suggestBook(String genre) {\n        if (\"fiction\".equals(genre)) {\n            return \"To Kill a Mockingbird by Harper Lee\";\n        } else if (\"non-fiction\".equals(genre)) {\n            return \"Sapiens by Yuval Noah Harari\";\n        } else if (\"mystery\".equals(genre)) {\n            return \"Gone Girl by Gillian Flynn\";\n        } else if (\"fantasy\".equals(genre)) {\n            return \"Harry Potter and the Sorcerer's Stone by J.K. Rowling\";\n        } else {\n            return \"Genre not recognized. Please try again.\";\n        }\n    }\n}\n```"
  },
  {
    "task": "Implement a system that determines if a student passes or fails based on their grades.",
    "code": "```java\npublic class StudentGradeEvaluator {\n\n    public static String evaluateGrade(double grade) {\n        if (grade >= 50.0) {\n            return \"Pass\";\n        } else {\n            return \"Fail\";\n        }\n    }\n\n    public static void main(String[] args) {\n        double studentGrade = 72.5; // Example grade\n        String result = evaluateGrade(studentGrade);\n        System.out.println(\"The student has \" + result);\n    }\n}\n```"
  },
  {
    "task": "Design a function to validate if a string is a valid URL.",
    "code": "```java\nimport java.util.regex.Pattern;\nimport java.util.regex.Matcher;\n\npublic class URLValidator {\n\n    public static boolean isValidURL(String url) {\n        String regex = \"^(https?|ftp)://[\\\\w.-]+(:\\\\d+)?(/.*)?$\";\n        Pattern pattern = Pattern.compile(regex);\n        Matcher matcher = pattern.matcher(url);\n        return matcher.matches();\n    }\n\n    public static void main(String[] args) {\n        // Example usage\n        System.out.println(isValidURL(\"https://example.com\")); // true\n        System.out.println(isValidURL(\"ftp://example.com\")); // true\n        System.out.println(isValidURL(\"not-a-url\")); // false\n    }\n}\n```"
  },
  {
    "task": "Write a program that checks if a point is inside a rectangle given its coordinates.",
    "code": "```java\npublic class PointInRectangle {\n\n    public static boolean isPointInsideRectangle(int pointX, int pointY, int rectX1, int rectY1, int rectX2, int rectY2) {\n        int minX = Math.min(rectX1, rectX2);\n        int maxX = Math.max(rectX1, rectX2);\n        int minY = Math.min(rectY1, rectY2);\n        int maxY = Math.max(rectY1, rectY2);\n\n        if (pointX >= minX && pointX <= maxX && pointY >= minY && pointY <= maxY) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    public static void main(String[] args) {\n        int pointX = 5;\n        int pointY = 5;\n        int rectX1 = 0;\n        int rectY1 = 0;\n        int rectX2 = 10;\n        int rectY2 = 10;\n\n        boolean isInside = isPointInsideRectangle(pointX, pointY, rectX1, rectY1, rectX2, rectY2);\n        System.out.println(\"Point is inside rectangle: \" + isInside);\n    }\n}\n```"
  },
  {
    "task": "Create a script to determine if a word can be constructed from a given set of letters.",
    "code": "```java\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class WordConstructor {\n    public static boolean canConstructWord(String word, String letters) {\n        Map<Character, Integer> letterCount = new HashMap<>();\n        \n        for (char c : letters.toCharArray()) {\n            letterCount.put(c, letterCount.getOrDefault(c, 0) + 1);\n        }\n        \n        for (char c : word.toCharArray()) {\n            if (!letterCount.containsKey(c) || letterCount.get(c) == 0) {\n                return false;\n            }\n            letterCount.put(c, letterCount.get(c) - 1);\n        }\n        \n        return true;\n    }\n    \n    public static void main(String[] args) {\n        String word = \"example\";\n        String letters = \"axeemlp\";\n        \n        boolean result = canConstructWord(word, letters);\n        \n        System.out.println(\"Can construct word: \" + result);\n    }\n}\n```"
  },
  {
    "task": "Develop a routine that calculates insurance premiums based on age and driving record.",
    "code": "```java\npublic class InsuranceCalculator {\n\n    public static double calculatePremium(int age, boolean hasGoodDrivingRecord) {\n        double basePremium = 500.0;\n        double ageSurcharge = 0.0;\n        double recordDiscount = 0.0;\n\n        if (age < 25) {\n            ageSurcharge = 200.0;\n        } else if (age >= 25 && age <= 60) {\n            ageSurcharge = 100.0;\n        } else if (age > 60) {\n            ageSurcharge = 150.0;\n        }\n\n        if (hasGoodDrivingRecord) {\n            recordDiscount = 0.1 * (basePremium + ageSurcharge);\n        }\n\n        return basePremium + ageSurcharge - recordDiscount;\n    }\n\n    public static void main(String[] args) {\n        int age = 30;\n        boolean hasGoodDrivingRecord = true;\n        double premium = calculatePremium(age, hasGoodDrivingRecord);\n        System.out.println(\"The insurance premium is: $\" + premium);\n    }\n}\n```"
  },
  {
    "task": "Implement a program that checks for palindrome sentences.",
    "code": "```java\npublic class PalindromeChecker {\n    public static boolean isPalindrome(String sentence) {\n        String processed = sentence.replaceAll(\"[^a-zA-Z]\", \"\").toLowerCase();\n        int left = 0, right = processed.length() - 1;\n        while (left < right) {\n            if (processed.charAt(left) != processed.charAt(right)) {\n                return false;\n            }\n            left++;\n            right--;\n        }\n        return true;\n    }\n    \n    public static void main(String[] args) {\n        String[] testSentences = {\n            \"A man, a plan, a canal, Panama\",\n            \"Racecar\",\n            \"Hello, World!\",\n            \"Was it a car or a cat I saw?\"\n        };\n        \n        for (String sentence : testSentences) {\n            if (isPalindrome(sentence)) {\n                System.out.println(\"\\\"\" + sentence + \"\\\" is a palindrome.\");\n            } else {\n                System.out.println(\"\\\"\" + sentence + \"\\\" is not a palindrome.\");\n            }\n        }\n    }\n}\n```"
  },
  {
    "task": "Design a function to evaluate if a string contains balanced parentheses.",
    "code": "```java\npublic class BalancedParentheses {\n\n    public static boolean isBalanced(String s) {\n        int balance = 0;\n        for (int i = 0; i < s.length(); i++) {\n            char ch = s.charAt(i);\n            if (ch == '(') {\n                balance++;\n            } else if (ch == ')') {\n                balance--;\n            }\n            if (balance < 0) {\n                return false;\n            }\n        }\n        return balance == 0;\n    }\n\n    public static void main(String[] args) {\n        String test1 = \"(())\";\n        String test2 = \"(()\";\n        String test3 = \"())\";\n        System.out.println(isBalanced(test1)); // true\n        System.out.println(isBalanced(test2)); // false\n        System.out.println(isBalanced(test3)); // false\n    }\n}\n```"
  },
  {
    "task": "Write a program that suggests a pet based on living conditions and preferences.",
    "code": "```java\nimport java.util.Scanner;\n\npublic class PetSuggester {\n\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n\n        System.out.println(\"Do you have a large living space? (yes/no)\");\n        String largeSpace = scanner.nextLine().trim().toLowerCase();\n\n        System.out.println(\"Do you prefer a pet that requires minimal grooming? (yes/no)\");\n        String minimalGrooming = scanner.nextLine().trim().toLowerCase();\n\n        System.out.println(\"Do you prefer a pet that is low maintenance? (yes/no)\");\n        String lowMaintenance = scanner.nextLine().trim().toLowerCase();\n\n        if (largeSpace.equals(\"yes\")) {\n            if (minimalGrooming.equals(\"yes\")) {\n                if (lowMaintenance.equals(\"yes\")) {\n                    System.out.println(\"Suggested pet: Fish\");\n                } else {\n                    System.out.println(\"Suggested pet: Dog\");\n                }\n            } else {\n                if (lowMaintenance.equals(\"yes\")) {\n                    System.out.println(\"Suggested pet: Cat\");\n                } else {\n                    System.out.println(\"Suggested pet: Horse\");\n                }\n            }\n        } else {\n            if (minimalGrooming.equals(\"yes\")) {\n                if (lowMaintenance.equals(\"yes\")) {\n                    System.out.println(\"Suggested pet: Hamster\");\n                } else {\n                    System.out.println(\"Suggested pet: Rabbit\");\n                }\n            } else {\n                if (lowMaintenance.equals(\"yes\")) {\n                    System.out.println(\"Suggested pet: Bird\");\n                } else {\n                    System.out.println(\"Suggested pet: Reptile\");\n                }\n            }\n        }\n\n        scanner.close();\n    }\n}\n```"
  },
  {
    "task": "Create a routine that determines if a phone number is valid based on format.",
    "code": "```java\npublic class PhoneNumberValidator {\n\n    public static boolean isValidPhoneNumber(String phoneNumber) {\n        // Assuming the valid format is (XXX) XXX-XXXX\n        if (phoneNumber == null) {\n            return false;\n        }\n        \n        if (phoneNumber.length() != 14) {\n            return false;\n        }\n        \n        if (phoneNumber.charAt(0) != '(' || phoneNumber.charAt(4) != ')' || phoneNumber.charAt(5) != ' ' || phoneNumber.charAt(9) != '-') {\n            return false;\n        }\n        \n        for (int i = 1; i < 4; i++) {\n            if (!Character.isDigit(phoneNumber.charAt(i))) {\n                return false;\n            }\n        }\n        \n        for (int i = 6; i < 9; i++) {\n            if (!Character.isDigit(phoneNumber.charAt(i))) {\n                return false;\n            }\n        }\n        \n        for (int i = 10; i < 14; i++) {\n            if (!Character.isDigit(phoneNumber.charAt(i))) {\n                return false;\n            }\n        }\n        \n        return true;\n    }\n\n    public static void main(String[] args) {\n        String phoneNumber = \"(123) 456-7890\";\n        System.out.println(\"Is the phone number valid? \" + isValidPhoneNumber(phoneNumber));\n    }\n}\n```"
  },
  {
    "task": "Develop a function that checks if two rectangles overlap.",
    "code": "```java\npublic class RectangleOverlapChecker {\n\n    public static boolean doOverlap(int l1x, int l1y, int r1x, int r1y, int l2x, int l2y, int r2x, int r2y) {\n        // If one rectangle is on left side of another\n        if (l1x > r2x || l2x > r1x) {\n            return false;\n        }\n\n        // If one rectangle is above another\n        if (l1y < r2y || l2y < r1y) {\n            return false;\n        }\n\n        return true;\n    }\n\n    public static void main(String[] args) {\n        // Example usage\n        int l1x = 0, l1y = 10, r1x = 10, r1y = 0;\n        int l2x = 5, l2y = 5, r2x = 15, r2y = 0;\n\n        boolean result = doOverlap(l1x, l1y, r1x, r1y, l2x, l2y, r2x, r2y);\n        System.out.println(\"Do rectangles overlap? \" + result);\n    }\n}\n```"
  },
  {
    "task": "Implement a program that chooses a beverage based on user input time.",
    "code": "```java\nimport java.util.Scanner;\n\npublic class BeverageChooser {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        System.out.println(\"Enter the time in 24-hour format (HH): \");\n        int hour = scanner.nextInt();\n\n        String beverage;\n\n        if (hour >= 0 && hour < 12) {\n            beverage = \"Coffee\";\n        } else if (hour >= 12 && hour < 18) {\n            beverage = \"Tea\";\n        } else if (hour >= 18 && hour <= 23) {\n            beverage = \"Juice\";\n        } else {\n            beverage = \"Invalid time\";\n        }\n\n        System.out.println(\"Recommended beverage: \" + beverage);\n    }\n}\n```"
  },
  {
    "task": "Design a script to determine if a URL is secure (HTTPS).",
    "code": "```java\npublic class URLChecker {\n    public static boolean isSecureURL(String url) {\n        if (url.startsWith(\"https://\")) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    public static void main(String[] args) {\n        String url1 = \"https://example.com\";\n        String url2 = \"http://example.com\";\n\n        System.out.println(\"URL 1 is secure: \" + isSecureURL(url1));\n        System.out.println(\"URL 2 is secure: \" + isSecureURL(url2));\n    }\n}\n```"
  },
  {
    "task": "Write a function that outputs different messages based on the input number's divisibility.",
    "code": "```java\npublic class DivisibilityChecker {\n    public static void checkDivisibility(int number) {\n        if (number % 15 == 0) {\n            System.out.println(\"Divisible by both 3 and 5\");\n        } else if (number % 3 == 0) {\n            System.out.println(\"Divisible by 3\");\n        } else if (number % 5 == 0) {\n            System.out.println(\"Divisible by 5\");\n        } else {\n            System.out.println(\"Not divisible by 3 or 5\");\n        }\n    }\n\n    public static void main(String[] args) {\n        checkDivisibility(30);\n        checkDivisibility(9);\n        checkDivisibility(10);\n        checkDivisibility(7);\n    }\n}\n```"
  },
  {
    "task": "Create a program to decide if a person should bring an umbrella based on the weather forecast.",
    "code": "```java\nimport java.util.Scanner;\n\npublic class UmbrellaDecision {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        \n        System.out.print(\"Enter the weather forecast (rainy/sunny/cloudy): \");\n        String forecast = scanner.nextLine().toLowerCase();\n\n        if (forecast.equals(\"rainy\")) {\n            System.out.println(\"You should bring an umbrella.\");\n        } else if (forecast.equals(\"sunny\")) {\n            System.out.println(\"No need for an umbrella.\");\n        } else if (forecast.equals(\"cloudy\")) {\n            System.out.println(\"You might want to bring an umbrella, just in case.\");\n        } else {\n            System.out.println(\"Invalid forecast.\");\n        }\n\n        scanner.close();\n    }\n}\n```"
  },
  {
    "task": "Develop a routine that checks if a chess move is valid.",
    "code": "```java\npublic class ChessMoveValidator {\n\n    public boolean isValidMove(String piece, String start, String end) {\n        int startX = start.charAt(0) - 'a';\n        int startY = start.charAt(1) - '1';\n        int endX = end.charAt(0) - 'a';\n        int endY = end.charAt(1) - '1';\n\n        switch (piece.toLowerCase()) {\n            case \"pawn\":\n                return isValidPawnMove(startX, startY, endX, endY);\n            case \"rook\":\n                return isValidRookMove(startX, startY, endX, endY);\n            case \"knight\":\n                return isValidKnightMove(startX, startY, endX, endY);\n            case \"bishop\":\n                return isValidBishopMove(startX, startY, endX, endY);\n            case \"queen\":\n                return isValidQueenMove(startX, startY, endX, endY);\n            case \"king\":\n                return isValidKingMove(startX, startY, endX, endY);\n            default:\n                return false;\n        }\n    }\n\n    private boolean isValidPawnMove(int startX, int startY, int endX, int endY) {\n        return startX == endX && (endY == startY + 1 || (startY == 1 && endY == startY + 2));\n    }\n\n    private boolean isValidRookMove(int startX, int startY, int endX, int endY) {\n        return startX == endX || startY == endY;\n    }\n\n    private boolean isValidKnightMove(int startX, int startY, int endX, int endY) {\n        return (Math.abs(startX - endX) == 2 && Math.abs(startY - endY) == 1) || \n               (Math.abs(startX - endX) == 1 && Math.abs(startY - endY) == 2);\n    }\n\n    private boolean isValidBishopMove(int startX, int startY, int endX, int endY) {\n        return Math.abs(startX - endX) == Math.abs(startY - endY);\n    }\n\n    private boolean isValidQueenMove(int startX, int startY, int endX, int endY) {\n        return isValidRookMove(startX, startY, endX, endY) || isValidBishopMove(startX, startY, endX, endY);\n    }\n\n    private boolean isValidKingMove(int startX, int startY, int endX, int endY) {\n        return Math.abs(startX - endX) <= 1 && Math.abs(startY - endY) <= 1;\n    }\n}\n```"
  },
  {
    "task": "Implement a program that outputs the number of days in a given month.",
    "code": "```java\nimport java.util.Scanner;\n\npublic class DaysInMonth {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        System.out.print(\"Enter the month number (1-12): \");\n        int month = scanner.nextInt();\n        int days = 0;\n\n        if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            days = 31;\n        } else if (month == 4 || month == 6 || month == 9 || month == 11) {\n            days = 30;\n        } else if (month == 2) {\n            days = 28;\n        } else {\n            System.out.println(\"Invalid month number.\");\n            return;\n        }\n\n        System.out.println(\"Number of days: \" + days);\n    }\n}\n```"
  },
  {
    "task": "Design a function that validates if a string is a valid hexadecimal number.",
    "code": "```java\npublic class HexValidator {\n\n    public static boolean isValidHex(String input) {\n        if (input == null || input.isEmpty()) {\n            return false;\n        }\n\n        if (input.length() > 2 && input.startsWith(\"0x\")) {\n            input = input.substring(2);\n        }\n\n        for (char c : input.toCharArray()) {\n            if (!((c >= '0' && c <= '9') || (c >= 'a' && c <= 'f') || (c >= 'A' && c <= 'F'))) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    public static void main(String[] args) {\n        String test1 = \"0x1A3F\";\n        String test2 = \"Z123\";\n        \n        System.out.println(isValidHex(test1)); // true\n        System.out.println(isValidHex(test2)); // false\n    }\n}\n```"
  },
  {
    "task": "Write a script that checks if a word is present in a list of predefined words.",
    "code": "```java\nimport java.util.Arrays;\nimport java.util.List;\nimport java.util.Scanner;\n\npublic class WordChecker {\n    public static void main(String[] args) {\n        List<String> words = Arrays.asList(\"apple\", \"banana\", \"cherry\", \"date\");\n        Scanner scanner = new Scanner(System.in);\n\n        System.out.print(\"Enter a word to check: \");\n        String inputWord = scanner.nextLine();\n\n        if (words.contains(inputWord)) {\n            System.out.println(\"The word is in the list.\");\n        } else {\n            System.out.println(\"The word is not in the list.\");\n        }\n\n        scanner.close();\n    }\n}\n```"
  },
  {
    "task": "Create a routine to decide the correct tax bracket for a given income.",
    "code": "```java\npublic class TaxBracketCalculator {\n\n    public static String getTaxBracket(double income) {\n        if (income <= 9875) {\n            return \"10%\";\n        } else if (income <= 40125) {\n            return \"12%\";\n        } else if (income <= 85525) {\n            return \"22%\";\n        } else if (income <= 163300) {\n            return \"24%\";\n        } else if (income <= 207350) {\n            return \"32%\";\n        } else if (income <= 518400) {\n            return \"35%\";\n        } else {\n            return \"37%\";\n        }\n    }\n\n    public static void main(String[] args) {\n        double income = 50000; // Example income\n        String taxBracket = getTaxBracket(income);\n        System.out.println(\"The tax bracket for an income of $\" + income + \" is: \" + taxBracket);\n    }\n}\n```"
  },
  {
    "task": "Develop a function that determines if a point is within a triangle.",
    "code": "```java\npublic class PointInTriangle {\n\n    public static boolean isPointInTriangle(double x, double y, \n                                            double x1, double y1, \n                                            double x2, double y2, \n                                            double x3, double y3) {\n        \n        double denominator = ((y2 - y3) * (x1 - x3) + (x3 - x2) * (y1 - y3));\n        \n        double a = ((y2 - y3) * (x - x3) + (x3 - x2) * (y - y3)) / denominator;\n        double b = ((y3 - y1) * (x - x3) + (x1 - x3) * (y - y3)) / denominator;\n        double c = 1 - a - b;\n\n        return a >= 0 && a <= 1 && b >= 0 && b <= 1 && c >= 0 && c <= 1;\n    }\n\n    public static void main(String[] args) {\n        double x = 1, y = 1;\n        double x1 = 0, y1 = 0;\n        double x2 = 2, y2 = 0;\n        double x3 = 0, y3 = 2;\n\n        boolean result = isPointInTriangle(x, y, x1, y1, x2, y2, x3, y3);\n        System.out.println(\"The point is \" + (result ? \"inside\" : \"outside\") + \" the triangle.\");\n    }\n}\n```"
  },
  {
    "task": "Implement a program that checks if a given string is a valid binary number.",
    "code": "```java\npublic class BinaryChecker {\n    public static boolean isValidBinary(String s) {\n        for (char c : s.toCharArray()) {\n            if (c != '0' && c != '1') {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    public static void main(String[] args) {\n        String testString = \"101010\";\n        if (isValidBinary(testString)) {\n            System.out.println(testString + \" is a valid binary number.\");\n        } else {\n            System.out.println(testString + \" is not a valid binary number.\");\n        }\n    }\n}\n```"
  },
  {
    "task": "Design a system to evaluate the risk level of an investment based on criteria.",
    "code": "```java\npublic class InvestmentRiskEvaluator {\n\n    public static String evaluateRiskLevel(double investmentAmount, double volatilityIndex, String sector) {\n        if (investmentAmount < 0 || volatilityIndex < 0) {\n            return \"Invalid Input\";\n        }\n\n        if (investmentAmount >= 100000) {\n            if (volatilityIndex > 5.0) {\n                return \"High Risk\";\n            } else {\n                if (sector.equals(\"Technology\") || sector.equals(\"Finance\")) {\n                    return \"Medium Risk\";\n                } else {\n                    return \"Low Risk\";\n                }\n            }\n        } else {\n            if (volatilityIndex > 5.0) {\n                return \"Medium Risk\";\n            } else {\n                return \"Low Risk\";\n            }\n        }\n    }\n\n    public static void main(String[] args) {\n        double investmentAmount = 150000;\n        double volatilityIndex = 4.5;\n        String sector = \"Health\";\n\n        String riskLevel = evaluateRiskLevel(investmentAmount, volatilityIndex, sector);\n        System.out.println(\"Investment Risk Level: \" + riskLevel);\n    }\n}\n```"
  },
  {
    "task": "Write a program that suggests a vacation destination based on budget and preferences.",
    "code": "```java\nimport java.util.Scanner;\n\npublic class VacationSuggester {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n\n        System.out.println(\"Enter your budget in USD: \");\n        double budget = scanner.nextDouble();\n        scanner.nextLine(); // Consume newline\n\n        System.out.println(\"Do you prefer adventure, relaxation, or culture? \");\n        String preference = scanner.nextLine().toLowerCase();\n\n        if (budget < 500) {\n            if (preference.equals(\"adventure\")) {\n                System.out.println(\"Suggested destination: Local hiking trails.\");\n            } else if (preference.equals(\"relaxation\")) {\n                System.out.println(\"Suggested destination: Nearby beach or spa.\");\n            } else if (preference.equals(\"culture\")) {\n                System.out.println(\"Suggested destination: City museum or art gallery.\");\n            } else {\n                System.out.println(\"Invalid preference. Please choose adventure, relaxation, or culture.\");\n            }\n        } else if (budget < 2000) {\n            if (preference.equals(\"adventure\")) {\n                System.out.println(\"Suggested destination: National park camping trip.\");\n            } else if (preference.equals(\"relaxation\")) {\n                System.out.println(\"Suggested destination: Weekend resort getaway.\");\n            } else if (preference.equals(\"culture\")) {\n                System.out.println(\"Suggested destination: Historical city tour.\");\n            } else {\n                System.out.println(\"Invalid preference. Please choose adventure, relaxation, or culture.\");\n            }\n        } else {\n            if (preference.equals(\"adventure\")) {\n                System.out.println(\"Suggested destination: Safari in Africa.\");\n            } else if (preference.equals(\"relaxation\")) {\n                System.out.println(\"Suggested destination: Luxury Caribbean cruise.\");\n            } else if (preference.equals(\"culture\")) {\n                System.out.println(\"Suggested destination: European cultural tour.\");\n            } else {\n                System.out.println(\"Invalid preference. Please choose adventure, relaxation, or culture.\");\n            }\n        }\n\n        scanner.close();\n    }\n}\n```"
  },
  {
    "task": "Create a routine that checks if a username is already taken in a database.",
    "code": "```java\nimport java.util.HashSet;\nimport java.util.Set;\n\npublic class UsernameChecker {\n\n    private Set<String> usernameDatabase;\n\n    public UsernameChecker() {\n        // Simulating a database with a HashSet\n        usernameDatabase = new HashSet<>();\n        usernameDatabase.add(\"user1\");\n        usernameDatabase.add(\"user2\");\n        usernameDatabase.add(\"user3\");\n    }\n\n    public boolean isUsernameTaken(String username) {\n        if (usernameDatabase.contains(username)) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    public static void main(String[] args) {\n        UsernameChecker checker = new UsernameChecker();\n        System.out.println(checker.isUsernameTaken(\"user1\")); // true\n        System.out.println(checker.isUsernameTaken(\"newUser\")); // false\n    }\n}\n```"
  },
  {
    "task": "Develop a function that determines if a string is a valid IPv4 address.",
    "code": "```java\npublic class IPAddressValidator {\n\n    public static boolean isValidIPv4(String ipAddress) {\n        if (ipAddress == null || ipAddress.isEmpty()) {\n            return false;\n        }\n        \n        String[] parts = ipAddress.split(\"\\\\.\");\n        if (parts.length != 4) {\n            return false;\n        }\n        \n        for (String part : parts) {\n            if (!isValidPart(part)) {\n                return false;\n            }\n        }\n        \n        return true;\n    }\n\n    private static boolean isValidPart(String part) {\n        try {\n            int number = Integer.parseInt(part);\n            if (number < 0 || number > 255) {\n                return false;\n            }\n            if (part.length() != String.valueOf(number).length()) {\n                return false;\n            }\n        } catch (NumberFormatException e) {\n            return false;\n        }\n        return true;\n    }\n\n    public static void main(String[] args) {\n        System.out.println(isValidIPv4(\"192.168.1.1\")); // true\n        System.out.println(isValidIPv4(\"256.256.256.256\")); // false\n        System.out.println(isValidIPv4(\"192.168.1\")); // false\n        System.out.println(isValidIPv4(\"192.168.1.a\")); // false\n    }\n}\n```"
  },
  {
    "task": "Implement a program to decide which transportation method is quickest based on distance.",
    "code": "```java\nimport java.util.Scanner;\n\npublic class TransportationDecision {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n\n        System.out.print(\"Enter the distance in kilometers: \");\n        double distance = scanner.nextDouble();\n\n        if (distance < 1) {\n            System.out.println(\"Walking is the quickest method.\");\n        } else if (distance < 5) {\n            System.out.println(\"Biking is the quickest method.\");\n        } else if (distance < 20) {\n            System.out.println(\"Driving is the quickest method.\");\n        } else {\n            System.out.println(\"Flying is the quickest method.\");\n        }\n\n        scanner.close();\n    }\n}\n```"
  },
  {
    "task": "Design a script to validate if a number is a prime number.",
    "code": "```java\npublic class PrimeChecker {\n    public static void main(String[] args) {\n        int number = 29; // Example number\n        boolean isPrime = true;\n\n        if (number <= 1) {\n            isPrime = false;\n        } else {\n            for (int i = 2; i <= Math.sqrt(number); i++) {\n                if (number % i == 0) {\n                    isPrime = false;\n                    break;\n                }\n            }\n        }\n\n        if (isPrime) {\n            System.out.println(number + \" is a prime number.\");\n        } else {\n            System.out.println(number + \" is not a prime number.\");\n        }\n    }\n}\n```"
  },
  {
    "task": "Write a function that checks if a number is divisible by another number without remainder.",
    "code": "```java\npublic class DivisibilityChecker {\n    public static boolean isDivisible(int number, int divisor) {\n        if (divisor == 0) {\n            throw new IllegalArgumentException(\"Divisor cannot be zero.\");\n        }\n        return number % divisor == 0;\n    }\n}\n```"
  },
  {
    "task": "Create a program that determines the type of a quadrilateral based on side lengths.",
    "code": "```java\nimport java.util.Scanner;\n\npublic class QuadrilateralType {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        \n        System.out.println(\"Enter the lengths of the four sides of the quadrilateral:\");\n        int side1 = scanner.nextInt();\n        int side2 = scanner.nextInt();\n        int side3 = scanner.nextInt();\n        int side4 = scanner.nextInt();\n        \n        if (side1 == side2 && side2 == side3 && side3 == side4) {\n            System.out.println(\"The quadrilateral is a square.\");\n        } else if (side1 == side3 && side2 == side4) {\n            System.out.println(\"The quadrilateral is a rectangle.\");\n        } else if (side1 == side2 && side3 == side4) {\n            System.out.println(\"The quadrilateral is a rhombus.\");\n        } else {\n            System.out.println(\"The quadrilateral is an irregular quadrilateral.\");\n        }\n        \n        scanner.close();\n    }\n}\n```"
  },
  {
    "task": "Develop a routine to check if a sentence contains all letters of the alphabet.",
    "code": "```java\nimport java.util.HashSet;\nimport java.util.Set;\n\npublic class PangramChecker {\n    public static boolean isPangram(String sentence) {\n        String lowerSentence = sentence.toLowerCase();\n        Set<Character> alphabetSet = new HashSet<>();\n\n        for (char c : lowerSentence.toCharArray()) {\n            if (c >= 'a' && c <= 'z') {\n                alphabetSet.add(c);\n            }\n        }\n\n        return alphabetSet.size() == 26;\n    }\n\n    public static void main(String[] args) {\n        String sentence = \"The quick brown fox jumps over the lazy dog\";\n        boolean result = isPangram(sentence);\n        System.out.println(\"Is the sentence a pangram? \" + result);\n    }\n}\n```"
  },
  {
    "task": "Implement a program that outputs the appropriate error message based on an error code.",
    "code": "```java\npublic class ErrorCodeHandler {\n    public static void main(String[] args) {\n        int errorCode = 404; // Example error code\n        \n        String errorMessage = getErrorMessage(errorCode);\n        System.out.println(errorMessage);\n    }\n    \n    public static String getErrorMessage(int errorCode) {\n        switch (errorCode) {\n            case 400:\n                return \"Bad Request\";\n            case 401:\n                return \"Unauthorized\";\n            case 403:\n                return \"Forbidden\";\n            case 404:\n                return \"Not Found\";\n            case 500:\n                return \"Internal Server Error\";\n            default:\n                return \"Unknown Error\";\n        }\n    }\n}\n```"
  },
  {
    "task": "Design a function that categorizes a movie rating as G, PG, PG-13, or R.",
    "code": "```java\npublic class MovieRatingCategorizer {\n\n    public static String categorizeRating(int age) {\n        if (age >= 0 && age <= 12) {\n            return \"G\";\n        } else if (age >= 13 && age <= 16) {\n            return \"PG\";\n        } else if (age >= 17 && age <= 18) {\n            return \"PG-13\";\n        } else if (age > 18) {\n            return \"R\";\n        } else {\n            return \"Invalid age\";\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(categorizeRating(10)); // G\n        System.out.println(categorizeRating(15)); // PG\n        System.out.println(categorizeRating(17)); // PG-13\n        System.out.println(categorizeRating(20)); // R\n        System.out.println(categorizeRating(-1)); // Invalid age\n    }\n}\n```"
  },
  {
    "task": "Write a script to check if a string is a valid Roman numeral.",
    "code": "```java\npublic class RomanNumeralValidator {\n    public static boolean isValidRomanNumeral(String s) {\n        if (s == null || s.isEmpty()) return false;\n        String romanNumeralPattern = \"^M{0,4}(CM|CD|D?C{0,3})(XC|XL|L?X{0,3})(IX|IV|V?I{0,3})$\";\n        return s.matches(romanNumeralPattern);\n    }\n\n    public static void main(String[] args) {\n        String[] testCases = {\"XII\", \"IV\", \"MMXXIII\", \"IC\", \"IIII\", \"\"};\n        for (String testCase : testCases) {\n            System.out.println(\"Is \\\"\" + testCase + \"\\\" a valid Roman numeral? \" + isValidRomanNumeral(testCase));\n        }\n    }\n}\n```"
  },
  {
    "task": "Create a routine that decides if a person can retire based on age and years worked.",
    "code": "```java\npublic class RetirementChecker {\n    public static boolean canRetire(int age, int yearsWorked) {\n        if (age >= 65 || yearsWorked >= 30) {\n            return true;\n        } else if (age >= 60 && yearsWorked >= 25) {\n            return true;\n        }\n        return false;\n    }\n\n    public static void main(String[] args) {\n        int age = 62; // Example age\n        int yearsWorked = 26; // Example years worked\n\n        if (canRetire(age, yearsWorked)) {\n            System.out.println(\"The person can retire.\");\n        } else {\n            System.out.println(\"The person cannot retire yet.\");\n        }\n    }\n}\n```"
  },
  {
    "task": "Develop a function that outputs a different emoji based on user mood input.",
    "code": "```java\npublic class EmojiSelector {\n\n    public static String getEmoji(String mood) {\n        if (mood == null) {\n            return \"\ud83e\udd37\"; // shrug emoji for unknown mood\n        }\n        switch (mood.toLowerCase()) {\n            case \"happy\":\n                return \"\ud83d\ude0a\";\n            case \"sad\":\n                return \"\ud83d\ude22\";\n            case \"angry\":\n                return \"\ud83d\ude20\";\n            case \"excited\":\n                return \"\ud83d\ude06\";\n            case \"bored\":\n                return \"\ud83d\ude10\";\n            default:\n                return \"\ud83e\udd37\"; // shrug emoji for unrecognized mood\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(getEmoji(\"happy\"));    // Output: \ud83d\ude0a\n        System.out.println(getEmoji(\"sad\"));      // Output: \ud83d\ude22\n        System.out.println(getEmoji(\"angry\"));    // Output: \ud83d\ude20\n        System.out.println(getEmoji(\"excited\"));  // Output: \ud83d\ude06\n        System.out.println(getEmoji(\"bored\"));    // Output: \ud83d\ude10\n        System.out.println(getEmoji(\"confused\")); // Output: \ud83e\udd37\n    }\n}\n```"
  },
  {
    "task": "Implement a program that checks if a password meets security requirements.",
    "code": "```java\nimport java.util.Scanner;\n\npublic class PasswordChecker {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        System.out.print(\"Enter your password: \");\n        String password = scanner.nextLine();\n        \n        if (isSecurePassword(password)) {\n            System.out.println(\"Password is secure.\");\n        } else {\n            System.out.println(\"Password is not secure.\");\n        }\n        \n        scanner.close();\n    }\n    \n    private static boolean isSecurePassword(String password) {\n        if (password.length() < 8) {\n            return false;\n        }\n        \n        boolean hasUpperCase = false;\n        boolean hasLowerCase = false;\n        boolean hasDigit = false;\n        boolean hasSpecialChar = false;\n        \n        for (char c : password.toCharArray()) {\n            if (Character.isUpperCase(c)) {\n                hasUpperCase = true;\n            } else if (Character.isLowerCase(c)) {\n                hasLowerCase = true;\n            } else if (Character.isDigit(c)) {\n                hasDigit = true;\n            } else if (!Character.isLetterOrDigit(c)) {\n                hasSpecialChar = true;\n            }\n        }\n        \n        return hasUpperCase && hasLowerCase && hasDigit && hasSpecialChar;\n    }\n}\n```"
  },
  {
    "task": "Design a script to determine if a number is a palindrome when reversed.",
    "code": "```java\npublic class PalindromeChecker {\n    public static void main(String[] args) {\n        int number = 12321; // Example number\n        if (isPalindrome(number)) {\n            System.out.println(number + \" is a palindrome.\");\n        } else {\n            System.out.println(number + \" is not a palindrome.\");\n        }\n    }\n\n    public static boolean isPalindrome(int number) {\n        int reversed = 0, original = number;\n        while (number != 0) {\n            int digit = number % 10;\n            reversed = reversed * 10 + digit;\n            number /= 10;\n        }\n        return original == reversed;\n    }\n}\n```"
  },
  {
    "task": "Write a function that evaluates if a given day is a holiday.",
    "code": "```java\nimport java.util.Set;\nimport java.util.HashSet;\n\npublic class HolidayChecker {\n    private static final Set<String> holidays = new HashSet<>();\n\n    static {\n        holidays.add(\"New Year's Day\");\n        holidays.add(\"Independence Day\");\n        holidays.add(\"Christmas Day\");\n        // Add other holidays as needed\n    }\n\n    public static boolean isHoliday(String day) {\n        return holidays.contains(day);\n    }\n\n    public static void main(String[] args) {\n        System.out.println(isHoliday(\"New Year's Day\")); // true\n        System.out.println(isHoliday(\"Easter\")); // false\n    }\n}\n```"
  },
  {
    "task": "Create a program to decide if a library book is overdue based on the due date.",
    "code": "```java\nimport java.time.LocalDate;\nimport java.time.format.DateTimeFormatter;\nimport java.util.Scanner;\n\npublic class LibraryBookChecker {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        DateTimeFormatter formatter = DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");\n        \n        System.out.println(\"Enter the due date of the book (yyyy-MM-dd):\");\n        String dueDateInput = scanner.nextLine();\n        LocalDate dueDate = LocalDate.parse(dueDateInput, formatter);\n        \n        LocalDate currentDate = LocalDate.now();\n        \n        if (currentDate.isAfter(dueDate)) {\n            System.out.println(\"The book is overdue.\");\n        } else {\n            System.out.println(\"The book is not overdue.\");\n        }\n        \n        scanner.close();\n    }\n}\n```"
  },
  {
    "task": "Develop a routine that checks if a given year is part of a leap century.",
    "code": "```java\npublic class LeapCenturyChecker {\n\n    public static boolean isLeapCentury(int year) {\n        if (year % 100 == 0) {\n            if (year % 400 == 0) {\n                return true;\n            } else {\n                return false;\n            }\n        }\n        return false;\n    }\n\n    public static void main(String[] args) {\n        int year = 2000;\n        if (isLeapCentury(year)) {\n            System.out.println(year + \" is a leap century.\");\n        } else {\n            System.out.println(year + \" is not a leap century.\");\n        }\n    }\n}\n```"
  },
  {
    "task": "Implement a system to determine the correct category for a product based on user input.",
    "code": "```java\nimport java.util.Scanner;\n\npublic class ProductCategory {\n\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        System.out.println(\"Enter the product type (electronics, clothing, food): \");\n        String productType = scanner.nextLine().toLowerCase();\n\n        String category = determineCategory(productType);\n        if (category != null) {\n            System.out.println(\"The product category is: \" + category);\n        } else {\n            System.out.println(\"Unknown product type.\");\n        }\n    }\n\n    public static String determineCategory(String productType) {\n        if (\"electronics\".equals(productType)) {\n            return \"Technology\";\n        } else if (\"clothing\".equals(productType)) {\n            return \"Apparel\";\n        } else if (\"food\".equals(productType)) {\n            return \"Grocery\";\n        } else {\n            return null;\n        }\n    }\n}\n```"
  }
]