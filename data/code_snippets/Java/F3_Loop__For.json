[
  {
    "task": "Write a program that prints numbers from 1 to 10 using a for loop.",
    "code": "```java\npublic class Main {\n    public static void main(String[] args) {\n        for (int i = 1; i <= 10; i++) {\n            System.out.println(i);\n        }\n    }\n}\n```"
  },
  {
    "task": "Create a loop that iterates over an array of names and prints each name.",
    "code": "```java\npublic class NamePrinter {\n    public static void main(String[] args) {\n        String[] names = {\"Alice\", \"Bob\", \"Charlie\", \"Diana\"};\n        for (String name : names) {\n            System.out.println(name);\n        }\n    }\n}\n```"
  },
  {
    "task": "Design a for loop to calculate the factorial of a given number.",
    "code": "```java\npublic class FactorialCalculator {\n    public static void main(String[] args) {\n        int number = 5; // Example number\n        int factorial = 1;\n        \n        for (int i = 1; i <= number; i++) {\n            factorial *= i;\n        }\n        \n        System.out.println(\"Factorial of \" + number + \" is \" + factorial);\n    }\n}\n```"
  },
  {
    "task": "Implement a program that uses a for loop to sum all even numbers between 1 and 100.",
    "code": "```java\npublic class SumEvenNumbers {\n    public static void main(String[] args) {\n        int sum = 0;\n        for (int i = 2; i <= 100; i += 2) {\n            sum += i;\n        }\n        System.out.println(\"Sum of even numbers between 1 and 100: \" + sum);\n    }\n}\n```"
  },
  {
    "task": "Use a for loop to generate and print the Fibonacci sequence up to 20 terms.",
    "code": "```java\npublic class FibonacciSequence {\n    public static void main(String[] args) {\n        int n = 20;\n        int firstTerm = 0, secondTerm = 1;\n        \n        for (int i = 1; i <= n; ++i) {\n            System.out.print(firstTerm + \" \");\n            \n            int nextTerm = firstTerm + secondTerm;\n            firstTerm = secondTerm;\n            secondTerm = nextTerm;\n        }\n    }\n}\n```"
  },
  {
    "task": "Construct a for loop that prints the multiplication table for a given number.",
    "code": "```java\npublic class MultiplicationTable {\n    public static void main(String[] args) {\n        int number = 5; // Example number for which to print the table\n        for (int i = 1; i <= 10; i++) {\n            System.out.println(number + \" * \" + i + \" = \" + (number * i));\n        }\n    }\n}\n```"
  },
  {
    "task": "Write code to iterate through a list of student grades and print only those above a certain threshold.",
    "code": "```java\nimport java.util.List;\n\npublic class StudentGrades {\n    public static void main(String[] args) {\n        List<Integer> grades = List.of(85, 72, 90, 67, 88);\n        int threshold = 80;\n        \n        for (int grade : grades) {\n            if (grade > threshold) {\n                System.out.println(grade);\n            }\n        }\n    }\n}\n```"
  },
  {
    "task": "Create a for loop that appends the square of numbers 1 to 10 to a list.",
    "code": "```java\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class SquareNumbers {\n    public static void main(String[] args) {\n        List<Integer> squareNumbers = new ArrayList<>();\n        for (int i = 1; i <= 10; i++) {\n            squareNumbers.add(i * i);\n        }\n        \n        // Output the list to verify the result\n        System.out.println(squareNumbers);\n    }\n}\n```"
  },
  {
    "task": "Develop a for loop that reverses a given string.",
    "code": "```java\npublic class ReverseString {\n    public static void main(String[] args) {\n        String original = \"example\";\n        String reversed = \"\";\n\n        for (int i = original.length() - 1; i >= 0; i--) {\n            reversed += original.charAt(i);\n        }\n\n        System.out.println(\"Reversed string: \" + reversed);\n    }\n}\n```"
  },
  {
    "task": "Build a program that uses a for loop to print all elements in a 2D matrix.",
    "code": "```java\npublic class MatrixPrinter {\n    public static void main(String[] args) {\n        int[][] matrix = {\n            {1, 2, 3},\n            {4, 5, 6},\n            {7, 8, 9}\n        };\n        \n        for (int i = 0; i < matrix.length; i++) {\n            for (int j = 0; j < matrix[i].length; j++) {\n                System.out.print(matrix[i][j] + \" \");\n            }\n            System.out.println();\n        }\n    }\n}\n```"
  },
  {
    "task": "Use a for loop to find the maximum value in an array of integers.",
    "code": "```java\npublic class FindMax {\n    public static void main(String[] args) {\n        int[] numbers = {3, 5, 7, 2, 8, -1, 4, 10, 12};\n        int max = numbers[0];\n        \n        for (int i = 1; i < numbers.length; i++) {\n            if (numbers[i] > max) {\n                max = numbers[i];\n            }\n        }\n        \n        System.out.println(\"Maximum value: \" + max);\n    }\n}\n```"
  },
  {
    "task": "Write a program that uses a for loop to print the characters of a string, one per line.",
    "code": "```java\npublic class PrintCharacters {\n    public static void main(String[] args) {\n        String input = \"YourStringHere\";\n        for (int i = 0; i < input.length(); i++) {\n            System.out.println(input.charAt(i));\n        }\n    }\n}\n```"
  },
  {
    "task": "Create a for loop that counts the number of vowels in a given sentence.",
    "code": "```java\npublic class VowelCounter {\n    public static void main(String[] args) {\n        String sentence = \"This is a sample sentence.\";\n        int vowelCount = 0;\n        String vowels = \"aeiouAEIOU\";\n\n        for (int i = 0; i < sentence.length(); i++) {\n            char currentChar = sentence.charAt(i);\n            if (vowels.indexOf(currentChar) != -1) {\n                vowelCount++;\n            }\n        }\n\n        System.out.println(\"Number of vowels: \" + vowelCount);\n    }\n}\n```"
  },
  {
    "task": "Implement a for loop to check if a number is prime by testing divisibility.",
    "code": "```java\npublic class PrimeChecker {\n    public static boolean isPrime(int number) {\n        if (number <= 1) {\n            return false;\n        }\n        for (int i = 2; i <= Math.sqrt(number); i++) {\n            if (number % i == 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    public static void main(String[] args) {\n        int number = 29; // Example number\n        boolean result = isPrime(number);\n        System.out.println(number + \" is prime: \" + result);\n    }\n}\n```"
  },
  {
    "task": "Design a for loop that prints a pyramid pattern of asterisks with a given height.",
    "code": "```java\npublic class PyramidPattern {\n    public static void main(String[] args) {\n        int height = 5; // You can change this to any height you desire\n        for (int i = 1; i <= height; i++) {\n            for (int j = i; j < height; j++) {\n                System.out.print(\" \");\n            }\n            for (int k = 1; k <= (2 * i - 1); k++) {\n                System.out.print(\"*\");\n            }\n            System.out.println();\n        }\n    }\n}\n```"
  },
  {
    "task": "Write a program that uses a for loop to calculate the sum of digits of a number.",
    "code": "```java\npublic class SumOfDigits {\n    public static void main(String[] args) {\n        int number = 12345; // Example number\n        int sum = 0;\n\n        for (int n = number; n > 0; n /= 10) {\n            sum += n % 10;\n        }\n\n        System.out.println(\"Sum of digits: \" + sum);\n    }\n}\n```"
  },
  {
    "task": "Construct a for loop to flatten a list of lists into a single list.",
    "code": "```java\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class FlattenList {\n    public static void main(String[] args) {\n        List<List<Integer>> listOfLists = new ArrayList<>();\n        listOfLists.add(List.of(1, 2, 3));\n        listOfLists.add(List.of(4, 5));\n        listOfLists.add(List.of(6, 7, 8, 9));\n\n        List<Integer> flattenedList = new ArrayList<>();\n        for (List<Integer> sublist : listOfLists) {\n            for (Integer number : sublist) {\n                flattenedList.add(number);\n            }\n        }\n\n        System.out.println(flattenedList);\n    }\n}\n```"
  },
  {
    "task": "Use a for loop to generate a list of random numbers and print them.",
    "code": "```java\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.util.Random;\n\npublic class RandomNumberGenerator {\n    public static void main(String[] args) {\n        List<Integer> randomNumbers = new ArrayList<>();\n        Random random = new Random();\n        \n        for (int i = 0; i < 10; i++) {\n            int randomNumber = random.nextInt(100);\n            randomNumbers.add(randomNumber);\n        }\n        \n        for (int number : randomNumbers) {\n            System.out.println(number);\n        }\n    }\n}\n```"
  },
  {
    "task": "Create a for loop that iterates through a dictionary and prints its keys and values.",
    "code": "```java\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n    public static void main(String[] args) {\n        Map<String, String> dictionary = new HashMap<>();\n        dictionary.put(\"key1\", \"value1\");\n        dictionary.put(\"key2\", \"value2\");\n        dictionary.put(\"key3\", \"value3\");\n\n        for (Map.Entry<String, String> entry : dictionary.entrySet()) {\n            System.out.println(\"Key: \" + entry.getKey() + \", Value: \" + entry.getValue());\n        }\n    }\n}\n```"
  },
  {
    "task": "Develop a for loop that counts down from 10 to 1 and prints each number.",
    "code": "```java\npublic class Countdown {\n    public static void main(String[] args) {\n        for (int i = 10; i >= 1; i--) {\n            System.out.println(i);\n        }\n    }\n}\n```"
  },
  {
    "task": "Write code to multiply each element in an array by 2 using a for loop.",
    "code": "```java\npublic class MultiplyArray {\n    public static void main(String[] args) {\n        int[] array = {1, 2, 3, 4, 5};\n        \n        for (int i = 0; i < array.length; i++) {\n            array[i] *= 2;\n        }\n        \n        for (int num : array) {\n            System.out.println(num);\n        }\n    }\n}\n```"
  },
  {
    "task": "Create a for loop that calculates the average of numbers in a list.",
    "code": "```java\nimport java.util.List;\n\npublic class AverageCalculator {\n    public static double calculateAverage(List<Integer> numbers) {\n        int sum = 0;\n        for (int number : numbers) {\n            sum += number;\n        }\n        return sum / (double) numbers.size();\n    }\n\n    public static void main(String[] args) {\n        List<Integer> numbers = List.of(10, 20, 30, 40, 50);\n        double average = calculateAverage(numbers);\n        System.out.println(\"Average: \" + average);\n    }\n}\n```"
  },
  {
    "task": "Implement a for loop to find duplicate elements in an array.",
    "code": "```java\npublic class DuplicateFinder {\n    public static void main(String[] args) {\n        int[] array = {1, 2, 3, 4, 5, 3, 2, 6};\n        findDuplicates(array);\n    }\n\n    public static void findDuplicates(int[] array) {\n        for (int i = 0; i < array.length; i++) {\n            for (int j = i + 1; j < array.length; j++) {\n                if (array[i] == array[j]) {\n                    System.out.println(\"Duplicate element found: \" + array[i]);\n                }\n            }\n        }\n    }\n}\n```"
  },
  {
    "task": "Design a for loop that removes all occurrences of a specific element from a list.",
    "code": "```java\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class RemoveElement {\n    public static void main(String[] args) {\n        List<Integer> list = new ArrayList<>();\n        list.add(1);\n        list.add(2);\n        list.add(3);\n        list.add(2);\n        list.add(4);\n\n        int elementToRemove = 2;\n        List<Integer> resultList = new ArrayList<>();\n\n        for (int i = 0; i < list.size(); i++) {\n            if (list.get(i) != elementToRemove) {\n                resultList.add(list.get(i));\n            }\n        }\n\n        list = resultList;\n\n        System.out.println(list);\n    }\n}\n```"
  },
  {
    "task": "Use a for loop to simulate rolling a dice 100 times and count the occurrences of each face.",
    "code": "```java\nimport java.util.Random;\n\npublic class DiceRollSimulation {\n    public static void main(String[] args) {\n        int[] faceCount = new int[6];\n        Random random = new Random();\n\n        for (int i = 0; i < 100; i++) {\n            int roll = random.nextInt(6) + 1;\n            faceCount[roll - 1]++;\n        }\n\n        for (int i = 0; i < faceCount.length; i++) {\n            System.out.println(\"Face \" + (i + 1) + \": \" + faceCount[i] + \" times\");\n        }\n    }\n}\n```"
  },
  {
    "task": "Write a for loop that prints all the prime numbers between 1 and 50.",
    "code": "```java\npublic class PrimeNumbers {\n    public static void main(String[] args) {\n        for (int number = 2; number <= 50; number++) {\n            boolean isPrime = true;\n            for (int i = 2; i <= Math.sqrt(number); i++) {\n                if (number % i == 0) {\n                    isPrime = false;\n                    break;\n                }\n            }\n            if (isPrime) {\n                System.out.println(number);\n            }\n        }\n    }\n}\n```"
  },
  {
    "task": "Develop a for loop that extracts all the uppercase letters from a string.",
    "code": "```java\npublic class ExtractUppercase {\n    public static void main(String[] args) {\n        String input = \"Example String With Uppercase Letters\";\n        StringBuilder uppercaseLetters = new StringBuilder();\n\n        for (int i = 0; i < input.length(); i++) {\n            char currentChar = input.charAt(i);\n            if (Character.isUpperCase(currentChar)) {\n                uppercaseLetters.append(currentChar);\n            }\n        }\n\n        System.out.println(uppercaseLetters.toString());\n    }\n}\n```"
  },
  {
    "task": "Create a for loop that checks if a list is sorted in ascending order.",
    "code": "```java\nimport java.util.List;\n\npublic class CheckSorted {\n    public static boolean isSorted(List<Integer> list) {\n        for (int i = 0; i < list.size() - 1; i++) {\n            if (list.get(i) > list.get(i + 1)) {\n                return false;\n            }\n        }\n        return true;\n    }\n}\n```"
  },
  {
    "task": "Implement a for loop to generate a list of the first 10 square numbers.",
    "code": "```java\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class SquareNumbers {\n    public static void main(String[] args) {\n        List<Integer> squareNumbers = new ArrayList<>();\n        for (int i = 1; i <= 10; i++) {\n            squareNumbers.add(i * i);\n        }\n        System.out.println(squareNumbers);\n    }\n}\n```"
  },
  {
    "task": "Write code to print all the elements of a list that are greater than a given number using a for loop.",
    "code": "```java\nimport java.util.List;\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        List<Integer> numbers = new ArrayList<>();\n        numbers.add(1);\n        numbers.add(5);\n        numbers.add(8);\n        numbers.add(10);\n        numbers.add(3);\n\n        int threshold = 5;\n\n        for (int number : numbers) {\n            if (number > threshold) {\n                System.out.println(number);\n            }\n        }\n    }\n}\n```"
  },
  {
    "task": "Construct a for loop that finds the smallest number in an array.",
    "code": "```java\npublic class SmallestNumberFinder {\n    public static void main(String[] args) {\n        int[] numbers = {34, 23, 15, 64, 12, 89, 1, 44};\n        int smallest = numbers[0];\n        \n        for (int i = 1; i < numbers.length; i++) {\n            if (numbers[i] < smallest) {\n                smallest = numbers[i];\n            }\n        }\n        \n        System.out.println(\"The smallest number is: \" + smallest);\n    }\n}\n```"
  },
  {
    "task": "Develop a for loop that prints the first N lines of Pascal's Triangle.",
    "code": "```java\npublic class PascalsTriangle {\n    public static void main(String[] args) {\n        int N = 5; // Specify the number of lines to print\n        for (int line = 0; line < N; line++) {\n            int number = 1;\n            for (int i = 0; i <= line; i++) {\n                System.out.print(number + \" \");\n                number = number * (line - i) / (i + 1);\n            }\n            System.out.println();\n        }\n    }\n}\n```"
  },
  {
    "task": "Create a for loop that calculates the product of all elements in a list.",
    "code": "```java\nimport java.util.List;\n\npublic class ProductCalculator {\n    public static int calculateProduct(List<Integer> numbers) {\n        int product = 1;\n        for (int number : numbers) {\n            product *= number;\n        }\n        return product;\n    }\n}\n```"
  },
  {
    "task": "Use a for loop to print numbers from 1 to 100, but replace multiples of 3 with 'Fizz'.",
    "code": "```java\npublic class FizzPrinter {\n    public static void main(String[] args) {\n        for (int i = 1; i <= 100; i++) {\n            if (i % 3 == 0) {\n                System.out.println(\"Fizz\");\n            } else {\n                System.out.println(i);\n            }\n        }\n    }\n}\n```"
  },
  {
    "task": "Write a for loop that iterates over a string and counts the number of words.",
    "code": "```java\npublic class WordCounter {\n    public static void main(String[] args) {\n        String input = \"This is a sample string with several words\";\n        int wordCount = 0;\n        boolean inWord = false;\n\n        for (int i = 0; i < input.length(); i++) {\n            char c = input.charAt(i);\n            if (Character.isLetterOrDigit(c)) {\n                if (!inWord) {\n                    wordCount++;\n                    inWord = true;\n                }\n            } else {\n                inWord = false;\n            }\n        }\n\n        System.out.println(\"Number of words: \" + wordCount);\n    }\n}\n```"
  },
  {
    "task": "Design a for loop that prints numbers from 1 to 50, but skips numbers divisible by 5.",
    "code": "```java\npublic class Main {\n    public static void main(String[] args) {\n        for (int i = 1; i <= 50; i++) {\n            if (i % 5 == 0) {\n                continue;\n            }\n            System.out.println(i);\n        }\n    }\n}\n```"
  },
  {
    "task": "Implement a for loop that prints a checkerboard pattern of asterisks.",
    "code": "```java\npublic class CheckerboardPattern {\n    public static void main(String[] args) {\n        int size = 8; // Size of the checkerboard\n        for (int i = 0; i < size; i++) {\n            for (int j = 0; j < size; j++) {\n                if ((i + j) % 2 == 0) {\n                    System.out.print(\"*\");\n                } else {\n                    System.out.print(\" \");\n                }\n            }\n            System.out.println();\n        }\n    }\n}\n```"
  },
  {
    "task": "Create a for loop that finds the index of a target value in a list.",
    "code": "```java\npublic class Main {\n    public static void main(String[] args) {\n        int[] list = {1, 2, 3, 4, 5};\n        int target = 3;\n        int index = -1; // Default value if target is not found\n\n        for (int i = 0; i < list.length; i++) {\n            if (list[i] == target) {\n                index = i;\n                break;\n            }\n        }\n\n        System.out.println(\"Index of target: \" + index);\n    }\n}\n```"
  },
  {
    "task": "Use a for loop to concatenate a list of strings into a single string.",
    "code": "```java\nimport java.util.List;\n\npublic class ConcatenateStrings {\n    public static String concatenate(List<String> strings) {\n        StringBuilder result = new StringBuilder();\n        for (String str : strings) {\n            result.append(str);\n        }\n        return result.toString();\n    }\n\n    public static void main(String[] args) {\n        List<String> strings = List.of(\"Hello\", \" \", \"World\", \"!\");\n        String concatenated = concatenate(strings);\n        System.out.println(concatenated);\n    }\n}\n```"
  },
  {
    "task": "Develop a for loop that rotates a list to the right by a given number of positions.",
    "code": "```java\nimport java.util.Arrays;\nimport java.util.List;\nimport java.util.ArrayList;\n\npublic class RotateList {\n    public static List<Integer> rotateRight(List<Integer> list, int positions) {\n        int size = list.size();\n        List<Integer> rotatedList = new ArrayList<>(list);\n        \n        for (int i = 0; i < size; i++) {\n            rotatedList.set((i + positions) % size, list.get(i));\n        }\n        \n        return rotatedList;\n    }\n\n    public static void main(String[] args) {\n        List<Integer> list = Arrays.asList(1, 2, 3, 4, 5);\n        int positions = 2;\n        List<Integer> rotatedList = rotateRight(list, positions);\n        System.out.println(rotatedList);\n    }\n}\n```"
  },
  {
    "task": "Write code that uses a for loop to insert an element into a sorted list while maintaining order.",
    "code": "```java\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class InsertIntoSortedList {\n    public static void main(String[] args) {\n        List<Integer> sortedList = new ArrayList<>();\n        sortedList.add(1);\n        sortedList.add(3);\n        sortedList.add(5);\n        sortedList.add(7);\n\n        int elementToInsert = 4;\n        insertIntoSortedList(sortedList, elementToInsert);\n\n        for (int num : sortedList) {\n            System.out.println(num);\n        }\n    }\n\n    public static void insertIntoSortedList(List<Integer> sortedList, int element) {\n        for (int i = 0; i < sortedList.size(); i++) {\n            if (element < sortedList.get(i)) {\n                sortedList.add(i, element);\n                return;\n            }\n        }\n        sortedList.add(element);\n    }\n}\n```"
  },
  {
    "task": "Implement a for loop that counts the frequency of each character in a string.",
    "code": "```java\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class CharacterFrequencyCounter {\n    public static void main(String[] args) {\n        String input = \"example string\";\n        Map<Character, Integer> frequencyMap = new HashMap<>();\n\n        for (int i = 0; i < input.length(); i++) {\n            char currentChar = input.charAt(i);\n            frequencyMap.put(currentChar, frequencyMap.getOrDefault(currentChar, 0) + 1);\n        }\n\n        for (Map.Entry<Character, Integer> entry : frequencyMap.entrySet()) {\n            System.out.println(entry.getKey() + \": \" + entry.getValue());\n        }\n    }\n}\n```"
  },
  {
    "task": "Create a for loop that prints all subsets of a given set.",
    "code": "```java\nimport java.util.HashSet;\nimport java.util.Set;\n\npublic class Subsets {\n\n    public static void main(String[] args) {\n        Set<Integer> set = new HashSet<>();\n        set.add(1);\n        set.add(2);\n        set.add(3);\n        \n        printSubsets(set);\n    }\n\n    public static void printSubsets(Set<Integer> set) {\n        Integer[] elements = set.toArray(new Integer[0]);\n        int n = elements.length;\n        \n        for (int i = 0; i < (1 << n); i++) {\n            System.out.print(\"{ \");\n            for (int j = 0; j < n; j++) {\n                if ((i & (1 << j)) > 0) {\n                    System.out.print(elements[j] + \" \");\n                }\n            }\n            System.out.println(\"}\");\n        }\n    }\n}\n```"
  },
  {
    "task": "Design a for loop to generate all permutations of a string.",
    "code": "```java\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class Permutations {\n\n    public static List<String> generatePermutations(String str) {\n        List<String> permutations = new ArrayList<>();\n        permute(str, 0, str.length() - 1, permutations);\n        return permutations;\n    }\n\n    private static void permute(String str, int l, int r, List<String> permutations) {\n        if (l == r) {\n            permutations.add(str);\n        } else {\n            for (int i = l; i <= r; i++) {\n                str = swap(str, l, i);\n                permute(str, l + 1, r, permutations);\n                str = swap(str, l, i);\n            }\n        }\n    }\n\n    private static String swap(String str, int i, int j) {\n        char[] charArray = str.toCharArray();\n        char temp = charArray[i];\n        charArray[i] = charArray[j];\n        charArray[j] = temp;\n        return String.valueOf(charArray);\n    }\n\n    public static void main(String[] args) {\n        String s = \"abc\";\n        List<String> permutations = generatePermutations(s);\n        for (String perm : permutations) {\n            System.out.println(perm);\n        }\n    }\n}\n```"
  },
  {
    "task": "Write a for loop that sorts an array in descending order.",
    "code": "```java\nimport java.util.Arrays;\n\npublic class SortDescending {\n    public static void main(String[] args) {\n        int[] array = {5, 3, 8, 6, 2, 7, 4, 1};\n        \n        for (int i = 0; i < array.length - 1; i++) {\n            for (int j = 0; j < array.length - i - 1; j++) {\n                if (array[j] < array[j + 1]) {\n                    int temp = array[j];\n                    array[j] = array[j + 1];\n                    array[j + 1] = temp;\n                }\n            }\n        }\n        \n        System.out.println(Arrays.toString(array));\n    }\n}\n```"
  },
  {
    "task": "Use a for loop to generate a sequence of random characters and print them.",
    "code": "```java\nimport java.util.Random;\n\npublic class RandomCharacterSequence {\n    public static void main(String[] args) {\n        Random random = new Random();\n        int sequenceLength = 10; // Define the length of the sequence\n\n        for (int i = 0; i < sequenceLength; i++) {\n            char randomChar = (char) (random.nextInt(26) + 'a'); // Generate a random lowercase letter\n            System.out.print(randomChar);\n        }\n    }\n}\n```"
  },
  {
    "task": "Construct a for loop that finds the common elements between two lists.",
    "code": "```java\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class CommonElementsFinder {\n    public static void main(String[] args) {\n        List<Integer> list1 = List.of(1, 2, 3, 4, 5);\n        List<Integer> list2 = List.of(4, 5, 6, 7, 8);\n        \n        List<Integer> commonElements = new ArrayList<>();\n        \n        for (int i = 0; i < list1.size(); i++) {\n            for (int j = 0; j < list2.size(); j++) {\n                if (list1.get(i).equals(list2.get(j))) {\n                    commonElements.add(list1.get(i));\n                }\n            }\n        }\n        \n        System.out.println(\"Common elements: \" + commonElements);\n    }\n}\n```"
  },
  {
    "task": "Develop a for loop to calculate and print the cumulative sum of a list.",
    "code": "```java\nimport java.util.Arrays;\nimport java.util.List;\n\npublic class CumulativeSum {\n    public static void main(String[] args) {\n        List<Integer> numbers = Arrays.asList(1, 2, 3, 4, 5); // Example list\n        int cumulativeSum = 0;\n        \n        for (int number : numbers) {\n            cumulativeSum += number;\n            System.out.println(cumulativeSum);\n        }\n    }\n}\n```"
  },
  {
    "task": "Create a for loop that prints a diamond pattern using asterisks.",
    "code": "```java\npublic class DiamondPattern {\n    public static void main(String[] args) {\n        int n = 5; // Total number of rows in the upper half of the diamond\n\n        // Upper half of the diamond\n        for (int i = 1; i <= n; i++) {\n            for (int j = i; j < n; j++) {\n                System.out.print(\" \");\n            }\n            for (int k = 1; k <= (2 * i - 1); k++) {\n                System.out.print(\"*\");\n            }\n            System.out.println();\n        }\n\n        // Lower half of the diamond\n        for (int i = n - 1; i >= 1; i--) {\n            for (int j = n; j > i; j--) {\n                System.out.print(\" \");\n            }\n            for (int k = 1; k <= (2 * i - 1); k++) {\n                System.out.print(\"*\");\n            }\n            System.out.println();\n        }\n    }\n}\n```"
  },
  {
    "task": "Write a for loop that simulates a countdown timer from a specified number of seconds.",
    "code": "```java\npublic class CountdownTimer {\n    public static void main(String[] args) {\n        int seconds = 10; // specify the number of seconds for the countdown\n        for (int i = seconds; i >= 0; i--) {\n            System.out.println(i);\n        }\n    }\n}\n```"
  },
  {
    "task": "Use a for loop to print the transpose of a matrix.",
    "code": "```java\npublic class MatrixTranspose {\n    public static void main(String[] args) {\n        int[][] matrix = {\n            {1, 2, 3},\n            {4, 5, 6},\n            {7, 8, 9}\n        };\n        \n        int rows = matrix.length;\n        int columns = matrix[0].length;\n        \n        for (int i = 0; i < columns; i++) {\n            for (int j = 0; j < rows; j++) {\n                System.out.print(matrix[j][i] + \" \");\n            }\n            System.out.println();\n        }\n    }\n}\n```"
  },
  {
    "task": "Implement a for loop that reverses the order of words in a sentence.",
    "code": "```java\npublic class ReverseWords {\n    public static void main(String[] args) {\n        String sentence = \"The quick brown fox jumps over the lazy dog\";\n        String[] words = sentence.split(\" \");\n        StringBuilder reversedSentence = new StringBuilder();\n\n        for (int i = words.length - 1; i >= 0; i--) {\n            reversedSentence.append(words[i]);\n            if (i != 0) {\n                reversedSentence.append(\" \");\n            }\n        }\n\n        System.out.println(reversedSentence.toString());\n    }\n}\n```"
  },
  {
    "task": "Create a for loop that deletes elements from a list that are less than a given value.",
    "code": "```java\nimport java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        ArrayList<Integer> list = new ArrayList<>();\n        list.add(1);\n        list.add(5);\n        list.add(3);\n        list.add(7);\n        list.add(2);\n\n        int threshold = 4;\n        for (int i = 0; i < list.size(); i++) {\n            if (list.get(i) < threshold) {\n                list.remove(i);\n                i--; // Adjust index after removal\n            }\n        }\n\n        System.out.println(list);\n    }\n}\n```"
  },
  {
    "task": "Design a for loop to merge two sorted lists into a single sorted list.",
    "code": "```java\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class MergeSortedLists {\n    public static List<Integer> mergeSortedLists(List<Integer> list1, List<Integer> list2) {\n        List<Integer> mergedList = new ArrayList<>();\n        int i = 0, j = 0;\n\n        for (; i < list1.size() && j < list2.size();) {\n            if (list1.get(i) < list2.get(j)) {\n                mergedList.add(list1.get(i));\n                i++;\n            } else {\n                mergedList.add(list2.get(j));\n                j++;\n            }\n        }\n\n        for (; i < list1.size(); i++) {\n            mergedList.add(list1.get(i));\n        }\n\n        for (; j < list2.size(); j++) {\n            mergedList.add(list2.get(j));\n        }\n\n        return mergedList;\n    }\n\n    public static void main(String[] args) {\n        List<Integer> list1 = List.of(1, 3, 5, 7);\n        List<Integer> list2 = List.of(2, 4, 6, 8);\n        List<Integer> mergedList = mergeSortedLists(list1, list2);\n        System.out.println(mergedList);\n    }\n}\n```"
  },
  {
    "task": "Write a for loop that calculates the power of a number using repeated multiplication.",
    "code": "```java\npublic class PowerCalculator {\n    public static void main(String[] args) {\n        int base = 2;\n        int exponent = 5;\n        int result = 1;\n\n        for (int i = 0; i < exponent; i++) {\n            result *= base;\n        }\n\n        System.out.println(\"The result is: \" + result);\n    }\n}\n```"
  },
  {
    "task": "Use a for loop to find the longest word in a list of words.",
    "code": "```java\nimport java.util.List;\n\npublic class LongestWordFinder {\n    public static String findLongestWord(List<String> words) {\n        String longestWord = \"\";\n        for (String word : words) {\n            if (word.length() > longestWord.length()) {\n                longestWord = word;\n            }\n        }\n        return longestWord;\n    }\n\n    public static void main(String[] args) {\n        List<String> words = List.of(\"apple\", \"banana\", \"cherry\", \"date\");\n        String longestWord = findLongestWord(words);\n        System.out.println(\"Longest word: \" + longestWord);\n    }\n}\n```"
  },
  {
    "task": "Develop a for loop that sorts a list of tuples based on the second element.",
    "code": "```java\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Comparator;\n\npublic class TupleSorter {\n    public static void main(String[] args) {\n        ArrayList<int[]> list = new ArrayList<>(Arrays.asList(\n            new int[]{5, 2},\n            new int[]{3, 5},\n            new int[]{1, 4},\n            new int[]{4, 1}\n        ));\n        \n        for (int i = 0; i < list.size() - 1; i++) {\n            for (int j = 0; j < list.size() - i - 1; j++) {\n                if (list.get(j)[1] > list.get(j + 1)[1]) {\n                    int[] temp = list.get(j);\n                    list.set(j, list.get(j + 1));\n                    list.set(j + 1, temp);\n                }\n            }\n        }\n        \n        for (int[] tuple : list) {\n            System.out.println(Arrays.toString(tuple));\n        }\n    }\n}\n```"
  },
  {
    "task": "Create a for loop that replicates each character in a string a given number of times.",
    "code": "```java\npublic class Main {\n    public static void main(String[] args) {\n        String input = \"hello\";\n        int replicate = 3;\n        StringBuilder result = new StringBuilder();\n\n        for (char c : input.toCharArray()) {\n            for (int i = 0; i < replicate; i++) {\n                result.append(c);\n            }\n        }\n\n        System.out.println(result.toString());\n    }\n}\n```"
  },
  {
    "task": "Construct a for loop that replaces spaces in a string with hyphens.",
    "code": "```java\npublic class ReplaceSpaces {\n    public static void main(String[] args) {\n        String input = \"Replace spaces with hyphens\";\n        StringBuilder result = new StringBuilder();\n\n        for (int i = 0; i < input.length(); i++) {\n            char currentChar = input.charAt(i);\n            if (currentChar == ' ') {\n                result.append('-');\n            } else {\n                result.append(currentChar);\n            }\n        }\n\n        System.out.println(result.toString());\n    }\n}\n```"
  },
  {
    "task": "Design a for loop to find the intersection of two sets.",
    "code": "```java\nimport java.util.HashSet;\nimport java.util.Set;\n\npublic class IntersectionOfSets {\n    public static void main(String[] args) {\n        Set<Integer> set1 = new HashSet<>();\n        Set<Integer> set2 = new HashSet<>();\n        \n        // Sample data\n        set1.add(1);\n        set1.add(2);\n        set1.add(3);\n        set2.add(2);\n        set2.add(3);\n        set2.add(4);\n        \n        Set<Integer> intersection = new HashSet<>();\n        \n        for (Integer element : set1) {\n            if (set2.contains(element)) {\n                intersection.add(element);\n            }\n        }\n        \n        System.out.println(\"Intersection of set1 and set2: \" + intersection);\n    }\n}\n```"
  },
  {
    "task": "Write a for loop that generates a list of prime numbers up to a given number.",
    "code": "```java\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class PrimeNumbers {\n    public static List<Integer> generatePrimes(int n) {\n        List<Integer> primes = new ArrayList<>();\n        for (int i = 2; i <= n; i++) {\n            if (isPrime(i)) {\n                primes.add(i);\n            }\n        }\n        return primes;\n    }\n\n    private static boolean isPrime(int num) {\n        if (num <= 1) return false;\n        for (int j = 2; j * j <= num; j++) {\n            if (num % j == 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    public static void main(String[] args) {\n        int limit = 30; // Example input\n        List<Integer> primes = generatePrimes(limit);\n        System.out.println(primes);\n    }\n}\n```"
  },
  {
    "task": "Use a for loop to implement a simple text-based progress bar.",
    "code": "```java\npublic class ProgressBar {\n    public static void main(String[] args) {\n        int total = 10; // total steps in the progress bar\n        for (int i = 0; i <= total; i++) {\n            System.out.print(\"\\r[\");\n            for (int j = 0; j < total; j++) {\n                if (j < i) {\n                    System.out.print(\"#\");\n                } else {\n                    System.out.print(\" \");\n                }\n            }\n            System.out.print(\"] \" + (i * 10) + \"%\");\n            try {\n                Thread.sleep(500); // simulate work being done\n            } catch (InterruptedException e) {\n                Thread.currentThread().interrupt();\n            }\n        }\n    }\n}\n```"
  },
  {
    "task": "Implement a for loop that finds and prints all palindromic numbers between 10 and 200.",
    "code": "```java\npublic class PalindromicNumbers {\n    public static void main(String[] args) {\n        for (int i = 10; i <= 200; i++) {\n            if (isPalindrome(i)) {\n                System.out.println(i);\n            }\n        }\n    }\n\n    private static boolean isPalindrome(int number) {\n        int original = number;\n        int reversed = 0;\n        while (number != 0) {\n            int digit = number % 10;\n            reversed = reversed * 10 + digit;\n            number /= 10;\n        }\n        return original == reversed;\n    }\n}\n```"
  },
  {
    "task": "Create a for loop that multiplies corresponding elements of two lists and stores the result.",
    "code": "```java\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class MultiplyLists {\n    public static void main(String[] args) {\n        List<Integer> list1 = List.of(1, 2, 3, 4);\n        List<Integer> list2 = List.of(5, 6, 7, 8);\n        List<Integer> result = new ArrayList<>();\n\n        for (int i = 0; i < list1.size(); i++) {\n            result.add(list1.get(i) * list2.get(i));\n        }\n        \n        System.out.println(result);\n    }\n}\n```"
  },
  {
    "task": "Develop a for loop that finds the difference between the largest and smallest numbers in a list.",
    "code": "```java\nimport java.util.List;\n\npublic class DifferenceFinder {\n    public static int findDifference(List<Integer> numbers) {\n        if (numbers.isEmpty()) {\n            throw new IllegalArgumentException(\"List cannot be empty\");\n        }\n        \n        int max = Integer.MIN_VALUE;\n        int min = Integer.MAX_VALUE;\n        \n        for (int number : numbers) {\n            if (number > max) {\n                max = number;\n            }\n            if (number < min) {\n                min = number;\n            }\n        }\n        \n        return max - min;\n    }\n    \n    public static void main(String[] args) {\n        List<Integer> numbers = List.of(10, 4, 2, 8, 15);\n        int difference = findDifference(numbers);\n        System.out.println(\"Difference: \" + difference);\n    }\n}\n```"
  },
  {
    "task": "Write a for loop that prints numbers from 1 to 100, replacing multiples of 5 with 'Buzz'.",
    "code": "```java\npublic class Main {\n    public static void main(String[] args) {\n        for (int i = 1; i <= 100; i++) {\n            if (i % 5 == 0) {\n                System.out.println(\"Buzz\");\n            } else {\n                System.out.println(i);\n            }\n        }\n    }\n}\n```"
  },
  {
    "task": "Use a for loop to convert a list of integers into their binary representation.",
    "code": "```java\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class BinaryConverter {\n    public static void main(String[] args) {\n        List<Integer> numbers = List.of(1, 2, 3, 4, 5);\n        List<String> binaryNumbers = new ArrayList<>();\n\n        for (int number : numbers) {\n            binaryNumbers.add(Integer.toBinaryString(number));\n        }\n\n        System.out.println(binaryNumbers);\n    }\n}\n```"
  },
  {
    "task": "Design a for loop that fills a 2D array with consecutive numbers in a spiral pattern.",
    "code": "```java\npublic class SpiralFill {\n    public static void main(String[] args) {\n        int rows = 5;\n        int cols = 5;\n        int[][] matrix = new int[rows][cols];\n        \n        int num = 1;\n        int top = 0, bottom = rows - 1;\n        int left = 0, right = cols - 1;\n        \n        while (top <= bottom && left <= right) {\n            for (int i = left; i <= right; i++) {\n                matrix[top][i] = num++;\n            }\n            top++;\n            for (int i = top; i <= bottom; i++) {\n                matrix[i][right] = num++;\n            }\n            right--;\n            if (top <= bottom) {\n                for (int i = right; i >= left; i--) {\n                    matrix[bottom][i] = num++;\n                }\n                bottom--;\n            }\n            if (left <= right) {\n                for (int i = bottom; i >= top; i--) {\n                    matrix[i][left] = num++;\n                }\n                left++;\n            }\n        }\n        \n        for (int i = 0; i < rows; i++) {\n            for (int j = 0; j < cols; j++) {\n                System.out.print(matrix[i][j] + \"\\t\");\n            }\n            System.out.println();\n        }\n    }\n}\n```"
  },
  {
    "task": "Create a for loop that iterates over a list and removes duplicates.",
    "code": "```java\nimport java.util.ArrayList;\nimport java.util.HashSet;\nimport java.util.List;\n\npublic class RemoveDuplicates {\n    public static void main(String[] args) {\n        List<Integer> list = new ArrayList<>();\n        list.add(1);\n        list.add(2);\n        list.add(2);\n        list.add(3);\n        list.add(4);\n        list.add(4);\n        list.add(5);\n\n        List<Integer> resultList = new ArrayList<>();\n        HashSet<Integer> seen = new HashSet<>();\n\n        for (Integer number : list) {\n            if (!seen.contains(number)) {\n                seen.add(number);\n                resultList.add(number);\n            }\n        }\n\n        list = resultList;\n\n        for (Integer number : list) {\n            System.out.println(number);\n        }\n    }\n}\n```"
  },
  {
    "task": "Implement a for loop to calculate the dot product of two vectors.",
    "code": "```java\npublic class DotProduct {\n    public static int calculateDotProduct(int[] vectorA, int[] vectorB) {\n        int dotProduct = 0;\n        for (int i = 0; i < vectorA.length; i++) {\n            dotProduct += vectorA[i] * vectorB[i];\n        }\n        return dotProduct;\n    }\n\n    public static void main(String[] args) {\n        int[] vectorA = {1, 2, 3};\n        int[] vectorB = {4, 5, 6};\n        int result = calculateDotProduct(vectorA, vectorB);\n        System.out.println(\"Dot Product: \" + result);\n    }\n}\n```"
  },
  {
    "task": "Write a for loop that prints a sequence of numbers in reverse order.",
    "code": "```java\npublic class ReverseSequence {\n    public static void main(String[] args) {\n        for (int i = 10; i >= 1; i--) {\n            System.out.println(i);\n        }\n    }\n}\n```"
  },
  {
    "task": "Develop a for loop that computes the greatest common divisor (GCD) of two numbers.",
    "code": "```java\npublic class GCD {\n    public static void main(String[] args) {\n        int num1 = 48; // Example number 1\n        int num2 = 18; // Example number 2\n        int gcd = 1;\n\n        for (int i = 1; i <= Math.min(num1, num2); i++) {\n            if (num1 % i == 0 && num2 % i == 0) {\n                gcd = i;\n            }\n        }\n\n        System.out.println(\"GCD of \" + num1 + \" and \" + num2 + \" is: \" + gcd);\n    }\n}\n```"
  },
  {
    "task": "Construct a for loop that prints a square pattern of numbers with a given side length.",
    "code": "```java\npublic class SquarePattern {\n    public static void main(String[] args) {\n        int sideLength = 5; // Example side length\n        for (int i = 0; i < sideLength; i++) {\n            for (int j = 0; j < sideLength; j++) {\n                System.out.print((j + 1) + \" \");\n            }\n            System.out.println();\n        }\n    }\n}\n```"
  },
  {
    "task": "Create a for loop that shifts all elements of a list to the left by one position.",
    "code": "```java\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class ShiftList {\n    public static void main(String[] args) {\n        List<Integer> list = new ArrayList<>();\n        list.add(1);\n        list.add(2);\n        list.add(3);\n        list.add(4);\n        list.add(5);\n\n        if (!list.isEmpty()) {\n            int firstElement = list.get(0);\n            for (int i = 0; i < list.size() - 1; i++) {\n                list.set(i, list.get(i + 1));\n            }\n            list.set(list.size() - 1, firstElement);\n        }\n\n        System.out.println(list);\n    }\n}\n```"
  },
  {
    "task": "Use a for loop to print the first 20 triangular numbers.",
    "code": "```java\npublic class TriangularNumbers {\n    public static void main(String[] args) {\n        for (int n = 1; n <= 20; n++) {\n            int triangularNumber = n * (n + 1) / 2;\n            System.out.println(triangularNumber);\n        }\n    }\n}\n```"
  },
  {
    "task": "Write a for loop that finds the first repeating character in a string.",
    "code": "```java\npublic class FirstRepeatingCharacter {\n    public static Character findFirstRepeatingCharacter(String input) {\n        for (int i = 0; i < input.length(); i++) {\n            char current = input.charAt(i);\n            for (int j = i + 1; j < input.length(); j++) {\n                if (current == input.charAt(j)) {\n                    return current;\n                }\n            }\n        }\n        return null; // No repeating character found\n    }\n\n    public static void main(String[] args) {\n        String input = \"swiss\";\n        Character result = findFirstRepeatingCharacter(input);\n        if (result != null) {\n            System.out.println(\"First repeating character: \" + result);\n        } else {\n            System.out.println(\"No repeating character found.\");\n        }\n    }\n}\n```"
  },
  {
    "task": "Design a for loop that transforms a list of temperatures from Celsius to Fahrenheit.",
    "code": "```java\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class TemperatureConverter {\n    public static void main(String[] args) {\n        List<Double> celsiusTemperatures = List.of(0.0, 20.0, 37.0, 100.0);\n        List<Double> fahrenheitTemperatures = new ArrayList<>();\n\n        for (double celsius : celsiusTemperatures) {\n            double fahrenheit = celsius * 9 / 5 + 32;\n            fahrenheitTemperatures.add(fahrenheit);\n        }\n\n        System.out.println(fahrenheitTemperatures);\n    }\n}\n```"
  },
  {
    "task": "Implement a for loop to determine if a string is an isogram.",
    "code": "```java\npublic class IsogramChecker {\n    public static boolean isIsogram(String str) {\n        str = str.toLowerCase();\n        for (int i = 0; i < str.length(); i++) {\n            for (int j = i + 1; j < str.length(); j++) {\n                if (str.charAt(i) == str.charAt(j)) {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n\n    public static void main(String[] args) {\n        String testString = \"Example\";\n        System.out.println(isIsogram(testString));\n    }\n}\n```"
  },
  {
    "task": "Use a for loop to create a histogram from a list of integers.",
    "code": "```java\nimport java.util.List;\n\npublic class Histogram {\n    public static void main(String[] args) {\n        List<Integer> numbers = List.of(1, 2, 2, 3, 3, 3, 4, 4, 4, 4);\n        int[] frequency = new int[5]; // Assuming numbers are from 1 to 4\n\n        for (int number : numbers) {\n            if (number >= 1 && number <= 4) {\n                frequency[number]++;\n            }\n        }\n\n        for (int i = 1; i < frequency.length; i++) {\n            System.out.print(i + \": \");\n            for (int j = 0; j < frequency[i]; j++) {\n                System.out.print(\"*\");\n            }\n            System.out.println();\n        }\n    }\n}\n```"
  },
  {
    "task": "Create a for loop that prints the indexes of all occurrences of a particular element in a list.",
    "code": "```java\nimport java.util.List;\n\npublic class FindIndexes {\n    public static void main(String[] args) {\n        List<Integer> list = List.of(1, 2, 3, 2, 4, 2, 5);\n        int target = 2;\n\n        for (int i = 0; i < list.size(); i++) {\n            if (list.get(i) == target) {\n                System.out.println(i);\n            }\n        }\n    }\n}\n```"
  },
  {
    "task": "Write a for loop that checks if a given string is a palindrome.",
    "code": "```java\npublic class PalindromeChecker {\n    public static boolean isPalindrome(String input) {\n        int length = input.length();\n        for (int i = 0; i < length / 2; i++) {\n            if (input.charAt(i) != input.charAt(length - i - 1)) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    public static void main(String[] args) {\n        String test = \"racecar\";\n        System.out.println(\"Is palindrome: \" + isPalindrome(test));\n    }\n}\n```"
  },
  {
    "task": "Develop a for loop to simulate the behavior of a simple finite state machine.",
    "code": "```java\nclass FiniteStateMachine {\n    enum State {\n        START, MIDDLE, END\n    }\n\n    public static void main(String[] args) {\n        State currentState = State.START;\n        \n        for (int i = 0; i < 3; i++) {\n            switch (currentState) {\n                case START:\n                    System.out.println(\"State: START\");\n                    currentState = State.MIDDLE;\n                    break;\n                case MIDDLE:\n                    System.out.println(\"State: MIDDLE\");\n                    currentState = State.END;\n                    break;\n                case END:\n                    System.out.println(\"State: END\");\n                    currentState = State.START;\n                    break;\n            }\n        }\n    }\n}\n```"
  },
  {
    "task": "Design a for loop that finds the sum of all odd numbers in a list.",
    "code": "```java\nimport java.util.List;\n\npublic class SumOfOddNumbers {\n    public static int sumOfOddNumbers(List<Integer> numbers) {\n        int sum = 0;\n        for (int number : numbers) {\n            if (number % 2 != 0) {\n                sum += number;\n            }\n        }\n        return sum;\n    }\n}\n```"
  },
  {
    "task": "Use a for loop to count how many words start with a vowel in a given sentence.",
    "code": "```java\npublic class VowelCounter {\n    public static void main(String[] args) {\n        String sentence = \"This is an example sentence with some words.\";\n        String[] words = sentence.split(\"\\\\s+\");\n        int vowelCount = 0;\n        for (String word : words) {\n            if (word.length() > 0) {\n                char firstChar = Character.toLowerCase(word.charAt(0));\n                if (firstChar == 'a' || firstChar == 'e' || firstChar == 'i' || firstChar == 'o' || firstChar == 'u') {\n                    vowelCount++;\n                }\n            }\n        }\n        System.out.println(\"Number of words starting with a vowel: \" + vowelCount);\n    }\n}\n```"
  },
  {
    "task": "Implement a for loop that sorts a list of strings by their length.",
    "code": "```java\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Collections;\nimport java.util.Comparator;\nimport java.util.List;\n\npublic class SortStringsByLength {\n    public static void main(String[] args) {\n        List<String> strings = new ArrayList<>(Arrays.asList(\"apple\", \"banana\", \"cherry\", \"date\", \"elderberry\"));\n\n        for (int i = 0; i < strings.size() - 1; i++) {\n            for (int j = i + 1; j < strings.size(); j++) {\n                if (strings.get(i).length() > strings.get(j).length()) {\n                    Collections.swap(strings, i, j);\n                }\n            }\n        }\n\n        for (String s : strings) {\n            System.out.println(s);\n        }\n    }\n}\n```"
  },
  {
    "task": "Write a for loop that prints the factorial of numbers from 1 to 10.",
    "code": "```java\npublic class Factorial {\n    public static void main(String[] args) {\n        for (int i = 1; i <= 10; i++) {\n            int factorial = 1;\n            for (int j = 1; j <= i; j++) {\n                factorial *= j;\n            }\n            System.out.println(\"Factorial of \" + i + \" is \" + factorial);\n        }\n    }\n}\n```"
  },
  {
    "task": "Create a for loop that replaces all instances of a substring in a string with another substring.",
    "code": "```java\npublic class SubstringReplacer {\n    public static void main(String[] args) {\n        String originalString = \"This is the original string. Replace the word 'original'.\";\n        String toReplace = \"original\";\n        String replacement = \"new\";\n\n        String[] parts = originalString.split(toReplace);\n        StringBuilder result = new StringBuilder();\n\n        for (int i = 0; i < parts.length - 1; i++) {\n            result.append(parts[i]).append(replacement);\n        }\n        result.append(parts[parts.length - 1]);\n\n        System.out.println(result.toString());\n    }\n}\n```"
  },
  {
    "task": "Develop a for loop that squares each element in a list of numbers.",
    "code": "```java\nimport java.util.Arrays;\n\npublic class SquareNumbers {\n    public static void main(String[] args) {\n        int[] numbers = {1, 2, 3, 4, 5};\n        for (int i = 0; i < numbers.length; i++) {\n            numbers[i] = numbers[i] * numbers[i];\n        }\n        System.out.println(Arrays.toString(numbers));\n    }\n}\n```"
  },
  {
    "task": "Use a for loop to reverse the order of elements in an array.",
    "code": "```java\npublic class ReverseArray {\n    public static void main(String[] args) {\n        int[] array = {1, 2, 3, 4, 5};\n        int n = array.length;\n        int[] reversedArray = new int[n];\n\n        for (int i = 0; i < n; i++) {\n            reversedArray[i] = array[n - 1 - i];\n        }\n\n        for (int i = 0; i < n; i++) {\n            System.out.print(reversedArray[i] + \" \");\n        }\n    }\n}\n```"
  },
  {
    "task": "Implement a for loop that tests if two strings are anagrams of each other.",
    "code": "```java\npublic class AnagramChecker {\n    public static boolean areAnagrams(String str1, String str2) {\n        if (str1.length() != str2.length()) {\n            return false;\n        }\n        \n        int[] charCount = new int[256];\n        \n        for (int i = 0; i < str1.length(); i++) {\n            charCount[str1.charAt(i)]++;\n            charCount[str2.charAt(i)]--;\n        }\n        \n        for (int count : charCount) {\n            if (count != 0) {\n                return false;\n            }\n        }\n        \n        return true;\n    }\n    \n    public static void main(String[] args) {\n        String string1 = \"listen\";\n        String string2 = \"silent\";\n        \n        if (areAnagrams(string1, string2)) {\n            System.out.println(\"The strings are anagrams.\");\n        } else {\n            System.out.println(\"The strings are not anagrams.\");\n        }\n    }\n}\n```"
  },
  {
    "task": "Design a for loop to find and print all Armstrong numbers between 100 and 999.",
    "code": "```java\npublic class ArmstrongNumbers {\n    public static void main(String[] args) {\n        for (int number = 100; number <= 999; number++) {\n            int sum = 0;\n            int temp = number;\n            while (temp != 0) {\n                int digit = temp % 10;\n                sum += digit * digit * digit;\n                temp /= 10;\n            }\n            if (sum == number) {\n                System.out.println(number);\n            }\n        }\n    }\n}\n```"
  }
]