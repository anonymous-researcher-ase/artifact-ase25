[
  {
    "task": "Write a function that takes two numbers and returns their sum.",
    "code": "```java\npublic class ArithmeticOperations {\n    public static int sum(int a, int b) {\n        return a + b;\n    }\n\n    public static void main(String[] args) {\n        int result = sum(5, 10);\n        System.out.println(\"The sum is: \" + result);\n    }\n}\n```"
  },
  {
    "task": "Create a program that calculates the difference between two given integers.",
    "code": "```java\nimport java.util.Scanner;\n\npublic class ArithmeticOperations {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        \n        System.out.println(\"Enter the first integer:\");\n        int firstNumber = scanner.nextInt();\n        \n        System.out.println(\"Enter the second integer:\");\n        int secondNumber = scanner.nextInt();\n        \n        int difference = firstNumber - secondNumber;\n        \n        System.out.println(\"The difference is: \" + difference);\n        \n        scanner.close();\n    }\n}\n```"
  },
  {
    "task": "Design a function to multiply two floating-point numbers and return the result.",
    "code": "```java\npublic class ArithmeticOperations {\n    public static float multiply(float a, float b) {\n        return a * b;\n    }\n\n    public static void main(String[] args) {\n        float result = multiply(3.5f, 2.2f);\n        System.out.println(\"Result: \" + result);\n    }\n}\n```"
  },
  {
    "task": "Implement a function that divides two numbers and handles division by zero exceptions.",
    "code": "```java\npublic class ArithmeticOperations {\n    public static double divideNumbers(double numerator, double denominator) {\n        try {\n            return numerator / denominator;\n        } catch (ArithmeticException e) {\n            System.out.println(\"Error: Division by zero.\");\n            return Double.NaN;\n        }\n    }\n\n    public static void main(String[] args) {\n        double result = divideNumbers(10, 0);\n        System.out.println(\"Result: \" + result);\n    }\n}\n```"
  },
  {
    "task": "Build a calculator that can perform addition, subtraction, multiplication, and division on user-provided inputs.",
    "code": "```java\nimport java.util.Scanner;\n\npublic class Calculator {\n\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n\n        System.out.println(\"Enter first number: \");\n        double num1 = scanner.nextDouble();\n\n        System.out.println(\"Enter second number: \");\n        double num2 = scanner.nextDouble();\n\n        System.out.println(\"Enter operation (+, -, *, /): \");\n        char operation = scanner.next().charAt(0);\n\n        double result;\n\n        switch (operation) {\n            case '+':\n                result = num1 + num2;\n                System.out.println(\"Result: \" + result);\n                break;\n            case '-':\n                result = num1 - num2;\n                System.out.println(\"Result: \" + result);\n                break;\n            case '*':\n                result = num1 * num2;\n                System.out.println(\"Result: \" + result);\n                break;\n            case '/':\n                if (num2 != 0) {\n                    result = num1 / num2;\n                    System.out.println(\"Result: \" + result);\n                } else {\n                    System.out.println(\"Error: Division by zero\");\n                }\n                break;\n            default:\n                System.out.println(\"Invalid operation\");\n                break;\n        }\n\n        scanner.close();\n    }\n}\n```"
  },
  {
    "task": "Write a script to compute the average of a list of numbers using arithmetic operations.",
    "code": "```java\nimport java.util.List;\n\npublic class AverageCalculator {\n    public static double computeAverage(List<Double> numbers) {\n        if (numbers == null || numbers.isEmpty()) {\n            return 0.0;\n        }\n        double sum = 0.0;\n        for (double number : numbers) {\n            sum += number;\n        }\n        return sum / numbers.size();\n    }\n\n    public static void main(String[] args) {\n        List<Double> numbers = List.of(10.0, 20.0, 30.0, 40.0, 50.0);\n        double average = computeAverage(numbers);\n        System.out.println(\"The average is: \" + average);\n    }\n}\n```"
  },
  {
    "task": "Create a function that returns the remainder of the division of two integers.",
    "code": "```java\npublic class ArithmeticOperations {\n    public static int getRemainder(int a, int b) {\n        return a % b;\n    }\n\n    public static void main(String[] args) {\n        System.out.println(getRemainder(10, 3)); // Output should be 1\n    }\n}\n```"
  },
  {
    "task": "Develop a function that can add a variable number of arguments and return the total.",
    "code": "```java\npublic class ArithmeticOperations {\n\n    public static int add(int... numbers) {\n        int total = 0;\n        for (int number : numbers) {\n            total += number;\n        }\n        return total;\n    }\n\n    public static void main(String[] args) {\n        System.out.println(add(1, 2, 3, 4)); // Output: 10\n    }\n}\n```"
  },
  {
    "task": "Write a program that subtracts a series of numbers from an initial value.",
    "code": "```java\nimport java.util.Scanner;\n\npublic class ArithmeticOperations {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n\n        System.out.print(\"Enter the initial value: \");\n        double initialValue = scanner.nextDouble();\n\n        System.out.print(\"Enter the number of values to subtract: \");\n        int count = scanner.nextInt();\n\n        for (int i = 0; i < count; i++) {\n            System.out.print(\"Enter value to subtract: \");\n            double value = scanner.nextDouble();\n            initialValue -= value;\n        }\n\n        System.out.println(\"Result after subtraction: \" + initialValue);\n        scanner.close();\n    }\n}\n```"
  },
  {
    "task": "Implement a function that multiplies all elements in an array and returns the product.",
    "code": "```java\npublic class ArrayProduct {\n\n    public static int multiplyElements(int[] array) {\n        int product = 1;\n        for (int num : array) {\n            product *= num;\n        }\n        return product;\n    }\n\n    public static void main(String[] args) {\n        int[] numbers = {1, 2, 3, 4, 5};\n        System.out.println(multiplyElements(numbers)); // Output: 120\n    }\n}\n```"
  },
  {
    "task": "Design a program that divides a number by another and rounds the result to two decimal places.",
    "code": "```java\nimport java.util.Scanner;\n\npublic class ArithmeticOperations {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n\n        System.out.println(\"Enter the dividend:\");\n        double dividend = scanner.nextDouble();\n\n        System.out.println(\"Enter the divisor:\");\n        double divisor = scanner.nextDouble();\n\n        if (divisor != 0) {\n            double result = dividend / divisor;\n            System.out.printf(\"Result: %.2f\", result);\n        } else {\n            System.out.println(\"Error: Division by zero is not allowed.\");\n        }\n\n        scanner.close();\n    }\n}\n```"
  },
  {
    "task": "Create a function that performs arithmetic operations on complex numbers.",
    "code": "```java\npublic class ComplexNumber {\n    private double real;\n    private double imaginary;\n\n    public ComplexNumber(double real, double imaginary) {\n        this.real = real;\n        this.imaginary = imaginary;\n    }\n\n    public ComplexNumber add(ComplexNumber other) {\n        double newReal = this.real + other.real;\n        double newImaginary = this.imaginary + other.imaginary;\n        return new ComplexNumber(newReal, newImaginary);\n    }\n\n    public ComplexNumber subtract(ComplexNumber other) {\n        double newReal = this.real - other.real;\n        double newImaginary = this.imaginary - other.imaginary;\n        return new ComplexNumber(newReal, newImaginary);\n    }\n\n    public ComplexNumber multiply(ComplexNumber other) {\n        double newReal = this.real * other.real - this.imaginary * other.imaginary;\n        double newImaginary = this.real * other.imaginary + this.imaginary * other.real;\n        return new ComplexNumber(newReal, newImaginary);\n    }\n\n    public ComplexNumber divide(ComplexNumber other) {\n        double denominator = other.real * other.real + other.imaginary * other.imaginary;\n        double newReal = (this.real * other.real + this.imaginary * other.imaginary) / denominator;\n        double newImaginary = (this.imaginary * other.real - this.real * other.imaginary) / denominator;\n        return new ComplexNumber(newReal, newImaginary);\n    }\n\n    @Override\n    public String toString() {\n        return real + \" + \" + imaginary + \"i\";\n    }\n\n    public static void main(String[] args) {\n        ComplexNumber c1 = new ComplexNumber(4.0, 5.0);\n        ComplexNumber c2 = new ComplexNumber(2.0, 3.0);\n\n        ComplexNumber sum = c1.add(c2);\n        ComplexNumber difference = c1.subtract(c2);\n        ComplexNumber product = c1.multiply(c2);\n        ComplexNumber quotient = c1.divide(c2);\n\n        System.out.println(\"Sum: \" + sum);\n        System.out.println(\"Difference: \" + difference);\n        System.out.println(\"Product: \" + product);\n        System.out.println(\"Quotient: \" + quotient);\n    }\n}\n```"
  },
  {
    "task": "Write a function to calculate the area of a rectangle given its length and width using multiplication.",
    "code": "```java\npublic class RectangleAreaCalculator {\n    public static double calculateArea(double length, double width) {\n        return length * width;\n    }\n\n    public static void main(String[] args) {\n        double length = 5.0;\n        double width = 3.0;\n        double area = calculateArea(length, width);\n        System.out.println(\"The area of the rectangle is: \" + area);\n    }\n}\n```"
  },
  {
    "task": "Build a program that converts a price in dollars to another currency using multiplication with exchange rates.",
    "code": "```java\nimport java.util.Scanner;\n\npublic class CurrencyConverter {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        \n        System.out.print(\"Enter price in dollars: \");\n        double dollars = scanner.nextDouble();\n        \n        System.out.print(\"Enter exchange rate: \");\n        double exchangeRate = scanner.nextDouble();\n        \n        double convertedPrice = dollars * exchangeRate;\n        System.out.printf(\"Converted price: %.2f\", convertedPrice);\n        \n        scanner.close();\n    }\n}\n```"
  },
  {
    "task": "Implement a function that checks if a number is divisible by another and returns a boolean.",
    "code": "```java\npublic class ArithmeticOperations {\n\n    public static boolean isDivisible(int dividend, int divisor) {\n        if (divisor == 0) {\n            throw new IllegalArgumentException(\"Divisor cannot be zero\");\n        }\n        return dividend % divisor == 0;\n    }\n\n    public static void main(String[] args) {\n        System.out.println(isDivisible(10, 2)); // true\n        System.out.println(isDivisible(10, 3)); // false\n    }\n}\n```"
  },
  {
    "task": "Write a script to sum the digits of an integer using arithmetic operations.",
    "code": "```java\npublic class SumOfDigits {\n    public static void main(String[] args) {\n        int number = 12345; // Example number\n        int sum = 0;\n\n        while (number != 0) {\n            sum += number % 10;\n            number /= 10;\n        }\n\n        System.out.println(\"Sum of digits: \" + sum);\n    }\n}\n```"
  },
  {
    "task": "Develop a function that applies a discount percentage to a price using subtraction and multiplication.",
    "code": "```java\npublic class DiscountCalculator {\n\n    public static double applyDiscount(double price, double discountPercentage) {\n        double discountAmount = price * (discountPercentage / 100);\n        double finalPrice = price - discountAmount;\n        return finalPrice;\n    }\n\n    public static void main(String[] args) {\n        double price = 100.0;\n        double discountPercentage = 20.0;\n        double discountedPrice = applyDiscount(price, discountPercentage);\n        System.out.println(\"Price after discount: \" + discountedPrice);\n    }\n}\n```"
  },
  {
    "task": "Create a program to calculate the yearly salary given an hourly wage and hours worked per week.",
    "code": "```java\nimport java.util.Scanner;\n\npublic class YearlySalaryCalculator {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n\n        System.out.print(\"Enter hourly wage: \");\n        double hourlyWage = scanner.nextDouble();\n\n        System.out.print(\"Enter hours worked per week: \");\n        double hoursPerWeek = scanner.nextDouble();\n\n        double yearlySalary = hourlyWage * hoursPerWeek * 52;\n\n        System.out.println(\"Yearly Salary: \" + yearlySalary);\n        \n        scanner.close();\n    }\n}\n```"
  },
  {
    "task": "Design a function that calculates the compound interest over a given period using arithmetic operations.",
    "code": "```java\npublic class CompoundInterestCalculator {\n\n    public static double calculateCompoundInterest(double principal, double rate, int timesCompounded, int years) {\n        return principal * Math.pow((1 + rate / timesCompounded), timesCompounded * years);\n    }\n\n    public static void main(String[] args) {\n        double principal = 1000; // Example principal amount\n        double rate = 0.05; // Example interest rate (5%)\n        int timesCompounded = 4; // Compounded quarterly\n        int years = 5; // Over 5 years\n\n        double compoundInterest = calculateCompoundInterest(principal, rate, timesCompounded, years);\n        System.out.println(\"Compound Interest: \" + compoundInterest);\n    }\n}\n```"
  },
  {
    "task": "Write a program that scales a 2D point by a given factor using multiplication.",
    "code": "```java\npublic class PointScaler {\n    public static void main(String[] args) {\n        double x = 3.0;\n        double y = 4.0;\n        double factor = 2.5;\n        \n        double scaledX = x * factor;\n        double scaledY = y * factor;\n        \n        System.out.println(\"Scaled Point: (\" + scaledX + \", \" + scaledY + \")\");\n    }\n}\n```"
  },
  {
    "task": "Implement a function that calculates the perimeter of a triangle given its side lengths.",
    "code": "```java\npublic class Triangle {\n\n    public static double calculatePerimeter(double side1, double side2, double side3) {\n        return side1 + side2 + side3;\n    }\n\n    public static void main(String[] args) {\n        double side1 = 3.0;\n        double side2 = 4.0;\n        double side3 = 5.0;\n        double perimeter = calculatePerimeter(side1, side2, side3);\n        System.out.println(\"The perimeter of the triangle is: \" + perimeter);\n    }\n}\n```"
  },
  {
    "task": "Create a function to determine if three sides can form a right triangle using the Pythagorean theorem.",
    "code": "```java\npublic class RightTriangleChecker {\n    public static boolean canFormRightTriangle(int a, int b, int c) {\n        int[] sides = {a, b, c};\n        java.util.Arrays.sort(sides);\n        return sides[0] * sides[0] + sides[1] * sides[1] == sides[2] * sides[2];\n    }\n\n    public static void main(String[] args) {\n        System.out.println(canFormRightTriangle(3, 4, 5)); // true\n        System.out.println(canFormRightTriangle(5, 12, 13)); // true\n        System.out.println(canFormRightTriangle(1, 2, 3)); // false\n    }\n}\n```"
  },
  {
    "task": "Write a script that calculates the total cost of items in a shopping cart using addition.",
    "code": "```java\npublic class ShoppingCart {\n\n    public static void main(String[] args) {\n        double[] prices = {19.99, 5.49, 3.89, 15.99};\n        double totalCost = calculateTotalCost(prices);\n        System.out.println(\"Total Cost: $\" + totalCost);\n    }\n\n    public static double calculateTotalCost(double[] prices) {\n        double total = 0;\n        for (double price : prices) {\n            total += price;\n        }\n        return total;\n    }\n}\n```"
  },
  {
    "task": "Develop a function that returns the quotient and remainder of a division operation.",
    "code": "```java\npublic class ArithmeticOperations {\n\n    public static class DivisionResult {\n        private int quotient;\n        private int remainder;\n        \n        public DivisionResult(int quotient, int remainder) {\n            this.quotient = quotient;\n            this.remainder = remainder;\n        }\n\n        public int getQuotient() {\n            return quotient;\n        }\n\n        public int getRemainder() {\n            return remainder;\n        }\n    }\n\n    public static DivisionResult divide(int dividend, int divisor) {\n        int quotient = dividend / divisor;\n        int remainder = dividend % divisor;\n        return new DivisionResult(quotient, remainder);\n    }\n\n    public static void main(String[] args) {\n        DivisionResult result = divide(10, 3);\n        System.out.println(\"Quotient: \" + result.getQuotient());\n        System.out.println(\"Remainder: \" + result.getRemainder());\n    }\n}\n```"
  },
  {
    "task": "Build a program that simulates a basic checkout system using arithmetic operations for totals and discounts.",
    "code": "```java\nimport java.util.Scanner;\n\npublic class CheckoutSystem {\n\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        double total = 0.0;\n        double discount = 0.0;\n\n        System.out.println(\"Enter the number of items:\");\n        int itemCount = scanner.nextInt();\n\n        for (int i = 0; i < itemCount; i++) {\n            System.out.println(\"Enter price of item \" + (i + 1) + \":\");\n            double price = scanner.nextDouble();\n            total += price;\n        }\n\n        System.out.println(\"Enter discount percentage (0-100):\");\n        discount = scanner.nextDouble();\n        \n        double discountAmount = (discount / 100) * total;\n        double finalTotal = total - discountAmount;\n\n        System.out.printf(\"Total before discount: $%.2f%n\", total);\n        System.out.printf(\"Discount: $%.2f%n\", discountAmount);\n        System.out.printf(\"Total after discount: $%.2f%n\", finalTotal);\n\n        scanner.close();\n    }\n}\n```"
  },
  {
    "task": "Implement a function to calculate the distance between two points on a plane using subtraction and square roots.",
    "code": "```java\npublic class PointDistanceCalculator {\n\n    public static double calculateDistance(double x1, double y1, double x2, double y2) {\n        double deltaX = x2 - x1;\n        double deltaY = y2 - y1;\n        return Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n    }\n\n    public static void main(String[] args) {\n        double x1 = 1.0, y1 = 2.0, x2 = 4.0, y2 = 6.0;\n        double distance = calculateDistance(x1, y1, x2, y2);\n        System.out.println(\"Distance between points: \" + distance);\n    }\n}\n```"
  },
  {
    "task": "Write a function that calculates the speed of a vehicle given distance and time using division.",
    "code": "```java\npublic class SpeedCalculator {\n\n    public static double calculateSpeed(double distance, double time) {\n        return distance / time;\n    }\n\n    public static void main(String[] args) {\n        double distance = 100.0; // example distance in kilometers\n        double time = 2.0; // example time in hours\n        double speed = calculateSpeed(distance, time);\n        System.out.println(\"Speed: \" + speed + \" km/h\");\n    }\n}\n```"
  },
  {
    "task": "Create a program to compute the total minutes in a given number of hours using multiplication.",
    "code": "```java\npublic class MinutesCalculator {\n    public static void main(String[] args) {\n        int hours = 5; // Example input\n        int totalMinutes = hours * 60;\n        System.out.println(\"Total minutes in \" + hours + \" hours: \" + totalMinutes);\n    }\n}\n```"
  },
  {
    "task": "Design a function that determines the number of dozens of eggs from a given total number of eggs.",
    "code": "```java\npublic class EggCalculator {\n    public static int calculateDozens(int totalEggs) {\n        return totalEggs / 12;\n    }\n    \n    public static void main(String[] args) {\n        int totalEggs = 78; // Example input\n        int dozens = calculateDozens(totalEggs);\n        System.out.println(\"Number of dozens: \" + dozens);\n    }\n}\n```"
  },
  {
    "task": "Write a script to find the greatest common divisor of two numbers using arithmetic operations.",
    "code": "```java\npublic class GCD {\n    public static int gcd(int a, int b) {\n        while (b != 0) {\n            int temp = b;\n            b = a % b;\n            a = temp;\n        }\n        return a;\n    }\n\n    public static void main(String[] args) {\n        int num1 = 56;\n        int num2 = 98;\n        int result = gcd(num1, num2);\n        System.out.println(\"The GCD of \" + num1 + \" and \" + num2 + \" is \" + result);\n    }\n}\n```"
  },
  {
    "task": "Develop a program that calculates the total weight of multiple items using addition.",
    "code": "```java\nimport java.util.Scanner;\n\npublic class TotalWeightCalculator {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n\n        System.out.print(\"Enter the number of items: \");\n        int numberOfItems = scanner.nextInt();\n        double totalWeight = 0.0;\n\n        for (int i = 1; i <= numberOfItems; i++) {\n            System.out.print(\"Enter the weight of item \" + i + \": \");\n            double itemWeight = scanner.nextDouble();\n            totalWeight += itemWeight;\n        }\n\n        System.out.println(\"The total weight of all items is: \" + totalWeight);\n        \n        scanner.close();\n    }\n}\n```"
  },
  {
    "task": "Implement a function to convert a temperature from Celsius to Fahrenheit using multiplication and addition.",
    "code": "```java\npublic class TemperatureConverter {\n    public static double celsiusToFahrenheit(double celsius) {\n        return celsius * 9 / 5 + 32;\n    }\n\n    public static void main(String[] args) {\n        double celsius = 25.0;\n        double fahrenheit = celsiusToFahrenheit(celsius);\n        System.out.println(\"Celsius: \" + celsius + \" -> Fahrenheit: \" + fahrenheit);\n    }\n}\n```"
  },
  {
    "task": "Create a program that determines the age difference between two people given their birth years.",
    "code": "```java\nimport java.util.Scanner;\n\npublic class AgeDifferenceCalculator {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n\n        System.out.print(\"Enter the birth year of the first person: \");\n        int birthYear1 = scanner.nextInt();\n\n        System.out.print(\"Enter the birth year of the second person: \");\n        int birthYear2 = scanner.nextInt();\n\n        int ageDifference = Math.abs(birthYear1 - birthYear2);\n\n        System.out.println(\"The age difference between the two people is: \" + ageDifference + \" years.\");\n        \n        scanner.close();\n    }\n}\n```"
  },
  {
    "task": "Write a function to calculate the final price after applying tax and discount using addition and subtraction.",
    "code": "```java\npublic class PriceCalculator {\n\n    public static double calculateFinalPrice(double initialPrice, double taxRate, double discount) {\n        double taxAmount = initialPrice * taxRate;\n        double priceAfterTax = initialPrice + taxAmount;\n        double finalPrice = priceAfterTax - discount;\n        return finalPrice;\n    }\n\n    public static void main(String[] args) {\n        double initialPrice = 100.0;\n        double taxRate = 0.2; // 20% tax\n        double discount = 15.0;\n        \n        double finalPrice = calculateFinalPrice(initialPrice, taxRate, discount);\n        System.out.println(\"Final Price: \" + finalPrice);\n    }\n}\n```"
  },
  {
    "task": "Design a program to compute the net profit given total revenue and expenses.",
    "code": "```java\npublic class NetProfitCalculator {\n    public static void main(String[] args) {\n        double totalRevenue = 10000.0; // Example revenue\n        double totalExpenses = 7500.0; // Example expenses\n        double netProfit = calculateNetProfit(totalRevenue, totalExpenses);\n        System.out.println(\"Net Profit: \" + netProfit);\n    }\n\n    public static double calculateNetProfit(double revenue, double expenses) {\n        return revenue - expenses;\n    }\n}\n```"
  },
  {
    "task": "Develop a function to calculate the BMI given weight and height using division and multiplication.",
    "code": "```java\npublic class BMICalculator {\n\n    public static double calculateBMI(double weightInKilograms, double heightInMeters) {\n        return weightInKilograms / (heightInMeters * heightInMeters);\n    }\n\n    public static void main(String[] args) {\n        double weight = 70; // example weight in kilograms\n        double height = 1.75; // example height in meters\n        double bmi = calculateBMI(weight, height);\n        System.out.println(\"BMI: \" + bmi);\n    }\n}\n```"
  },
  {
    "task": "Create a function that calculates the midpoint between two numbers using addition and division.",
    "code": "```java\npublic class MidpointCalculator {\n    public static double calculateMidpoint(double num1, double num2) {\n        return (num1 + num2) / 2.0;\n    }\n\n    public static void main(String[] args) {\n        double midpoint = calculateMidpoint(10, 20);\n        System.out.println(\"Midpoint: \" + midpoint);\n    }\n}\n```"
  },
  {
    "task": "Write a program that outputs the result of dividing a number by another with remainder.",
    "code": "```java\npublic class ArithmeticOperations {\n    public static void main(String[] args) {\n        int dividend = 10;\n        int divisor = 3;\n        \n        int quotient = dividend / divisor;\n        int remainder = dividend % divisor;\n        \n        System.out.println(\"Quotient: \" + quotient);\n        System.out.println(\"Remainder: \" + remainder);\n    }\n}\n```"
  },
  {
    "task": "Implement a function to calculate the factorial of a number using multiplication.",
    "code": "```java\npublic class FactorialCalculator {\n\n    public static long factorial(int n) {\n        if (n < 0) {\n            throw new IllegalArgumentException(\"Number must be non-negative.\");\n        }\n        long result = 1;\n        for (int i = 2; i <= n; i++) {\n            result *= i;\n        }\n        return result;\n    }\n\n    public static void main(String[] args) {\n        int number = 5; // Example input\n        System.out.println(\"Factorial of \" + number + \" is \" + factorial(number));\n    }\n}\n```"
  },
  {
    "task": "Build a script to find the average of three numbers using addition and division.",
    "code": "```java\npublic class AverageCalculator {\n    public static void main(String[] args) {\n        double num1 = 10.0;\n        double num2 = 20.0;\n        double num3 = 30.0;\n        \n        double sum = num1 + num2 + num3;\n        double average = sum / 3;\n        \n        System.out.println(\"The average is: \" + average);\n    }\n}\n```"
  },
  {
    "task": "Create a program that simulates a simple bank account using arithmetic operations for deposits and withdrawals.",
    "code": "```java\npublic class BankAccount {\n    private double balance;\n\n    public BankAccount(double initialBalance) {\n        this.balance = initialBalance;\n    }\n\n    public void deposit(double amount) {\n        if (amount > 0) {\n            balance += amount;\n        }\n    }\n\n    public void withdraw(double amount) {\n        if (amount > 0 && amount <= balance) {\n            balance -= amount;\n        }\n    }\n\n    public double getBalance() {\n        return balance;\n    }\n\n    public static void main(String[] args) {\n        BankAccount account = new BankAccount(1000.00);\n        account.deposit(500.00);\n        account.withdraw(200.00);\n        System.out.println(\"Current balance: \" + account.getBalance());\n    }\n}\n```"
  },
  {
    "task": "Write a function that computes the cost per item given a total cost and quantity using division.",
    "code": "```java\npublic class ArithmeticOperations {\n\n    public static double computeCostPerItem(double totalCost, int quantity) {\n        if (quantity == 0) {\n            throw new IllegalArgumentException(\"Quantity cannot be zero.\");\n        }\n        return totalCost / quantity;\n    }\n    \n    public static void main(String[] args) {\n        double totalCost = 100.0;\n        int quantity = 5;\n        double costPerItem = computeCostPerItem(totalCost, quantity);\n        System.out.println(\"Cost per item: \" + costPerItem);\n    }\n}\n```"
  },
  {
    "task": "Design a program that calculates the time required to travel a distance at a given speed.",
    "code": "```java\nimport java.util.Scanner;\n\npublic class TravelTimeCalculator {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n\n        System.out.println(\"Enter the distance (in kilometers): \");\n        double distance = scanner.nextDouble();\n\n        System.out.println(\"Enter the speed (in kilometers per hour): \");\n        double speed = scanner.nextDouble();\n\n        double time = distance / speed;\n\n        System.out.println(\"Time required to travel \" + distance + \" kilometers at \" + speed + \" km/h is: \" + time + \" hours.\");\n        \n        scanner.close();\n    }\n}\n```"
  },
  {
    "task": "Develop a function that returns the absolute difference between two numbers.",
    "code": "```java\npublic class ArithmeticOperations {\n    public static int absoluteDifference(int num1, int num2) {\n        return Math.abs(num1 - num2);\n    }\n\n    public static void main(String[] args) {\n        int result = absoluteDifference(5, 10);\n        System.out.println(\"Absolute Difference: \" + result);\n    }\n}\n```"
  },
  {
    "task": "Implement a program to compute the geometric mean of a set of numbers using multiplication and roots.",
    "code": "```java\nimport java.util.Scanner;\n\npublic class GeometricMeanCalculator {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        \n        System.out.print(\"Enter the number of elements: \");\n        int n = scanner.nextInt();\n        \n        double[] numbers = new double[n];\n        System.out.println(\"Enter the numbers:\");\n        for (int i = 0; i < n; i++) {\n            numbers[i] = scanner.nextDouble();\n        }\n        \n        double product = 1.0;\n        for (double number : numbers) {\n            product *= number;\n        }\n        \n        double geometricMean = Math.pow(product, 1.0 / n);\n        \n        System.out.println(\"Geometric Mean: \" + geometricMean);\n        \n        scanner.close();\n    }\n}\n```"
  },
  {
    "task": "Write a function to calculate the total interest paid on a loan using arithmetic operations.",
    "code": "```java\npublic class LoanCalculator {\n\n    public static double calculateTotalInterest(double principal, double annualInterestRate, int years) {\n        double totalInterest = 0.0;\n        double monthlyInterestRate = annualInterestRate / 12 / 100;\n        int totalMonths = years * 12;\n        \n        double remainingBalance = principal;\n        for (int i = 0; i < totalMonths; i++) {\n            double interestForMonth = remainingBalance * monthlyInterestRate;\n            totalInterest += interestForMonth;\n            double principalPayment = principal / totalMonths;\n            remainingBalance -= principalPayment;\n        }\n        \n        return totalInterest;\n    }\n\n    public static void main(String[] args) {\n        double principal = 10000.0;\n        double annualInterestRate = 5.0;\n        int years = 5;\n        \n        double totalInterest = calculateTotalInterest(principal, annualInterestRate, years);\n        System.out.println(\"Total Interest Paid: \" + totalInterest);\n    }\n}\n```"
  },
  {
    "task": "Create a program that calculates the sum of even numbers within a specified range.",
    "code": "```java\nimport java.util.Scanner;\n\npublic class SumOfEvenNumbers {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        System.out.println(\"Enter the lower bound of the range:\");\n        int lowerBound = scanner.nextInt();\n        System.out.println(\"Enter the upper bound of the range:\");\n        int upperBound = scanner.nextInt();\n        \n        int sum = 0;\n        for (int i = lowerBound; i <= upperBound; i++) {\n            if (i % 2 == 0) {\n                sum += i;\n            }\n        }\n        \n        System.out.println(\"The sum of even numbers between \" + lowerBound + \" and \" + upperBound + \" is: \" + sum);\n    }\n}\n```"
  },
  {
    "task": "Design a script to determine the final balance in a savings account after regular deposits and withdrawals.",
    "code": "```java\npublic class SavingsAccount {\n    private double balance;\n\n    public SavingsAccount(double initialBalance) {\n        this.balance = initialBalance;\n    }\n\n    public void deposit(double amount) {\n        if (amount > 0) {\n            balance += amount;\n        }\n    }\n\n    public void withdraw(double amount) {\n        if (amount > 0 && amount <= balance) {\n            balance -= amount;\n        }\n    }\n\n    public double getBalance() {\n        return balance;\n    }\n\n    public static void main(String[] args) {\n        SavingsAccount account = new SavingsAccount(1000.0);\n        account.deposit(500.0);\n        account.withdraw(200.0);\n        account.deposit(300.0);\n        account.withdraw(100.0);\n        System.out.println(\"Final Balance: \" + account.getBalance());\n    }\n}\n```"
  },
  {
    "task": "Develop a function to compute the surface area of a cylinder given its radius and height.",
    "code": "```java\npublic class Cylinder {\n\n    public static double computeSurfaceArea(double radius, double height) {\n        return 2 * Math.PI * radius * (radius + height);\n    }\n\n    public static void main(String[] args) {\n        double radius = 5.0;\n        double height = 10.0;\n        double surfaceArea = computeSurfaceArea(radius, height);\n        System.out.println(\"Surface area of the cylinder: \" + surfaceArea);\n    }\n}\n```"
  },
  {
    "task": "Write a program that outputs the result of an arithmetic sequence given the first term and common difference.",
    "code": "```java\nimport java.util.Scanner;\n\npublic class ArithmeticSequence {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        \n        System.out.print(\"Enter the first term: \");\n        int firstTerm = scanner.nextInt();\n        \n        System.out.print(\"Enter the common difference: \");\n        int commonDifference = scanner.nextInt();\n        \n        System.out.print(\"Enter the number of terms: \");\n        int numberOfTerms = scanner.nextInt();\n        \n        for (int i = 0; i < numberOfTerms; i++) {\n            int term = firstTerm + i * commonDifference;\n            System.out.println(\"Term \" + (i + 1) + \": \" + term);\n        }\n        \n        scanner.close();\n    }\n}\n```"
  },
  {
    "task": "Implement a function that finds the average speed for a trip given total distance and time.",
    "code": "```java\npublic class AverageSpeedCalculator {\n\n    public static double calculateAverageSpeed(double totalDistance, double totalTime) {\n        if (totalTime == 0) {\n            throw new IllegalArgumentException(\"Time cannot be zero.\");\n        }\n        return totalDistance / totalTime;\n    }\n\n    public static void main(String[] args) {\n        double distance = 150.0; // Example distance in kilometers\n        double time = 3.0; // Example time in hours\n        double averageSpeed = calculateAverageSpeed(distance, time);\n        System.out.println(\"Average Speed: \" + averageSpeed + \" km/h\");\n    }\n}\n```"
  },
  {
    "task": "Create a function to calculate the total cost of a road trip given fuel cost per mile and distance.",
    "code": "```java\npublic class RoadTripCalculator {\n\n    public static double calculateTotalCost(double fuelCostPerMile, double distance) {\n        return fuelCostPerMile * distance;\n    }\n\n    public static void main(String[] args) {\n        double fuelCostPerMile = 0.12; // Example fuel cost per mile\n        double distance = 150.0; // Example distance in miles\n        double totalCost = calculateTotalCost(fuelCostPerMile, distance);\n        System.out.println(\"Total cost of the road trip: $\" + totalCost);\n    }\n}\n```"
  },
  {
    "task": "Write a script that determines the number of tiles required to cover a floor area using arithmetic operations.",
    "code": "```java\npublic class TileCalculator {\n    public static void main(String[] args) {\n        double floorLength = 10.0; // Length of the floor in meters\n        double floorWidth = 8.0; // Width of the floor in meters\n        double tileLength = 0.5; // Length of a tile in meters\n        double tileWidth = 0.5; // Width of a tile in meters\n\n        double floorArea = floorLength * floorWidth;\n        double tileArea = tileLength * tileWidth;\n        double tilesNeeded = Math.ceil(floorArea / tileArea);\n\n        System.out.println(\"Number of tiles required: \" + (int)tilesNeeded);\n    }\n}\n```"
  },
  {
    "task": "Develop a program to calculate the amount of paint needed to cover a wall given its area.",
    "code": "```java\nimport java.util.Scanner;\n\npublic class PaintCalculator {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n\n        System.out.println(\"Enter the area of the wall in square meters:\");\n        double area = scanner.nextDouble();\n\n        System.out.println(\"Enter the coverage of the paint in square meters per liter:\");\n        double coveragePerLiter = scanner.nextDouble();\n\n        double paintNeeded = area / coveragePerLiter;\n        \n        System.out.printf(\"Amount of paint needed: %.2f liters%n\", paintNeeded);\n        \n        scanner.close();\n    }\n}\n```"
  },
  {
    "task": "Build a function that calculates the price per unit weight given total price and weight.",
    "code": "```java\npublic class PriceCalculator {\n    public static double calculatePricePerUnitWeight(double totalPrice, double weight) {\n        return totalPrice / weight;\n    }\n\n    public static void main(String[] args) {\n        double totalPrice = 100.0;\n        double weight = 5.0;\n        double pricePerUnit = calculatePricePerUnitWeight(totalPrice, weight);\n        System.out.println(\"Price per unit weight: \" + pricePerUnit);\n    }\n}\n```"
  },
  {
    "task": "Implement a program that computes the volume of a rectangular prism given its dimensions.",
    "code": "```java\nimport java.util.Scanner;\n\npublic class RectangularPrismVolumeCalculator {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        \n        System.out.print(\"Enter the length of the rectangular prism: \");\n        double length = scanner.nextDouble();\n        \n        System.out.print(\"Enter the width of the rectangular prism: \");\n        double width = scanner.nextDouble();\n        \n        System.out.print(\"Enter the height of the rectangular prism: \");\n        double height = scanner.nextDouble();\n        \n        double volume = length * width * height;\n        \n        System.out.println(\"The volume of the rectangular prism is: \" + volume);\n        \n        scanner.close();\n    }\n}\n```"
  },
  {
    "task": "Write a function to find the percentage increase or decrease between two numbers.",
    "code": "```java\npublic class ArithmeticOperations {\n\n    public static double calculatePercentageChange(double originalValue, double newValue) {\n        if (originalValue == 0) {\n            throw new IllegalArgumentException(\"Original value cannot be zero.\");\n        }\n        return ((newValue - originalValue) / originalValue) * 100;\n    }\n\n    public static void main(String[] args) {\n        double originalValue = 50.0;\n        double newValue = 75.0;\n        double percentageChange = calculatePercentageChange(originalValue, newValue);\n        System.out.println(\"Percentage Change: \" + percentageChange + \"%\");\n    }\n}\n```"
  },
  {
    "task": "Create a program to determine the number of complete weeks within a specified number of days.",
    "code": "```java\nimport java.util.Scanner;\n\npublic class CompleteWeeksCalculator {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        System.out.print(\"Enter the number of days: \");\n        int days = scanner.nextInt();\n        \n        int completeWeeks = days / 7;\n        \n        System.out.println(\"Number of complete weeks: \" + completeWeeks);\n    }\n}\n```"
  },
  {
    "task": "Design a function that calculates the break-even point for a business using cost and revenue data.",
    "code": "```java\npublic class BreakEvenCalculator {\n\n    public static void main(String[] args) {\n        double fixedCosts = 10000.0;\n        double variableCostsPerUnit = 50.0;\n        double pricePerUnit = 100.0;\n\n        double breakEvenPoint = calculateBreakEvenPoint(fixedCosts, variableCostsPerUnit, pricePerUnit);\n        System.out.println(\"Break-even point (in units): \" + breakEvenPoint);\n    }\n\n    public static double calculateBreakEvenPoint(double fixedCosts, double variableCostsPerUnit, double pricePerUnit) {\n        if (pricePerUnit <= variableCostsPerUnit) {\n            throw new IllegalArgumentException(\"Price per unit must be greater than variable costs per unit.\");\n        }\n        return fixedCosts / (pricePerUnit - variableCostsPerUnit);\n    }\n}\n```"
  },
  {
    "task": "Develop a program that converts a total number of seconds into hours, minutes, and seconds.",
    "code": "```java\nimport java.util.Scanner;\n\npublic class TimeConverter {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        System.out.print(\"Enter total seconds: \");\n        int totalSeconds = scanner.nextInt();\n\n        int hours = totalSeconds / 3600;\n        int remainingSeconds = totalSeconds % 3600;\n        int minutes = remainingSeconds / 60;\n        int seconds = remainingSeconds % 60;\n\n        System.out.println(\"Hours: \" + hours);\n        System.out.println(\"Minutes: \" + minutes);\n        System.out.println(\"Seconds: \" + seconds);\n    }\n}\n```"
  },
  {
    "task": "Write a function that calculates the depreciation of an asset over time using arithmetic operations.",
    "code": "```java\npublic class DepreciationCalculator {\n    public static double calculateDepreciation(double initialCost, double salvageValue, int usefulLife) {\n        double depreciation = (initialCost - salvageValue) / usefulLife;\n        return depreciation;\n    }\n\n    public static void main(String[] args) {\n        double initialCost = 10000.0;\n        double salvageValue = 2000.0;\n        int usefulLife = 5;\n\n        double annualDepreciation = calculateDepreciation(initialCost, salvageValue, usefulLife);\n        System.out.println(\"Annual Depreciation: \" + annualDepreciation);\n    }\n}\n```"
  },
  {
    "task": "Create a program that computes the final exam grade needed to achieve a target course average.",
    "code": "```java\nimport java.util.Scanner;\n\npublic class FinalExamGradeCalculator {\n\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n\n        System.out.print(\"Enter your current average: \");\n        double currentAverage = scanner.nextDouble();\n\n        System.out.print(\"Enter the weight of the final exam (as a percentage): \");\n        double finalExamWeight = scanner.nextDouble() / 100.0;\n\n        System.out.print(\"Enter your target course average: \");\n        double targetAverage = scanner.nextDouble();\n\n        double requiredFinalExamGrade = (targetAverage - (1 - finalExamWeight) * currentAverage) / finalExamWeight;\n\n        System.out.printf(\"You need to score %.2f on the final exam to achieve your target average.\\n\", requiredFinalExamGrade);\n\n        scanner.close();\n    }\n}\n```"
  },
  {
    "task": "Implement a function to calculate the total cost of groceries given prices and quantities of items.",
    "code": "```java\nimport java.util.Map;\n\npublic class GroceryCalculator {\n\n    public static double calculateTotalCost(Map<String, Double> prices, Map<String, Integer> quantities) {\n        double totalCost = 0.0;\n        for (String item : prices.keySet()) {\n            if (quantities.containsKey(item)) {\n                totalCost += prices.get(item) * quantities.get(item);\n            }\n        }\n        return totalCost;\n    }\n\n    public static void main(String[] args) {\n        Map<String, Double> prices = Map.of(\"apple\", 0.99, \"banana\", 0.59, \"milk\", 2.49);\n        Map<String, Integer> quantities = Map.of(\"apple\", 3, \"banana\", 2, \"milk\", 1);\n        \n        double total = calculateTotalCost(prices, quantities);\n        System.out.println(\"Total cost: $\" + total);\n    }\n}\n```"
  },
  {
    "task": "Write a script that determines the number of years required to double an investment using a fixed interest rate.",
    "code": "```java\npublic class InvestmentDoubling {\n    public static void main(String[] args) {\n        double initialInvestment = 1000.0; // Example initial investment\n        double interestRate = 0.05; // Example fixed interest rate (5%)\n        double targetAmount = initialInvestment * 2;\n        double currentAmount = initialInvestment;\n        int years = 0;\n\n        while (currentAmount < targetAmount) {\n            currentAmount += currentAmount * interestRate;\n            years++;\n        }\n\n        System.out.println(\"Years required to double the investment: \" + years);\n    }\n}\n```"
  },
  {
    "task": "Develop a function that computes the harmonic mean of a set of numbers using division and addition.",
    "code": "```java\npublic class HarmonicMeanCalculator {\n\n    public static double harmonicMean(double[] numbers) {\n        if (numbers == null || numbers.length == 0) {\n            throw new IllegalArgumentException(\"Array must not be null or empty\");\n        }\n        \n        double sum = 0.0;\n        \n        for (double num : numbers) {\n            sum += 1.0 / num;\n        }\n        \n        return numbers.length / sum;\n    }\n\n    public static void main(String[] args) {\n        double[] numbers = {1.0, 2.0, 3.0, 4.0, 5.0};\n        double result = harmonicMean(numbers);\n        System.out.println(\"Harmonic Mean: \" + result);\n    }\n}\n```"
  },
  {
    "task": "Create a program to find the sum of the squares of numbers in a given range.",
    "code": "```java\nimport java.util.Scanner;\n\npublic class SumOfSquares {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        \n        System.out.print(\"Enter the start of the range: \");\n        int start = scanner.nextInt();\n        \n        System.out.print(\"Enter the end of the range: \");\n        int end = scanner.nextInt();\n        \n        int sumOfSquares = 0;\n        for (int i = start; i <= end; i++) {\n            sumOfSquares += i * i;\n        }\n        \n        System.out.println(\"The sum of squares in the range is: \" + sumOfSquares);\n    }\n}\n```"
  },
  {
    "task": "Design a function that calculates the energy consumption of an appliance given power and usage time.",
    "code": "```java\npublic class EnergyCalculator {\n\n    public static double calculateEnergyConsumption(double power, double usageTime) {\n        return power * usageTime;\n    }\n\n    public static void main(String[] args) {\n        double power = 1500; // in watts\n        double usageTime = 3.5; // in hours\n        double energyConsumption = calculateEnergyConsumption(power, usageTime);\n        System.out.println(\"Energy Consumption: \" + energyConsumption + \" watt-hours\");\n    }\n}\n```"
  },
  {
    "task": "Write a program that simulates a simple stock portfolio using arithmetic operations for buying and selling.",
    "code": "```java\npublic class StockPortfolio {\n    private double totalValue;\n    private double cash;\n\n    public StockPortfolio(double initialCash) {\n        this.cash = initialCash;\n        this.totalValue = 0;\n    }\n\n    public void buy(double stockPrice, int quantity) {\n        double cost = stockPrice * quantity;\n        if (cash >= cost) {\n            cash -= cost;\n            totalValue += cost;\n        } else {\n            System.out.println(\"Insufficient funds to buy.\");\n        }\n    }\n\n    public void sell(double stockPrice, int quantity) {\n        double revenue = stockPrice * quantity;\n        if (totalValue >= revenue) {\n            cash += revenue;\n            totalValue -= revenue;\n        } else {\n            System.out.println(\"Insufficient stock to sell.\");\n        }\n    }\n\n    public double getCash() {\n        return cash;\n    }\n\n    public double getTotalValue() {\n        return totalValue;\n    }\n\n    public static void main(String[] args) {\n        StockPortfolio portfolio = new StockPortfolio(1000);\n        portfolio.buy(50, 10);\n        System.out.println(\"Cash after buying: \" + portfolio.getCash());\n        System.out.println(\"Total value after buying: \" + portfolio.getTotalValue());\n        portfolio.sell(60, 5);\n        System.out.println(\"Cash after selling: \" + portfolio.getCash());\n        System.out.println(\"Total value after selling: \" + portfolio.getTotalValue());\n    }\n}\n```"
  },
  {
    "task": "Implement a function to calculate the gravitational force between two masses using multiplication and division.",
    "code": "```java\npublic class GravitationalForceCalculator {\n\n    public static double calculateGravitationalForce(double mass1, double mass2, double distance) {\n        final double G = 6.67430e-11; // Gravitational constant in m^3 kg^-1 s^-2\n        return (G * mass1 * mass2) / (distance * distance);\n    }\n\n    public static void main(String[] args) {\n        double mass1 = 5.972e24; // Example mass in kg (Earth)\n        double mass2 = 7.348e22; // Example mass in kg (Moon)\n        double distance = 3.844e8; // Distance in meters (average distance from Earth to Moon)\n        \n        double force = calculateGravitationalForce(mass1, mass2, distance);\n        System.out.println(\"Gravitational Force: \" + force + \" N\");\n    }\n}\n```"
  },
  {
    "task": "Create a function that determines the price per square foot of a piece of real estate.",
    "code": "```java\npublic class RealEstateCalculator {\n    \n    public static double pricePerSquareFoot(double totalPrice, double areaInSquareFeet) {\n        if (areaInSquareFeet == 0) {\n            throw new IllegalArgumentException(\"Area cannot be zero.\");\n        }\n        return totalPrice / areaInSquareFeet;\n    }\n\n    public static void main(String[] args) {\n        double totalPrice = 500000.0; // example total price\n        double areaInSquareFeet = 2500.0; // example area in square feet\n        double pricePerSqFt = pricePerSquareFoot(totalPrice, areaInSquareFeet);\n        System.out.println(\"Price per square foot: $\" + pricePerSqFt);\n    }\n}\n```"
  },
  {
    "task": "Write a script to compute the total interest earned on a savings account with monthly compounding.",
    "code": "```java\npublic class SavingsAccountInterest {\n\n    public static void main(String[] args) {\n        double principal = 1000.0; // Initial amount\n        double annualInterestRate = 5.0; // Annual interest rate in percent\n        int years = 5; // Number of years\n\n        double totalAmount = computeTotalInterest(principal, annualInterestRate, years);\n        System.out.printf(\"Total interest earned: %.2f\\n\", totalAmount - principal);\n    }\n\n    private static double computeTotalInterest(double principal, double annualRate, int years) {\n        double monthlyRate = annualRate / 12 / 100;\n        int totalMonths = years * 12;\n        return principal * Math.pow(1 + monthlyRate, totalMonths);\n    }\n}\n```"
  },
  {
    "task": "Develop a program that calculates the calories burned during exercise given MET value and duration.",
    "code": "```java\nimport java.util.Scanner;\n\npublic class CaloriesBurnedCalculator {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n\n        // Input MET value\n        System.out.print(\"Enter the MET value: \");\n        double metValue = scanner.nextDouble();\n\n        // Input duration in minutes\n        System.out.print(\"Enter the duration in minutes: \");\n        double duration = scanner.nextDouble();\n\n        // Input weight in kilograms\n        System.out.print(\"Enter your weight in kilograms: \");\n        double weight = scanner.nextDouble();\n\n        // Calculate calories burned\n        double caloriesBurned = calculateCaloriesBurned(metValue, duration, weight);\n\n        // Output the result\n        System.out.printf(\"Calories burned: %.2f%n\", caloriesBurned);\n    }\n\n    public static double calculateCaloriesBurned(double met, double duration, double weight) {\n        return met * weight * duration / 60;\n    }\n}\n```"
  },
  {
    "task": "Build a function that converts a speed from miles per hour to kilometers per hour using multiplication.",
    "code": "```java\npublic class SpeedConverter {\n\n    public static double convertMphToKph(double mph) {\n        return mph * 1.60934;\n    }\n\n    public static void main(String[] args) {\n        double mph = 60.0;\n        double kph = convertMphToKph(mph);\n        System.out.println(mph + \" miles per hour is \" + kph + \" kilometers per hour.\");\n    }\n}\n```"
  },
  {
    "task": "Implement a program to find the number of days between two dates using arithmetic operations.",
    "code": "```java\nimport java.time.LocalDate;\nimport java.time.temporal.ChronoUnit;\n\npublic class DateDifference {\n    public static void main(String[] args) {\n        LocalDate startDate = LocalDate.of(2023, 1, 1);\n        LocalDate endDate = LocalDate.of(2023, 10, 10);\n        \n        long daysBetween = ChronoUnit.DAYS.between(startDate, endDate);\n        System.out.println(\"Number of days between: \" + daysBetween);\n    }\n}\n```"
  },
  {
    "task": "Write a function to calculate the area of a circle given its radius.",
    "code": "```java\npublic class CircleAreaCalculator {\n    public static double calculateArea(double radius) {\n        return Math.PI * radius * radius;\n    }\n\n    public static void main(String[] args) {\n        double radius = 5.0;\n        double area = calculateArea(radius);\n        System.out.println(\"The area of the circle is: \" + area);\n    }\n}\n```"
  },
  {
    "task": "Create a program that determines the total distance driven given trips with varying speeds and durations.",
    "code": "```java\npublic class TotalDistance {\n\n    public static void main(String[] args) {\n        // Example trips with speeds (in km/h) and durations (in hours)\n        double[] speeds = {60, 80, 100}; // Speeds in km/h\n        double[] durations = {1.5, 2, 2.5}; // Durations in hours\n\n        double totalDistance = calculateTotalDistance(speeds, durations);\n\n        System.out.println(\"Total distance driven: \" + totalDistance + \" km\");\n    }\n\n    public static double calculateTotalDistance(double[] speeds, double[] durations) {\n        double totalDistance = 0;\n        for (int i = 0; i < speeds.length; i++) {\n            totalDistance += speeds[i] * durations[i];\n        }\n        return totalDistance;\n    }\n}\n```"
  },
  {
    "task": "Design a function to compute the final price of an item after applying multiple discounts sequentially.",
    "code": "```java\npublic class PriceCalculator {\n    public static double computeFinalPrice(double initialPrice, double[] discounts) {\n        double finalPrice = initialPrice;\n        for (double discount : discounts) {\n            finalPrice -= finalPrice * (discount / 100.0);\n        }\n        return finalPrice;\n    }\n\n    public static void main(String[] args) {\n        double initialPrice = 100.0;\n        double[] discounts = {10.0, 20.0, 5.0};\n        double finalPrice = computeFinalPrice(initialPrice, discounts);\n        System.out.println(\"Final Price: \" + finalPrice);\n    }\n}\n```"
  },
  {
    "task": "Write a script that calculates the number of bricks needed to build a wall given wall dimensions and brick size.",
    "code": "```java\npublic class WallCalculator {\n\n    public static void main(String[] args) {\n        double wallLength = 10.0; // in meters\n        double wallHeight = 2.5;  // in meters\n        \n        double brickLength = 0.2; // in meters\n        double brickHeight = 0.1; // in meters\n        \n        double wallArea = wallLength * wallHeight;\n        double brickArea = brickLength * brickHeight;\n        \n        int numberOfBricks = (int) Math.ceil(wallArea / brickArea);\n        \n        System.out.println(\"Number of bricks needed: \" + numberOfBricks);\n    }\n}\n```"
  },
  {
    "task": "Develop a program to determine the number of pizzas required for a party given the number of people and slices per pizza.",
    "code": "```java\nimport java.util.Scanner;\n\npublic class PizzaCalculator {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        \n        System.out.print(\"Enter the number of people: \");\n        int numberOfPeople = scanner.nextInt();\n        \n        System.out.print(\"Enter the number of slices each person will eat: \");\n        int slicesPerPerson = scanner.nextInt();\n        \n        System.out.print(\"Enter the number of slices per pizza: \");\n        int slicesPerPizza = scanner.nextInt();\n        \n        int totalSlicesNeeded = numberOfPeople * slicesPerPerson;\n        int pizzasRequired = (int) Math.ceil((double) totalSlicesNeeded / slicesPerPizza);\n        \n        System.out.println(\"Number of pizzas required: \" + pizzasRequired);\n        \n        scanner.close();\n    }\n}\n```"
  },
  {
    "task": "Implement a function that calculates the total cost of a meal including tax and tip.",
    "code": "```java\npublic class MealCostCalculator {\n    public static double calculateTotalCost(double mealCost, double taxRate, double tipRate) {\n        double taxAmount = mealCost * taxRate;\n        double tipAmount = mealCost * tipRate;\n        return mealCost + taxAmount + tipAmount;\n    }\n\n    public static void main(String[] args) {\n        double mealCost = 50.0;\n        double taxRate = 0.08;  // 8% tax\n        double tipRate = 0.15;  // 15% tip\n        double totalCost = calculateTotalCost(mealCost, taxRate, tipRate);\n        System.out.println(\"Total cost: $\" + totalCost);\n    }\n}\n```"
  },
  {
    "task": "Create a program to compute the average rainfall over a period using addition and division.",
    "code": "```java\nimport java.util.Scanner;\n\npublic class AverageRainfallCalculator {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        System.out.print(\"Enter the number of days: \");\n        int numberOfDays = scanner.nextInt();\n        \n        double totalRainfall = 0.0;\n\n        for (int i = 1; i <= numberOfDays; i++) {\n            System.out.print(\"Enter rainfall for day \" + i + \": \");\n            double dailyRainfall = scanner.nextDouble();\n            totalRainfall += dailyRainfall;\n        }\n\n        double averageRainfall = totalRainfall / numberOfDays;\n        System.out.println(\"Average Rainfall: \" + averageRainfall);\n    }\n}\n```"
  },
  {
    "task": "Write a function that determines the number of batches needed to produce a specific quantity of a product.",
    "code": "```java\npublic class ProductionCalculator {\n\n    public static int calculateBatches(int totalQuantity, int batchSize) {\n        if (batchSize <= 0) {\n            throw new IllegalArgumentException(\"Batch size must be greater than zero.\");\n        }\n        return (totalQuantity + batchSize - 1) / batchSize;\n    }\n\n    public static void main(String[] args) {\n        int totalQuantity = 105;\n        int batchSize = 10;\n        int numberOfBatches = calculateBatches(totalQuantity, batchSize);\n        System.out.println(\"Number of batches needed: \" + numberOfBatches);\n    }\n}\n```"
  },
  {
    "task": "Design a program to calculate the total energy consumption of a household given individual appliance usage.",
    "code": "```java\npublic class EnergyConsumptionCalculator {\n\n    public static void main(String[] args) {\n        // Appliance usage in kWh\n        double fridgeUsage = 1.5;\n        double washingMachineUsage = 2.0;\n        double airConditionerUsage = 3.5;\n        double televisionUsage = 0.7;\n        \n        // Calculate total energy consumption\n        double totalEnergyConsumption = fridgeUsage + washingMachineUsage + airConditionerUsage + televisionUsage;\n        \n        // Output the result\n        System.out.println(\"Total Energy Consumption: \" + totalEnergyConsumption + \" kWh\");\n    }\n}\n```"
  },
  {
    "task": "Develop a function that computes the body surface area of a person using height and weight.",
    "code": "```java\npublic class BodySurfaceAreaCalculator {\n\n    public static double computeBodySurfaceArea(double height, double weight) {\n        // Using the Mosteller formula for body surface area (BSA)\n        return Math.sqrt((height * weight) / 3600);\n    }\n\n    public static void main(String[] args) {\n        double height = 175; // in centimeters\n        double weight = 70;  // in kilograms\n        \n        double bsa = computeBodySurfaceArea(height, weight);\n        System.out.println(\"The body surface area is: \" + bsa + \" square meters\");\n    }\n}\n```"
  },
  {
    "task": "Build a script to calculate the monthly payment on a mortgage using principal, interest rate, and term.",
    "code": "```java\npublic class MortgageCalculator {\n\n    public static double calculateMonthlyPayment(double principal, double annualInterestRate, int termInYears) {\n        double monthlyInterestRate = annualInterestRate / 100 / 12;\n        int numberOfPayments = termInYears * 12;\n\n        double monthlyPayment = (principal * monthlyInterestRate) /\n                (1 - Math.pow(1 + monthlyInterestRate, -numberOfPayments));\n\n        return monthlyPayment;\n    }\n\n    public static void main(String[] args) {\n        double principal = 200000; // Example principal amount\n        double annualInterestRate = 5; // Example annual interest rate\n        int termInYears = 30; // Example term in years\n\n        double monthlyPayment = calculateMonthlyPayment(principal, annualInterestRate, termInYears);\n        System.out.printf(\"Monthly Payment: %.2f\\n\", monthlyPayment);\n    }\n}\n```"
  },
  {
    "task": "Implement a function to find the volume of a cone given its height and radius.",
    "code": "```java\npublic class ConeVolumeCalculator {\n\n    public static double calculateConeVolume(double radius, double height) {\n        return (Math.PI * Math.pow(radius, 2) * height) / 3;\n    }\n\n    public static void main(String[] args) {\n        double radius = 5.0;\n        double height = 10.0;\n        double volume = calculateConeVolume(radius, height);\n        System.out.println(\"Volume of the cone: \" + volume);\n    }\n}\n```"
  },
  {
    "task": "Write a program that estimates the cost of a trip using fuel efficiency and distance.",
    "code": "```java\nimport java.util.Scanner;\n\npublic class TripCostEstimator {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        \n        System.out.print(\"Enter the distance of the trip in miles: \");\n        double distance = scanner.nextDouble();\n        \n        System.out.print(\"Enter the fuel efficiency in miles per gallon: \");\n        double fuelEfficiency = scanner.nextDouble();\n        \n        System.out.print(\"Enter the cost of fuel per gallon: \");\n        double fuelCostPerGallon = scanner.nextDouble();\n        \n        double gallonsNeeded = distance / fuelEfficiency;\n        double totalCost = gallonsNeeded * fuelCostPerGallon;\n        \n        System.out.printf(\"The estimated cost of the trip is: $%.2f%n\", totalCost);\n        \n        scanner.close();\n    }\n}\n```"
  }
]