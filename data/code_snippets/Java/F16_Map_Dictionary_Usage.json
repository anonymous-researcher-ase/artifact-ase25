[
  {
    "task": "Create a map to store student names as keys and their grades as values, then calculate the average grade.",
    "code": "```java\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class StudentGrades {\n    public static void main(String[] args) {\n        Map<String, Integer> studentGrades = new HashMap<>();\n\n        studentGrades.put(\"Alice\", 85);\n        studentGrades.put(\"Bob\", 92);\n        studentGrades.put(\"Charlie\", 78);\n        studentGrades.put(\"Diana\", 90);\n\n        int total = 0;\n        for (int grade : studentGrades.values()) {\n            total += grade;\n        }\n\n        double average = total / (double) studentGrades.size();\n        System.out.println(\"Average Grade: \" + average);\n    }\n}\n```"
  },
  {
    "task": "Develop a function that takes a dictionary of product names and prices, and returns the total cost of all products.",
    "code": "```java\nimport java.util.Map;\n\npublic class ProductCalculator {\n\n    public static double calculateTotalCost(Map<String, Double> products) {\n        double totalCost = 0;\n        for (double price : products.values()) {\n            totalCost += price;\n        }\n        return totalCost;\n    }\n\n    public static void main(String[] args) {\n        Map<String, Double> products = Map.of(\n            \"Apple\", 1.20,\n            \"Banana\", 0.75,\n            \"Orange\", 0.90\n        );\n\n        double total = calculateTotalCost(products);\n        System.out.println(\"Total cost: $\" + total);\n    }\n}\n```"
  },
  {
    "task": "Implement a program that counts the frequency of each word in a given text using a dictionary.",
    "code": "```java\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class WordFrequencyCounter {\n    public static Map<String, Integer> countWordFrequency(String text) {\n        Map<String, Integer> wordFrequency = new HashMap<>();\n        String[] words = text.split(\"\\\\s+\");\n        \n        for (String word : words) {\n            word = word.toLowerCase();\n            wordFrequency.put(word, wordFrequency.getOrDefault(word, 0) + 1);\n        }\n        \n        return wordFrequency;\n    }\n\n    public static void main(String[] args) {\n        String text = \"This is a sample text with words. This text is a sample text.\";\n        Map<String, Integer> frequency = countWordFrequency(text);\n        \n        for (Map.Entry<String, Integer> entry : frequency.entrySet()) {\n            System.out.println(entry.getKey() + \": \" + entry.getValue());\n        }\n    }\n}\n```"
  },
  {
    "task": "Write a function that takes a dictionary of employee IDs and their work hours, and returns the ID of the employee with the most hours.",
    "code": "```java\nimport java.util.Map;\n\npublic class EmployeeHours {\n\n    public static String findEmployeeWithMostHours(Map<String, Integer> employeeHours) {\n        String topEmployeeId = null;\n        int maxHours = Integer.MIN_VALUE;\n\n        for (Map.Entry<String, Integer> entry : employeeHours.entrySet()) {\n            if (entry.getValue() > maxHours) {\n                maxHours = entry.getValue();\n                topEmployeeId = entry.getKey();\n            }\n        }\n\n        return topEmployeeId;\n    }\n}\n```"
  },
  {
    "task": "Design a system that uses a map to store users' login attempts and timestamps, then locks the account after three failed attempts.",
    "code": "```java\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class AccountLockSystem {\n    private Map<String, Integer> loginAttempts;\n    private Map<String, Long> accountLockTime;\n    private final int MAX_ATTEMPTS = 3;\n    private final long LOCK_DURATION = 300000; // Lock duration in milliseconds (e.g., 5 minutes)\n\n    public AccountLockSystem() {\n        loginAttempts = new HashMap<>();\n        accountLockTime = new HashMap<>();\n    }\n\n    public boolean isAccountLocked(String username) {\n        if (!accountLockTime.containsKey(username)) {\n            return false;\n        }\n        long lockTime = accountLockTime.get(username);\n        if (System.currentTimeMillis() - lockTime > LOCK_DURATION) {\n            accountLockTime.remove(username);\n            loginAttempts.remove(username);\n            return false;\n        }\n        return true;\n    }\n\n    public void recordLoginAttempt(String username, boolean isSuccess) {\n        if (isAccountLocked(username)) {\n            return;\n        }\n        \n        if (isSuccess) {\n            loginAttempts.remove(username);\n            return;\n        }\n\n        loginAttempts.put(username, loginAttempts.getOrDefault(username, 0) + 1);\n        if (loginAttempts.get(username) >= MAX_ATTEMPTS) {\n            accountLockTime.put(username, System.currentTimeMillis());\n        }\n    }\n    \n    public static void main(String[] args) {\n        AccountLockSystem system = new AccountLockSystem();\n        \n        String username = \"user1\";\n        system.recordLoginAttempt(username, false);\n        system.recordLoginAttempt(username, false);\n        system.recordLoginAttempt(username, false);\n        \n        System.out.println(\"Account locked: \" + system.isAccountLocked(username)); // Should print true\n    }\n}\n```"
  },
  {
    "task": "Create a dictionary to represent a phonebook, allowing users to add, remove, and look up contacts by name.",
    "code": "```java\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Phonebook {\n    private Map<String, String> phonebook;\n\n    public Phonebook() {\n        phonebook = new HashMap<>();\n    }\n\n    public void addContact(String name, String number) {\n        phonebook.put(name, number);\n    }\n\n    public void removeContact(String name) {\n        phonebook.remove(name);\n    }\n\n    public String lookupContact(String name) {\n        return phonebook.get(name);\n    }\n\n    public static void main(String[] args) {\n        Phonebook pb = new Phonebook();\n        pb.addContact(\"Alice\", \"123-456-7890\");\n        pb.addContact(\"Bob\", \"987-654-3210\");\n        \n        System.out.println(\"Alice's number: \" + pb.lookupContact(\"Alice\"));\n        \n        pb.removeContact(\"Bob\");\n        System.out.println(\"Bob's number: \" + pb.lookupContact(\"Bob\"));\n    }\n}\n```"
  },
  {
    "task": "Build a map that associates city names with their population, then find the city with the highest population.",
    "code": "```java\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class CityPopulation {\n    public static void main(String[] args) {\n        Map<String, Integer> cityPopulations = new HashMap<>();\n        cityPopulations.put(\"New York\", 8419000);\n        cityPopulations.put(\"Los Angeles\", 3980000);\n        cityPopulations.put(\"Chicago\", 2716000);\n        cityPopulations.put(\"Houston\", 2328000);\n        cityPopulations.put(\"Phoenix\", 1690000);\n\n        String cityWithMaxPopulation = null;\n        int maxPopulation = 0;\n\n        for (Map.Entry<String, Integer> entry : cityPopulations.entrySet()) {\n            if (entry.getValue() > maxPopulation) {\n                maxPopulation = entry.getValue();\n                cityWithMaxPopulation = entry.getKey();\n            }\n        }\n\n        System.out.println(\"City with the highest population: \" + cityWithMaxPopulation);\n    }\n}\n```"
  },
  {
    "task": "Write a program that translates English words to another language using a provided dictionary, and translates a given sentence.",
    "code": "```java\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Translator {\n    private Map<String, String> dictionary;\n\n    public Translator() {\n        dictionary = new HashMap<>();\n        dictionary.put(\"hello\", \"hola\");\n        dictionary.put(\"world\", \"mundo\");\n        dictionary.put(\"good\", \"bueno\");\n        dictionary.put(\"morning\", \"ma\u00f1ana\");\n    }\n\n    public String translateWord(String word) {\n        return dictionary.getOrDefault(word, word);\n    }\n\n    public String translateSentence(String sentence) {\n        String[] words = sentence.split(\" \");\n        StringBuilder translatedSentence = new StringBuilder();\n        for (String word : words) {\n            translatedSentence.append(translateWord(word)).append(\" \");\n        }\n        return translatedSentence.toString().trim();\n    }\n\n    public static void main(String[] args) {\n        Translator translator = new Translator();\n        String sentence = \"hello world good morning\";\n        String translated = translator.translateSentence(sentence);\n        System.out.println(translated);\n    }\n}\n```"
  },
  {
    "task": "Construct a dictionary to map book titles to their authors, and implement a search function to find all books by a given author.",
    "code": "```java\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\n\npublic class BookLibrary {\n    private Map<String, String> bookDictionary;\n\n    public BookLibrary() {\n        bookDictionary = new HashMap<>();\n    }\n\n    public void addBook(String title, String author) {\n        bookDictionary.put(title, author);\n    }\n\n    public List<String> findBooksByAuthor(String author) {\n        List<String> booksByAuthor = new ArrayList<>();\n        for (Map.Entry<String, String> entry : bookDictionary.entrySet()) {\n            if (entry.getValue().equals(author)) {\n                booksByAuthor.add(entry.getKey());\n            }\n        }\n        return booksByAuthor;\n    }\n\n    public static void main(String[] args) {\n        BookLibrary library = new BookLibrary();\n        library.addBook(\"1984\", \"George Orwell\");\n        library.addBook(\"Animal Farm\", \"George Orwell\");\n        library.addBook(\"Brave New World\", \"Aldous Huxley\");\n\n        List<String> orwellBooks = library.findBooksByAuthor(\"George Orwell\");\n        for (String book : orwellBooks) {\n            System.out.println(book);\n        }\n    }\n}\n```"
  },
  {
    "task": "Create a map to store product IDs and their stock levels, then implement a function to update stock levels after a sale.",
    "code": "```java\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class InventoryManager {\n    private Map<String, Integer> productStock;\n\n    public InventoryManager() {\n        productStock = new HashMap<>();\n    }\n\n    public void addProduct(String productId, int stockLevel) {\n        productStock.put(productId, stockLevel);\n    }\n\n    public void updateStockAfterSale(String productId, int quantitySold) {\n        if (productStock.containsKey(productId)) {\n            int currentStock = productStock.get(productId);\n            productStock.put(productId, currentStock - quantitySold);\n        }\n    }\n\n    public static void main(String[] args) {\n        InventoryManager manager = new InventoryManager();\n        manager.addProduct(\"P001\", 100);\n        manager.updateStockAfterSale(\"P001\", 5);\n    }\n}\n```"
  },
  {
    "task": "Write a script that uses a dictionary to convert country codes to country names and prints the full name for a given code.",
    "code": "```java\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class CountryCodeConverter {\n    public static void main(String[] args) {\n        // Create a map to store country codes and their corresponding country names\n        Map<String, String> countryCodes = new HashMap<>();\n        countryCodes.put(\"US\", \"United States\");\n        countryCodes.put(\"CA\", \"Canada\");\n        countryCodes.put(\"MX\", \"Mexico\");\n        countryCodes.put(\"FR\", \"France\");\n        countryCodes.put(\"DE\", \"Germany\");\n        \n        // Given country code\n        String code = \"US\";\n        \n        // Convert code to country name and print it\n        if (countryCodes.containsKey(code)) {\n            System.out.println(countryCodes.get(code));\n        } else {\n            System.out.println(\"Country code not found.\");\n        }\n    }\n}\n```"
  },
  {
    "task": "Design a program that stores student IDs and names in a dictionary, and allows retrieval of names by ID.",
    "code": "```java\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class StudentDirectory {\n    private Map<Integer, String> studentMap;\n\n    public StudentDirectory() {\n        studentMap = new HashMap<>();\n    }\n\n    public void addStudent(int id, String name) {\n        studentMap.put(id, name);\n    }\n\n    public String getStudentNameById(int id) {\n        return studentMap.get(id);\n    }\n\n    public static void main(String[] args) {\n        StudentDirectory directory = new StudentDirectory();\n        directory.addStudent(101, \"Alice\");\n        directory.addStudent(102, \"Bob\");\n\n        System.out.println(\"Student with ID 101: \" + directory.getStudentNameById(101));\n        System.out.println(\"Student with ID 102: \" + directory.getStudentNameById(102));\n    }\n}\n```"
  },
  {
    "task": "Implement a dictionary to store configuration settings for a software application, allowing updates and retrieval of settings.",
    "code": "```java\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class ConfigurationSettings {\n    private Map<String, String> settings;\n\n    public ConfigurationSettings() {\n        settings = new HashMap<>();\n    }\n\n    public void updateSetting(String key, String value) {\n        settings.put(key, value);\n    }\n\n    public String getSetting(String key) {\n        return settings.get(key);\n    }\n\n    public static void main(String[] args) {\n        ConfigurationSettings config = new ConfigurationSettings();\n        config.updateSetting(\"theme\", \"dark\");\n        config.updateSetting(\"language\", \"en\");\n        \n        System.out.println(\"Theme: \" + config.getSetting(\"theme\"));\n        System.out.println(\"Language: \" + config.getSetting(\"language\"));\n    }\n}\n```"
  },
  {
    "task": "Create a map that stores words as keys and their definitions as values, and write a function to display all words starting with a given letter.",
    "code": "```java\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Dictionary {\n    private Map<String, String> wordMap;\n\n    public Dictionary() {\n        wordMap = new HashMap<>();\n    }\n\n    public void addWord(String word, String definition) {\n        wordMap.put(word, definition);\n    }\n\n    public void displayWordsStartingWith(char letter) {\n        for (String word : wordMap.keySet()) {\n            if (word.charAt(0) == letter) {\n                System.out.println(word + \": \" + wordMap.get(word));\n            }\n        }\n    }\n\n    public static void main(String[] args) {\n        Dictionary dictionary = new Dictionary();\n        dictionary.addWord(\"apple\", \"A fruit.\");\n        dictionary.addWord(\"banana\", \"Another fruit.\");\n        dictionary.addWord(\"apricot\", \"A type of fruit.\");\n        dictionary.displayWordsStartingWith('a');\n    }\n}\n```"
  },
  {
    "task": "Write a program that uses a dictionary to store usernames and passwords, and verifies login attempts.",
    "code": "```java\nimport java.util.HashMap;\nimport java.util.Scanner;\n\npublic class LoginSystem {\n    private HashMap<String, String> userDatabase;\n\n    public LoginSystem() {\n        userDatabase = new HashMap<>();\n        // Sample data\n        userDatabase.put(\"user1\", \"password123\");\n        userDatabase.put(\"user2\", \"pass456\");\n    }\n\n    public boolean verifyLogin(String username, String password) {\n        if (userDatabase.containsKey(username)) {\n            return userDatabase.get(username).equals(password);\n        }\n        return false;\n    }\n\n    public static void main(String[] args) {\n        LoginSystem loginSystem = new LoginSystem();\n        Scanner scanner = new Scanner(System.in);\n\n        System.out.print(\"Enter username: \");\n        String username = scanner.nextLine();\n\n        System.out.print(\"Enter password: \");\n        String password = scanner.nextLine();\n\n        if (loginSystem.verifyLogin(username, password)) {\n            System.out.println(\"Login successful!\");\n        } else {\n            System.out.println(\"Login failed!\");\n        }\n\n        scanner.close();\n    }\n}\n```"
  },
  {
    "task": "Design a map to track the number of times each item is purchased in a store, then find the most popular item.",
    "code": "```java\nimport java.util.HashMap;\nimport java.util.Map;\nimport java.util.Collections;\nimport java.util.Comparator;\n\npublic class StoreTracker {\n\n    public static void main(String[] args) {\n        // Sample data of purchases\n        String[] purchases = {\"apple\", \"banana\", \"apple\", \"orange\", \"banana\", \"apple\", \"banana\", \"banana\"};\n\n        // Initialize a map to track item purchases\n        Map<String, Integer> purchaseMap = new HashMap<>();\n\n        // Populate the map with purchase data\n        for (String item : purchases) {\n            purchaseMap.put(item, purchaseMap.getOrDefault(item, 0) + 1);\n        }\n\n        // Find the most popular item\n        String mostPopularItem = Collections.max(purchaseMap.entrySet(), Comparator.comparingInt(Map.Entry::getValue)).getKey();\n\n        System.out.println(\"Most popular item: \" + mostPopularItem);\n    }\n}\n```"
  },
  {
    "task": "Build a dictionary that associates file extensions with their corresponding application types and uses it to determine how to open a given file.",
    "code": "```java\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class FileOpener {\n    public static void main(String[] args) {\n        Map<String, String> fileAssociations = new HashMap<>();\n        fileAssociations.put(\"txt\", \"Text Editor\");\n        fileAssociations.put(\"jpg\", \"Image Viewer\");\n        fileAssociations.put(\"mp3\", \"Music Player\");\n        fileAssociations.put(\"mp4\", \"Video Player\");\n        fileAssociations.put(\"pdf\", \"PDF Reader\");\n\n        String fileName = \"example.mp3\";\n        String fileExtension = getFileExtension(fileName);\n\n        String application = fileAssociations.get(fileExtension);\n        if (application != null) {\n            System.out.println(\"Open with: \" + application);\n        } else {\n            System.out.println(\"No application associated with this file type.\");\n        }\n    }\n\n    private static String getFileExtension(String fileName) {\n        int dotIndex = fileName.lastIndexOf('.');\n        return (dotIndex == -1) ? \"\" : fileName.substring(dotIndex + 1);\n    }\n}\n```"
  },
  {
    "task": "Create a program that uses a map to store menu items and their prices, and allows customers to calculate their total bill.",
    "code": "```java\nimport java.util.HashMap;\nimport java.util.Map;\nimport java.util.Scanner;\n\npublic class MenuBilling {\n    public static void main(String[] args) {\n        Map<String, Double> menu = new HashMap<>();\n        menu.put(\"Burger\", 5.99);\n        menu.put(\"Pizza\", 8.99);\n        menu.put(\"Salad\", 4.99);\n        menu.put(\"Soda\", 1.99);\n        menu.put(\"Coffee\", 2.99);\n\n        Scanner scanner = new Scanner(System.in);\n        double totalBill = 0.0;\n        String input;\n\n        System.out.println(\"Enter the name of the menu item to add to your bill, or type 'done' to finish:\");\n        \n        while (true) {\n            input = scanner.nextLine();\n            if (input.equalsIgnoreCase(\"done\")) {\n                break;\n            }\n            if (menu.containsKey(input)) {\n                totalBill += menu.get(input);\n                System.out.printf(\"Added %s: $%.2f%n\", input, menu.get(input));\n            } else {\n                System.out.println(\"Item not found on the menu.\");\n            }\n        }\n\n        System.out.printf(\"Your total bill is: $%.2f%n\", totalBill);\n        scanner.close();\n    }\n}\n```"
  },
  {
    "task": "Implement a dictionary to track the inventory of a warehouse, allowing additions, removals, and inventory checks.",
    "code": "```java\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class WarehouseInventory {\n    private Map<String, Integer> inventory;\n\n    public WarehouseInventory() {\n        inventory = new HashMap<>();\n    }\n\n    public void addProduct(String product, int quantity) {\n        inventory.put(product, inventory.getOrDefault(product, 0) + quantity);\n    }\n\n    public void removeProduct(String product, int quantity) {\n        if (inventory.containsKey(product)) {\n            int currentQuantity = inventory.get(product);\n            if (currentQuantity <= quantity) {\n                inventory.remove(product);\n            } else {\n                inventory.put(product, currentQuantity - quantity);\n            }\n        }\n    }\n\n    public int checkInventory(String product) {\n        return inventory.getOrDefault(product, 0);\n    }\n\n    public static void main(String[] args) {\n        WarehouseInventory warehouse = new WarehouseInventory();\n        warehouse.addProduct(\"Widget\", 10);\n        warehouse.addProduct(\"Gadget\", 5);\n        warehouse.removeProduct(\"Widget\", 3);\n        System.out.println(\"Widgets in stock: \" + warehouse.checkInventory(\"Widget\"));\n        System.out.println(\"Gadgets in stock: \" + warehouse.checkInventory(\"Gadget\"));\n    }\n}\n```"
  },
  {
    "task": "Write a function that uses a map to convert Roman numerals to integers.",
    "code": "```java\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class RomanToInteger {\n    public int romanToInt(String s) {\n        Map<Character, Integer> romanMap = new HashMap<>();\n        romanMap.put('I', 1);\n        romanMap.put('V', 5);\n        romanMap.put('X', 10);\n        romanMap.put('L', 50);\n        romanMap.put('C', 100);\n        romanMap.put('D', 500);\n        romanMap.put('M', 1000);\n\n        int total = 0;\n        int prevValue = 0;\n        for (int i = s.length() - 1; i >= 0; i--) {\n            int currentValue = romanMap.get(s.charAt(i));\n            if (currentValue < prevValue) {\n                total -= currentValue;\n            } else {\n                total += currentValue;\n            }\n            prevValue = currentValue;\n        }\n        return total;\n    }\n}\n```"
  },
  {
    "task": "Develop a program that uses a dictionary to track the number of occurrences of each letter in a string.",
    "code": "```java\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class LetterCounter {\n    public static void main(String[] args) {\n        String input = \"example string\";\n        Map<Character, Integer> letterCount = new HashMap<>();\n\n        for (char c : input.toCharArray()) {\n            if (Character.isLetter(c)) {\n                c = Character.toLowerCase(c);\n                letterCount.put(c, letterCount.getOrDefault(c, 0) + 1);\n            }\n        }\n\n        for (Map.Entry<Character, Integer> entry : letterCount.entrySet()) {\n            System.out.println(entry.getKey() + \": \" + entry.getValue());\n        }\n    }\n}\n```"
  },
  {
    "task": "Create a map to store team names and their scores, then determine the team with the highest score.",
    "code": "```java\nimport java.util.HashMap;\nimport java.util.Map;\nimport java.util.Map.Entry;\n\npublic class TeamScores {\n    public static void main(String[] args) {\n        Map<String, Integer> teamScores = new HashMap<>();\n        \n        // Sample data\n        teamScores.put(\"Team A\", 85);\n        teamScores.put(\"Team B\", 92);\n        teamScores.put(\"Team C\", 78);\n        teamScores.put(\"Team D\", 90);\n        \n        String topTeam = null;\n        int highestScore = Integer.MIN_VALUE;\n        \n        for (Entry<String, Integer> entry : teamScores.entrySet()) {\n            if (entry.getValue() > highestScore) {\n                highestScore = entry.getValue();\n                topTeam = entry.getKey();\n            }\n        }\n        \n        System.out.println(\"Team with the highest score: \" + topTeam + \" with a score of \" + highestScore);\n    }\n}\n```"
  },
  {
    "task": "Write a function that takes a dictionary of item weights and calculates the total weight of all items.",
    "code": "```java\nimport java.util.Map;\n\npublic class ItemWeightCalculator {\n    public static double calculateTotalWeight(Map<String, Double> itemWeights) {\n        double totalWeight = 0.0;\n        for (double weight : itemWeights.values()) {\n            totalWeight += weight;\n        }\n        return totalWeight;\n    }\n\n    public static void main(String[] args) {\n        Map<String, Double> itemWeights = Map.of(\n            \"item1\", 2.5,\n            \"item2\", 3.0,\n            \"item3\", 1.75\n        );\n        double totalWeight = calculateTotalWeight(itemWeights);\n        System.out.println(\"Total weight: \" + totalWeight);\n    }\n}\n```"
  },
  {
    "task": "Implement a map to store website URLs and their respective visit counts, then find the most visited website.",
    "code": "```java\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class WebsiteVisitCounter {\n    public static void main(String[] args) {\n        Map<String, Integer> visitCountMap = new HashMap<>();\n\n        // Example data\n        visitCountMap.put(\"https://example.com\", 150);\n        visitCountMap.put(\"https://anotherexample.com\", 200);\n        visitCountMap.put(\"https://yetanotherexample.com\", 300);\n\n        String mostVisitedWebsite = null;\n        int maxVisits = 0;\n\n        for (Map.Entry<String, Integer> entry : visitCountMap.entrySet()) {\n            if (entry.getValue() > maxVisits) {\n                maxVisits = entry.getValue();\n                mostVisitedWebsite = entry.getKey();\n            }\n        }\n\n        System.out.println(\"Most visited website: \" + mostVisitedWebsite);\n        System.out.println(\"Visit count: \" + maxVisits);\n    }\n}\n```"
  },
  {
    "task": "Create a script that uses a dictionary to map error codes to error messages, and prints the message for a given code.",
    "code": "```java\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class ErrorCodeMapper {\n    public static void main(String[] args) {\n        Map<Integer, String> errorMap = new HashMap<>();\n        errorMap.put(404, \"Not Found\");\n        errorMap.put(500, \"Internal Server Error\");\n        errorMap.put(403, \"Forbidden\");\n        errorMap.put(401, \"Unauthorized\");\n        \n        int errorCode = 404; // example error code\n        String errorMessage = errorMap.getOrDefault(errorCode, \"Unknown Error\");\n        \n        System.out.println(\"Error Code: \" + errorCode + \", Message: \" + errorMessage);\n    }\n}\n```"
  },
  {
    "task": "Design a dictionary to store contact information with names as keys and phone numbers as values, allowing updates and lookups.",
    "code": "```java\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class ContactDictionary {\n    private Map<String, String> contacts;\n\n    public ContactDictionary() {\n        contacts = new HashMap<>();\n    }\n\n    public void addOrUpdateContact(String name, String phoneNumber) {\n        contacts.put(name, phoneNumber);\n    }\n\n    public String getPhoneNumber(String name) {\n        return contacts.get(name);\n    }\n\n    public static void main(String[] args) {\n        ContactDictionary contactDictionary = new ContactDictionary();\n        contactDictionary.addOrUpdateContact(\"Alice\", \"123-456-7890\");\n        contactDictionary.addOrUpdateContact(\"Bob\", \"098-765-4321\");\n\n        String aliceNumber = contactDictionary.getPhoneNumber(\"Alice\");\n        String bobNumber = contactDictionary.getPhoneNumber(\"Bob\");\n\n        System.out.println(\"Alice's Phone Number: \" + aliceNumber);\n        System.out.println(\"Bob's Phone Number: \" + bobNumber);\n    }\n}\n```"
  },
  {
    "task": "Write a program that uses a map to assign tasks to employees based on their skill levels.",
    "code": "```java\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class TaskAssignment {\n    public static void main(String[] args) {\n        Map<String, String> tasksToEmployees = new HashMap<>();\n\n        tasksToEmployees.put(\"Data Analysis\", \"Alice\");\n        tasksToEmployees.put(\"Software Development\", \"Bob\");\n        tasksToEmployees.put(\"Graphic Design\", \"Charlie\");\n        tasksToEmployees.put(\"System Administration\", \"David\");\n\n        for (Map.Entry<String, String> entry : tasksToEmployees.entrySet()) {\n            String task = entry.getKey();\n            String employee = entry.getValue();\n            System.out.println(\"Task: \" + task + \" is assigned to Employee: \" + employee);\n        }\n    }\n}\n```"
  },
  {
    "task": "Create a dictionary that maps airport codes to their respective city names, and allows retrieval of city names by code.",
    "code": "```java\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class AirportDictionary {\n    public static void main(String[] args) {\n        Map<String, String> airportMap = new HashMap<>();\n\n        // Add airport codes and city names\n        airportMap.put(\"JFK\", \"New York\");\n        airportMap.put(\"LAX\", \"Los Angeles\");\n        airportMap.put(\"ORD\", \"Chicago\");\n        airportMap.put(\"ATL\", \"Atlanta\");\n        airportMap.put(\"DFW\", \"Dallas\");\n\n        // Retrieve city names by airport code\n        String city = airportMap.get(\"LAX\");\n        System.out.println(\"LAX: \" + city);\n\n        city = airportMap.get(\"JFK\");\n        System.out.println(\"JFK: \" + city);\n\n        city = airportMap.get(\"ORD\");\n        System.out.println(\"ORD: \" + city);\n    }\n}\n```"
  },
  {
    "task": "Build a map to store movie titles and their release years, then find all movies released in a given decade.",
    "code": "```java\nimport java.util.HashMap;\nimport java.util.Map;\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class MovieFinder {\n    public static void main(String[] args) {\n        Map<String, Integer> movies = new HashMap<>();\n        \n        // Adding some movies and their release years\n        movies.put(\"The Shawshank Redemption\", 1994);\n        movies.put(\"Pulp Fiction\", 1994);\n        movies.put(\"The Matrix\", 1999);\n        movies.put(\"Forrest Gump\", 1994);\n        movies.put(\"Inception\", 2010);\n        movies.put(\"The Dark Knight\", 2008);\n        \n        int decade = 1990; // Example decade\n        List<String> moviesInDecade = findMoviesByDecade(movies, decade);\n        \n        for (String movie : moviesInDecade) {\n            System.out.println(movie);\n        }\n    }\n    \n    public static List<String> findMoviesByDecade(Map<String, Integer> movies, int decade) {\n        List<String> result = new ArrayList<>();\n        for (Map.Entry<String, Integer> entry : movies.entrySet()) {\n            int year = entry.getValue();\n            if (year >= decade && year < decade + 10) {\n                result.add(entry.getKey());\n            }\n        }\n        return result;\n    }\n}\n```"
  },
  {
    "task": "Write a function that uses a dictionary to group students by their grades.",
    "code": "```java\nimport java.util.ArrayList;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\npublic class StudentGrades {\n\n    public static Map<String, List<String>> groupStudentsByGrades(Map<String, String> students) {\n        Map<String, List<String>> groupedStudents = new HashMap<>();\n\n        for (Map.Entry<String, String> entry : students.entrySet()) {\n            String student = entry.getKey();\n            String grade = entry.getValue();\n\n            if (!groupedStudents.containsKey(grade)) {\n                groupedStudents.put(grade, new ArrayList<>());\n            }\n            groupedStudents.get(grade).add(student);\n        }\n\n        return groupedStudents;\n    }\n\n    public static void main(String[] args) {\n        Map<String, String> students = new HashMap<>();\n        students.put(\"Alice\", \"A\");\n        students.put(\"Bob\", \"B\");\n        students.put(\"Charlie\", \"A\");\n        students.put(\"David\", \"C\");\n\n        Map<String, List<String>> groupedStudents = groupStudentsByGrades(students);\n\n        for (Map.Entry<String, List<String>> entry : groupedStudents.entrySet()) {\n            System.out.println(\"Grade: \" + entry.getKey() + \" Students: \" + entry.getValue());\n        }\n    }\n}\n```"
  },
  {
    "task": "Create a dictionary to store the number of visitors to different sections of a website, and determine the most visited section.",
    "code": "```java\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class WebsiteVisitors {\n    public static void main(String[] args) {\n        Map<String, Integer> sectionVisitors = new HashMap<>();\n        \n        sectionVisitors.put(\"Home\", 150);\n        sectionVisitors.put(\"About\", 85);\n        sectionVisitors.put(\"Contact\", 50);\n        sectionVisitors.put(\"Blog\", 200);\n        sectionVisitors.put(\"Services\", 120);\n        \n        String mostVisitedSection = null;\n        int maxVisitors = 0;\n        \n        for (Map.Entry<String, Integer> entry : sectionVisitors.entrySet()) {\n            if (entry.getValue() > maxVisitors) {\n                maxVisitors = entry.getValue();\n                mostVisitedSection = entry.getKey();\n            }\n        }\n        \n        System.out.println(\"Most visited section: \" + mostVisitedSection);\n    }\n}\n```"
  },
  {
    "task": "Design a program that uses a map to assign project deadlines to team members, allowing for deadline extensions.",
    "code": "```java\nimport java.util.HashMap;\nimport java.util.Map;\nimport java.util.Scanner;\n\npublic class ProjectDeadlineManager {\n    private Map<String, String> deadlines;\n\n    public ProjectDeadlineManager() {\n        deadlines = new HashMap<>();\n    }\n\n    public void assignDeadline(String teamMember, String deadline) {\n        deadlines.put(teamMember, deadline);\n    }\n\n    public void extendDeadline(String teamMember, String newDeadline) {\n        if (deadlines.containsKey(teamMember)) {\n            deadlines.put(teamMember, newDeadline);\n        } else {\n            System.out.println(\"Team member not found.\");\n        }\n    }\n\n    public void displayDeadlines() {\n        for (Map.Entry<String, String> entry : deadlines.entrySet()) {\n            System.out.println(\"Team Member: \" + entry.getKey() + \", Deadline: \" + entry.getValue());\n        }\n    }\n\n    public static void main(String[] args) {\n        ProjectDeadlineManager manager = new ProjectDeadlineManager();\n        Scanner scanner = new Scanner(System.in);\n\n        while (true) {\n            System.out.println(\"1. Assign Deadline\");\n            System.out.println(\"2. Extend Deadline\");\n            System.out.println(\"3. Display Deadlines\");\n            System.out.println(\"4. Exit\");\n            System.out.print(\"Choose an option: \");\n            int choice = scanner.nextInt();\n            scanner.nextLine(); // consume newline\n\n            switch (choice) {\n                case 1:\n                    System.out.print(\"Enter team member's name: \");\n                    String member = scanner.nextLine();\n                    System.out.print(\"Enter deadline: \");\n                    String deadline = scanner.nextLine();\n                    manager.assignDeadline(member, deadline);\n                    break;\n                case 2:\n                    System.out.print(\"Enter team member's name: \");\n                    member = scanner.nextLine();\n                    System.out.print(\"Enter new deadline: \");\n                    String newDeadline = scanner.nextLine();\n                    manager.extendDeadline(member, newDeadline);\n                    break;\n                case 3:\n                    manager.displayDeadlines();\n                    break;\n                case 4:\n                    System.out.println(\"Exiting...\");\n                    scanner.close();\n                    return;\n                default:\n                    System.out.println(\"Invalid option. Please try again.\");\n            }\n        }\n    }\n}\n```"
  },
  {
    "task": "Implement a dictionary that keeps track of borrowed books in a library, allowing users to check available books.",
    "code": "```java\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Library {\n    private Map<String, Boolean> books;\n\n    public Library() {\n        books = new HashMap<>();\n    }\n\n    public void addBook(String bookName) {\n        books.put(bookName, true);\n    }\n\n    public void borrowBook(String bookName) {\n        if (books.containsKey(bookName) && books.get(bookName)) {\n            books.put(bookName, false);\n        }\n    }\n\n    public void returnBook(String bookName) {\n        if (books.containsKey(bookName)) {\n            books.put(bookName, true);\n        }\n    }\n\n    public boolean isBookAvailable(String bookName) {\n        return books.getOrDefault(bookName, false);\n    }\n\n    public static void main(String[] args) {\n        Library library = new Library();\n        library.addBook(\"The Great Gatsby\");\n        library.addBook(\"1984\");\n        \n        System.out.println(\"Is 'The Great Gatsby' available? \" + library.isBookAvailable(\"The Great Gatsby\"));\n        library.borrowBook(\"The Great Gatsby\");\n        System.out.println(\"Is 'The Great Gatsby' available? \" + library.isBookAvailable(\"The Great Gatsby\"));\n        library.returnBook(\"The Great Gatsby\");\n        System.out.println(\"Is 'The Great Gatsby' available? \" + library.isBookAvailable(\"The Great Gatsby\"));\n    }\n}\n```"
  },
  {
    "task": "Create a map to store the names of planets and their distances from the sun, then find the closest planet to Earth.",
    "code": "```java\nimport java.util.HashMap;\nimport java.util.Map;\nimport java.util.Collections;\n\npublic class PlanetDistances {\n    public static void main(String[] args) {\n        Map<String, Double> planetDistances = new HashMap<>();\n        planetDistances.put(\"Mercury\", 57.91);\n        planetDistances.put(\"Venus\", 108.2);\n        planetDistances.put(\"Earth\", 149.6);\n        planetDistances.put(\"Mars\", 227.9);\n        planetDistances.put(\"Jupiter\", 778.5);\n        planetDistances.put(\"Saturn\", 1434.0);\n        planetDistances.put(\"Uranus\", 2871.0);\n        planetDistances.put(\"Neptune\", 4497.1);\n\n        String closestPlanet = Collections.min(planetDistances.entrySet(), \n            (entry1, entry2) -> \n            Double.compare(Math.abs(entry1.getValue() - planetDistances.get(\"Earth\")), \n                           Math.abs(entry2.getValue() - planetDistances.get(\"Earth\")))).getKey();\n\n        System.out.println(\"The closest planet to Earth is: \" + closestPlanet);\n    }\n}\n```"
  },
  {
    "task": "Write a script that uses a dictionary to translate Morse code into plain text.",
    "code": "```java\nimport java.util.HashMap;\nimport java.util.Map;\nimport java.util.Scanner;\n\npublic class MorseCodeTranslator {\n\n    private static final Map<String, String> morseCodeMap = new HashMap<>();\n\n    static {\n        morseCodeMap.put(\".-\", \"A\");\n        morseCodeMap.put(\"-...\", \"B\");\n        morseCodeMap.put(\"-.-.\", \"C\");\n        morseCodeMap.put(\"-..\", \"D\");\n        morseCodeMap.put(\".\", \"E\");\n        morseCodeMap.put(\"..-.\", \"F\");\n        morseCodeMap.put(\"--.\", \"G\");\n        morseCodeMap.put(\"....\", \"H\");\n        morseCodeMap.put(\"..\", \"I\");\n        morseCodeMap.put(\".---\", \"J\");\n        morseCodeMap.put(\"-.-\", \"K\");\n        morseCodeMap.put(\".-..\", \"L\");\n        morseCodeMap.put(\"--\", \"M\");\n        morseCodeMap.put(\"-.\", \"N\");\n        morseCodeMap.put(\"---\", \"O\");\n        morseCodeMap.put(\".--.\", \"P\");\n        morseCodeMap.put(\"--.-\", \"Q\");\n        morseCodeMap.put(\".-.\", \"R\");\n        morseCodeMap.put(\"...\", \"S\");\n        morseCodeMap.put(\"-\", \"T\");\n        morseCodeMap.put(\"..-\", \"U\");\n        morseCodeMap.put(\"...-\", \"V\");\n        morseCodeMap.put(\".--\", \"W\");\n        morseCodeMap.put(\"-..-\", \"X\");\n        morseCodeMap.put(\"-.--\", \"Y\");\n        morseCodeMap.put(\"--..\", \"Z\");\n        morseCodeMap.put(\"-----\", \"0\");\n        morseCodeMap.put(\".----\", \"1\");\n        morseCodeMap.put(\"..---\", \"2\");\n        morseCodeMap.put(\"...--\", \"3\");\n        morseCodeMap.put(\"....-\", \"4\");\n        morseCodeMap.put(\".....\", \"5\");\n        morseCodeMap.put(\"-....\", \"6\");\n        morseCodeMap.put(\"--...\", \"7\");\n        morseCodeMap.put(\"---..\", \"8\");\n        morseCodeMap.put(\"----.\", \"9\");\n    }\n\n    public static String translateMorseCode(String morseCode) {\n        StringBuilder plainText = new StringBuilder();\n        String[] words = morseCode.trim().split(\"   \");\n        for (String word : words) {\n            String[] letters = word.split(\" \");\n            for (String letter : letters) {\n                plainText.append(morseCodeMap.getOrDefault(letter, \"\"));\n            }\n            plainText.append(\" \");\n        }\n        return plainText.toString().trim();\n    }\n\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        System.out.println(\"Enter Morse code to translate (use space between letters and triple space between words):\");\n        String morseCode = scanner.nextLine();\n        String translatedText = translateMorseCode(morseCode);\n        System.out.println(\"Translated text: \" + translatedText);\n    }\n}\n```"
  },
  {
    "task": "Develop a program that uses a map to store vehicle registration numbers and their corresponding owner's name.",
    "code": "```java\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class VehicleRegistry {\n    public static void main(String[] args) {\n        Map<String, String> vehicleRegistry = new HashMap<>();\n\n        vehicleRegistry.put(\"ABC123\", \"John Doe\");\n        vehicleRegistry.put(\"XYZ789\", \"Jane Smith\");\n        vehicleRegistry.put(\"LMN456\", \"Emily Johnson\");\n\n        for (Map.Entry<String, String> entry : vehicleRegistry.entrySet()) {\n            System.out.println(\"Registration Number: \" + entry.getKey() + \", Owner: \" + entry.getValue());\n        }\n    }\n}\n```"
  },
  {
    "task": "Create a dictionary that maps sports teams to their win-loss records, and find the team with the best record.",
    "code": "```java\nimport java.util.HashMap;\nimport java.util.Map;\nimport java.util.Map.Entry;\n\npublic class SportsTeams {\n\n    public static void main(String[] args) {\n        Map<String, int[]> teamRecords = new HashMap<>();\n        teamRecords.put(\"Team A\", new int[]{10, 2}); // 10 wins, 2 losses\n        teamRecords.put(\"Team B\", new int[]{8, 4});\n        teamRecords.put(\"Team C\", new int[]{12, 1});\n        teamRecords.put(\"Team D\", new int[]{7, 5});\n\n        String bestTeam = null;\n        double bestWinRate = 0.0;\n\n        for (Entry<String, int[]> entry : teamRecords.entrySet()) {\n            String team = entry.getKey();\n            int[] record = entry.getValue();\n            double winRate = (double) record[0] / (record[0] + record[1]);\n\n            if (winRate > bestWinRate) {\n                bestWinRate = winRate;\n                bestTeam = team;\n            }\n        }\n\n        System.out.println(\"The team with the best record is: \" + bestTeam);\n    }\n}\n```"
  },
  {
    "task": "Write a function that uses a map to convert currency codes to full currency names.",
    "code": "```java\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class CurrencyConverter {\n\n    private static final Map<String, String> currencyMap = new HashMap<>();\n\n    static {\n        currencyMap.put(\"USD\", \"United States Dollar\");\n        currencyMap.put(\"EUR\", \"Euro\");\n        currencyMap.put(\"JPY\", \"Japanese Yen\");\n        currencyMap.put(\"GBP\", \"British Pound Sterling\");\n        currencyMap.put(\"AUD\", \"Australian Dollar\");\n        currencyMap.put(\"CAD\", \"Canadian Dollar\");\n        currencyMap.put(\"CHF\", \"Swiss Franc\");\n        currencyMap.put(\"CNY\", \"Chinese Yuan\");\n        currencyMap.put(\"SEK\", \"Swedish Krona\");\n        currencyMap.put(\"NZD\", \"New Zealand Dollar\");\n    }\n\n    public static String convertCurrencyCodeToName(String code) {\n        return currencyMap.getOrDefault(code, \"Unknown Currency Code\");\n    }\n\n    public static void main(String[] args) {\n        System.out.println(convertCurrencyCodeToName(\"USD\"));\n        System.out.println(convertCurrencyCodeToName(\"EUR\"));\n        System.out.println(convertCurrencyCodeToName(\"INR\"));\n    }\n}\n```"
  },
  {
    "task": "Build a dictionary to store student names and their attendance counts, and determine the student with the highest attendance.",
    "code": "```java\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class StudentAttendance {\n    public static void main(String[] args) {\n        Map<String, Integer> attendance = new HashMap<>();\n        \n        // Sample data\n        attendance.put(\"Alice\", 15);\n        attendance.put(\"Bob\", 20);\n        attendance.put(\"Charlie\", 18);\n        \n        String highestAttendanceStudent = null;\n        int highestAttendance = 0;\n        \n        for (Map.Entry<String, Integer> entry : attendance.entrySet()) {\n            if (entry.getValue() > highestAttendance) {\n                highestAttendance = entry.getValue();\n                highestAttendanceStudent = entry.getKey();\n            }\n        }\n        \n        System.out.println(\"Student with highest attendance: \" + highestAttendanceStudent);\n    }\n}\n```"
  },
  {
    "task": "Implement a map to store the names of countries and their capitals, allowing lookups by country name.",
    "code": "```java\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class CountryCapitalMap {\n    private Map<String, String> countryCapitalMap;\n\n    public CountryCapitalMap() {\n        countryCapitalMap = new HashMap<>();\n        initializeMap();\n    }\n\n    private void initializeMap() {\n        countryCapitalMap.put(\"United States\", \"Washington, D.C.\");\n        countryCapitalMap.put(\"Canada\", \"Ottawa\");\n        countryCapitalMap.put(\"United Kingdom\", \"London\");\n        countryCapitalMap.put(\"Germany\", \"Berlin\");\n        countryCapitalMap.put(\"France\", \"Paris\");\n        // Add more countries and their capitals as needed\n    }\n\n    public String getCapitalByCountry(String country) {\n        return countryCapitalMap.get(country);\n    }\n\n    public static void main(String[] args) {\n        CountryCapitalMap ccm = new CountryCapitalMap();\n        System.out.println(\"Capital of Germany: \" + ccm.getCapitalByCountry(\"Germany\"));\n        System.out.println(\"Capital of Canada: \" + ccm.getCapitalByCountry(\"Canada\"));\n    }\n}\n```"
  },
  {
    "task": "Create a program that uses a dictionary to keep track of recipe ingredients and their quantities.",
    "code": "```java\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class RecipeIngredients {\n    public static void main(String[] args) {\n        Map<String, Integer> ingredients = new HashMap<>();\n\n        // Add ingredients and their quantities\n        ingredients.put(\"Flour\", 2);\n        ingredients.put(\"Sugar\", 1);\n        ingredients.put(\"Eggs\", 4);\n        ingredients.put(\"Milk\", 1);\n\n        // Print out the ingredients\n        for (Map.Entry<String, Integer> entry : ingredients.entrySet()) {\n            System.out.println(entry.getKey() + \": \" + entry.getValue() + \" units\");\n        }\n    }\n}\n```"
  },
  {
    "task": "Design a system that uses a map to associate social media usernames with user profiles.",
    "code": "```java\nimport java.util.HashMap;\nimport java.util.Map;\n\nclass UserProfile {\n    private String name;\n    private int age;\n    private String email;\n\n    public UserProfile(String name, int age, String email) {\n        this.name = name;\n        this.age = age;\n        this.email = email;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public int getAge() {\n        return age;\n    }\n\n    public String getEmail() {\n        return email;\n    }\n}\n\npublic class SocialMediaSystem {\n    private Map<String, UserProfile> userProfiles;\n\n    public SocialMediaSystem() {\n        userProfiles = new HashMap<>();\n    }\n\n    public void addUserProfile(String username, UserProfile profile) {\n        userProfiles.put(username, profile);\n    }\n\n    public UserProfile getUserProfile(String username) {\n        return userProfiles.get(username);\n    }\n\n    public static void main(String[] args) {\n        SocialMediaSystem system = new SocialMediaSystem();\n        UserProfile profile1 = new UserProfile(\"Alice\", 30, \"alice@example.com\");\n        UserProfile profile2 = new UserProfile(\"Bob\", 25, \"bob@example.com\");\n\n        system.addUserProfile(\"alice123\", profile1);\n        system.addUserProfile(\"bob_the_builder\", profile2);\n\n        UserProfile retrievedProfile = system.getUserProfile(\"alice123\");\n        if (retrievedProfile != null) {\n            System.out.println(\"Name: \" + retrievedProfile.getName());\n            System.out.println(\"Age: \" + retrievedProfile.getAge());\n            System.out.println(\"Email: \" + retrievedProfile.getEmail());\n        }\n    }\n}\n```"
  },
  {
    "task": "Write a function that takes a dictionary of product categories and lists all products in a given category.",
    "code": "```java\nimport java.util.*;\n\npublic class ProductLister {\n    public static List<String> listProductsInCategory(Map<String, List<String>> products, String category) {\n        if (products.containsKey(category)) {\n            return products.get(category);\n        } else {\n            return new ArrayList<>();\n        }\n    }\n}\n```"
  },
  {
    "task": "Create a dictionary to store shopping list items and their quantities, and implement a function to update quantities.",
    "code": "```java\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class ShoppingList {\n    private Map<String, Integer> items;\n\n    public ShoppingList() {\n        items = new HashMap<>();\n    }\n\n    public void addItem(String item, int quantity) {\n        items.put(item, items.getOrDefault(item, 0) + quantity);\n    }\n\n    public void updateQuantity(String item, int quantity) {\n        if (items.containsKey(item)) {\n            items.put(item, quantity);\n        }\n    }\n\n    public Integer getQuantity(String item) {\n        return items.get(item);\n    }\n\n    public static void main(String[] args) {\n        ShoppingList shoppingList = new ShoppingList();\n        shoppingList.addItem(\"Apple\", 5);\n        shoppingList.updateQuantity(\"Apple\", 10);\n        System.out.println(\"Apple: \" + shoppingList.getQuantity(\"Apple\"));\n    }\n}\n```"
  },
  {
    "task": "Build a program that uses a map to store historical events and their dates, and finds events that occurred in a given year.",
    "code": "```java\nimport java.util.HashMap;\nimport java.util.Map;\nimport java.util.Scanner;\n\npublic class HistoricalEvents {\n    public static void main(String[] args) {\n        Map<String, Integer> events = new HashMap<>();\n        events.put(\"Moon Landing\", 1969);\n        events.put(\"Fall of Berlin Wall\", 1989);\n        events.put(\"Internet Invention\", 1983);\n        events.put(\"World War II Ends\", 1945);\n        \n        Scanner scanner = new Scanner(System.in);\n        System.out.print(\"Enter a year to find events: \");\n        int year = scanner.nextInt();\n        \n        System.out.println(\"Events in \" + year + \":\");\n        for (Map.Entry<String, Integer> entry : events.entrySet()) {\n            if (entry.getValue() == year) {\n                System.out.println(entry.getKey());\n            }\n        }\n    }\n}\n```"
  },
  {
    "task": "Implement a dictionary to manage user roles and permissions within an application.",
    "code": "```java\nimport java.util.HashMap;\nimport java.util.HashSet;\nimport java.util.Map;\nimport java.util.Set;\n\npublic class RoleManager {\n    private Map<String, Set<String>> rolePermissions;\n\n    public RoleManager() {\n        rolePermissions = new HashMap<>();\n    }\n\n    public void addRole(String role) {\n        rolePermissions.putIfAbsent(role, new HashSet<>());\n    }\n\n    public void addPermissionToRole(String role, String permission) {\n        rolePermissions.computeIfAbsent(role, k -> new HashSet<>()).add(permission);\n    }\n\n    public void removePermissionFromRole(String role, String permission) {\n        Set<String> permissions = rolePermissions.get(role);\n        if (permissions != null) {\n            permissions.remove(permission);\n        }\n    }\n\n    public Set<String> getPermissions(String role) {\n        return rolePermissions.getOrDefault(role, new HashSet<>());\n    }\n\n    public boolean hasPermission(String role, String permission) {\n        Set<String> permissions = rolePermissions.get(role);\n        return permissions != null && permissions.contains(permission);\n    }\n\n    public static void main(String[] args) {\n        RoleManager roleManager = new RoleManager();\n        roleManager.addRole(\"admin\");\n        roleManager.addPermissionToRole(\"admin\", \"read\");\n        roleManager.addPermissionToRole(\"admin\", \"write\");\n        \n        System.out.println(roleManager.getPermissions(\"admin\"));\n        System.out.println(roleManager.hasPermission(\"admin\", \"write\"));\n    }\n}\n```"
  },
  {
    "task": "Write a script that uses a map to convert numeric grades to letter grades.",
    "code": "```java\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class GradeConverter {\n    public static void main(String[] args) {\n        Map<String, String> gradeMap = new HashMap<>();\n        gradeMap.put(\"90-100\", \"A\");\n        gradeMap.put(\"80-89\", \"B\");\n        gradeMap.put(\"70-79\", \"C\");\n        gradeMap.put(\"60-69\", \"D\");\n        gradeMap.put(\"0-59\", \"F\");\n\n        int numericGrade = 85;\n        String letterGrade = convertToLetterGrade(numericGrade, gradeMap);\n        System.out.println(\"Numeric Grade: \" + numericGrade + \" -> Letter Grade: \" + letterGrade);\n    }\n\n    public static String convertToLetterGrade(int grade, Map<String, String> gradeMap) {\n        if (grade >= 90 && grade <= 100) {\n            return gradeMap.get(\"90-100\");\n        } else if (grade >= 80 && grade <= 89) {\n            return gradeMap.get(\"80-89\");\n        } else if (grade >= 70 && grade <= 79) {\n            return gradeMap.get(\"70-79\");\n        } else if (grade >= 60 && grade <= 69) {\n            return gradeMap.get(\"60-69\");\n        } else {\n            return gradeMap.get(\"0-59\");\n        }\n    }\n}\n```"
  },
  {
    "task": "Create a dictionary that maps holiday names to their corresponding dates, and allows lookup by holiday name.",
    "code": "```java\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class HolidayMap {\n    public static void main(String[] args) {\n        Map<String, String> holidays = new HashMap<>();\n        \n        // Map holiday names to their corresponding dates\n        holidays.put(\"New Year's Day\", \"2024-01-01\");\n        holidays.put(\"Independence Day\", \"2024-07-04\");\n        holidays.put(\"Thanksgiving\", \"2024-11-28\");\n        holidays.put(\"Christmas\", \"2024-12-25\");\n        \n        // Lookup by holiday name\n        String holidayName = \"Thanksgiving\";\n        String date = holidays.get(holidayName);\n        \n        if (date != null) {\n            System.out.println(holidayName + \" is on \" + date);\n        } else {\n            System.out.println(\"Holiday not found.\");\n        }\n    }\n}\n```"
  },
  {
    "task": "Design a system that uses a map to track the status of online orders, allowing updates to order status.",
    "code": "```java\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class OrderStatusTracker {\n    private Map<String, String> orderStatusMap;\n\n    public OrderStatusTracker() {\n        orderStatusMap = new HashMap<>();\n    }\n\n    public void addOrder(String orderId, String status) {\n        orderStatusMap.put(orderId, status);\n    }\n\n    public void updateOrderStatus(String orderId, String newStatus) {\n        if (orderStatusMap.containsKey(orderId)) {\n            orderStatusMap.put(orderId, newStatus);\n        } else {\n            System.out.println(\"Order ID not found.\");\n        }\n    }\n\n    public String getOrderStatus(String orderId) {\n        return orderStatusMap.getOrDefault(orderId, \"Order ID not found.\");\n    }\n\n    public static void main(String[] args) {\n        OrderStatusTracker tracker = new OrderStatusTracker();\n        tracker.addOrder(\"order1\", \"Processing\");\n        tracker.addOrder(\"order2\", \"Shipped\");\n        \n        System.out.println(tracker.getOrderStatus(\"order1\")); // Processing\n        \n        tracker.updateOrderStatus(\"order1\", \"Delivered\");\n        System.out.println(tracker.getOrderStatus(\"order1\")); // Delivered\n        \n        System.out.println(tracker.getOrderStatus(\"order3\")); // Order ID not found.\n        \n        tracker.updateOrderStatus(\"order3\", \"Cancelled\"); // Order ID not found.\n    }\n}\n```"
  },
  {
    "task": "Develop a program that uses a dictionary to associate food items with their nutritional information.",
    "code": "```java\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class FoodNutritionInfo {\n    public static void main(String[] args) {\n        Map<String, String> foodNutritionMap = new HashMap<>();\n\n        foodNutritionMap.put(\"Apple\", \"Calories: 52, Carbs: 14g, Fiber: 2.4g\");\n        foodNutritionMap.put(\"Banana\", \"Calories: 96, Carbs: 27g, Fiber: 2.6g\");\n        foodNutritionMap.put(\"Carrot\", \"Calories: 41, Carbs: 10g, Fiber: 2.8g\");\n        foodNutritionMap.put(\"Spinach\", \"Calories: 23, Carbs: 3.6g, Fiber: 2.2g\");\n\n        for (Map.Entry<String, String> entry : foodNutritionMap.entrySet()) {\n            System.out.println(\"Food: \" + entry.getKey() + \" - Nutrition: \" + entry.getValue());\n        }\n    }\n}\n```"
  },
  {
    "task": "Create a map to store book genres and lists of book titles, allowing retrieval of all books in a given genre.",
    "code": "```java\nimport java.util.*;\n\npublic class BookGenreMap {\n    public static void main(String[] args) {\n        Map<String, List<String>> genreToBooks = new HashMap<>();\n\n        // Adding books to genres\n        genreToBooks.put(\"Science Fiction\", Arrays.asList(\"Dune\", \"Neuromancer\", \"Snow Crash\"));\n        genreToBooks.put(\"Fantasy\", Arrays.asList(\"The Hobbit\", \"Harry Potter\", \"The Name of the Wind\"));\n        genreToBooks.put(\"Mystery\", Arrays.asList(\"The Da Vinci Code\", \"Gone Girl\", \"Sherlock Holmes\"));\n\n        // Retrieve books in a given genre\n        String genre = \"Fantasy\";\n        List<String> booksInGenre = genreToBooks.getOrDefault(genre, Collections.emptyList());\n        System.out.println(\"Books in \" + genre + \" genre: \" + booksInGenre);\n    }\n}\n```"
  },
  {
    "task": "Write a function that uses a dictionary to convert state abbreviations to full state names.",
    "code": "```java\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class StateConverter {\n    private static final Map<String, String> stateMap = new HashMap<>();\n\n    static {\n        stateMap.put(\"AL\", \"Alabama\");\n        stateMap.put(\"AK\", \"Alaska\");\n        stateMap.put(\"AZ\", \"Arizona\");\n        stateMap.put(\"AR\", \"Arkansas\");\n        stateMap.put(\"CA\", \"California\");\n        stateMap.put(\"CO\", \"Colorado\");\n        stateMap.put(\"CT\", \"Connecticut\");\n        stateMap.put(\"DE\", \"Delaware\");\n        stateMap.put(\"FL\", \"Florida\");\n        stateMap.put(\"GA\", \"Georgia\");\n        stateMap.put(\"HI\", \"Hawaii\");\n        stateMap.put(\"ID\", \"Idaho\");\n        stateMap.put(\"IL\", \"Illinois\");\n        stateMap.put(\"IN\", \"Indiana\");\n        stateMap.put(\"IA\", \"Iowa\");\n        stateMap.put(\"KS\", \"Kansas\");\n        stateMap.put(\"KY\", \"Kentucky\");\n        stateMap.put(\"LA\", \"Louisiana\");\n        stateMap.put(\"ME\", \"Maine\");\n        stateMap.put(\"MD\", \"Maryland\");\n        stateMap.put(\"MA\", \"Massachusetts\");\n        stateMap.put(\"MI\", \"Michigan\");\n        stateMap.put(\"MN\", \"Minnesota\");\n        stateMap.put(\"MS\", \"Mississippi\");\n        stateMap.put(\"MO\", \"Missouri\");\n        stateMap.put(\"MT\", \"Montana\");\n        stateMap.put(\"NE\", \"Nebraska\");\n        stateMap.put(\"NV\", \"Nevada\");\n        stateMap.put(\"NH\", \"New Hampshire\");\n        stateMap.put(\"NJ\", \"New Jersey\");\n        stateMap.put(\"NM\", \"New Mexico\");\n        stateMap.put(\"NY\", \"New York\");\n        stateMap.put(\"NC\", \"North Carolina\");\n        stateMap.put(\"ND\", \"North Dakota\");\n        stateMap.put(\"OH\", \"Ohio\");\n        stateMap.put(\"OK\", \"Oklahoma\");\n        stateMap.put(\"OR\", \"Oregon\");\n        stateMap.put(\"PA\", \"Pennsylvania\");\n        stateMap.put(\"RI\", \"Rhode Island\");\n        stateMap.put(\"SC\", \"South Carolina\");\n        stateMap.put(\"SD\", \"South Dakota\");\n        stateMap.put(\"TN\", \"Tennessee\");\n        stateMap.put(\"TX\", \"Texas\");\n        stateMap.put(\"UT\", \"Utah\");\n        stateMap.put(\"VT\", \"Vermont\");\n        stateMap.put(\"VA\", \"Virginia\");\n        stateMap.put(\"WA\", \"Washington\");\n        stateMap.put(\"WV\", \"West Virginia\");\n        stateMap.put(\"WI\", \"Wisconsin\");\n        stateMap.put(\"WY\", \"Wyoming\");\n    }\n\n    public static String convertStateAbbreviation(String abbreviation) {\n        return stateMap.getOrDefault(abbreviation, \"Unknown State\");\n    }\n}\n```"
  },
  {
    "task": "Build a dictionary to store customer names and their order histories.",
    "code": "```java\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\npublic class CustomerOrderHistory {\n    public static void main(String[] args) {\n        Map<String, List<String>> customerOrders = new HashMap<>();\n\n        // Add customer names and their order histories\n        customerOrders.put(\"Alice\", List.of(\"Order001\", \"Order002\"));\n        customerOrders.put(\"Bob\", List.of(\"Order003\"));\n        customerOrders.put(\"Charlie\", List.of(\"Order004\", \"Order005\", \"Order006\"));\n\n        // Example of accessing a customer's order history\n        List<String> aliceOrders = customerOrders.get(\"Alice\");\n        System.out.println(\"Alice's Orders: \" + aliceOrders);\n    }\n}\n```"
  },
  {
    "task": "Implement a map to manage parking lot spaces, tracking which spaces are occupied.",
    "code": "```java\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class ParkingLot {\n    private Map<Integer, Boolean> spaces;\n\n    public ParkingLot(int numSpaces) {\n        spaces = new HashMap<>();\n        for (int i = 1; i <= numSpaces; i++) {\n            spaces.put(i, false); // All spaces initially unoccupied\n        }\n    }\n\n    public void occupySpace(int spaceNumber) {\n        if (spaces.containsKey(spaceNumber)) {\n            spaces.put(spaceNumber, true);\n        }\n    }\n\n    public void freeSpace(int spaceNumber) {\n        if (spaces.containsKey(spaceNumber)) {\n            spaces.put(spaceNumber, false);\n        }\n    }\n\n    public boolean isSpaceOccupied(int spaceNumber) {\n        return spaces.getOrDefault(spaceNumber, false);\n    }\n\n    public static void main(String[] args) {\n        ParkingLot lot = new ParkingLot(10);\n        \n        lot.occupySpace(3);\n        System.out.println(\"Space 3 occupied: \" + lot.isSpaceOccupied(3));\n        \n        lot.freeSpace(3);\n        System.out.println(\"Space 3 occupied: \" + lot.isSpaceOccupied(3));\n    }\n}\n```"
  },
  {
    "task": "Create a program that uses a dictionary to track the scores of players in a game.",
    "code": "```java\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class GameScores {\n    public static void main(String[] args) {\n        Map<String, Integer> playerScores = new HashMap<>();\n\n        // Example of adding players and their scores\n        playerScores.put(\"Alice\", 10);\n        playerScores.put(\"Bob\", 15);\n        playerScores.put(\"Charlie\", 20);\n\n        // Example of updating a player's score\n        playerScores.put(\"Alice\", playerScores.get(\"Alice\") + 5);\n\n        // Example of retrieving and printing all players' scores\n        for (Map.Entry<String, Integer> entry : playerScores.entrySet()) {\n            System.out.println(entry.getKey() + \": \" + entry.getValue());\n        }\n    }\n}\n```"
  },
  {
    "task": "Design a dictionary to store scientific terms and their definitions, allowing users to look up definitions.",
    "code": "```java\nimport java.util.HashMap;\nimport java.util.Map;\nimport java.util.Scanner;\n\npublic class ScientificDictionary {\n    private Map<String, String> dictionary;\n\n    public ScientificDictionary() {\n        dictionary = new HashMap<>();\n        initializeDictionary();\n    }\n\n    private void initializeDictionary() {\n        dictionary.put(\"Atom\", \"The basic unit of a chemical element.\");\n        dictionary.put(\"Molecule\", \"A group of atoms bonded together.\");\n        dictionary.put(\"Photosynthesis\", \"Process by which green plants use sunlight to synthesize foods.\");\n        // Add more terms and definitions as needed\n    }\n\n    public String lookupDefinition(String term) {\n        return dictionary.getOrDefault(term, \"Definition not found.\");\n    }\n\n    public static void main(String[] args) {\n        ScientificDictionary sciDict = new ScientificDictionary();\n        Scanner scanner = new Scanner(System.in);\n        \n        System.out.println(\"Enter a scientific term to look up its definition:\");\n        String term = scanner.nextLine();\n        \n        String definition = sciDict.lookupDefinition(term);\n        System.out.println(\"Definition of \" + term + \": \" + definition);\n        \n        scanner.close();\n    }\n}\n```"
  },
  {
    "task": "Write a function that uses a map to convert temperature scales (e.g., Celsius to Fahrenheit).",
    "code": "```java\nimport java.util.HashMap;\nimport java.util.Map;\nimport java.util.function.Function;\n\npublic class TemperatureConverter {\n\n    private static final Map<String, Function<Double, Double>> conversionMap = new HashMap<>();\n\n    static {\n        conversionMap.put(\"CelsiusToFahrenheit\", celsius -> celsius * 9/5 + 32);\n        conversionMap.put(\"FahrenheitToCelsius\", fahrenheit -> (fahrenheit - 32) * 5/9);\n    }\n\n    public static double convertTemperature(String conversionType, double temperature) {\n        Function<Double, Double> conversionFunction = conversionMap.get(conversionType);\n        if (conversionFunction != null) {\n            return conversionFunction.apply(temperature);\n        }\n        throw new IllegalArgumentException(\"Invalid conversion type\");\n    }\n\n    public static void main(String[] args) {\n        double celsius = 25.0;\n        double fahrenheit = convertTemperature(\"CelsiusToFahrenheit\", celsius);\n        System.out.println(\"Celsius to Fahrenheit: \" + fahrenheit);\n        \n        double newCelsius = convertTemperature(\"FahrenheitToCelsius\", fahrenheit);\n        System.out.println(\"Fahrenheit to Celsius: \" + newCelsius);\n    }\n}\n```"
  },
  {
    "task": "Create a dictionary to store employee names and their respective departments.",
    "code": "```java\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class EmployeeDepartments {\n    public static void main(String[] args) {\n        Map<String, String> employeeDepartments = new HashMap<>();\n\n        employeeDepartments.put(\"Alice Johnson\", \"Marketing\");\n        employeeDepartments.put(\"Bob Smith\", \"Sales\");\n        employeeDepartments.put(\"Cathy Brown\", \"HR\");\n        employeeDepartments.put(\"David Wilson\", \"IT\");\n\n        // Example usage\n        for (Map.Entry<String, String> entry : employeeDepartments.entrySet()) {\n            System.out.println(\"Employee: \" + entry.getKey() + \", Department: \" + entry.getValue());\n        }\n    }\n}\n```"
  },
  {
    "task": "Build a program that uses a map to store tourist attractions and their locations.",
    "code": "```java\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class TouristAttractions {\n\n    public static void main(String[] args) {\n        Map<String, String> attractions = new HashMap<>();\n\n        // Add tourist attractions and their locations\n        attractions.put(\"Eiffel Tower\", \"Paris, France\");\n        attractions.put(\"Statue of Liberty\", \"New York City, USA\");\n        attractions.put(\"Colosseum\", \"Rome, Italy\");\n        attractions.put(\"Great Wall of China\", \"China\");\n        attractions.put(\"Taj Mahal\", \"Agra, India\");\n\n        // Display the tourist attractions and their locations\n        for (Map.Entry<String, String> entry : attractions.entrySet()) {\n            System.out.println(\"Attraction: \" + entry.getKey() + \", Location: \" + entry.getValue());\n        }\n    }\n}\n```"
  },
  {
    "task": "Implement a dictionary to manage a collection of music albums, allowing additions and removals.",
    "code": "```java\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class MusicAlbumManager {\n    private Map<String, String> albums;\n\n    public MusicAlbumManager() {\n        albums = new HashMap<>();\n    }\n\n    public void addAlbum(String albumName, String artist) {\n        albums.put(albumName, artist);\n    }\n\n    public void removeAlbum(String albumName) {\n        albums.remove(albumName);\n    }\n\n    public String getArtist(String albumName) {\n        return albums.get(albumName);\n    }\n\n    public static void main(String[] args) {\n        MusicAlbumManager manager = new MusicAlbumManager();\n        manager.addAlbum(\"Thriller\", \"Michael Jackson\");\n        manager.addAlbum(\"Back in Black\", \"AC/DC\");\n\n        System.out.println(\"Artist for 'Thriller': \" + manager.getArtist(\"Thriller\"));\n        \n        manager.removeAlbum(\"Thriller\");\n        System.out.println(\"Artist for 'Thriller' after removal: \" + manager.getArtist(\"Thriller\"));\n    }\n}\n```"
  },
  {
    "task": "Write a script that uses a map to track the inventory of a small retail store.",
    "code": "```java\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class RetailStoreInventory {\n    public static void main(String[] args) {\n        Map<String, Integer> inventory = new HashMap<>();\n\n        // Adding items to the inventory\n        inventory.put(\"Apples\", 50);\n        inventory.put(\"Bananas\", 30);\n        inventory.put(\"Oranges\", 20);\n\n        // Display inventory\n        System.out.println(\"Current Inventory:\");\n        for (Map.Entry<String, Integer> item : inventory.entrySet()) {\n            System.out.println(item.getKey() + \": \" + item.getValue());\n        }\n\n        // Update inventory\n        inventory.put(\"Apples\", inventory.get(\"Apples\") + 20);\n        inventory.put(\"Bananas\", inventory.get(\"Bananas\") - 5);\n\n        // Display updated inventory\n        System.out.println(\"\\nUpdated Inventory:\");\n        for (Map.Entry<String, Integer> item : inventory.entrySet()) {\n            System.out.println(item.getKey() + \": \" + item.getValue());\n        }\n    }\n}\n```"
  },
  {
    "task": "Create a dictionary to store the names of rivers and their lengths, allowing length lookups by river name.",
    "code": "```java\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class RiverLengths {\n    public static void main(String[] args) {\n        Map<String, Integer> rivers = new HashMap<>();\n        \n        rivers.put(\"Amazon\", 6992);\n        rivers.put(\"Nile\", 6650);\n        rivers.put(\"Yangtze\", 6300);\n        rivers.put(\"Mississippi\", 6275);\n        \n        // Example lookup\n        String riverName = \"Nile\";\n        if (rivers.containsKey(riverName)) {\n            int length = rivers.get(riverName);\n            System.out.println(\"The length of the \" + riverName + \" is \" + length + \" km.\");\n        } else {\n            System.out.println(\"River not found.\");\n        }\n    }\n}\n```"
  },
  {
    "task": "Design a system that uses a map to track the availability of conference rooms in an office building.",
    "code": "```java\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class ConferenceRoomTracker {\n    private Map<String, Boolean> roomAvailability;\n\n    public ConferenceRoomTracker() {\n        roomAvailability = new HashMap<>();\n    }\n\n    public void addRoom(String roomName) {\n        roomAvailability.put(roomName, true);\n    }\n\n    public void setRoomAvailability(String roomName, boolean isAvailable) {\n        if (roomAvailability.containsKey(roomName)) {\n            roomAvailability.put(roomName, isAvailable);\n        }\n    }\n\n    public boolean isRoomAvailable(String roomName) {\n        return roomAvailability.getOrDefault(roomName, false);\n    }\n\n    public static void main(String[] args) {\n        ConferenceRoomTracker tracker = new ConferenceRoomTracker();\n        tracker.addRoom(\"Room A\");\n        tracker.addRoom(\"Room B\");\n\n        tracker.setRoomAvailability(\"Room A\", false);\n        System.out.println(\"Room A available: \" + tracker.isRoomAvailable(\"Room A\"));\n        System.out.println(\"Room B available: \" + tracker.isRoomAvailable(\"Room B\"));\n    }\n}\n```"
  },
  {
    "task": "Develop a program that uses a dictionary to associate animal species with their habitats.",
    "code": "```java\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class AnimalHabitats {\n    public static void main(String[] args) {\n        Map<String, String> animalHabitats = new HashMap<>();\n\n        animalHabitats.put(\"Lion\", \"Savannah\");\n        animalHabitats.put(\"Polar Bear\", \"Arctic\");\n        animalHabitats.put(\"Kangaroo\", \"Grasslands\");\n        animalHabitats.put(\"Penguin\", \"Antarctica\");\n        animalHabitats.put(\"Elephant\", \"Forest\");\n\n        for (Map.Entry<String, String> entry : animalHabitats.entrySet()) {\n            System.out.println(\"The \" + entry.getKey() + \" lives in the \" + entry.getValue() + \".\");\n        }\n    }\n}\n```"
  },
  {
    "task": "Create a map to store the names of mountains and their elevations, then find the tallest mountain.",
    "code": "```java\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class MountainElevations {\n    public static void main(String[] args) {\n        Map<String, Integer> mountains = new HashMap<>();\n        mountains.put(\"Everest\", 8848);\n        mountains.put(\"K2\", 8611);\n        mountains.put(\"Kangchenjunga\", 8586);\n        mountains.put(\"Lhotse\", 8516);\n        mountains.put(\"Makalu\", 8485);\n\n        String tallestMountain = null;\n        int maxElevation = 0;\n\n        for (Map.Entry<String, Integer> entry : mountains.entrySet()) {\n            if (entry.getValue() > maxElevation) {\n                maxElevation = entry.getValue();\n                tallestMountain = entry.getKey();\n            }\n        }\n\n        System.out.println(\"The tallest mountain is \" + tallestMountain + \" with an elevation of \" + maxElevation + \" meters.\");\n    }\n}\n```"
  },
  {
    "task": "Write a function that uses a dictionary to convert time zones to their respective UTC offsets.",
    "code": "```java\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class TimeZoneConverter {\n\n    public static String convertToUTCOffset(String timeZone) {\n        Map<String, String> timeZoneOffsets = new HashMap<>();\n        timeZoneOffsets.put(\"EST\", \"-05:00\");\n        timeZoneOffsets.put(\"CST\", \"-06:00\");\n        timeZoneOffsets.put(\"MST\", \"-07:00\");\n        timeZoneOffsets.put(\"PST\", \"-08:00\");\n        timeZoneOffsets.put(\"UTC\", \"+00:00\");\n        timeZoneOffsets.put(\"GMT\", \"+00:00\");\n        timeZoneOffsets.put(\"CET\", \"+01:00\");\n        timeZoneOffsets.put(\"IST\", \"+05:30\");\n        timeZoneOffsets.put(\"JST\", \"+09:00\");\n        // Add more time zones as needed\n\n        return timeZoneOffsets.getOrDefault(timeZone, \"Unknown Time Zone\");\n    }\n\n    public static void main(String[] args) {\n        System.out.println(convertToUTCOffset(\"EST\")); // Output: -05:00\n        System.out.println(convertToUTCOffset(\"IST\")); // Output: +05:30\n        System.out.println(convertToUTCOffset(\"ABC\")); // Output: Unknown Time Zone\n    }\n}\n```"
  },
  {
    "task": "Build a dictionary to store the names of programming languages and their creators.",
    "code": "```java\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class ProgrammingLanguages {\n    public static void main(String[] args) {\n        Map<String, String> languagesCreators = new HashMap<>();\n\n        languagesCreators.put(\"Python\", \"Guido van Rossum\");\n        languagesCreators.put(\"Java\", \"James Gosling\");\n        languagesCreators.put(\"C\", \"Dennis Ritchie\");\n        languagesCreators.put(\"C++\", \"Bjarne Stroustrup\");\n        languagesCreators.put(\"JavaScript\", \"Brendan Eich\");\n\n        System.out.println(languagesCreators);\n    }\n}\n```"
  },
  {
    "task": "Implement a map to manage a list of subscribers to a newsletter, allowing subscriptions and cancellations.",
    "code": "```java\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class NewsletterManager {\n    private Map<String, Boolean> subscribers;\n\n    public NewsletterManager() {\n        subscribers = new HashMap<>();\n    }\n\n    public void subscribe(String email) {\n        subscribers.put(email, true);\n    }\n\n    public void unsubscribe(String email) {\n        subscribers.remove(email);\n    }\n\n    public boolean isSubscribed(String email) {\n        return subscribers.containsKey(email);\n    }\n\n    public static void main(String[] args) {\n        NewsletterManager manager = new NewsletterManager();\n        manager.subscribe(\"user1@example.com\");\n        manager.subscribe(\"user2@example.com\");\n        System.out.println(manager.isSubscribed(\"user1@example.com\")); // true\n        manager.unsubscribe(\"user1@example.com\");\n        System.out.println(manager.isSubscribed(\"user1@example.com\")); // false\n    }\n}\n```"
  },
  {
    "task": "Create a program that uses a dictionary to track the number of likes for social media posts.",
    "code": "```java\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class SocialMediaLikes {\n    public static void main(String[] args) {\n        Map<String, Integer> postLikes = new HashMap<>();\n\n        // Add some posts with initial likes\n        postLikes.put(\"Post1\", 0);\n        postLikes.put(\"Post2\", 0);\n        postLikes.put(\"Post3\", 0);\n\n        // Simulate liking posts\n        likePost(postLikes, \"Post1\");\n        likePost(postLikes, \"Post2\");\n        likePost(postLikes, \"Post1\");\n\n        // Print likes count for each post\n        for (Map.Entry<String, Integer> entry : postLikes.entrySet()) {\n            System.out.println(entry.getKey() + \" has \" + entry.getValue() + \" likes.\");\n        }\n    }\n\n    public static void likePost(Map<String, Integer> postLikes, String post) {\n        if (postLikes.containsKey(post)) {\n            postLikes.put(post, postLikes.get(post) + 1);\n        }\n    }\n}\n```"
  },
  {
    "task": "Design a dictionary to store the names of elements and their atomic numbers, allowing lookups by element name.",
    "code": "```java\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class ElementDictionary {\n    public static void main(String[] args) {\n        Map<String, Integer> elementMap = new HashMap<>();\n\n        // Adding elements and their atomic numbers\n        elementMap.put(\"Hydrogen\", 1);\n        elementMap.put(\"Helium\", 2);\n        elementMap.put(\"Lithium\", 3);\n        elementMap.put(\"Beryllium\", 4);\n        elementMap.put(\"Boron\", 5);\n\n        // Lookup by element name\n        String elementName = \"Helium\";\n        if (elementMap.containsKey(elementName)) {\n            int atomicNumber = elementMap.get(elementName);\n            System.out.println(\"The atomic number of \" + elementName + \" is \" + atomicNumber);\n        } else {\n            System.out.println(\"Element not found\");\n        }\n    }\n}\n```"
  },
  {
    "task": "Write a function that uses a map to group movies by their directors.",
    "code": "```java\nimport java.util.*;\n\npublic class MovieGrouper {\n    public static Map<String, List<String>> groupMoviesByDirector(List<Movie> movies) {\n        Map<String, List<String>> directorToMoviesMap = new HashMap<>();\n        \n        for (Movie movie : movies) {\n            String director = movie.getDirector();\n            String title = movie.getTitle();\n            \n            if (!directorToMoviesMap.containsKey(director)) {\n                directorToMoviesMap.put(director, new ArrayList<>());\n            }\n            directorToMoviesMap.get(director).add(title);\n        }\n        \n        return directorToMoviesMap;\n    }\n    \n    public static class Movie {\n        private String title;\n        private String director;\n        \n        public Movie(String title, String director) {\n            this.title = title;\n            this.director = director;\n        }\n        \n        public String getTitle() {\n            return title;\n        }\n        \n        public String getDirector() {\n            return director;\n        }\n    }\n}\n```"
  },
  {
    "task": "Create a dictionary to store the names of historical figures and their birth years.",
    "code": "```java\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class HistoricalFigures {\n    public static void main(String[] args) {\n        Map<String, Integer> figures = new HashMap<>();\n        \n        figures.put(\"Albert Einstein\", 1879);\n        figures.put(\"Isaac Newton\", 1643);\n        figures.put(\"Marie Curie\", 1867);\n        figures.put(\"Leonardo da Vinci\", 1452);\n        figures.put(\"Cleopatra\", 69);\n        \n        // Example usage\n        for (Map.Entry<String, Integer> entry : figures.entrySet()) {\n            System.out.println(entry.getKey() + \" was born in \" + entry.getValue());\n        }\n    }\n}\n```"
  },
  {
    "task": "Build a program that uses a map to store the names of planets and their diameters.",
    "code": "```java\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class PlanetDiameters {\n    public static void main(String[] args) {\n        Map<String, Double> planetDiameters = new HashMap<>();\n        \n        // Add planets and their diameters in kilometers\n        planetDiameters.put(\"Mercury\", 4879.4);\n        planetDiameters.put(\"Venus\", 12104.0);\n        planetDiameters.put(\"Earth\", 12756.0);\n        planetDiameters.put(\"Mars\", 6792.4);\n        planetDiameters.put(\"Jupiter\", 142984.0);\n        planetDiameters.put(\"Saturn\", 120536.0);\n        planetDiameters.put(\"Uranus\", 51118.0);\n        planetDiameters.put(\"Neptune\", 49528.0);\n        \n        for (Map.Entry<String, Double> entry : planetDiameters.entrySet()) {\n            System.out.println(\"Planet: \" + entry.getKey() + \", Diameter: \" + entry.getValue() + \" km\");\n        }\n    }\n}\n```"
  },
  {
    "task": "Implement a dictionary to track the ratings of restaurants, allowing updates to ratings.",
    "code": "```java\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class RestaurantRatings {\n    private Map<String, Integer> ratings;\n\n    public RestaurantRatings() {\n        ratings = new HashMap<>();\n    }\n\n    public void addOrUpdateRating(String restaurant, int rating) {\n        ratings.put(restaurant, rating);\n    }\n\n    public Integer getRating(String restaurant) {\n        return ratings.get(restaurant);\n    }\n\n    public static void main(String[] args) {\n        RestaurantRatings restaurantRatings = new RestaurantRatings();\n        restaurantRatings.addOrUpdateRating(\"Pasta Place\", 5);\n        restaurantRatings.addOrUpdateRating(\"Burger Joint\", 4);\n        restaurantRatings.addOrUpdateRating(\"Pasta Place\", 3);\n\n        System.out.println(\"Pasta Place Rating: \" + restaurantRatings.getRating(\"Pasta Place\"));\n        System.out.println(\"Burger Joint Rating: \" + restaurantRatings.getRating(\"Burger Joint\"));\n    }\n}\n```"
  },
  {
    "task": "Write a script that uses a map to translate binary numbers to decimal.",
    "code": "```java\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class BinaryToDecimal {\n    public static void main(String[] args) {\n        Map<String, Integer> binaryToDecimalMap = new HashMap<>();\n        \n        // Populate the map with binary to decimal conversions\n        binaryToDecimalMap.put(\"0000\", 0);\n        binaryToDecimalMap.put(\"0001\", 1);\n        binaryToDecimalMap.put(\"0010\", 2);\n        binaryToDecimalMap.put(\"0011\", 3);\n        binaryToDecimalMap.put(\"0100\", 4);\n        binaryToDecimalMap.put(\"0101\", 5);\n        binaryToDecimalMap.put(\"0110\", 6);\n        binaryToDecimalMap.put(\"0111\", 7);\n        binaryToDecimalMap.put(\"1000\", 8);\n        binaryToDecimalMap.put(\"1001\", 9);\n        binaryToDecimalMap.put(\"1010\", 10);\n        binaryToDecimalMap.put(\"1011\", 11);\n        binaryToDecimalMap.put(\"1100\", 12);\n        binaryToDecimalMap.put(\"1101\", 13);\n        binaryToDecimalMap.put(\"1110\", 14);\n        binaryToDecimalMap.put(\"1111\", 15);\n        \n        // Example usage\n        String binaryNumber = \"1010\";\n        if (binaryToDecimalMap.containsKey(binaryNumber)) {\n            System.out.println(\"The decimal value of \" + binaryNumber + \" is \" + binaryToDecimalMap.get(binaryNumber));\n        } else {\n            System.out.println(\"Binary number not found in the map.\");\n        }\n    }\n}\n```"
  },
  {
    "task": "Create a dictionary to store the names of artists and their famous works.",
    "code": "```java\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class ArtistWorks {\n    public static void main(String[] args) {\n        Map<String, String> artistWorks = new HashMap<>();\n\n        artistWorks.put(\"Leonardo da Vinci\", \"Mona Lisa\");\n        artistWorks.put(\"Vincent van Gogh\", \"Starry Night\");\n        artistWorks.put(\"Pablo Picasso\", \"Guernica\");\n        artistWorks.put(\"Claude Monet\", \"Water Lilies\");\n        artistWorks.put(\"Michelangelo\", \"David\");\n\n        System.out.println(artistWorks);\n    }\n}\n```"
  },
  {
    "task": "Design a system that uses a map to track the maintenance schedules of vehicles.",
    "code": "```java\nimport java.util.HashMap;\nimport java.util.Map;\n\nclass VehicleMaintenanceSystem {\n    private Map<String, String> maintenanceSchedule;\n\n    public VehicleMaintenanceSystem() {\n        maintenanceSchedule = new HashMap<>();\n    }\n\n    public void addVehicle(String vehicleId, String schedule) {\n        maintenanceSchedule.put(vehicleId, schedule);\n    }\n\n    public String getSchedule(String vehicleId) {\n        return maintenanceSchedule.get(vehicleId);\n    }\n\n    public void updateSchedule(String vehicleId, String newSchedule) {\n        maintenanceSchedule.put(vehicleId, newSchedule);\n    }\n\n    public String removeVehicle(String vehicleId) {\n        return maintenanceSchedule.remove(vehicleId);\n    }\n\n    public static void main(String[] args) {\n        VehicleMaintenanceSystem vms = new VehicleMaintenanceSystem();\n        vms.addVehicle(\"ABC123\", \"2023-10-01\");\n        System.out.println(\"Schedule for ABC123: \" + vms.getSchedule(\"ABC123\"));\n        vms.updateSchedule(\"ABC123\", \"2023-11-01\");\n        System.out.println(\"Updated schedule for ABC123: \" + vms.getSchedule(\"ABC123\"));\n        vms.removeVehicle(\"ABC123\");\n        System.out.println(\"Schedule for ABC123 after removal: \" + vms.getSchedule(\"ABC123\"));\n    }\n}\n```"
  },
  {
    "task": "Develop a program that uses a dictionary to associate languages with their number of speakers worldwide.",
    "code": "```java\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class LanguageSpeakers {\n    public static void main(String[] args) {\n        Map<String, Integer> languageSpeakers = new HashMap<>();\n\n        languageSpeakers.put(\"English\", 1500);\n        languageSpeakers.put(\"Mandarin\", 1117);\n        languageSpeakers.put(\"Hindi\", 615);\n        languageSpeakers.put(\"Spanish\", 534);\n        languageSpeakers.put(\"French\", 280);\n\n        for (Map.Entry<String, Integer> entry : languageSpeakers.entrySet()) {\n            System.out.println(\"Language: \" + entry.getKey() + \", Speakers: \" + entry.getValue() + \" million\");\n        }\n    }\n}\n```"
  },
  {
    "task": "Create a map to store the names of cities and their average annual temperatures.",
    "code": "```java\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class CityTemperature {\n    public static void main(String[] args) {\n        Map<String, Double> cityTemperatures = new HashMap<>();\n        \n        cityTemperatures.put(\"New York\", 12.5);\n        cityTemperatures.put(\"Los Angeles\", 18.7);\n        cityTemperatures.put(\"Chicago\", 10.3);\n        cityTemperatures.put(\"Houston\", 20.5);\n        cityTemperatures.put(\"Phoenix\", 22.3);\n\n        // Example usage: Print all cities and their temperatures\n        for (Map.Entry<String, Double> entry : cityTemperatures.entrySet()) {\n            System.out.println(\"City: \" + entry.getKey() + \", Average Annual Temperature: \" + entry.getValue());\n        }\n    }\n}\n```"
  },
  {
    "task": "Write a function that uses a dictionary to convert metric units to imperial units.",
    "code": "```java\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class UnitConverter {\n\n    private static final Map<String, Double> conversionMap = new HashMap<>();\n\n    static {\n        conversionMap.put(\"meter_to_yard\", 1.09361);\n        conversionMap.put(\"kilogram_to_pound\", 2.20462);\n        conversionMap.put(\"liter_to_gallon\", 0.264172);\n    }\n\n    public static double convert(String metricUnit, double value) {\n        if (conversionMap.containsKey(metricUnit)) {\n            return value * conversionMap.get(metricUnit);\n        } else {\n            throw new IllegalArgumentException(\"Conversion not supported for: \" + metricUnit);\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(convert(\"meter_to_yard\", 5)); // Example usage\n        System.out.println(convert(\"kilogram_to_pound\", 10));\n        System.out.println(convert(\"liter_to_gallon\", 3));\n    }\n}\n```"
  },
  {
    "task": "Build a dictionary to store the names of sports and their respective world records.",
    "code": "```java\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class SportsWorldRecords {\n    public static void main(String[] args) {\n        Map<String, String> sportsWorldRecords = new HashMap<>();\n\n        sportsWorldRecords.put(\"100m Sprint\", \"9.58 seconds\");\n        sportsWorldRecords.put(\"Long Jump\", \"8.95 meters\");\n        sportsWorldRecords.put(\"Marathon\", \"2:01:09\");\n\n        for (Map.Entry<String, String> entry : sportsWorldRecords.entrySet()) {\n            System.out.println(\"Sport: \" + entry.getKey() + \", World Record: \" + entry.getValue());\n        }\n    }\n}\n```"
  },
  {
    "task": "Implement a map to manage a list of favorite movies, allowing additions and deletions.",
    "code": "```java\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class FavoriteMovies {\n    private Map<String, String> movies;\n\n    public FavoriteMovies() {\n        movies = new HashMap<>();\n    }\n\n    public void addMovie(String title, String description) {\n        movies.put(title, description);\n    }\n\n    public void removeMovie(String title) {\n        movies.remove(title);\n    }\n\n    public static void main(String[] args) {\n        FavoriteMovies favoriteMovies = new FavoriteMovies();\n        favoriteMovies.addMovie(\"Inception\", \"A mind-bending thriller\");\n        favoriteMovies.addMovie(\"The Matrix\", \"A sci-fi classic\");\n        favoriteMovies.removeMovie(\"Inception\");\n    }\n}\n```"
  },
  {
    "task": "Create a program that uses a dictionary to track the distances between pairs of cities.",
    "code": "```java\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class CityDistanceTracker {\n    public static void main(String[] args) {\n        Map<String, Integer> cityDistances = new HashMap<>();\n\n        // Adding distances between pairs of cities\n        cityDistances.put(\"CityA-CityB\", 100);\n        cityDistances.put(\"CityA-CityC\", 200);\n        cityDistances.put(\"CityB-CityC\", 150);\n        cityDistances.put(\"CityB-CityD\", 250);\n        cityDistances.put(\"CityC-CityD\", 300);\n\n        // Accessing distances\n        String key = \"CityA-CityB\";\n        if (cityDistances.containsKey(key)) {\n            System.out.println(\"Distance between \" + key + \": \" + cityDistances.get(key) + \" km\");\n        } else {\n            System.out.println(\"Distance not found for \" + key);\n        }\n\n        // Iterating over all distances\n        for (Map.Entry<String, Integer> entry : cityDistances.entrySet()) {\n            String cities = entry.getKey();\n            Integer distance = entry.getValue();\n            System.out.println(\"Distance between \" + cities + \": \" + distance + \" km\");\n        }\n    }\n}\n```"
  },
  {
    "task": "Design a dictionary to store the names of planets and their orbital periods.",
    "code": "```java\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class PlanetOrbitalPeriods {\n    public static void main(String[] args) {\n        Map<String, Double> planetOrbitalPeriods = new HashMap<>();\n        \n        planetOrbitalPeriods.put(\"Mercury\", 87.97);\n        planetOrbitalPeriods.put(\"Venus\", 224.70);\n        planetOrbitalPeriods.put(\"Earth\", 365.26);\n        planetOrbitalPeriods.put(\"Mars\", 686.98);\n        planetOrbitalPeriods.put(\"Jupiter\", 4332.82);\n        planetOrbitalPeriods.put(\"Saturn\", 10755.7);\n        planetOrbitalPeriods.put(\"Uranus\", 30687.15);\n        planetOrbitalPeriods.put(\"Neptune\", 60190.03);\n        \n        // Example usage\n        System.out.println(\"Orbital period of Earth: \" + planetOrbitalPeriods.get(\"Earth\"));\n    }\n}\n```"
  },
  {
    "task": "Write a function that uses a map to convert HTML color codes to their respective color names.",
    "code": "```java\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class ColorConverter {\n    private static final Map<String, String> colorMap;\n    \n    static {\n        colorMap = new HashMap<>();\n        colorMap.put(\"#FF0000\", \"Red\");\n        colorMap.put(\"#00FF00\", \"Green\");\n        colorMap.put(\"#0000FF\", \"Blue\");\n        colorMap.put(\"#FFFF00\", \"Yellow\");\n        colorMap.put(\"#FF00FF\", \"Magenta\");\n        colorMap.put(\"#00FFFF\", \"Cyan\");\n        // Add more color codes and names as needed\n    }\n\n    public static String getColorName(String hexCode) {\n        return colorMap.getOrDefault(hexCode.toUpperCase(), \"Unknown Color\");\n    }\n\n    public static void main(String[] args) {\n        System.out.println(getColorName(\"#FF0000\")); // Output: Red\n        System.out.println(getColorName(\"#00FF00\")); // Output: Green\n        System.out.println(getColorName(\"#ABCDEF\")); // Output: Unknown Color\n    }\n}\n```"
  },
  {
    "task": "Create a dictionary to store the names of composers and their famous compositions.",
    "code": "```java\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class ComposerMap {\n    public static void main(String[] args) {\n        Map<String, String> composers = new HashMap<>();\n        composers.put(\"Ludwig van Beethoven\", \"Symphony No. 9\");\n        composers.put(\"Wolfgang Amadeus Mozart\", \"The Magic Flute\");\n        composers.put(\"Johann Sebastian Bach\", \"Brandenburg Concerto\");\n        composers.put(\"Pyotr Ilyich Tchaikovsky\", \"Swan Lake\");\n        composers.put(\"Fr\u00e9d\u00e9ric Chopin\", \"Nocturnes\");\n\n        // Example of accessing the map\n        for (Map.Entry<String, String> entry : composers.entrySet()) {\n            System.out.println(entry.getKey() + \" composed \" + entry.getValue());\n        }\n    }\n}\n```"
  },
  {
    "task": "Build a program that uses a map to store the names of bridges and their lengths.",
    "code": "```java\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class BridgeLengths {\n    public static void main(String[] args) {\n        Map<String, Integer> bridgeLengths = new HashMap<>();\n\n        bridgeLengths.put(\"Golden Gate Bridge\", 2737);\n        bridgeLengths.put(\"Brooklyn Bridge\", 1825);\n        bridgeLengths.put(\"London Bridge\", 269);\n        bridgeLengths.put(\"Sydney Harbour Bridge\", 1149);\n\n        for (Map.Entry<String, Integer> entry : bridgeLengths.entrySet()) {\n            System.out.println(\"Bridge: \" + entry.getKey() + \", Length: \" + entry.getValue() + \" meters\");\n        }\n    }\n}\n```"
  },
  {
    "task": "Implement a dictionary to manage a list of personal goals, allowing updates to goals.",
    "code": "```java\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class PersonalGoalsManager {\n    private Map<String, String> goals;\n\n    public PersonalGoalsManager() {\n        this.goals = new HashMap<>();\n    }\n\n    public void addGoal(String goalName, String description) {\n        goals.put(goalName, description);\n    }\n\n    public void updateGoal(String goalName, String newDescription) {\n        if (goals.containsKey(goalName)) {\n            goals.put(goalName, newDescription);\n        }\n    }\n\n    public String getGoal(String goalName) {\n        return goals.get(goalName);\n    }\n\n    public void removeGoal(String goalName) {\n        goals.remove(goalName);\n    }\n\n    public Map<String, String> getAllGoals() {\n        return new HashMap<>(goals);\n    }\n\n    public static void main(String[] args) {\n        PersonalGoalsManager manager = new PersonalGoalsManager();\n        manager.addGoal(\"Exercise\", \"Run 5km every morning\");\n        manager.updateGoal(\"Exercise\", \"Run 10km every morning\");\n        System.out.println(manager.getGoal(\"Exercise\"));\n    }\n}\n```"
  },
  {
    "task": "Write a script that uses a map to convert hexadecimal numbers to binary.",
    "code": "```java\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class HexToBinaryConverter {\n    public static void main(String[] args) {\n        Map<Character, String> hexToBinaryMap = new HashMap<>();\n        hexToBinaryMap.put('0', \"0000\");\n        hexToBinaryMap.put('1', \"0001\");\n        hexToBinaryMap.put('2', \"0010\");\n        hexToBinaryMap.put('3', \"0011\");\n        hexToBinaryMap.put('4', \"0100\");\n        hexToBinaryMap.put('5', \"0101\");\n        hexToBinaryMap.put('6', \"0110\");\n        hexToBinaryMap.put('7', \"0111\");\n        hexToBinaryMap.put('8', \"1000\");\n        hexToBinaryMap.put('9', \"1001\");\n        hexToBinaryMap.put('A', \"1010\");\n        hexToBinaryMap.put('B', \"1011\");\n        hexToBinaryMap.put('C', \"1100\");\n        hexToBinaryMap.put('D', \"1101\");\n        hexToBinaryMap.put('E', \"1110\");\n        hexToBinaryMap.put('F', \"1111\");\n\n        String hexNumber = \"1A3F\";\n        StringBuilder binaryNumber = new StringBuilder();\n\n        for (char hexDigit : hexNumber.toUpperCase().toCharArray()) {\n            binaryNumber.append(hexToBinaryMap.get(hexDigit));\n        }\n\n        System.out.println(\"Hexadecimal: \" + hexNumber);\n        System.out.println(\"Binary: \" + binaryNumber.toString());\n    }\n}\n```"
  },
  {
    "task": "Create a dictionary to store the names of trees and their average heights.",
    "code": "```java\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class TreeHeights {\n    public static void main(String[] args) {\n        Map<String, Double> treeHeights = new HashMap<>();\n\n        treeHeights.put(\"Oak\", 20.0);\n        treeHeights.put(\"Pine\", 30.0);\n        treeHeights.put(\"Maple\", 15.0);\n        treeHeights.put(\"Birch\", 10.0);\n\n        System.out.println(treeHeights);\n    }\n}\n```"
  }
]