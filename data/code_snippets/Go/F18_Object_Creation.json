[
  {
    "task": "Create a new instance of a class that represents a book, with properties for title, author, and ISBN number.",
    "code": "```go\npackage main\n\nimport \"fmt\"\n\ntype Book struct {\n\tTitle  string\n\tAuthor string\n\tISBN   string\n}\n\nfunc main() {\n\tbook := Book{\n\t\tTitle:  \"The Go Programming Language\",\n\t\tAuthor: \"Alan A. A. Donovan\",\n\t\tISBN:   \"978-0134190440\",\n\t}\n\n\tfmt.Println(book)\n}\n```"
  },
  {
    "task": "Instantiate an object of a class named Car, and set its make, model, and year attributes.",
    "code": "```go\npackage main\n\nimport \"fmt\"\n\ntype Car struct {\n\tMake  string\n\tModel string\n\tYear  int\n}\n\nfunc main() {\n\tmyCar := Car{\n\t\tMake:  \"Toyota\",\n\t\tModel: \"Corolla\",\n\t\tYear:  2021,\n\t}\n\n\tfmt.Printf(\"Car: %+v\\n\", myCar)\n}\n```"
  },
  {
    "task": "Develop a class to represent a rectangle, then create an object with specific width and height.",
    "code": "```go\npackage main\n\nimport \"fmt\"\n\ntype Rectangle struct {\n    Width  float64\n    Height float64\n}\n\nfunc main() {\n    rect := Rectangle{Width: 5.0, Height: 10.0}\n    fmt.Printf(\"Rectangle: width=%.2f, height=%.2f\\n\", rect.Width, rect.Height)\n}\n```"
  },
  {
    "task": "Construct an object of a class Person, initializing it with a name and age.",
    "code": "```go\npackage main\n\nimport \"fmt\"\n\ntype Person struct {\n\tName string\n\tAge  int\n}\n\nfunc main() {\n\tp := Person{\n\t\tName: \"John Doe\",\n\t\tAge:  30,\n\t}\n\tfmt.Println(p)\n}\n```"
  },
  {
    "task": "Create a new object from a class called Circle, initializing it with a radius value.",
    "code": "```go\npackage main\n\nimport \"fmt\"\n\ntype Circle struct {\n    radius float64\n}\n\nfunc NewCircle(radius float64) *Circle {\n    return &Circle{radius: radius}\n}\n\nfunc main() {\n    circle := NewCircle(5.0)\n    fmt.Println(\"Circle with radius:\", circle.radius)\n}\n```"
  },
  {
    "task": "Instantiate a class named Student with properties for name, student ID, and GPA.",
    "code": "```go\npackage main\n\nimport \"fmt\"\n\ntype Student struct {\n\tName     string\n\tStudentID string\n\tGPA      float64\n}\n\nfunc main() {\n\tstudent := Student{\n\t\tName:     \"John Doe\",\n\t\tStudentID: \"123456\",\n\t\tGPA:      3.5,\n\t}\n\tfmt.Println(student)\n}\n```"
  },
  {
    "task": "Design a class for a smartphone, then create an instance with specific brand, model, and storage capacity.",
    "code": "```go\npackage main\n\nimport \"fmt\"\n\ntype Smartphone struct {\n\tBrand   string\n\tModel   string\n\tStorage int\n}\n\nfunc main() {\n\tphone := Smartphone{\n\t\tBrand:   \"Apple\",\n\t\tModel:   \"iPhone 14\",\n\t\tStorage: 128,\n\t}\n\n\tfmt.Printf(\"Brand: %s, Model: %s, Storage: %dGB\\n\", phone.Brand, phone.Model, phone.Storage)\n}\n```"
  },
  {
    "task": "Create an object of a class named BankAccount, initializing it with an account number and balance.",
    "code": "```go\npackage main\n\nimport \"fmt\"\n\ntype BankAccount struct {\n\taccountNumber string\n\tbalance       float64\n}\n\nfunc NewBankAccount(accountNumber string, balance float64) *BankAccount {\n\treturn &BankAccount{\n\t\taccountNumber: accountNumber,\n\t\tbalance:       balance,\n\t}\n}\n\nfunc main() {\n\taccount := NewBankAccount(\"123456789\", 1000.0)\n\tfmt.Printf(\"Account Number: %s, Balance: %.2f\\n\", account.accountNumber, account.balance)\n}\n```"
  },
  {
    "task": "Write a class for a movie, then instantiate it with a title, director, and release year.",
    "code": "```go\npackage main\n\nimport \"fmt\"\n\ntype Movie struct {\n\tTitle     string\n\tDirector  string\n\tReleaseYear int\n}\n\nfunc main() {\n\tmovie := Movie{\n\t\tTitle:      \"Inception\",\n\t\tDirector:   \"Christopher Nolan\",\n\t\tReleaseYear: 2010,\n\t}\n\n\tfmt.Println(movie)\n}\n```"
  },
  {
    "task": "Define a class representing a point in 2D space and create an object with x and y coordinates.",
    "code": "```go\npackage main\n\nimport \"fmt\"\n\ntype Point struct {\n\tx, y float64\n}\n\nfunc main() {\n\tpoint := Point{x: 3.0, y: 4.0}\n\tfmt.Println(point)\n}\n```"
  },
  {
    "task": "Create an instance of a class called Computer with attributes for CPU, RAM, and storage.",
    "code": "```go\npackage main\n\nimport \"fmt\"\n\ntype Computer struct {\n\tCPU     string\n\tRAM     int\n\tStorage int\n}\n\nfunc main() {\n\tmyComputer := Computer{\n\t\tCPU:     \"Intel i7\",\n\t\tRAM:     16,\n\t\tStorage: 512,\n\t}\n\n\tfmt.Println(myComputer)\n}\n```"
  },
  {
    "task": "Design a class for a Song with properties for title, artist, and duration, and instantiate it.",
    "code": "```go\npackage main\n\nimport \"fmt\"\n\ntype Song struct {\n\tTitle    string\n\tArtist   string\n\tDuration int // duration in seconds\n}\n\nfunc main() {\n\tsong := Song{\n\t\tTitle:    \"Imagine\",\n\t\tArtist:   \"John Lennon\",\n\t\tDuration: 183,\n\t}\n\n\tfmt.Printf(\"Song: %s, Artist: %s, Duration: %d seconds\\n\", song.Title, song.Artist, song.Duration)\n}\n```"
  },
  {
    "task": "Create a new instance of a class named Pet, initializing it with type, breed, and age.",
    "code": "```go\npackage main\n\nimport \"fmt\"\n\ntype Pet struct {\n\tType  string\n\tBreed string\n\tAge   int\n}\n\nfunc main() {\n\tmyPet := Pet{\n\t\tType:  \"Dog\",\n\t\tBreed: \"Golden Retriever\",\n\t\tAge:   3,\n\t}\n\n\tfmt.Println(myPet)\n}\n```"
  },
  {
    "task": "Instantiate an object of a class named House with attributes for address, number of bedrooms, and price.",
    "code": "```go\npackage main\n\nimport \"fmt\"\n\ntype House struct {\n\tAddress       string\n\tNumBedrooms   int\n\tPrice         float64\n}\n\nfunc main() {\n\tmyHouse := House{\n\t\tAddress:     \"123 Main St\",\n\t\tNumBedrooms: 3,\n\t\tPrice:       250000.00,\n\t}\n\tfmt.Println(myHouse)\n}\n```"
  },
  {
    "task": "Develop a class for a Camera, then create an object with resolution and zoom level attributes.",
    "code": "```go\npackage main\n\nimport \"fmt\"\n\ntype Camera struct {\n\tResolution string\n\tZoomLevel  int\n}\n\nfunc main() {\n\tcamera := Camera{\n\t\tResolution: \"1080p\",\n\t\tZoomLevel:  5,\n\t}\n\n\tfmt.Printf(\"Camera Resolution: %s, Zoom Level: %d\\n\", camera.Resolution, camera.ZoomLevel)\n}\n```"
  },
  {
    "task": "Construct an object from a class named Bicycle with properties for brand, type, and gear count.",
    "code": "```go\npackage main\n\nimport \"fmt\"\n\ntype Bicycle struct {\n\tBrand    string\n\tType     string\n\tGearCount int\n}\n\nfunc main() {\n\tmyBicycle := Bicycle{\n\t\tBrand:    \"Giant\",\n\t\tType:     \"Mountain\",\n\t\tGearCount: 21,\n\t}\n\n\tfmt.Println(myBicycle)\n}\n```"
  },
  {
    "task": "Create a class for a book author with name and nationality, then instantiate it.",
    "code": "```go\npackage main\n\nimport \"fmt\"\n\ntype Author struct {\n\tName        string\n\tNationality string\n}\n\nfunc main() {\n\tauthor := Author{\n\t\tName:        \"Jane Doe\",\n\t\tNationality: \"American\",\n\t}\n\n\tfmt.Println(\"Author Name:\", author.Name)\n\tfmt.Println(\"Author Nationality:\", author.Nationality)\n}\n```"
  },
  {
    "task": "Define a class representing a video game with attributes for title, genre, and platform, and create an object.",
    "code": "```go\npackage main\n\nimport \"fmt\"\n\ntype VideoGame struct {\n\tTitle    string\n\tGenre    string\n\tPlatform string\n}\n\nfunc main() {\n\tgame := VideoGame{\n\t\tTitle:    \"The Legend of Go\",\n\t\tGenre:    \"Adventure\",\n\t\tPlatform: \"PC\",\n\t}\n\n\tfmt.Println(game)\n}\n```"
  },
  {
    "task": "Instantiate a class named Plane with properties for airline, model, and capacity.",
    "code": "```go\npackage main\n\nimport \"fmt\"\n\ntype Plane struct {\n\tairline string\n\tmodel   string\n\tcapacity int\n}\n\nfunc main() {\n\tplane := Plane{\n\t\tairline: \"Delta Airlines\",\n\t\tmodel: \"Boeing 737\",\n\t\tcapacity: 180,\n\t}\n\tfmt.Println(plane)\n}\n```"
  },
  {
    "task": "Create a new object of a class called Lamp, initializing it with color and brightness level.",
    "code": "```go\npackage main\n\nimport \"fmt\"\n\ntype Lamp struct {\n\tcolor      string\n\tbrightness int\n}\n\nfunc NewLamp(color string, brightness int) *Lamp {\n\treturn &Lamp{\n\t\tcolor:      color,\n\t\tbrightness: brightness,\n\t}\n}\n\nfunc main() {\n\tlamp := NewLamp(\"blue\", 75)\n\tfmt.Printf(\"Lamp color: %s, Brightness: %d\\n\", lamp.color, lamp.brightness)\n}\n```"
  },
  {
    "task": "Design a class for a TV show with properties for title, season, and episode count, then instantiate it.",
    "code": "```go\npackage main\n\nimport \"fmt\"\n\ntype TVShow struct {\n\tTitle       string\n\tSeason      int\n\tEpisodeCount int\n}\n\nfunc main() {\n\tshow := TVShow{\n\t\tTitle:       \"Example Show\",\n\t\tSeason:      1,\n\t\tEpisodeCount: 10,\n\t}\n\n\tfmt.Printf(\"Title: %s, Season: %d, Episodes: %d\\n\", show.Title, show.Season, show.EpisodeCount)\n}\n```"
  },
  {
    "task": "Instantiate an object of a class named Garden with attributes for size and number of plants.",
    "code": "```go\npackage main\n\nimport \"fmt\"\n\ntype Garden struct {\n\tSize        int\n\tNumOfPlants int\n}\n\nfunc main() {\n\tg := Garden{\n\t\tSize:        100,\n\t\tNumOfPlants: 20,\n\t}\n\n\tfmt.Println(g)\n}\n```"
  },
  {
    "task": "Develop a class for a Train, then create an object with properties for type and number of carriages.",
    "code": "```go\npackage main\n\nimport \"fmt\"\n\ntype Train struct {\n\tType         string\n\tNumberCarriages int\n}\n\nfunc main() {\n\ttrain := Train{\n\t\tType:           \"Freight\",\n\t\tNumberCarriages: 10,\n\t}\n\n\tfmt.Printf(\"Train Type: %s, Number of Carriages: %d\\n\", train.Type, train.NumberCarriages)\n}\n```"
  },
  {
    "task": "Define a class representing a planet with attributes for name, size, and distance from the sun, and create an object.",
    "code": "```go\npackage main\n\nimport \"fmt\"\n\ntype Planet struct {\n\tName           string\n\tSize           float64\n\tDistanceFromSun float64\n}\n\nfunc main() {\n\tearth := Planet{\n\t\tName:           \"Earth\",\n\t\tSize:           6371.0,        // in kilometers\n\t\tDistanceFromSun: 149.6e6,      // in kilometers\n\t}\n\tfmt.Println(earth)\n}\n```"
  },
  {
    "task": "Create an instance of a class named Fridge with properties for brand and capacity.",
    "code": "```go\npackage main\n\nimport \"fmt\"\n\ntype Fridge struct {\n\tBrand    string\n\tCapacity int\n}\n\nfunc main() {\n\tfridge := Fridge{\n\t\tBrand:    \"Samsung\",\n\t\tCapacity: 350,\n\t}\n\n\tfmt.Println(fridge)\n}\n```"
  },
  {
    "task": "Design a class for a Restaurant with attributes for name, cuisine type, and location, then create an instance.",
    "code": "```go\npackage main\n\nimport \"fmt\"\n\ntype Restaurant struct {\n\tname       string\n\tcuisine    string\n\tlocation   string\n}\n\nfunc main() {\n\trestaurant := Restaurant{\n\t\tname:       \"Gourmet Palace\",\n\t\tcuisine:    \"Italian\",\n\t\tlocation:   \"Downtown\",\n\t}\n\t\n\tfmt.Printf(\"Restaurant: %s, Cuisine: %s, Location: %s\\n\", restaurant.name, restaurant.cuisine, restaurant.location)\n}\n```"
  },
  {
    "task": "Create a new object from a class named Bookstore, initializing it with name and number of books.",
    "code": "```go\npackage main\n\nimport \"fmt\"\n\ntype Bookstore struct {\n\tName       string\n\tNumOfBooks int\n}\n\nfunc main() {\n\tbookstore := Bookstore{\n\t\tName:       \"The Book Haven\",\n\t\tNumOfBooks: 100,\n\t}\n\n\tfmt.Println(bookstore)\n}\n```"
  },
  {
    "task": "Instantiate a class named Library with properties for total books and number of members.",
    "code": "```go\npackage main\n\nimport \"fmt\"\n\ntype Library struct {\n\tTotalBooks   int\n\tNumMembers   int\n}\n\nfunc main() {\n\tlibrary := Library{\n\t\tTotalBooks: 1000,\n\t\tNumMembers: 150,\n\t}\n\n\tfmt.Println(library)\n}\n```"
  },
  {
    "task": "Write a class for a Beverage with properties for name, type, and volume, and instantiate it.",
    "code": "```go\npackage main\n\nimport \"fmt\"\n\ntype Beverage struct {\n\tName   string\n\tType   string\n\tVolume float64\n}\n\nfunc main() {\n\tbeverage := Beverage{\n\t\tName:   \"Cola\",\n\t\tType:   \"Soda\",\n\t\tVolume: 355.0,\n\t}\n\tfmt.Println(beverage)\n}\n```"
  },
  {
    "task": "Create an object of a class named User with attributes for username, email, and password.",
    "code": "```go\npackage main\n\nimport \"fmt\"\n\ntype User struct {\n\tusername string\n\temail    string\n\tpassword string\n}\n\nfunc main() {\n\tuser := User{\n\t\tusername: \"exampleUser\",\n\t\temail:    \"user@example.com\",\n\t\tpassword: \"securepassword\",\n\t}\n\n\tfmt.Println(\"Username:\", user.username)\n\tfmt.Println(\"Email:\", user.email)\n\tfmt.Println(\"Password:\", user.password)\n}\n```"
  },
  {
    "task": "Define a class for a Laptop with properties for brand, processor, and RAM, then instantiate it.",
    "code": "```go\npackage main\n\nimport \"fmt\"\n\ntype Laptop struct {\n\tBrand    string\n\tProcessor string\n\tRAM      int\n}\n\nfunc main() {\n\tlaptop := Laptop{\n\t\tBrand:    \"Dell\",\n\t\tProcessor: \"Intel i7\",\n\t\tRAM:      16,\n\t}\n\tfmt.Println(laptop)\n}\n```"
  },
  {
    "task": "Construct an object from a class named Mountain with attributes for name and elevation.",
    "code": "```go\npackage main\n\nimport \"fmt\"\n\ntype Mountain struct {\n    Name      string\n    Elevation int\n}\n\nfunc main() {\n    m := Mountain{\n        Name:      \"Everest\",\n        Elevation: 8848,\n    }\n\n    fmt.Println(\"Mountain Name:\", m.Name)\n    fmt.Println(\"Elevation:\", m.Elevation)\n}\n```"
  },
  {
    "task": "Create an instance of a class called Weather with properties for temperature, humidity, and condition.",
    "code": "```go\npackage main\n\nimport \"fmt\"\n\ntype Weather struct {\n\ttemperature float64\n\thumidity    float64\n\tcondition   string\n}\n\nfunc main() {\n\tw := Weather{\n\t\ttemperature: 72.5,\n\t\thumidity:    50.0,\n\t\tcondition:   \"Sunny\",\n\t}\n\n\tfmt.Printf(\"Weather: %v\\n\", w)\n}\n```"
  },
  {
    "task": "Design a class for a Classroom with attributes for room number and capacity, then create an instance.",
    "code": "```go\npackage main\n\nimport \"fmt\"\n\ntype Classroom struct {\n\troomNumber string\n\tcapacity   int\n}\n\nfunc main() {\n\tclassroom := Classroom{\n\t\troomNumber: \"101A\",\n\t\tcapacity:   30,\n\t}\n\n\tfmt.Println(\"Room Number:\", classroom.roomNumber)\n\tfmt.Println(\"Capacity:\", classroom.capacity)\n}\n```"
  },
  {
    "task": "Instantiate an object of a class named Zoo with properties for name and number of animals.",
    "code": "```go\npackage main\n\nimport \"fmt\"\n\ntype Zoo struct {\n\tname          string\n\tnumberOfAnimals int\n}\n\nfunc main() {\n\tzoo := Zoo{\n\t\tname:           \"Safari Park\",\n\t\tnumberOfAnimals: 250,\n\t}\n\n\tfmt.Println(\"Zoo Name:\", zoo.name)\n\tfmt.Println(\"Number of Animals:\", zoo.numberOfAnimals)\n}\n```"
  },
  {
    "task": "Develop a class for an Album with properties for name, artist, and release date, then instantiate it.",
    "code": "```go\npackage main\n\nimport \"fmt\"\n\ntype Album struct {\n\tName       string\n\tArtist     string\n\tReleaseDate string\n}\n\nfunc main() {\n\talbum := Album{\n\t\tName:       \"The Dark Side of the Moon\",\n\t\tArtist:     \"Pink Floyd\",\n\t\tReleaseDate: \"1973-03-01\",\n\t}\n\n\tfmt.Println(album)\n}\n```"
  },
  {
    "task": "Create a new object from a class named Hotel, initializing it with name, location, and star rating.",
    "code": "```go\npackage main\n\nimport \"fmt\"\n\ntype Hotel struct {\n\tName     string\n\tLocation string\n\tStarRating int\n}\n\nfunc main() {\n\thotel := Hotel{\n\t\tName:      \"Grand Plaza\",\n\t\tLocation:  \"New York\",\n\t\tStarRating: 5,\n\t}\n\n\tfmt.Println(hotel)\n}\n```"
  },
  {
    "task": "Write a class for a Recipe with properties for name, ingredients, and cooking time, and instantiate it.",
    "code": "```go\npackage main\n\nimport \"fmt\"\n\ntype Recipe struct {\n\tName        string\n\tIngredients []string\n\tCookingTime int\n}\n\nfunc main() {\n\trecipe := Recipe{\n\t\tName:        \"Pasta\",\n\t\tIngredients: []string{\"Pasta\", \"Tomato Sauce\", \"Cheese\"},\n\t\tCookingTime: 30,\n\t}\n\n\tfmt.Println(\"Recipe Name:\", recipe.Name)\n\tfmt.Println(\"Ingredients:\", recipe.Ingredients)\n\tfmt.Println(\"Cooking Time:\", recipe.CookingTime)\n}\n```"
  },
  {
    "task": "Define a class representing a Conference with attributes for name, date, and number of attendees, and create an object.",
    "code": "```go\npackage main\n\nimport \"fmt\"\n\ntype Conference struct {\n\tName           string\n\tDate           string\n\tNumberOfAttendees int\n}\n\nfunc main() {\n\tconf := Conference{\n\t\tName:           \"Tech Summit\",\n\t\tDate:           \"2023-11-15\",\n\t\tNumberOfAttendees: 500,\n\t}\n\n\tfmt.Println(conf)\n}\n```"
  },
  {
    "task": "Create an instance of a class called Park with properties for name, location, and area.",
    "code": "```go\npackage main\n\nimport \"fmt\"\n\ntype Park struct {\n\tName     string\n\tLocation string\n\tArea     float64\n}\n\nfunc main() {\n\tcentralPark := Park{\n\t\tName:     \"Central Park\",\n\t\tLocation: \"New York City\",\n\t\tArea:     843.0, // area in acres\n\t}\n\n\tfmt.Printf(\"Park Name: %s\\nLocation: %s\\nArea: %.2f acres\\n\", centralPark.Name, centralPark.Location, centralPark.Area)\n}\n```"
  },
  {
    "task": "Design a class for a Bicycle with attributes for brand, type, and wheel size, then create an instance.",
    "code": "```go\npackage main\n\nimport \"fmt\"\n\ntype Bicycle struct {\n\tbrand    string\n\tbikeType string\n\twheelSize int\n}\n\nfunc main() {\n\tbike := Bicycle{\n\t\tbrand:    \"Trek\",\n\t\tbikeType: \"Mountain\",\n\t\twheelSize: 29,\n\t}\n\tfmt.Println(bike)\n}\n```"
  },
  {
    "task": "Instantiate an object of a class named Festival with properties for name, location, and duration.",
    "code": "```go\npackage main\n\nimport \"fmt\"\n\ntype Festival struct {\n\tName     string\n\tLocation string\n\tDuration int\n}\n\nfunc main() {\n\tfestival := Festival{\n\t\tName:     \"Summer Fest\",\n\t\tLocation: \"Beachside Park\",\n\t\tDuration: 3,\n\t}\n\n\tfmt.Println(festival)\n}\n```"
  },
  {
    "task": "Develop a class for a Ship with properties for name, capacity, and type, then instantiate it.",
    "code": "```go\npackage main\n\nimport \"fmt\"\n\ntype Ship struct {\n\tname     string\n\tcapacity int\n\tshipType string\n}\n\nfunc main() {\n\tship := Ship{\n\t\tname:     \"Titanic\",\n\t\tcapacity: 3000,\n\t\tshipType: \"Cruise\",\n\t}\n\n\tfmt.Println(\"Ship Name:\", ship.name)\n\tfmt.Println(\"Capacity:\", ship.capacity)\n\tfmt.Println(\"Type:\", ship.shipType)\n}\n```"
  },
  {
    "task": "Create an object of a class named Currency with attributes for name, symbol, and exchange rate.",
    "code": "```go\npackage main\n\nimport \"fmt\"\n\ntype Currency struct {\n\tName        string\n\tSymbol      string\n\tExchangeRate float64\n}\n\nfunc main() {\n\tusd := Currency{\n\t\tName:        \"US Dollar\",\n\t\tSymbol:      \"$\",\n\t\tExchangeRate: 1.0,\n\t}\n\tfmt.Println(usd)\n}\n```"
  },
  {
    "task": "Define a class for a Gadget with properties for name, brand, and functionality, then instantiate it.",
    "code": "```go\npackage main\n\nimport \"fmt\"\n\ntype Gadget struct {\n\tName         string\n\tBrand        string\n\tFunctionality string\n}\n\nfunc main() {\n\tgadget := Gadget{\n\t\tName:         \"Smartphone\",\n\t\tBrand:        \"TechCorp\",\n\t\tFunctionality: \"Communication\",\n\t}\n\n\tfmt.Printf(\"Gadget: %s, Brand: %s, Functionality: %s\\n\", gadget.Name, gadget.Brand, gadget.Functionality)\n}\n```"
  },
  {
    "task": "Construct an object from a class named Bridge with attributes for name, length, and location.",
    "code": "```go\npackage main\n\nimport \"fmt\"\n\ntype Bridge struct {\n\tName     string\n\tLength   float64\n\tLocation string\n}\n\nfunc main() {\n\tbridge := Bridge{\n\t\tName:     \"Golden Gate\",\n\t\tLength:   2737.4,\n\t\tLocation: \"San Francisco, CA\",\n\t}\n\n\tfmt.Println(\"Bridge Name:\", bridge.Name)\n\tfmt.Println(\"Bridge Length:\", bridge.Length)\n\tfmt.Println(\"Bridge Location:\", bridge.Location)\n}\n```"
  },
  {
    "task": "Create an instance of a class called Forest with properties for name, area, and tree species.",
    "code": "```go\npackage main\n\nimport \"fmt\"\n\n// Define the Forest struct\ntype Forest struct {\n\tname       string\n\tarea       float64\n\ttreeSpecies []string\n}\n\nfunc main() {\n\t// Create an instance of Forest\n\tforest := Forest{\n\t\tname:       \"Amazon\",\n\t\tarea:       5500.0,\n\t\ttreeSpecies: []string{\"Mahogany\", \"Cedar\", \"Rosewood\"},\n\t}\n\n\t// Output the forest details\n\tfmt.Println(\"Forest Name:\", forest.name)\n\tfmt.Println(\"Forest Area:\", forest.area)\n\tfmt.Println(\"Tree Species:\", forest.treeSpecies)\n}\n```"
  },
  {
    "task": "Design a class for a Sculpture with attributes for title, artist, and material, then create an instance.",
    "code": "```go\npackage main\n\nimport \"fmt\"\n\ntype Sculpture struct {\n\tTitle   string\n\tArtist  string\n\tMaterial string\n}\n\nfunc main() {\n\tsculpture := Sculpture{\n\t\tTitle:   \"The Thinker\",\n\t\tArtist:  \"Auguste Rodin\",\n\t\tMaterial: \"Bronze\",\n\t}\n\n\tfmt.Printf(\"Sculpture: %s\\nArtist: %s\\nMaterial: %s\\n\", sculpture.Title, sculpture.Artist, sculpture.Material)\n}\n```"
  },
  {
    "task": "Instantiate an object of a class named Aquarium with properties for name and number of tanks.",
    "code": "```go\npackage main\n\nimport \"fmt\"\n\ntype Aquarium struct {\n\tName       string\n\tNumOfTanks int\n}\n\nfunc main() {\n\taquarium := Aquarium{\n\t\tName:       \"Ocean World\",\n\t\tNumOfTanks: 5,\n\t}\n\n\tfmt.Println(aquarium)\n}\n```"
  },
  {
    "task": "Develop a class for a Play with properties for title, playwright, and genre, then instantiate it.",
    "code": "```go\npackage main\n\nimport \"fmt\"\n\ntype Play struct {\n\tTitle     string\n\tPlaywright string\n\tGenre     string\n}\n\nfunc main() {\n\tplay := Play{\n\t\tTitle:     \"Hamlet\",\n\t\tPlaywright: \"William Shakespeare\",\n\t\tGenre:     \"Tragedy\",\n\t}\n\n\tfmt.Println(\"Play Title:\", play.Title)\n\tfmt.Println(\"Playwright:\", play.Playwright)\n\tfmt.Println(\"Genre:\", play.Genre)\n}\n```"
  },
  {
    "task": "Create a new object from a class named Telescope, initializing it with type and focal length.",
    "code": "```go\npackage main\n\nimport \"fmt\"\n\n// Define the Telescope struct\ntype Telescope struct {\n\tType        string\n\tFocalLength float64\n}\n\n// Main function\nfunc main() {\n\t// Create a new object from the Telescope struct\n\ttelescope := Telescope{\n\t\tType:        \"Refractor\",\n\t\tFocalLength: 1200.0,\n\t}\n\n\tfmt.Println(telescope)\n}\n```"
  },
  {
    "task": "Write a class for a Monument with properties for name, location, and year built, and instantiate it.",
    "code": "```go\npackage main\n\nimport \"fmt\"\n\ntype Monument struct {\n\tName     string\n\tLocation string\n\tYearBuilt int\n}\n\nfunc main() {\n\tmonument := Monument{\n\t\tName:     \"Eiffel Tower\",\n\t\tLocation: \"Paris\",\n\t\tYearBuilt: 1889,\n\t}\n\tfmt.Println(monument)\n}\n```"
  },
  {
    "task": "Define a class representing a Star with attributes for name, size, and distance from Earth, and create an object.",
    "code": "```go\npackage main\n\nimport \"fmt\"\n\ntype Star struct {\n\tName          string\n\tSize          float64\n\tDistanceFromEarth float64\n}\n\nfunc main() {\n\tstar := Star{\n\t\tName:          \"Proxima Centauri\",\n\t\tSize:          0.1542,\n\t\tDistanceFromEarth: 4.24,\n\t}\n\n\tfmt.Println(star)\n}\n```"
  },
  {
    "task": "Create an instance of a class called Festival with properties for name, location, and number of events.",
    "code": "```go\npackage main\n\nimport \"fmt\"\n\ntype Festival struct {\n\tName       string\n\tLocation   string\n\tNumEvents  int\n}\n\nfunc main() {\n\tfestival := Festival{\n\t\tName:      \"Music Fest\",\n\t\tLocation:  \"Central Park\",\n\t\tNumEvents: 5,\n\t}\n\n\tfmt.Println(festival)\n}\n```"
  },
  {
    "task": "Design a class for a Clock with attributes for brand, type, and display, then create an instance.",
    "code": "```go\npackage main\n\nimport \"fmt\"\n\ntype Clock struct {\n\tBrand   string\n\tType    string\n\tDisplay string\n}\n\nfunc main() {\n\tmyClock := Clock{\n\t\tBrand:   \"Rolex\",\n\t\tType:    \"Analog\",\n\t\tDisplay: \"LED\",\n\t}\n\n\tfmt.Println(myClock)\n}\n```"
  },
  {
    "task": "Instantiate an object of a class named Stadium with properties for name, capacity, and location.",
    "code": "```go\npackage main\n\nimport \"fmt\"\n\ntype Stadium struct {\n\tName     string\n\tCapacity int\n\tLocation string\n}\n\nfunc main() {\n\tstadium := Stadium{\n\t\tName:     \"Olympic Stadium\",\n\t\tCapacity: 70000,\n\t\tLocation: \"City Center\",\n\t}\n\n\tfmt.Println(stadium)\n}\n```"
  },
  {
    "task": "Develop a class for a Potion with properties for name, effect, and duration, then instantiate it.",
    "code": "```go\npackage main\n\nimport \"fmt\"\n\ntype Potion struct {\n\tName    string\n\tEffect  string\n\tDuration int\n}\n\nfunc main() {\n\tpotion := Potion{\n\t\tName:    \"Healing Potion\",\n\t\tEffect:  \"Heals 50 HP\",\n\t\tDuration: 30,\n\t}\n\tfmt.Printf(\"Potion: %s, Effect: %s, Duration: %d minutes\\n\", potion.Name, potion.Effect, potion.Duration)\n}\n```"
  },
  {
    "task": "Create an object of a class named Planet with attributes for name, mass, and orbital period.",
    "code": "```go\npackage main\n\nimport \"fmt\"\n\ntype Planet struct {\n    Name          string\n    Mass          float64\n    OrbitalPeriod float64\n}\n\nfunc main() {\n    planet := Planet{\n        Name:          \"Earth\",\n        Mass:          5.972e24,\n        OrbitalPeriod: 365.25,\n    }\n    \n    fmt.Println(\"Planet Name:\", planet.Name)\n    fmt.Println(\"Planet Mass:\", planet.Mass)\n    fmt.Println(\"Orbital Period:\", planet.OrbitalPeriod)\n}\n```"
  },
  {
    "task": "Define a class for a Lighthouse with properties for name, height, and light range, then instantiate it.",
    "code": "```go\npackage main\n\nimport \"fmt\"\n\ntype Lighthouse struct {\n\tName      string\n\tHeight    float64\n\tLightRange float64\n}\n\nfunc main() {\n\tlighthouse := Lighthouse{\n\t\tName:      \"Cape Hatteras\",\n\t\tHeight:    210.0,\n\t\tLightRange: 24.0,\n\t}\n\n\tfmt.Printf(\"Lighthouse: %s, Height: %.2f, Light Range: %.2f\\n\", lighthouse.Name, lighthouse.Height, lighthouse.LightRange)\n}\n```"
  },
  {
    "task": "Construct an object from a class named Volcano with attributes for name, height, and eruption history.",
    "code": "```go\npackage main\n\nimport \"fmt\"\n\ntype Volcano struct {\n\tName           string\n\tHeight         float64\n\tEruptionHistory []string\n}\n\nfunc main() {\n\tvolcano := Volcano{\n\t\tName:           \"Mount Fuji\",\n\t\tHeight:         3776.24,\n\t\tEruptionHistory: []string{\"1707\", \"864\", \"1033\"},\n\t}\n\n\tfmt.Println(volcano)\n}\n```"
  },
  {
    "task": "Create an instance of a class called Sculpture with properties for title, artist, and year created.",
    "code": "```go\npackage main\n\nimport \"fmt\"\n\ntype Sculpture struct {\n\tTitle   string\n\tArtist  string\n\tYear    int\n}\n\nfunc main() {\n\tsculpture := Sculpture{\n\t\tTitle:  \"The Thinker\",\n\t\tArtist: \"Auguste Rodin\",\n\t\tYear:   1904,\n\t}\n\n\tfmt.Printf(\"Sculpture: %s, Artist: %s, Year: %d\\n\", sculpture.Title, sculpture.Artist, sculpture.Year)\n}\n```"
  },
  {
    "task": "Design a class for a Ship with attributes for name, type, and displacement, then create an instance.",
    "code": "```go\npackage main\n\nimport \"fmt\"\n\ntype Ship struct {\n\tName        string\n\tType        string\n\tDisplacement float64\n}\n\nfunc main() {\n\tship := Ship{\n\t\tName:        \"USS Enterprise\",\n\t\tType:        \"Aircraft Carrier\",\n\t\tDisplacement: 93000,\n\t}\n\tfmt.Println(ship)\n}\n```"
  },
  {
    "task": "Instantiate an object of a class named Opera with properties for title, composer, and act count.",
    "code": "```go\npackage main\n\nimport \"fmt\"\n\ntype Opera struct {\n\tTitle    string\n\tComposer string\n\tActCount int\n}\n\nfunc main() {\n\topera := Opera{\n\t\tTitle:    \"The Magic Flute\",\n\t\tComposer: \"Wolfgang Amadeus Mozart\",\n\t\tActCount: 2,\n\t}\n\n\tfmt.Println(opera)\n}\n```"
  },
  {
    "task": "Develop a class for a Waterfall with properties for name, height, and flow rate, then instantiate it.",
    "code": "```go\npackage main\n\nimport \"fmt\"\n\ntype Waterfall struct {\n\tName     string\n\tHeight   float64\n\tFlowRate float64\n}\n\nfunc main() {\n\twaterfall := Waterfall{\n\t\tName:     \"Angel Falls\",\n\t\tHeight:   979.0,\n\t\tFlowRate: 500.0,\n\t}\n\n\tfmt.Printf(\"Waterfall: %s, Height: %.2f meters, Flow Rate: %.2f cubic meters per second\\n\",\n\t\twaterfall.Name, waterfall.Height, waterfall.FlowRate)\n}\n```"
  },
  {
    "task": "Create a new object from a class named Castle, initializing it with name, location, and year built.",
    "code": "```go\npackage main\n\nimport \"fmt\"\n\ntype Castle struct {\n\tName      string\n\tLocation  string\n\tYearBuilt int\n}\n\nfunc main() {\n\tc := Castle{\n\t\tName:      \"Windsor Castle\",\n\t\tLocation:  \"Windsor, England\",\n\t\tYearBuilt: 1070,\n\t}\n\n\tfmt.Println(c)\n}\n```"
  },
  {
    "task": "Write a class for a Cat with properties for name, breed, and color, and instantiate it.",
    "code": "```go\npackage main\n\nimport \"fmt\"\n\ntype Cat struct {\n\tName  string\n\tBreed string\n\tColor string\n}\n\nfunc main() {\n\tcat := Cat{\n\t\tName:  \"Whiskers\",\n\t\tBreed: \"Siamese\",\n\t\tColor: \"Gray\",\n\t}\n\n\tfmt.Printf(\"Cat: %+v\\n\", cat)\n}\n```"
  },
  {
    "task": "Define a class representing a Spaceship with attributes for name, speed, and crew capacity, and create an object.",
    "code": "```go\npackage main\n\nimport \"fmt\"\n\ntype Spaceship struct {\n\tName       string\n\tSpeed      int\n\tCrewCapacity int\n}\n\nfunc main() {\n\tspaceship := Spaceship{\n\t\tName:        \"Galactic Cruiser\",\n\t\tSpeed:       50000,\n\t\tCrewCapacity: 100,\n\t}\n\n\tfmt.Println(spaceship)\n}\n```"
  },
  {
    "task": "Create an instance of a class called Robot with properties for name, model, and function.",
    "code": "```go\npackage main\n\nimport \"fmt\"\n\ntype Robot struct {\n\tName    string\n\tModel   string\n\tFunction string\n}\n\nfunc main() {\n\trobot := Robot{\n\t\tName:    \"Robo1\",\n\t\tModel:   \"AlphaX\",\n\t\tFunction: \"Assistance\",\n\t}\n\n\tfmt.Println(robot)\n}\n```"
  },
  {
    "task": "Design a class for a Computer Program with attributes for name, language, and lines of code, then create an instance.",
    "code": "```go\npackage main\n\nimport \"fmt\"\n\ntype ComputerProgram struct {\n\tname       string\n\tlanguage   string\n\tlinesOfCode int\n}\n\nfunc main() {\n\tprogram := ComputerProgram{\n\t\tname:       \"MyApp\",\n\t\tlanguage:   \"Go\",\n\t\tlinesOfCode: 1000,\n\t}\n\n\tfmt.Println(program)\n}\n```"
  },
  {
    "task": "Instantiate an object of a class named Mountain with properties for name, range, and prominence.",
    "code": "```go\npackage main\n\nimport \"fmt\"\n\ntype Mountain struct {\n\tName       string\n\tRange      string\n\tProminence int\n}\n\nfunc main() {\n\tm := Mountain{\n\t\tName:       \"Mount Everest\",\n\t\tRange:      \"Himalayas\",\n\t\tProminence: 8848,\n\t}\n\n\tfmt.Println(m)\n}\n```"
  },
  {
    "task": "Develop a class for a Painting with properties for title, artist, and dimensions, then instantiate it.",
    "code": "```go\npackage main\n\nimport \"fmt\"\n\ntype Painting struct {\n\tTitle     string\n\tArtist    string\n\tDimensions string\n}\n\nfunc main() {\n\tpainting := Painting{\n\t\tTitle:     \"Starry Night\",\n\t\tArtist:    \"Vincent van Gogh\",\n\t\tDimensions: \"73.7 cm \u00d7 92.1 cm\",\n\t}\n\n\tfmt.Printf(\"Title: %s, Artist: %s, Dimensions: %s\\n\", painting.Title, painting.Artist, painting.Dimensions)\n}\n```"
  },
  {
    "task": "Create an object of a class named Symphony with attributes for title, composer, and movement count.",
    "code": "```go\npackage main\n\nimport \"fmt\"\n\ntype Symphony struct {\n\tTitle        string\n\tComposer     string\n\tMovementCount int\n}\n\nfunc main() {\n\tsymphony := Symphony{\n\t\tTitle:        \"Symphony No. 9\",\n\t\tComposer:     \"Ludwig van Beethoven\",\n\t\tMovementCount: 4,\n\t}\n\n\tfmt.Println(symphony)\n}\n```"
  },
  {
    "task": "Define a class for a Dinosaur with properties for name, period, and diet, then instantiate it.",
    "code": "```go\npackage main\n\nimport \"fmt\"\n\ntype Dinosaur struct {\n\tName   string\n\tPeriod string\n\tDiet   string\n}\n\nfunc main() {\n\tdino := Dinosaur{\n\t\tName:   \"Tyrannosaurus Rex\",\n\t\tPeriod: \"Cretaceous\",\n\t\tDiet:   \"Carnivore\",\n\t}\n\n\tfmt.Println(dino)\n}\n```"
  },
  {
    "task": "Construct an object from a class named River with attributes for name, length, and basin size.",
    "code": "```go\npackage main\n\nimport \"fmt\"\n\ntype River struct {\n\tName      string\n\tLength    float64\n\tBasinSize float64\n}\n\nfunc main() {\n\triver := River{\n\t\tName:      \"Amazon\",\n\t\tLength:    6992,  // in kilometers\n\t\tBasinSize: 7050000, // in square kilometers\n\t}\n\n\tfmt.Println(\"River Name:\", river.Name)\n\tfmt.Println(\"River Length:\", river.Length, \"km\")\n\tfmt.Println(\"Basin Size:\", river.BasinSize, \"sq km\")\n}\n```"
  },
  {
    "task": "Create an instance of a class called Instrument with properties for name, type, and material.",
    "code": "```go\npackage main\n\nimport \"fmt\"\n\ntype Instrument struct {\n\tName     string\n\tType     string\n\tMaterial string\n}\n\nfunc main() {\n\tinstrument := Instrument{\n\t\tName:     \"Guitar\",\n\t\tType:     \"String\",\n\t\tMaterial: \"Wood\",\n\t}\n\n\tfmt.Printf(\"Instrument: %+v\\n\", instrument)\n}\n```"
  },
  {
    "task": "Design a class for a Planetarium with attributes for name, location, and dome size, then create an instance.",
    "code": "```go\npackage main\n\nimport \"fmt\"\n\ntype Planetarium struct {\n    Name     string\n    Location string\n    DomeSize float64\n}\n\nfunc main() {\n    p := Planetarium{\n        Name:     \"Galactic View\",\n        Location: \"Downtown\",\n        DomeSize: 30.5,\n    }\n    \n    fmt.Printf(\"Planetarium: %s, Location: %s, Dome Size: %.1f\\n\", p.Name, p.Location, p.DomeSize)\n}\n```"
  },
  {
    "task": "Instantiate an object of a class named Island with properties for name, area, and population.",
    "code": "```go\npackage main\n\nimport \"fmt\"\n\ntype Island struct {\n\tName       string\n\tArea       float64\n\tPopulation int\n}\n\nfunc main() {\n\tisland := Island{\n\t\tName:       \"Paradise Island\",\n\t\tArea:       1234.56,\n\t\tPopulation: 10000,\n\t}\n\n\tfmt.Println(island)\n}\n```"
  },
  {
    "task": "Develop a class for a Space Station with properties for name, crew size, and modules, then instantiate it.",
    "code": "```go\npackage main\n\nimport \"fmt\"\n\ntype SpaceStation struct {\n\tName    string\n\tCrewSize int\n\tModules []string\n}\n\nfunc main() {\n\tstation := SpaceStation{\n\t\tName:    \"International Space Station\",\n\t\tCrewSize: 6,\n\t\tModules: []string{\"Zarya\", \"Unity\", \"Destiny\", \"Quest\", \"Columbus\"},\n\t}\n\n\tfmt.Println(\"Space Station Name:\", station.Name)\n\tfmt.Println(\"Crew Size:\", station.CrewSize)\n\tfmt.Println(\"Modules:\", station.Modules)\n}\n```"
  },
  {
    "task": "Create a new object from a class named Dinosaur, initializing it with species and period.",
    "code": "```go\npackage main\n\nimport \"fmt\"\n\ntype Dinosaur struct {\n\tspecies string\n\tperiod  string\n}\n\nfunc NewDinosaur(species, period string) *Dinosaur {\n\treturn &Dinosaur{\n\t\tspecies: species,\n\t\tperiod:  period,\n\t}\n}\n\nfunc main() {\n\tdino := NewDinosaur(\"Tyrannosaurus Rex\", \"Cretaceous\")\n\tfmt.Printf(\"Species: %s, Period: %s\\n\", dino.species, dino.period)\n}\n```"
  },
  {
    "task": "Write a class for a Tree with properties for species, height, and age, and instantiate it.",
    "code": "```go\npackage main\n\nimport \"fmt\"\n\ntype Tree struct {\n\tSpecies string\n\tHeight  float64\n\tAge     int\n}\n\nfunc main() {\n\ttree := Tree{\n\t\tSpecies: \"Oak\",\n\t\tHeight:  20.5,\n\t\tAge:     50,\n\t}\n\tfmt.Printf(\"Tree: %s, Height: %.2f, Age: %d\\n\", tree.Species, tree.Height, tree.Age)\n}\n```"
  },
  {
    "task": "Define a class representing a Firework with attributes for name, color, and duration, and create an object.",
    "code": "```go\npackage main\n\nimport \"fmt\"\n\ntype Firework struct {\n\tName     string\n\tColor    string\n\tDuration float64\n}\n\nfunc main() {\n\tf := Firework{\n\t\tName:     \"Sparkler\",\n\t\tColor:    \"Red\",\n\t\tDuration: 5.0,\n\t}\n\tfmt.Printf(\"Firework: %s, Color: %s, Duration: %.2f seconds\\n\", f.Name, f.Color, f.Duration)\n}\n```"
  },
  {
    "task": "Create an instance of a class called ComicBook with properties for title, author, and issue number.",
    "code": "```go\npackage main\n\nimport \"fmt\"\n\ntype ComicBook struct {\n\tTitle     string\n\tAuthor    string\n\tIssueNumber int\n}\n\nfunc main() {\n\tcomic := ComicBook{\n\t\tTitle:      \"The Amazing Spider-Man\",\n\t\tAuthor:     \"Stan Lee\",\n\t\tIssueNumber: 1,\n\t}\n\tfmt.Println(comic)\n}\n```"
  },
  {
    "task": "Design a class for a Metropolis with attributes for name, population, and GDP, then create an instance.",
    "code": "```go\npackage main\n\nimport \"fmt\"\n\ntype Metropolis struct {\n\tname      string\n\tpopulation int\n\tgdp       float64\n}\n\nfunc main() {\n\tcity := Metropolis{\n\t\tname:       \"Example City\",\n\t\tpopulation: 1000000,\n\t\tgdp:        25000000000.0,\n\t}\n\n\tfmt.Println(\"Metropolis Name:\", city.name)\n\tfmt.Println(\"Population:\", city.population)\n\tfmt.Println(\"GDP:\", city.gdp)\n}\n```"
  },
  {
    "task": "Instantiate an object of a class named Dragon with properties for name, element, and age.",
    "code": "```go\npackage main\n\nimport \"fmt\"\n\ntype Dragon struct {\n    Name    string\n    Element string\n    Age     int\n}\n\nfunc main() {\n    dragon := Dragon{\n        Name:    \"Smaug\",\n        Element: \"Fire\",\n        Age:     300,\n    }\n\n    fmt.Println(dragon)\n}\n```"
  },
  {
    "task": "Develop a class for a Novel with properties for title, author, and genre, then instantiate it.",
    "code": "```go\npackage main\n\nimport \"fmt\"\n\ntype Novel struct {\n\tTitle  string\n\tAuthor string\n\tGenre  string\n}\n\nfunc main() {\n\tmyNovel := Novel{\n\t\tTitle:  \"The Great Gatsby\",\n\t\tAuthor: \"F. Scott Fitzgerald\",\n\t\tGenre:  \"Fiction\",\n\t}\n\n\tfmt.Println(myNovel)\n}\n```"
  },
  {
    "task": "Create an object of a class named Satellite with attributes for name, orbit, and mission.",
    "code": "```go\npackage main\n\nimport \"fmt\"\n\ntype Satellite struct {\n\tName   string\n\tOrbit  string\n\tMission string\n}\n\nfunc main() {\n\tsatellite := Satellite{\n\t\tName:   \"Hubble\",\n\t\tOrbit:  \"Low Earth Orbit\",\n\t\tMission: \"Space Telescope\",\n\t}\n\n\tfmt.Println(satellite)\n}\n```"
  },
  {
    "task": "Define a class for a Castle with properties for name, location, and architectural style, then instantiate it.",
    "code": "```go\npackage main\n\nimport \"fmt\"\n\ntype Castle struct {\n\tName             string\n\tLocation         string\n\tArchitecturalStyle string\n}\n\nfunc main() {\n\tcastle := Castle{\n\t\tName:             \"Windsor Castle\",\n\t\tLocation:         \"Windsor, England\",\n\t\tArchitecturalStyle: \"Gothic\",\n\t}\n\n\tfmt.Printf(\"Castle Name: %s\\nLocation: %s\\nArchitectural Style: %s\\n\", castle.Name, castle.Location, castle.ArchitecturalStyle)\n}\n```"
  },
  {
    "task": "Construct an object from a class named Jungle with attributes for name, area, and biodiversity.",
    "code": "```go\npackage main\n\nimport \"fmt\"\n\ntype Jungle struct {\n\tName        string\n\tArea        float64\n\tBiodiversity int\n}\n\nfunc main() {\n\tjungle := Jungle{\n\t\tName:        \"Amazon\",\n\t\tArea:        5500.0,\n\t\tBiodiversity: 2500,\n\t}\n\n\tfmt.Println(jungle)\n}\n```"
  },
  {
    "task": "Create an instance of a class called Dinosaur with properties for species, size, and diet.",
    "code": "```go\npackage main\n\nimport \"fmt\"\n\ntype Dinosaur struct {\n\tSpecies string\n\tSize    string\n\tDiet    string\n}\n\nfunc main() {\n\td := Dinosaur{\n\t\tSpecies: \"Tyrannosaurus Rex\",\n\t\tSize:    \"Large\",\n\t\tDiet:    \"Carnivore\",\n\t}\n\n\tfmt.Println(\"Dinosaur:\", d)\n}\n```"
  },
  {
    "task": "Design a class for a Superhero with attributes for name, powers, and alias, then create an instance.",
    "code": "```go\npackage main\n\nimport \"fmt\"\n\ntype Superhero struct {\n\tName   string\n\tPowers []string\n\tAlias  string\n}\n\nfunc main() {\n\thero := Superhero{\n\t\tName:   \"Superman\",\n\t\tPowers: []string{\"Flight\", \"Super strength\", \"X-ray vision\"},\n\t\tAlias:  \"Clark Kent\",\n\t}\n\n\tfmt.Println(hero)\n}\n```"
  }
]