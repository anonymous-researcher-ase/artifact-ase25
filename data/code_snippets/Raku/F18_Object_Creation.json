[
  {
    "task": "Create a new instance of a class that represents a book, with properties for title, author, and ISBN number.",
    "code": "```raku\nclass Book {\n    has Str $.title;\n    has Str $.author;\n    has Str $.isbn;\n}\n\nmy $book = Book.new(title => 'The Great Gatsby', author => 'F. Scott Fitzgerald', isbn => '9780743273565');\n```"
  },
  {
    "task": "Instantiate an object of a class named Car, and set its make, model, and year attributes.",
    "code": "```raku\nclass Car {\n    has $.make;\n    has $.model;\n    has $.year;\n}\n\nmy $car = Car.new(make => 'Toyota', model => 'Corolla', year => 2020);\n```"
  },
  {
    "task": "Develop a class to represent a rectangle, then create an object with specific width and height.",
    "code": "```raku\nclass Rectangle {\n    has $.width;\n    has $.height;\n\n    method new-rectangle($width, $height) {\n        self.bless(:$width, :$height);\n    }\n}\n\nmy $rectangle = Rectangle.new-rectangle(10, 20);\n```"
  },
  {
    "task": "Construct an object of a class Person, initializing it with a name and age.",
    "code": "```raku\nclass Person {\n    has Str $.name;\n    has Int $.age;\n}\n\nmy $person = Person.new(name => 'John Doe', age => 30);\n```"
  },
  {
    "task": "Create a new object from a class called Circle, initializing it with a radius value.",
    "code": "```raku\nclass Circle {\n    has $.radius;\n}\n\nmy $circle = Circle.new(radius => 5);\n```"
  },
  {
    "task": "Instantiate a class named Student with properties for name, student ID, and GPA.",
    "code": "```raku\nclass Student {\n    has Str $.name;\n    has Str $.student_id;\n    has Num $.gpa;\n}\n\nmy $student = Student.new(name => 'John Doe', student_id => '12345', gpa => 3.5);\n```"
  },
  {
    "task": "Design a class for a smartphone, then create an instance with specific brand, model, and storage capacity.",
    "code": "```raku\nclass Smartphone {\n    has Str $.brand;\n    has Str $.model;\n    has Int $.storage;\n\n    method new(:$brand, :$model, :$storage) {\n        self.bless(:$brand, :$model, :$storage);\n    }\n}\n\nmy $phone = Smartphone.new(brand => \"Apple\", model => \"iPhone 14\", storage => 128);\n```"
  },
  {
    "task": "Create an object of a class named BankAccount, initializing it with an account number and balance.",
    "code": "```raku\nclass BankAccount {\n    has $.account-number;\n    has $.balance;\n}\n\nmy $account = BankAccount.new(account-number => '123456789', balance => 1000.0);\n```"
  },
  {
    "task": "Write a class for a movie, then instantiate it with a title, director, and release year.",
    "code": "```raku\nclass Movie {\n    has Str $.title;\n    has Str $.director;\n    has Int $.release-year;\n}\n\nmy $movie = Movie.new(\n    title => 'Inception',\n    director => 'Christopher Nolan',\n    release-year => 2010\n);\n```"
  },
  {
    "task": "Define a class representing a point in 2D space and create an object with x and y coordinates.",
    "code": "```raku\nclass Point {\n    has $.x;\n    has $.y;\n}\n\nmy $point = Point.new(x => 5, y => 10);\n```"
  },
  {
    "task": "Create an instance of a class called Computer with attributes for CPU, RAM, and storage.",
    "code": "```raku\nclass Computer {\n    has $.cpu;\n    has $.ram;\n    has $.storage;\n}\n\nmy $computer = Computer.new(cpu => 'Intel i7', ram => '16GB', storage => '512GB SSD');\n```"
  },
  {
    "task": "Design a class for a Song with properties for title, artist, and duration, and instantiate it.",
    "code": "```raku\nclass Song {\n    has Str $.title;\n    has Str $.artist;\n    has Int $.duration;\n}\n\nmy $song = Song.new(title => \"Bohemian Rhapsody\", artist => \"Queen\", duration => 354);\n```"
  },
  {
    "task": "Create a new instance of a class named Pet, initializing it with type, breed, and age.",
    "code": "```raku\nclass Pet {\n    has Str $.type;\n    has Str $.breed;\n    has Int $.age;\n}\n\nmy $pet = Pet.new(type => 'Dog', breed => 'Labrador', age => 3);\n```"
  },
  {
    "task": "Instantiate an object of a class named House with attributes for address, number of bedrooms, and price.",
    "code": "```raku\nclass House {\n    has Str $.address;\n    has Int $.number_of_bedrooms;\n    has Num $.price;\n}\n\nmy $house = House.new(\n    address => '123 Main St',\n    number_of_bedrooms => 3,\n    price => 250000.0\n);\n```"
  },
  {
    "task": "Develop a class for a Camera, then create an object with resolution and zoom level attributes.",
    "code": "```raku\nclass Camera {\n    has $.resolution;\n    has $.zoom-level;\n}\n\nmy $camera = Camera.new(resolution => '1080p', zoom-level => 5);\n```"
  },
  {
    "task": "Construct an object from a class named Bicycle with properties for brand, type, and gear count.",
    "code": "```raku\nclass Bicycle {\n    has Str $.brand;\n    has Str $.type;\n    has Int $.gear_count;\n}\n\nmy $bicycle = Bicycle.new(brand => 'Trek', type => 'Mountain', gear_count => 21);\n```"
  },
  {
    "task": "Create a class for a book author with name and nationality, then instantiate it.",
    "code": "```raku\nclass Author {\n    has Str $.name;\n    has Str $.nationality;\n}\n\nmy $author = Author.new(name => 'Unknown', nationality => 'Unknown');\n```"
  },
  {
    "task": "Define a class representing a video game with attributes for title, genre, and platform, and create an object.",
    "code": "```raku\nclass VideoGame {\n    has Str $.title;\n    has Str $.genre;\n    has Str $.platform;\n}\n\nmy $game = VideoGame.new(\n    title => 'Example Game',\n    genre => 'Adventure',\n    platform => 'PC'\n);\n```"
  },
  {
    "task": "Instantiate a class named Plane with properties for airline, model, and capacity.",
    "code": "```raku\nclass Plane {\n    has $.airline;\n    has $.model;\n    has $.capacity;\n}\n\nmy $plane = Plane.new(\n    airline => 'ExampleAir',\n    model   => 'Boeing 747',\n    capacity => 416\n);\n```"
  },
  {
    "task": "Create a new object of a class called Lamp, initializing it with color and brightness level.",
    "code": "```raku\nclass Lamp {\n    has Str $.color;\n    has Int $.brightness;\n}\n\nmy $lamp = Lamp.new(color => 'blue', brightness => 75);\n```"
  },
  {
    "task": "Design a class for a TV show with properties for title, season, and episode count, then instantiate it.",
    "code": "```raku\nclass TVShow {\n    has Str $.title;\n    has Int $.season;\n    has Int $.episode-count;\n}\n\nmy $show = TVShow.new(title => \"Example Show\", season => 1, episode-count => 10);\n```"
  },
  {
    "task": "Instantiate an object of a class named Garden with attributes for size and number of plants.",
    "code": "```raku\nclass Garden {\n    has $.size;\n    has $.number_of_plants;\n}\n\nmy $garden = Garden.new(size => 'large', number_of_plants => 42);\n```"
  },
  {
    "task": "Develop a class for a Train, then create an object with properties for type and number of carriages.",
    "code": "```raku\nclass Train {\n    has $.type;\n    has $.number-of-carriages;\n}\n\nmy $train = Train.new(type => 'Freight', number-of-carriages => 20);\n```"
  },
  {
    "task": "Define a class representing a planet with attributes for name, size, and distance from the sun, and create an object.",
    "code": "```raku\nclass Planet {\n    has Str $.name;\n    has Numeric $.size;\n    has Numeric $.distance-from-sun;\n}\n\nmy $earth = Planet.new(name => 'Earth', size => 12742, distance-from-sun => 149.6);\n```"
  },
  {
    "task": "Create an instance of a class named Fridge with properties for brand and capacity.",
    "code": "```raku\nclass Fridge {\n    has Str $.brand;\n    has Int $.capacity;\n}\n\nmy $fridge = Fridge.new(brand => 'Samsung', capacity => 300);\n```"
  },
  {
    "task": "Design a class for a Restaurant with attributes for name, cuisine type, and location, then create an instance.",
    "code": "```raku\nclass Restaurant {\n    has Str $.name;\n    has Str $.cuisine-type;\n    has Str $.location;\n}\n\nmy $restaurant = Restaurant.new(\n    name => 'Gourmet Delight',\n    cuisine-type => 'Italian',\n    location => 'Downtown'\n);\n```"
  },
  {
    "task": "Create a new object from a class named Bookstore, initializing it with name and number of books.",
    "code": "```raku\nclass Bookstore {\n    has Str $.name;\n    has Int $.number-of-books;\n\n    method new(Str $name, Int $number-of-books) {\n        self.bless(:$name, :$number-of-books);\n    }\n}\n\nmy $bookstore = Bookstore.new('City Library', 5000);\n```"
  },
  {
    "task": "Instantiate a class named Library with properties for total books and number of members.",
    "code": "```raku\nclass Library {\n    has $.total-books;\n    has $.number-of-members;\n}\n\nmy $library = Library.new(total-books => 1000, number-of-members => 500);\n```"
  },
  {
    "task": "Write a class for a Beverage with properties for name, type, and volume, and instantiate it.",
    "code": "```raku\nclass Beverage {\n    has $.name;\n    has $.type;\n    has $.volume;\n}\n\nmy $drink = Beverage.new(name => \"Cola\", type => \"Soda\", volume => 500);\n```"
  },
  {
    "task": "Create an object of a class named User with attributes for username, email, and password.",
    "code": "```raku\nclass User {\n    has Str $.username;\n    has Str $.email;\n    has Str $.password;\n}\n\nmy $user = User.new(username => 'exampleUser', email => 'user@example.com', password => 'securepassword');\n```"
  },
  {
    "task": "Define a class for a Laptop with properties for brand, processor, and RAM, then instantiate it.",
    "code": "```raku\nclass Laptop {\n    has Str $.brand;\n    has Str $.processor;\n    has Int $.ram;\n}\n\nmy $laptop = Laptop.new(brand => 'Dell', processor => 'Intel i7', ram => 16);\n```"
  },
  {
    "task": "Construct an object from a class named Mountain with attributes for name and elevation.",
    "code": "```raku\nclass Mountain {\n    has Str $.name;\n    has Num $.elevation;\n}\n\nmy $mountain = Mountain.new(name => 'Everest', elevation => 8848);\n```"
  },
  {
    "task": "Create an instance of a class called Weather with properties for temperature, humidity, and condition.",
    "code": "```raku\nclass Weather {\n    has $.temperature;\n    has $.humidity;\n    has $.condition;\n}\n\nmy $weather-instance = Weather.new(temperature => 25, humidity => 80, condition => 'Sunny');\n```"
  },
  {
    "task": "Design a class for a Classroom with attributes for room number and capacity, then create an instance.",
    "code": "```raku\nclass Classroom {\n    has $.room-number;\n    has $.capacity;\n}\n\nmy $classroom = Classroom.new(room-number => 101, capacity => 30);\n```"
  },
  {
    "task": "Instantiate an object of a class named Zoo with properties for name and number of animals.",
    "code": "```raku\nclass Zoo {\n    has Str $.name;\n    has Int $.number-of-animals;\n}\n\nmy $zoo = Zoo.new(name => 'City Zoo', number-of-animals => 150);\n```"
  },
  {
    "task": "Develop a class for an Album with properties for name, artist, and release date, then instantiate it.",
    "code": "```raku\nclass Album {\n    has Str $.name;\n    has Str $.artist;\n    has Date $.release-date;\n}\n\nmy $album = Album.new(\n    name => 'Album Name',\n    artist => 'Artist Name',\n    release-date => Date.new('2023-10-01')\n);\n```"
  },
  {
    "task": "Create a new object from a class named Hotel, initializing it with name, location, and star rating.",
    "code": "```raku\nclass Hotel {\n    has Str $.name;\n    has Str $.location;\n    has Int $.star-rating;\n}\n\nmy $hotel = Hotel.new(name => 'Grand Hotel', location => 'Paris', star-rating => 5);\n```"
  },
  {
    "task": "Write a class for a Recipe with properties for name, ingredients, and cooking time, and instantiate it.",
    "code": "```raku\nclass Recipe {\n    has Str $.name;\n    has @.ingredients;\n    has Int $.cooking-time;\n}\n\nmy $recipe = Recipe.new(\n    name => 'Pancakes',\n    ingredients => ['Flour', 'Eggs', 'Milk'],\n    cooking-time => 20\n);\n```"
  },
  {
    "task": "Define a class representing a Conference with attributes for name, date, and number of attendees, and create an object.",
    "code": "```raku\nclass Conference {\n    has $.name;\n    has $.date;\n    has $.attendees;\n}\n\nmy $conference = Conference.new(name => 'Tech Summit', date => '2023-11-15', attendees => 250);\n```"
  },
  {
    "task": "Create an instance of a class called Park with properties for name, location, and area.",
    "code": "```raku\nclass Park {\n    has $.name;\n    has $.location;\n    has $.area;\n}\n\nmy $central-park = Park.new(name => 'Central Park', location => 'New York', area => '843 acres');\n```"
  },
  {
    "task": "Design a class for a Bicycle with attributes for brand, type, and wheel size, then create an instance.",
    "code": "```raku\nclass Bicycle {\n    has Str $.brand;\n    has Str $.type;\n    has Int $.wheel-size;\n}\n\nmy $bike = Bicycle.new(brand => 'Trek', type => 'Mountain', wheel-size => 29);\n```"
  },
  {
    "task": "Instantiate an object of a class named Festival with properties for name, location, and duration.",
    "code": "```raku\nclass Festival {\n    has Str $.name;\n    has Str $.location;\n    has Int $.duration;\n}\n\nmy $festival = Festival.new(\n    name => 'Summer Fest',\n    location => 'Central Park',\n    duration => 3\n);\n```"
  },
  {
    "task": "Develop a class for a Ship with properties for name, capacity, and type, then instantiate it.",
    "code": "```raku\nclass Ship {\n    has Str $.name;\n    has Int $.capacity;\n    has Str $.type;\n}\n\nmy $ship = Ship.new(name => 'Titanic', capacity => 3000, type => 'Cruise');\n```"
  },
  {
    "task": "Create an object of a class named Currency with attributes for name, symbol, and exchange rate.",
    "code": "```raku\nclass Currency {\n    has Str $.name;\n    has Str $.symbol;\n    has Num $.exchange-rate;\n}\n\nmy $currency = Currency.new(name => 'Dollar', symbol => '$', exchange-rate => 1.0);\n```"
  },
  {
    "task": "Define a class for a Gadget with properties for name, brand, and functionality, then instantiate it.",
    "code": "```raku\nclass Gadget {\n    has Str $.name;\n    has Str $.brand;\n    has Str $.functionality;\n}\n\nmy $gadget = Gadget.new(\n    name         => 'Smartphone',\n    brand        => 'TechBrand',\n    functionality => 'Communicate and entertain'\n);\n```"
  },
  {
    "task": "Construct an object from a class named Bridge with attributes for name, length, and location.",
    "code": "```raku\nclass Bridge {\n    has Str $.name;\n    has Num $.length;\n    has Str $.location;\n}\n\nmy $bridge = Bridge.new(name => 'Golden Gate', length => 2737, location => 'San Francisco');\n```"
  },
  {
    "task": "Create an instance of a class called Forest with properties for name, area, and tree species.",
    "code": "```raku\nclass Forest {\n    has Str $.name;\n    has Numeric $.area;\n    has @.tree_species;\n}\n\nmy $forest = Forest.new(\n    name => 'Amazon',\n    area => 5500000,\n    tree_species => ['Cedar', 'Pine', 'Mahogany']\n);\n```"
  },
  {
    "task": "Design a class for a Sculpture with attributes for title, artist, and material, then create an instance.",
    "code": "```raku\nclass Sculpture {\n    has Str $.title;\n    has Str $.artist;\n    has Str $.material;\n}\n\nmy $sculpture = Sculpture.new(\n    title    => 'The Thinker',\n    artist   => 'Auguste Rodin',\n    material => 'Bronze'\n);\n```"
  },
  {
    "task": "Instantiate an object of a class named Aquarium with properties for name and number of tanks.",
    "code": "```raku\nclass Aquarium {\n    has $.name;\n    has $.number-of-tanks;\n}\n\nmy $aquarium = Aquarium.new(name => 'Sea World', number-of-tanks => 5);\n```"
  },
  {
    "task": "Develop a class for a Play with properties for title, playwright, and genre, then instantiate it.",
    "code": "```raku\nclass Play {\n    has Str $.title;\n    has Str $.playwright;\n    has Str $.genre;\n}\n\nmy $play = Play.new(\n    title => 'Hamlet',\n    playwright => 'William Shakespeare',\n    genre => 'Tragedy'\n);\n```"
  },
  {
    "task": "Create a new object from a class named Telescope, initializing it with type and focal length.",
    "code": "```raku\nclass Telescope {\n    has Str $.type;\n    has Num $.focal-length;\n\n    method new (Str $type, Num $focal-length) {\n        self.bless(:$type, :$focal-length);\n    }\n}\n\nmy $telescope = Telescope.new('Reflector', 1000);\n```"
  },
  {
    "task": "Write a class for a Monument with properties for name, location, and year built, and instantiate it.",
    "code": "```raku\nclass Monument {\n    has Str $.name;\n    has Str $.location;\n    has Int $.year-built;\n}\n\nmy $monument = Monument.new(\n    name => 'Eiffel Tower',\n    location => 'Paris',\n    year-built => 1889\n);\n```"
  },
  {
    "task": "Define a class representing a Star with attributes for name, size, and distance from Earth, and create an object.",
    "code": "```raku\nclass Star {\n    has Str $.name;\n    has Num $.size;\n    has Num $.distance-from-earth;\n}\n\nmy $star = Star.new(name => 'Sun', size => 1.989e30, distance-from-earth => 149.6e6);\n```"
  },
  {
    "task": "Create an instance of a class called Festival with properties for name, location, and number of events.",
    "code": "```raku\nclass Festival {\n    has $.name;\n    has $.location;\n    has $.number-of-events;\n}\n\nmy $festival = Festival.new(\n    name => 'Music Fest',\n    location => 'New York',\n    number-of-events => 10\n);\n```"
  },
  {
    "task": "Design a class for a Clock with attributes for brand, type, and display, then create an instance.",
    "code": "```raku\nclass Clock {\n    has Str $.brand;\n    has Str $.type;\n    has Str $.display;\n}\n\nmy $clock = Clock.new(brand => 'Seiko', type => 'Analog', display => '12-hour');\n```"
  },
  {
    "task": "Instantiate an object of a class named Stadium with properties for name, capacity, and location.",
    "code": "```raku\nclass Stadium {\n    has Str $.name;\n    has Int $.capacity;\n    has Str $.location;\n}\n\nmy $stadium = Stadium.new(\n    name => 'National Stadium',\n    capacity => 50000,\n    location => 'City Center'\n);\n```"
  },
  {
    "task": "Develop a class for a Potion with properties for name, effect, and duration, then instantiate it.",
    "code": "```raku\nclass Potion {\n    has $.name;\n    has $.effect;\n    has $.duration;\n}\n\nmy $potion = Potion.new(name => 'Healing', effect => 'Restores health', duration => 30);\n```"
  },
  {
    "task": "Create an object of a class named Planet with attributes for name, mass, and orbital period.",
    "code": "```raku\nclass Planet {\n    has Str $.name;\n    has Num $.mass;\n    has Num $.orbital-period;\n}\n\nmy $earth = Planet.new(name => 'Earth', mass => 5.972e24, orbital-period => 365.25);\n```"
  },
  {
    "task": "Define a class for a Lighthouse with properties for name, height, and light range, then instantiate it.",
    "code": "```raku\nclass Lighthouse {\n    has Str $.name;\n    has Num $.height;\n    has Num $.light-range;\n}\n\nmy $lighthouse = Lighthouse.new(name => 'Cape Hatteras', height => 210, light-range => 24);\n```"
  },
  {
    "task": "Construct an object from a class named Volcano with attributes for name, height, and eruption history.",
    "code": "```raku\nclass Volcano {\n    has Str $.name;\n    has Num $.height;\n    has Array $.eruption-history;\n}\n\nmy $volcano = Volcano.new(\n    name => 'Mount Fuji',\n    height => 3776,\n    eruption-history => ['1707-12-16', '1708-01-01']\n);\n```"
  },
  {
    "task": "Create an instance of a class called Sculpture with properties for title, artist, and year created.",
    "code": "```raku\nclass Sculpture {\n    has Str $.title;\n    has Str $.artist;\n    has Int $.year-created;\n}\n\nmy $sculpture = Sculpture.new(title => 'The Thinker', artist => 'Auguste Rodin', year-created => 1904);\n```"
  },
  {
    "task": "Design a class for a Ship with attributes for name, type, and displacement, then create an instance.",
    "code": "```raku\nclass Ship {\n    has Str $.name;\n    has Str $.type;\n    has Num $.displacement;\n}\n\nmy $ship = Ship.new(name => 'HMS Victory', type => 'Warship', displacement => 3500);\n```"
  },
  {
    "task": "Instantiate an object of a class named Opera with properties for title, composer, and act count.",
    "code": "```raku\nclass Opera {\n    has Str $.title;\n    has Str $.composer;\n    has Int $.act-count;\n}\n\nmy $opera = Opera.new(title => \"La Traviata\", composer => \"Giuseppe Verdi\", act-count => 3);\n```"
  },
  {
    "task": "Develop a class for a Waterfall with properties for name, height, and flow rate, then instantiate it.",
    "code": "```raku\nclass Waterfall {\n    has Str $.name;\n    has Num $.height;\n    has Num $.flow-rate;\n}\n\nmy $waterfall = Waterfall.new(\n    name => \"Angel Falls\",\n    height => 979.0,\n    flow-rate => 500.0\n);\n```"
  },
  {
    "task": "Create a new object from a class named Castle, initializing it with name, location, and year built.",
    "code": "```raku\nclass Castle {\n    has Str $.name;\n    has Str $.location;\n    has Int $.year-built;\n}\n\nmy $castle = Castle.new(name => \"Bran Castle\", location => \"Transylvania\", year-built => 1388);\n```"
  },
  {
    "task": "Write a class for a Cat with properties for name, breed, and color, and instantiate it.",
    "code": "```raku\nclass Cat {\n    has Str $.name;\n    has Str $.breed;\n    has Str $.color;\n}\n\nmy $cat = Cat.new(name => 'Whiskers', breed => 'Siamese', color => 'Brown');\n```"
  },
  {
    "task": "Define a class representing a Spaceship with attributes for name, speed, and crew capacity, and create an object.",
    "code": "```raku\nclass Spaceship {\n    has Str $.name;\n    has Int $.speed;\n    has Int $.crew-capacity;\n}\n\nmy $spaceship = Spaceship.new(\n    name         => 'Galactic Voyager',\n    speed        => 9000,\n    crew-capacity => 100\n);\n```"
  },
  {
    "task": "Create an instance of a class called Robot with properties for name, model, and function.",
    "code": "```raku\nclass Robot {\n    has Str $.name;\n    has Str $.model;\n    has Str $.function;\n}\n\nmy $robot = Robot.new(name => 'Robo1', model => 'X1000', function => 'Welding');\n```"
  },
  {
    "task": "Design a class for a Computer Program with attributes for name, language, and lines of code, then create an instance.",
    "code": "```raku\nclass ComputerProgram {\n    has Str $.name;\n    has Str $.language;\n    has Int $.lines-of-code;\n}\n\nmy $program = ComputerProgram.new(\n    name => 'Example Program',\n    language => 'Raku',\n    lines-of-code => 100\n);\n```"
  },
  {
    "task": "Instantiate an object of a class named Mountain with properties for name, range, and prominence.",
    "code": "```raku\nclass Mountain {\n    has Str $.name;\n    has Str $.range;\n    has Int $.prominence;\n}\n\nmy $mountain = Mountain.new(name => 'Everest', range => 'Himalayas', prominence => 8848);\n```"
  },
  {
    "task": "Develop a class for a Painting with properties for title, artist, and dimensions, then instantiate it.",
    "code": "```raku\nclass Painting {\n    has Str $.title;\n    has Str $.artist;\n    has Str $.dimensions;\n}\n\nmy $painting = Painting.new(\n    title => 'Starry Night',\n    artist => 'Vincent van Gogh',\n    dimensions => '73.7 cm \u00d7 92.1 cm'\n);\n```"
  },
  {
    "task": "Create an object of a class named Symphony with attributes for title, composer, and movement count.",
    "code": "```raku\nclass Symphony {\n    has Str $.title;\n    has Str $.composer;\n    has Int $.movement-count;\n}\n\nmy $symphony = Symphony.new(\n    title => \"Symphony No. 5\",\n    composer => \"Ludwig van Beethoven\",\n    movement-count => 4\n);\n```"
  },
  {
    "task": "Define a class for a Dinosaur with properties for name, period, and diet, then instantiate it.",
    "code": "```raku\nclass Dinosaur {\n    has Str $.name;\n    has Str $.period;\n    has Str $.diet;\n}\n\nmy $dino = Dinosaur.new(name => 'Tyrannosaurus', period => 'Cretaceous', diet => 'Carnivore');\n```"
  },
  {
    "task": "Construct an object from a class named River with attributes for name, length, and basin size.",
    "code": "```raku\nclass River {\n    has Str $.name;\n    has Num $.length;\n    has Num $.basin-size;\n}\n\nmy $river = River.new(name => 'Nile', length => 6650, basin-size => 3340000);\n```"
  },
  {
    "task": "Create an instance of a class called Instrument with properties for name, type, and material.",
    "code": "```raku\nclass Instrument {\n    has $.name;\n    has $.type;\n    has $.material;\n}\n\nmy $instrument = Instrument.new(\n    name => 'Guitar',\n    type => 'String',\n    material => 'Wood'\n);\n```"
  },
  {
    "task": "Design a class for a Planetarium with attributes for name, location, and dome size, then create an instance.",
    "code": "```raku\nclass Planetarium {\n    has Str $.name;\n    has Str $.location;\n    has Num $.dome-size;\n}\n\nmy $planetarium = Planetarium.new(\n    name => 'Cosmos Center',\n    location => 'Downtown',\n    dome-size => 50.0\n);\n```"
  },
  {
    "task": "Instantiate an object of a class named Island with properties for name, area, and population.",
    "code": "```raku\nclass Island {\n    has Str $.name;\n    has Num $.area;\n    has Int $.population;\n}\n\nmy $island = Island.new(name => 'Paradise Island', area => 123.45, population => 1000);\n```"
  },
  {
    "task": "Develop a class for a Space Station with properties for name, crew size, and modules, then instantiate it.",
    "code": "```raku\nclass SpaceStation {\n    has Str $.name;\n    has Int $.crew-size;\n    has Int $.modules;\n}\n\nmy $station = SpaceStation.new(name => 'International Space Station', crew-size => 6, modules => 16);\n```"
  },
  {
    "task": "Create a new object from a class named Dinosaur, initializing it with species and period.",
    "code": "```raku\nclass Dinosaur {\n    has Str $.species;\n    has Str $.period;\n\n    method new(Str $species, Str $period) {\n        self.bless(:$species, :$period);\n    }\n}\n\nmy $dino = Dinosaur.new('Tyrannosaurus', 'Cretaceous');\n```"
  },
  {
    "task": "Write a class for a Tree with properties for species, height, and age, and instantiate it.",
    "code": "```raku\nclass Tree {\n    has Str $.species;\n    has Num $.height;\n    has Int $.age;\n}\n\nmy $tree = Tree.new(\n    species => \"Oak\",\n    height  => 30.5,\n    age     => 50\n);\n```"
  },
  {
    "task": "Define a class representing a Firework with attributes for name, color, and duration, and create an object.",
    "code": "```raku\nclass Firework {\n    has Str $.name;\n    has Str $.color;\n    has Int $.duration;\n}\n\nmy $firework = Firework.new(name => 'Sparkler', color => 'Red', duration => 60);\n```"
  },
  {
    "task": "Create an instance of a class called ComicBook with properties for title, author, and issue number.",
    "code": "```raku\nclass ComicBook {\n    has Str $.title;\n    has Str $.author;\n    has Int $.issue-number;\n}\n\nmy $comic = ComicBook.new(title => 'Example Title', author => 'Example Author', issue-number => 1);\n```"
  },
  {
    "task": "Design a class for a Metropolis with attributes for name, population, and GDP, then create an instance.",
    "code": "```raku\nclass Metropolis {\n    has Str $.name;\n    has Int $.population;\n    has Num $.gdp;\n}\n\nmy $city = Metropolis.new(\n    name => 'Example City',\n    population => 1000000,\n    gdp => 500000000.0\n);\n```"
  },
  {
    "task": "Instantiate an object of a class named Dragon with properties for name, element, and age.",
    "code": "```raku\nclass Dragon {\n    has Str $.name;\n    has Str $.element;\n    has Int $.age;\n}\n\nmy $dragon = Dragon.new(name => 'Smaug', element => 'Fire', age => 300);\n```"
  },
  {
    "task": "Develop a class for a Novel with properties for title, author, and genre, then instantiate it.",
    "code": "```raku\nclass Novel {\n    has Str $.title;\n    has Str $.author;\n    has Str $.genre;\n}\n\nmy $novel = Novel.new(\n    title  => 'The Great Adventure',\n    author => 'John Doe',\n    genre  => 'Adventure'\n);\n```"
  },
  {
    "task": "Create an object of a class named Satellite with attributes for name, orbit, and mission.",
    "code": "```raku\nclass Satellite {\n    has Str $.name;\n    has Str $.orbit;\n    has Str $.mission;\n}\n\nmy $satellite = Satellite.new(name => 'Hubble', orbit => 'Low Earth Orbit', mission => 'Astronomy');\n```"
  },
  {
    "task": "Define a class for a Castle with properties for name, location, and architectural style, then instantiate it.",
    "code": "```raku\nclass Castle {\n    has Str $.name;\n    has Str $.location;\n    has Str $.architectural-style;\n}\n\nmy $castle = Castle.new(\n    name => 'Neuschwanstein',\n    location => 'Bavaria, Germany',\n    architectural-style => 'Romanesque Revival'\n);\n```"
  },
  {
    "task": "Construct an object from a class named Jungle with attributes for name, area, and biodiversity.",
    "code": "```raku\nclass Jungle {\n    has Str $.name;\n    has Num $.area;\n    has Int $.biodiversity;\n}\n\nmy $jungle = Jungle.new(name => 'Amazon', area => 5_500_000, biodiversity => 390);\n```"
  },
  {
    "task": "Create an instance of a class called Dinosaur with properties for species, size, and diet.",
    "code": "```raku\nclass Dinosaur {\n    has Str $.species;\n    has Str $.size;\n    has Str $.diet;\n}\n\nmy $dino = Dinosaur.new(\n    species => 'Tyrannosaurus Rex',\n    size    => 'Large',\n    diet    => 'Carnivore'\n);\n```"
  },
  {
    "task": "Design a class for a Superhero with attributes for name, powers, and alias, then create an instance.",
    "code": "```raku\nclass Superhero {\n    has Str $.name;\n    has Str $.powers;\n    has Str $.alias;\n}\n\nmy $superhero-instance = Superhero.new(\n    name => 'Clark Kent',\n    powers => 'Super strength, Flight, X-ray vision',\n    alias => 'Superman'\n);\n```"
  }
]